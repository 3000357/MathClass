/* */ 
(function(Buffer, process) {
  var ENVIRONMENT_IS_WEB = true;
  var ENVIRONMENT_IS_NODE = false;
  var ENVIRONMENT_IS_SHELL = false;
  var Module = {
    "print": (function() {}),
    "printErr": (function() {}),
    "get_system_info": (function() {
      var _data = Module._malloc(14);
      Module._retro_get_system_info(_data);
      var obj = {
        library_name: Module.Pointer_stringify(Module.getValue(_data, "*")),
        library_version: Module.Pointer_stringify(Module.getValue(_data + 4, "*")),
        valid_extensions: Module.Pointer_stringify(Module.getValue(_data + 8, "*")),
        need_fullpath: Module.getValue(_data + 12, "i8") > 0,
        block_extract: Module.getValue(_data + 13, "i8") > 0
      };
      Module._free(_data);
      return obj;
    }),
    "get_system_av_info": (function() {
      var _data = Module._malloc(40);
      Module._retro_get_system_av_info(_data);
      var obj = {
        geometry: {
          base_width: Module.getValue(_data, "i32"),
          base_height: Module.getValue(_data + 4, "i32"),
          max_width: Module.getValue(_data + 8, "i32"),
          max_height: Module.getValue(_data + 12, "i32"),
          aspect_ratio: Module.getValue(_data + 16, "float")
        },
        timing: {
          fps: Module.getValue(_data + 24, "double"),
          sample_rate: Module.getValue(_data + 32, "double")
        }
      };
      Module._free(_data);
      return obj;
    }),
    "serialize": (function() {
      var size = Module.serialize_size();
      var _data = Module._malloc(size);
      var result = Module._retro_serialize(_data, size);
      var data = false;
      if (result) {
        data = new Uint8Array(Module.HEAP8.buffer, _data, size);
      }
      return data;
    }),
    "unserialize": (function(data) {
      var _data = Module._malloc(data.length);
      (new Uint8Array(Module.HEAP8.buffer, _data, data.length)).set(data);
      var result = Module._retro_unserialize(_data, data.length);
      return result;
    }),
    "cheat_set": (function(index, enabled, code) {
      var _code = Module._malloc(code.length);
      Module.writeStringToMemory(code, _code);
      Module._retro_cheat_set(index, enabled, _code);
    }),
    "load_game": (function(info) {
      var _info = Module._malloc(16);
      if (info.path) {
        var path = Module._malloc(info.path.length + 1);
        Module.writeStringToMemory(info.path, path);
        Module.setValue(_info, path, "*");
      }
      if (info.meta) {
        var meta = Module._malloc(info.meta.length + 1);
        Module.writeStringToMemory(info.meta, meta);
        Module.setValue(_info + 12, meta, "*");
      }
      var _data = Module._malloc(info.data.length);
      (new Uint8Array(Module.HEAP8.buffer, _data, info.data.length)).set(info.data);
      Module.setValue(_info + 4, _data, "*");
      Module.setValue(_info + 8, info.data.length, "i32");
      var result = Module._retro_load_game(_info);
      return result;
    }),
    "get_memory_data": (function(id) {
      return new Uint8Array(Module.HEAP8.buffer, Module._retro_get_memory_data(id), Module.get_memory_size(id));
    })
  };
  var Runtime = {
    setTempRet0: (function(value) {
      tempRet0 = value;
    }),
    getTempRet0: (function() {
      return tempRet0;
    }),
    stackSave: (function() {
      return STACKTOP;
    }),
    stackRestore: (function(stackTop) {
      STACKTOP = stackTop;
    }),
    getNativeTypeSize: (function(type) {
      switch (type) {
        case "i1":
        case "i8":
          return 1;
        case "i16":
          return 2;
        case "i32":
          return 4;
        case "i64":
          return 8;
        case "float":
          return 4;
        case "double":
          return 8;
        default:
          {
            if (type[type.length - 1] === "*") {
              return Runtime.QUANTUM_SIZE;
            } else if (type[0] === "i") {
              var bits = parseInt(type.substr(1));
              assert(bits % 8 === 0);
              return bits / 8;
            } else {
              return 0;
            }
          }
      }
    }),
    getNativeFieldSize: (function(type) {
      return Math.max(Runtime.getNativeTypeSize(type), Runtime.QUANTUM_SIZE);
    }),
    STACK_ALIGN: 16,
    prepVararg: (function(ptr, type) {
      if (type === "double" || type === "i64") {
        if (ptr & 7) {
          assert((ptr & 7) === 4);
          ptr += 4;
        }
      } else {
        assert((ptr & 3) === 0);
      }
      return ptr;
    }),
    getAlignSize: (function(type, size, vararg) {
      if (!vararg && (type == "i64" || type == "double"))
        return 8;
      if (!type)
        return Math.min(size, 8);
      return Math.min(size || (type ? Runtime.getNativeFieldSize(type) : 0), Runtime.QUANTUM_SIZE);
    }),
    dynCall: (function(sig, ptr, args) {
      if (args && args.length) {
        if (!args.splice)
          args = Array.prototype.slice.call(args);
        args.splice(0, 0, ptr);
        return Module["dynCall_" + sig].apply(null, args);
      } else {
        return Module["dynCall_" + sig].call(null, ptr);
      }
    }),
    functionPointers: [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null],
    addFunction: (function(func) {
      for (var i = 0; i < Runtime.functionPointers.length; i++) {
        if (!Runtime.functionPointers[i]) {
          Runtime.functionPointers[i] = func;
          return 2 * (1 + i);
        }
      }
      throw "Finished up all reserved function pointers. Use a higher value for RESERVED_FUNCTION_POINTERS.";
    }),
    removeFunction: (function(index) {
      Runtime.functionPointers[(index - 2) / 2] = null;
    }),
    warnOnce: (function(text) {
      if (!Runtime.warnOnce.shown)
        Runtime.warnOnce.shown = {};
      if (!Runtime.warnOnce.shown[text]) {
        Runtime.warnOnce.shown[text] = 1;
        Module.printErr(text);
      }
    }),
    funcWrappers: {},
    getFuncWrapper: (function(func, sig) {
      assert(sig);
      if (!Runtime.funcWrappers[sig]) {
        Runtime.funcWrappers[sig] = {};
      }
      var sigCache = Runtime.funcWrappers[sig];
      if (!sigCache[func]) {
        sigCache[func] = function dynCall_wrapper() {
          return Runtime.dynCall(sig, func, arguments);
        };
      }
      return sigCache[func];
    }),
    getCompilerSetting: (function(name) {
      throw "You must build with -s RETAIN_COMPILER_SETTINGS=1 for Runtime.getCompilerSetting or emscripten_get_compiler_setting to work";
    }),
    stackAlloc: (function(size) {
      var ret = STACKTOP;
      STACKTOP = STACKTOP + size | 0;
      STACKTOP = STACKTOP + 15 & -16;
      return ret;
    }),
    staticAlloc: (function(size) {
      var ret = STATICTOP;
      STATICTOP = STATICTOP + size | 0;
      STATICTOP = STATICTOP + 15 & -16;
      return ret;
    }),
    dynamicAlloc: (function(size) {
      var ret = DYNAMICTOP;
      DYNAMICTOP = DYNAMICTOP + size | 0;
      DYNAMICTOP = DYNAMICTOP + 15 & -16;
      if (DYNAMICTOP >= TOTAL_MEMORY) {
        var success = enlargeMemory();
        if (!success) {
          DYNAMICTOP = ret;
          return 0;
        }
      }
      return ret;
    }),
    alignMemory: (function(size, quantum) {
      var ret = size = Math.ceil(size / (quantum ? quantum : 16)) * (quantum ? quantum : 16);
      return ret;
    }),
    makeBigInt: (function(low, high, unsigned) {
      var ret = unsigned ? +(low >>> 0) + +(high >>> 0) * +4294967296 : +(low >>> 0) + +(high | 0) * +4294967296;
      return ret;
    }),
    GLOBAL_BASE: 8,
    QUANTUM_SIZE: 4,
    __dummy__: 0
  };
  Module["Runtime"] = Runtime;
  var __THREW__ = 0;
  var ABORT = false;
  var EXITSTATUS = 0;
  var undef = 0;
  var tempValue,
      tempInt,
      tempBigInt,
      tempInt2,
      tempBigInt2,
      tempPair,
      tempBigIntI,
      tempBigIntR,
      tempBigIntS,
      tempBigIntP,
      tempBigIntD,
      tempDouble,
      tempFloat;
  var tempI64,
      tempI64b;
  var tempRet0,
      tempRet1,
      tempRet2,
      tempRet3,
      tempRet4,
      tempRet5,
      tempRet6,
      tempRet7,
      tempRet8,
      tempRet9;
  function assert(condition, text) {
    if (!condition) {
      abort("Assertion failed: " + text);
    }
  }
  var globalScope = this;
  function getCFunc(ident) {
    var func = Module["_" + ident];
    if (!func) {
      try {
        func = eval("_" + ident);
      } catch (e) {}
    }
    assert(func, "Cannot call unknown function " + ident + " (perhaps LLVM optimizations or closure removed it?)");
    return func;
  }
  var cwrap,
      ccall;
  ((function() {
    var JSfuncs = {
      "stackSave": (function() {
        Runtime.stackSave();
      }),
      "stackRestore": (function() {
        Runtime.stackRestore();
      }),
      "arrayToC": (function(arr) {
        var ret = Runtime.stackAlloc(arr.length);
        writeArrayToMemory(arr, ret);
        return ret;
      }),
      "stringToC": (function(str) {
        var ret = 0;
        if (str !== null && str !== undefined && str !== 0) {
          ret = Runtime.stackAlloc((str.length << 2) + 1);
          writeStringToMemory(str, ret);
        }
        return ret;
      })
    };
    var toC = {
      "string": JSfuncs["stringToC"],
      "array": JSfuncs["arrayToC"]
    };
    ccall = function ccallFunc(ident, returnType, argTypes, args, opts) {
      var func = getCFunc(ident);
      var cArgs = [];
      var stack = 0;
      if (args) {
        for (var i = 0; i < args.length; i++) {
          var converter = toC[argTypes[i]];
          if (converter) {
            if (stack === 0)
              stack = Runtime.stackSave();
            cArgs[i] = converter(args[i]);
          } else {
            cArgs[i] = args[i];
          }
        }
      }
      var ret = func.apply(null, cArgs);
      if (returnType === "string")
        ret = Pointer_stringify(ret);
      if (stack !== 0) {
        if (opts && opts.async) {
          EmterpreterAsync.asyncFinalizers.push((function() {
            Runtime.stackRestore(stack);
          }));
          return ;
        }
        Runtime.stackRestore(stack);
      }
      return ret;
    };
    var sourceRegex = /^function\s*\(([^)]*)\)\s*{\s*([^*]*?)[\s;]*(?:return\s*(.*?)[;\s]*)?}$/;
    function parseJSFunc(jsfunc) {
      var parsed = jsfunc.toString().match(sourceRegex).slice(1);
      return {
        arguments: parsed[0],
        body: parsed[1],
        returnValue: parsed[2]
      };
    }
    var JSsource = {};
    for (var fun in JSfuncs) {
      if (JSfuncs.hasOwnProperty(fun)) {
        JSsource[fun] = parseJSFunc(JSfuncs[fun]);
      }
    }
    cwrap = function cwrap(ident, returnType, argTypes) {
      argTypes = argTypes || [];
      var cfunc = getCFunc(ident);
      var numericArgs = argTypes.every((function(type) {
        return type === "number";
      }));
      var numericRet = returnType !== "string";
      if (numericRet && numericArgs) {
        return cfunc;
      }
      var argNames = argTypes.map((function(x, i) {
        return "$" + i;
      }));
      var funcstr = "(function(" + argNames.join(",") + ") {";
      var nargs = argTypes.length;
      if (!numericArgs) {
        funcstr += "var stack = " + JSsource["stackSave"].body + ";";
        for (var i = 0; i < nargs; i++) {
          var arg = argNames[i],
              type = argTypes[i];
          if (type === "number")
            continue;
          var convertCode = JSsource[type + "ToC"];
          funcstr += "var " + convertCode.arguments + " = " + arg + ";";
          funcstr += convertCode.body + ";";
          funcstr += arg + "=" + convertCode.returnValue + ";";
        }
      }
      var cfuncname = parseJSFunc((function() {
        return cfunc;
      })).returnValue;
      funcstr += "var ret = " + cfuncname + "(" + argNames.join(",") + ");";
      if (!numericRet) {
        var strgfy = parseJSFunc((function() {
          return Pointer_stringify;
        })).returnValue;
        funcstr += "ret = " + strgfy + "(ret);";
      }
      if (!numericArgs) {
        funcstr += JSsource["stackRestore"].body.replace("()", "(stack)") + ";";
      }
      funcstr += "return ret})";
      return eval(funcstr);
    };
  }))();
  Module["cwrap"] = cwrap;
  Module["ccall"] = ccall;
  function setValue(ptr, value, type, noSafe) {
    type = type || "i8";
    if (type.charAt(type.length - 1) === "*")
      type = "i32";
    switch (type) {
      case "i1":
        HEAP8[ptr >> 0] = value;
        break;
      case "i8":
        HEAP8[ptr >> 0] = value;
        break;
      case "i16":
        HEAP16[ptr >> 1] = value;
        break;
      case "i32":
        HEAP32[ptr >> 2] = value;
        break;
      case "i64":
        tempI64 = [value >>> 0, (tempDouble = value, +Math_abs(tempDouble) >= +1 ? tempDouble > +0 ? (Math_min(+Math_floor(tempDouble / +4294967296), +4294967295) | 0) >>> 0 : ~~+Math_ceil((tempDouble - +(~~tempDouble >>> 0)) / +4294967296) >>> 0 : 0)], HEAP32[ptr >> 2] = tempI64[0], HEAP32[ptr + 4 >> 2] = tempI64[1];
        break;
      case "float":
        HEAPF32[ptr >> 2] = value;
        break;
      case "double":
        HEAPF64[ptr >> 3] = value;
        break;
      default:
        abort("invalid type for setValue: " + type);
    }
  }
  Module["setValue"] = setValue;
  function getValue(ptr, type, noSafe) {
    type = type || "i8";
    if (type.charAt(type.length - 1) === "*")
      type = "i32";
    switch (type) {
      case "i1":
        return HEAP8[ptr >> 0];
      case "i8":
        return HEAP8[ptr >> 0];
      case "i16":
        return HEAP16[ptr >> 1];
      case "i32":
        return HEAP32[ptr >> 2];
      case "i64":
        return HEAP32[ptr >> 2];
      case "float":
        return HEAPF32[ptr >> 2];
      case "double":
        return HEAPF64[ptr >> 3];
      default:
        abort("invalid type for setValue: " + type);
    }
    return null;
  }
  Module["getValue"] = getValue;
  var ALLOC_NORMAL = 0;
  var ALLOC_STACK = 1;
  var ALLOC_STATIC = 2;
  var ALLOC_DYNAMIC = 3;
  var ALLOC_NONE = 4;
  Module["ALLOC_NORMAL"] = ALLOC_NORMAL;
  Module["ALLOC_STACK"] = ALLOC_STACK;
  Module["ALLOC_STATIC"] = ALLOC_STATIC;
  Module["ALLOC_DYNAMIC"] = ALLOC_DYNAMIC;
  Module["ALLOC_NONE"] = ALLOC_NONE;
  function allocate(slab, types, allocator, ptr) {
    var zeroinit,
        size;
    if (typeof slab === "number") {
      zeroinit = true;
      size = slab;
    } else {
      zeroinit = false;
      size = slab.length;
    }
    var singleType = typeof types === "string" ? types : null;
    var ret;
    if (allocator == ALLOC_NONE) {
      ret = ptr;
    } else {
      ret = [_malloc, Runtime.stackAlloc, Runtime.staticAlloc, Runtime.dynamicAlloc][allocator === undefined ? ALLOC_STATIC : allocator](Math.max(size, singleType ? 1 : types.length));
    }
    if (zeroinit) {
      var ptr = ret,
          stop;
      assert((ret & 3) == 0);
      stop = ret + (size & ~3);
      for (; ptr < stop; ptr += 4) {
        HEAP32[ptr >> 2] = 0;
      }
      stop = ret + size;
      while (ptr < stop) {
        HEAP8[ptr++ >> 0] = 0;
      }
      return ret;
    }
    if (singleType === "i8") {
      if (slab.subarray || slab.slice) {
        HEAPU8.set(slab, ret);
      } else {
        HEAPU8.set(new Uint8Array(slab), ret);
      }
      return ret;
    }
    var i = 0,
        type,
        typeSize,
        previousType;
    while (i < size) {
      var curr = slab[i];
      if (typeof curr === "function") {
        curr = Runtime.getFunctionIndex(curr);
      }
      type = singleType || types[i];
      if (type === 0) {
        i++;
        continue;
      }
      if (type == "i64")
        type = "i32";
      setValue(ret + i, curr, type);
      if (previousType !== type) {
        typeSize = Runtime.getNativeTypeSize(type);
        previousType = type;
      }
      i += typeSize;
    }
    return ret;
  }
  Module["allocate"] = allocate;
  function getMemory(size) {
    if (!staticSealed)
      return Runtime.staticAlloc(size);
    if (typeof _sbrk !== "undefined" && !_sbrk.called || !runtimeInitialized)
      return Runtime.dynamicAlloc(size);
    return _malloc(size);
  }
  Module["getMemory"] = getMemory;
  function Pointer_stringify(ptr, length) {
    if (length === 0 || !ptr)
      return "";
    var hasUtf = 0;
    var t;
    var i = 0;
    while (1) {
      t = HEAPU8[ptr + i >> 0];
      hasUtf |= t;
      if (t == 0 && !length)
        break;
      i++;
      if (length && i == length)
        break;
    }
    if (!length)
      length = i;
    var ret = "";
    if (hasUtf < 128) {
      var MAX_CHUNK = 1024;
      var curr;
      while (length > 0) {
        curr = String.fromCharCode.apply(String, HEAPU8.subarray(ptr, ptr + Math.min(length, MAX_CHUNK)));
        ret = ret ? ret + curr : curr;
        ptr += MAX_CHUNK;
        length -= MAX_CHUNK;
      }
      return ret;
    }
    return Module["UTF8ToString"](ptr);
  }
  Module["Pointer_stringify"] = Pointer_stringify;
  function AsciiToString(ptr) {
    var str = "";
    while (1) {
      var ch = HEAP8[ptr++ >> 0];
      if (!ch)
        return str;
      str += String.fromCharCode(ch);
    }
  }
  Module["AsciiToString"] = AsciiToString;
  function stringToAscii(str, outPtr) {
    return writeAsciiToMemory(str, outPtr, false);
  }
  Module["stringToAscii"] = stringToAscii;
  function UTF8ArrayToString(u8Array, idx) {
    var u0,
        u1,
        u2,
        u3,
        u4,
        u5;
    var str = "";
    while (1) {
      u0 = u8Array[idx++];
      if (!u0)
        return str;
      if (!(u0 & 128)) {
        str += String.fromCharCode(u0);
        continue;
      }
      u1 = u8Array[idx++] & 63;
      if ((u0 & 224) == 192) {
        str += String.fromCharCode((u0 & 31) << 6 | u1);
        continue;
      }
      u2 = u8Array[idx++] & 63;
      if ((u0 & 240) == 224) {
        u0 = (u0 & 15) << 12 | u1 << 6 | u2;
      } else {
        u3 = u8Array[idx++] & 63;
        if ((u0 & 248) == 240) {
          u0 = (u0 & 7) << 18 | u1 << 12 | u2 << 6 | u3;
        } else {
          u4 = u8Array[idx++] & 63;
          if ((u0 & 252) == 248) {
            u0 = (u0 & 3) << 24 | u1 << 18 | u2 << 12 | u3 << 6 | u4;
          } else {
            u5 = u8Array[idx++] & 63;
            u0 = (u0 & 1) << 30 | u1 << 24 | u2 << 18 | u3 << 12 | u4 << 6 | u5;
          }
        }
      }
      if (u0 < 65536) {
        str += String.fromCharCode(u0);
      } else {
        var ch = u0 - 65536;
        str += String.fromCharCode(55296 | ch >> 10, 56320 | ch & 1023);
      }
    }
  }
  Module["UTF8ArrayToString"] = UTF8ArrayToString;
  function UTF8ToString(ptr) {
    return UTF8ArrayToString(HEAPU8, ptr);
  }
  Module["UTF8ToString"] = UTF8ToString;
  function stringToUTF8Array(str, outU8Array, outIdx, maxBytesToWrite) {
    if (!(maxBytesToWrite > 0))
      return 0;
    var startIdx = outIdx;
    var endIdx = outIdx + maxBytesToWrite - 1;
    for (var i = 0; i < str.length; ++i) {
      var u = str.charCodeAt(i);
      if (u >= 55296 && u <= 57343)
        u = 65536 + ((u & 1023) << 10) | str.charCodeAt(++i) & 1023;
      if (u <= 127) {
        if (outIdx >= endIdx)
          break;
        outU8Array[outIdx++] = u;
      } else if (u <= 2047) {
        if (outIdx + 1 >= endIdx)
          break;
        outU8Array[outIdx++] = 192 | u >> 6;
        outU8Array[outIdx++] = 128 | u & 63;
      } else if (u <= 65535) {
        if (outIdx + 2 >= endIdx)
          break;
        outU8Array[outIdx++] = 224 | u >> 12;
        outU8Array[outIdx++] = 128 | u >> 6 & 63;
        outU8Array[outIdx++] = 128 | u & 63;
      } else if (u <= 2097151) {
        if (outIdx + 3 >= endIdx)
          break;
        outU8Array[outIdx++] = 240 | u >> 18;
        outU8Array[outIdx++] = 128 | u >> 12 & 63;
        outU8Array[outIdx++] = 128 | u >> 6 & 63;
        outU8Array[outIdx++] = 128 | u & 63;
      } else if (u <= 67108863) {
        if (outIdx + 4 >= endIdx)
          break;
        outU8Array[outIdx++] = 248 | u >> 24;
        outU8Array[outIdx++] = 128 | u >> 18 & 63;
        outU8Array[outIdx++] = 128 | u >> 12 & 63;
        outU8Array[outIdx++] = 128 | u >> 6 & 63;
        outU8Array[outIdx++] = 128 | u & 63;
      } else {
        if (outIdx + 5 >= endIdx)
          break;
        outU8Array[outIdx++] = 252 | u >> 30;
        outU8Array[outIdx++] = 128 | u >> 24 & 63;
        outU8Array[outIdx++] = 128 | u >> 18 & 63;
        outU8Array[outIdx++] = 128 | u >> 12 & 63;
        outU8Array[outIdx++] = 128 | u >> 6 & 63;
        outU8Array[outIdx++] = 128 | u & 63;
      }
    }
    outU8Array[outIdx] = 0;
    return outIdx - startIdx;
  }
  Module["stringToUTF8Array"] = stringToUTF8Array;
  function stringToUTF8(str, outPtr, maxBytesToWrite) {
    return stringToUTF8Array(str, HEAPU8, outPtr, maxBytesToWrite);
  }
  Module["stringToUTF8"] = stringToUTF8;
  function lengthBytesUTF8(str) {
    var len = 0;
    for (var i = 0; i < str.length; ++i) {
      var u = str.charCodeAt(i);
      if (u >= 55296 && u <= 57343)
        u = 65536 + ((u & 1023) << 10) | str.charCodeAt(++i) & 1023;
      if (u <= 127) {
        ++len;
      } else if (u <= 2047) {
        len += 2;
      } else if (u <= 65535) {
        len += 3;
      } else if (u <= 2097151) {
        len += 4;
      } else if (u <= 67108863) {
        len += 5;
      } else {
        len += 6;
      }
    }
    return len;
  }
  Module["lengthBytesUTF8"] = lengthBytesUTF8;
  function UTF16ToString(ptr) {
    var i = 0;
    var str = "";
    while (1) {
      var codeUnit = HEAP16[ptr + i * 2 >> 1];
      if (codeUnit == 0)
        return str;
      ++i;
      str += String.fromCharCode(codeUnit);
    }
  }
  Module["UTF16ToString"] = UTF16ToString;
  function stringToUTF16(str, outPtr, maxBytesToWrite) {
    if (maxBytesToWrite === undefined) {
      maxBytesToWrite = 2147483647;
    }
    if (maxBytesToWrite < 2)
      return 0;
    maxBytesToWrite -= 2;
    var startPtr = outPtr;
    var numCharsToWrite = maxBytesToWrite < str.length * 2 ? maxBytesToWrite / 2 : str.length;
    for (var i = 0; i < numCharsToWrite; ++i) {
      var codeUnit = str.charCodeAt(i);
      HEAP16[outPtr >> 1] = codeUnit;
      outPtr += 2;
    }
    HEAP16[outPtr >> 1] = 0;
    return outPtr - startPtr;
  }
  Module["stringToUTF16"] = stringToUTF16;
  function lengthBytesUTF16(str) {
    return str.length * 2;
  }
  Module["lengthBytesUTF16"] = lengthBytesUTF16;
  function UTF32ToString(ptr) {
    var i = 0;
    var str = "";
    while (1) {
      var utf32 = HEAP32[ptr + i * 4 >> 2];
      if (utf32 == 0)
        return str;
      ++i;
      if (utf32 >= 65536) {
        var ch = utf32 - 65536;
        str += String.fromCharCode(55296 | ch >> 10, 56320 | ch & 1023);
      } else {
        str += String.fromCharCode(utf32);
      }
    }
  }
  Module["UTF32ToString"] = UTF32ToString;
  function stringToUTF32(str, outPtr, maxBytesToWrite) {
    if (maxBytesToWrite === undefined) {
      maxBytesToWrite = 2147483647;
    }
    if (maxBytesToWrite < 4)
      return 0;
    var startPtr = outPtr;
    var endPtr = startPtr + maxBytesToWrite - 4;
    for (var i = 0; i < str.length; ++i) {
      var codeUnit = str.charCodeAt(i);
      if (codeUnit >= 55296 && codeUnit <= 57343) {
        var trailSurrogate = str.charCodeAt(++i);
        codeUnit = 65536 + ((codeUnit & 1023) << 10) | trailSurrogate & 1023;
      }
      HEAP32[outPtr >> 2] = codeUnit;
      outPtr += 4;
      if (outPtr + 4 > endPtr)
        break;
    }
    HEAP32[outPtr >> 2] = 0;
    return outPtr - startPtr;
  }
  Module["stringToUTF32"] = stringToUTF32;
  function lengthBytesUTF32(str) {
    var len = 0;
    for (var i = 0; i < str.length; ++i) {
      var codeUnit = str.charCodeAt(i);
      if (codeUnit >= 55296 && codeUnit <= 57343)
        ++i;
      len += 4;
    }
    return len;
  }
  Module["lengthBytesUTF32"] = lengthBytesUTF32;
  function demangle(func) {
    var hasLibcxxabi = !!Module["___cxa_demangle"];
    if (hasLibcxxabi) {
      try {
        var buf = _malloc(func.length);
        writeStringToMemory(func.substr(1), buf);
        var status = _malloc(4);
        var ret = Module["___cxa_demangle"](buf, 0, 0, status);
        if (getValue(status, "i32") === 0 && ret) {
          return Pointer_stringify(ret);
        }
      } catch (e) {} finally {
        if (buf)
          _free(buf);
        if (status)
          _free(status);
        if (ret)
          _free(ret);
      }
    }
    var i = 3;
    var basicTypes = {
      "v": "void",
      "b": "bool",
      "c": "char",
      "s": "short",
      "i": "int",
      "l": "long",
      "f": "float",
      "d": "double",
      "w": "wchar_t",
      "a": "signed char",
      "h": "unsigned char",
      "t": "unsigned short",
      "j": "unsigned int",
      "m": "unsigned long",
      "x": "long long",
      "y": "unsigned long long",
      "z": "..."
    };
    var subs = [];
    var first = true;
    function dump(x) {
      if (x)
        Module.print(x);
      Module.print(func);
      var pre = "";
      for (var a = 0; a < i; a++)
        pre += " ";
      Module.print(pre + "^");
    }
    function parseNested() {
      i++;
      if (func[i] === "K")
        i++;
      var parts = [];
      while (func[i] !== "E") {
        if (func[i] === "S") {
          i++;
          var next = func.indexOf("_", i);
          var num = func.substring(i, next) || 0;
          parts.push(subs[num] || "?");
          i = next + 1;
          continue;
        }
        if (func[i] === "C") {
          parts.push(parts[parts.length - 1]);
          i += 2;
          continue;
        }
        var size = parseInt(func.substr(i));
        var pre = size.toString().length;
        if (!size || !pre) {
          i--;
          break;
        }
        var curr = func.substr(i + pre, size);
        parts.push(curr);
        subs.push(curr);
        i += pre + size;
      }
      i++;
      return parts;
    }
    function parse(rawList, limit, allowVoid) {
      limit = limit || Infinity;
      var ret = "",
          list = [];
      function flushList() {
        return "(" + list.join(", ") + ")";
      }
      var name;
      if (func[i] === "N") {
        name = parseNested().join("::");
        limit--;
        if (limit === 0)
          return rawList ? [name] : name;
      } else {
        if (func[i] === "K" || first && func[i] === "L")
          i++;
        var size = parseInt(func.substr(i));
        if (size) {
          var pre = size.toString().length;
          name = func.substr(i + pre, size);
          i += pre + size;
        }
      }
      first = false;
      if (func[i] === "I") {
        i++;
        var iList = parse(true);
        var iRet = parse(true, 1, true);
        ret += iRet[0] + " " + name + "<" + iList.join(", ") + ">";
      } else {
        ret = name;
      }
      paramLoop: while (i < func.length && limit-- > 0) {
        var c = func[i++];
        if (c in basicTypes) {
          list.push(basicTypes[c]);
        } else {
          switch (c) {
            case "P":
              list.push(parse(true, 1, true)[0] + "*");
              break;
            case "R":
              list.push(parse(true, 1, true)[0] + "&");
              break;
            case "L":
              {
                i++;
                var end = func.indexOf("E", i);
                var size = end - i;
                list.push(func.substr(i, size));
                i += size + 2;
                break;
              }
              ;
            case "A":
              {
                var size = parseInt(func.substr(i));
                i += size.toString().length;
                if (func[i] !== "_")
                  throw "?";
                i++;
                list.push(parse(true, 1, true)[0] + " [" + size + "]");
                break;
              }
              ;
            case "E":
              break paramLoop;
            default:
              ret += "?" + c;
              break paramLoop;
          }
        }
      }
      if (!allowVoid && list.length === 1 && list[0] === "void")
        list = [];
      if (rawList) {
        if (ret) {
          list.push(ret + "?");
        }
        return list;
      } else {
        return ret + flushList();
      }
    }
    var parsed = func;
    try {
      if (func == "Object._main" || func == "_main") {
        return "main()";
      }
      if (typeof func === "number")
        func = Pointer_stringify(func);
      if (func[0] !== "_")
        return func;
      if (func[1] !== "_")
        return func;
      if (func[2] !== "Z")
        return func;
      switch (func[3]) {
        case "n":
          return "operator new()";
        case "d":
          return "operator delete()";
      }
      parsed = parse();
    } catch (e) {
      parsed += "?";
    }
    if (parsed.indexOf("?") >= 0 && !hasLibcxxabi) {
      Runtime.warnOnce("warning: a problem occurred in builtin C++ name demangling; build with  -s DEMANGLE_SUPPORT=1  to link in libcxxabi demangling");
    }
    return parsed;
  }
  function demangleAll(text) {
    return text.replace(/__Z[\w\d_]+/g, (function(x) {
      var y = demangle(x);
      return x === y ? x : x + " [" + y + "]";
    }));
  }
  function jsStackTrace() {
    var err = new Error;
    if (!err.stack) {
      try {
        throw new Error(0);
      } catch (e) {
        err = e;
      }
      if (!err.stack) {
        return "(no stack trace available)";
      }
    }
    return err.stack.toString();
  }
  function stackTrace() {
    return demangleAll(jsStackTrace());
  }
  Module["stackTrace"] = stackTrace;
  var PAGE_SIZE = 4096;
  function alignMemoryPage(x) {
    if (x % 4096 > 0) {
      x += 4096 - x % 4096;
    }
    return x;
  }
  var HEAP;
  var HEAP8,
      HEAPU8,
      HEAP16,
      HEAPU16,
      HEAP32,
      HEAPU32,
      HEAPF32,
      HEAPF64;
  var STATIC_BASE = 0,
      STATICTOP = 0,
      staticSealed = false;
  var STACK_BASE = 0,
      STACKTOP = 0,
      STACK_MAX = 0;
  var DYNAMIC_BASE = 0,
      DYNAMICTOP = 0;
  function enlargeMemory() {
    var OLD_TOTAL_MEMORY = TOTAL_MEMORY;
    var LIMIT = Math.pow(2, 31);
    if (DYNAMICTOP >= LIMIT)
      return false;
    while (TOTAL_MEMORY <= DYNAMICTOP) {
      if (TOTAL_MEMORY < LIMIT / 2) {
        TOTAL_MEMORY = alignMemoryPage(2 * TOTAL_MEMORY);
      } else {
        var last = TOTAL_MEMORY;
        TOTAL_MEMORY = alignMemoryPage((3 * TOTAL_MEMORY + LIMIT) / 4);
        if (TOTAL_MEMORY <= last)
          return false;
      }
    }
    TOTAL_MEMORY = Math.max(TOTAL_MEMORY, 16 * 1024 * 1024);
    if (TOTAL_MEMORY >= LIMIT)
      return false;
    try {
      if (ArrayBuffer.transfer) {
        buffer = ArrayBuffer.transfer(buffer, TOTAL_MEMORY);
      } else {
        var oldHEAP8 = HEAP8;
        buffer = new ArrayBuffer(TOTAL_MEMORY);
      }
    } catch (e) {
      return false;
    }
    var success = _emscripten_replace_memory(buffer);
    if (!success)
      return false;
    Module["buffer"] = buffer;
    Module["HEAP8"] = HEAP8 = new Int8Array(buffer);
    Module["HEAP16"] = HEAP16 = new Int16Array(buffer);
    Module["HEAP32"] = HEAP32 = new Int32Array(buffer);
    Module["HEAPU8"] = HEAPU8 = new Uint8Array(buffer);
    Module["HEAPU16"] = HEAPU16 = new Uint16Array(buffer);
    Module["HEAPU32"] = HEAPU32 = new Uint32Array(buffer);
    Module["HEAPF32"] = HEAPF32 = new Float32Array(buffer);
    Module["HEAPF64"] = HEAPF64 = new Float64Array(buffer);
    if (!ArrayBuffer.transfer) {
      HEAP8.set(oldHEAP8);
    }
    return true;
  }
  var byteLength;
  try {
    byteLength = Function.prototype.call.bind(Object.getOwnPropertyDescriptor(ArrayBuffer.prototype, "byteLength").get);
    byteLength(new ArrayBuffer(4));
  } catch (e) {
    byteLength = (function(buffer) {
      return buffer.byteLength;
    });
  }
  var TOTAL_STACK = Module["TOTAL_STACK"] || 5242880;
  var TOTAL_MEMORY = Module["TOTAL_MEMORY"] || 16777216;
  var totalMemory = 64 * 1024;
  while (totalMemory < TOTAL_MEMORY || totalMemory < 2 * TOTAL_STACK) {
    if (totalMemory < 16 * 1024 * 1024) {
      totalMemory *= 2;
    } else {
      totalMemory += 16 * 1024 * 1024;
    }
  }
  totalMemory = Math.max(totalMemory, 16 * 1024 * 1024);
  if (totalMemory !== TOTAL_MEMORY) {
    Module.printErr("increasing TOTAL_MEMORY to " + totalMemory + " to be compliant with the asm.js spec (and given that TOTAL_STACK=" + TOTAL_STACK + ")");
    TOTAL_MEMORY = totalMemory;
  }
  assert(typeof Int32Array !== "undefined" && typeof Float64Array !== "undefined" && !!(new Int32Array(1))["subarray"] && !!(new Int32Array(1))["set"], "JS engine does not provide full typed array support");
  var buffer;
  buffer = new ArrayBuffer(TOTAL_MEMORY);
  HEAP8 = new Int8Array(buffer);
  HEAP16 = new Int16Array(buffer);
  HEAP32 = new Int32Array(buffer);
  HEAPU8 = new Uint8Array(buffer);
  HEAPU16 = new Uint16Array(buffer);
  HEAPU32 = new Uint32Array(buffer);
  HEAPF32 = new Float32Array(buffer);
  HEAPF64 = new Float64Array(buffer);
  HEAP32[0] = 255;
  assert(HEAPU8[0] === 255 && HEAPU8[3] === 0, "Typed arrays 2 must be run on a little-endian system");
  Module["HEAP"] = HEAP;
  Module["buffer"] = buffer;
  Module["HEAP8"] = HEAP8;
  Module["HEAP16"] = HEAP16;
  Module["HEAP32"] = HEAP32;
  Module["HEAPU8"] = HEAPU8;
  Module["HEAPU16"] = HEAPU16;
  Module["HEAPU32"] = HEAPU32;
  Module["HEAPF32"] = HEAPF32;
  Module["HEAPF64"] = HEAPF64;
  function callRuntimeCallbacks(callbacks) {
    while (callbacks.length > 0) {
      var callback = callbacks.shift();
      if (typeof callback == "function") {
        callback();
        continue;
      }
      var func = callback.func;
      if (typeof func === "number") {
        if (callback.arg === undefined) {
          Runtime.dynCall("v", func);
        } else {
          Runtime.dynCall("vi", func, [callback.arg]);
        }
      } else {
        func(callback.arg === undefined ? null : callback.arg);
      }
    }
  }
  var __ATPRERUN__ = [];
  var __ATINIT__ = [];
  var __ATMAIN__ = [];
  var __ATEXIT__ = [];
  var __ATPOSTRUN__ = [];
  var runtimeInitialized = false;
  var runtimeExited = false;
  function preRun() {
    if (Module["preRun"]) {
      if (typeof Module["preRun"] == "function")
        Module["preRun"] = [Module["preRun"]];
      while (Module["preRun"].length) {
        addOnPreRun(Module["preRun"].shift());
      }
    }
    callRuntimeCallbacks(__ATPRERUN__);
  }
  function ensureInitRuntime() {
    if (runtimeInitialized)
      return ;
    runtimeInitialized = true;
    callRuntimeCallbacks(__ATINIT__);
  }
  function preMain() {
    callRuntimeCallbacks(__ATMAIN__);
  }
  function exitRuntime() {
    callRuntimeCallbacks(__ATEXIT__);
    runtimeExited = true;
  }
  function postRun() {
    if (Module["postRun"]) {
      if (typeof Module["postRun"] == "function")
        Module["postRun"] = [Module["postRun"]];
      while (Module["postRun"].length) {
        addOnPostRun(Module["postRun"].shift());
      }
    }
    callRuntimeCallbacks(__ATPOSTRUN__);
  }
  function addOnPreRun(cb) {
    __ATPRERUN__.unshift(cb);
  }
  Module["addOnPreRun"] = Module.addOnPreRun = addOnPreRun;
  function addOnInit(cb) {
    __ATINIT__.unshift(cb);
  }
  Module["addOnInit"] = Module.addOnInit = addOnInit;
  function addOnPreMain(cb) {
    __ATMAIN__.unshift(cb);
  }
  Module["addOnPreMain"] = Module.addOnPreMain = addOnPreMain;
  function addOnExit(cb) {
    __ATEXIT__.unshift(cb);
  }
  Module["addOnExit"] = Module.addOnExit = addOnExit;
  function addOnPostRun(cb) {
    __ATPOSTRUN__.unshift(cb);
  }
  Module["addOnPostRun"] = Module.addOnPostRun = addOnPostRun;
  function intArrayFromString(stringy, dontAddNull, length) {
    var len = length > 0 ? length : lengthBytesUTF8(stringy) + 1;
    var u8array = new Array(len);
    var numBytesWritten = stringToUTF8Array(stringy, u8array, 0, u8array.length);
    if (dontAddNull)
      u8array.length = numBytesWritten;
    return u8array;
  }
  Module["intArrayFromString"] = intArrayFromString;
  function intArrayToString(array) {
    var ret = [];
    for (var i = 0; i < array.length; i++) {
      var chr = array[i];
      if (chr > 255) {
        chr &= 255;
      }
      ret.push(String.fromCharCode(chr));
    }
    return ret.join("");
  }
  Module["intArrayToString"] = intArrayToString;
  function writeStringToMemory(string, buffer, dontAddNull) {
    var array = intArrayFromString(string, dontAddNull);
    var i = 0;
    while (i < array.length) {
      var chr = array[i];
      HEAP8[buffer + i >> 0] = chr;
      i = i + 1;
    }
  }
  Module["writeStringToMemory"] = writeStringToMemory;
  function writeArrayToMemory(array, buffer) {
    for (var i = 0; i < array.length; i++) {
      HEAP8[buffer++ >> 0] = array[i];
    }
  }
  Module["writeArrayToMemory"] = writeArrayToMemory;
  function writeAsciiToMemory(str, buffer, dontAddNull) {
    for (var i = 0; i < str.length; ++i) {
      HEAP8[buffer++ >> 0] = str.charCodeAt(i);
    }
    if (!dontAddNull)
      HEAP8[buffer >> 0] = 0;
  }
  Module["writeAsciiToMemory"] = writeAsciiToMemory;
  function unSign(value, bits, ignore) {
    if (value >= 0) {
      return value;
    }
    return bits <= 32 ? 2 * Math.abs(1 << bits - 1) + value : Math.pow(2, bits) + value;
  }
  function reSign(value, bits, ignore) {
    if (value <= 0) {
      return value;
    }
    var half = bits <= 32 ? Math.abs(1 << bits - 1) : Math.pow(2, bits - 1);
    if (value >= half && (bits <= 32 || value > half)) {
      value = -2 * half + value;
    }
    return value;
  }
  if (!Math["imul"] || Math["imul"](4294967295, 5) !== -5)
    Math["imul"] = function imul(a, b) {
      var ah = a >>> 16;
      var al = a & 65535;
      var bh = b >>> 16;
      var bl = b & 65535;
      return al * bl + (ah * bl + al * bh << 16) | 0;
    };
  Math.imul = Math["imul"];
  if (!Math["clz32"])
    Math["clz32"] = (function(x) {
      x = x >>> 0;
      for (var i = 0; i < 32; i++) {
        if (x & 1 << 31 - i)
          return i;
      }
      return 32;
    });
  Math.clz32 = Math["clz32"];
  var Math_abs = Math.abs;
  var Math_cos = Math.cos;
  var Math_sin = Math.sin;
  var Math_tan = Math.tan;
  var Math_acos = Math.acos;
  var Math_asin = Math.asin;
  var Math_atan = Math.atan;
  var Math_atan2 = Math.atan2;
  var Math_exp = Math.exp;
  var Math_log = Math.log;
  var Math_sqrt = Math.sqrt;
  var Math_ceil = Math.ceil;
  var Math_floor = Math.floor;
  var Math_pow = Math.pow;
  var Math_imul = Math.imul;
  var Math_fround = Math.fround;
  var Math_min = Math.min;
  var Math_clz32 = Math.clz32;
  var runDependencies = 0;
  var runDependencyWatcher = null;
  var dependenciesFulfilled = null;
  function getUniqueRunDependency(id) {
    return id;
  }
  function addRunDependency(id) {
    runDependencies++;
    if (Module["monitorRunDependencies"]) {
      Module["monitorRunDependencies"](runDependencies);
    }
  }
  Module["addRunDependency"] = addRunDependency;
  function removeRunDependency(id) {
    runDependencies--;
    if (Module["monitorRunDependencies"]) {
      Module["monitorRunDependencies"](runDependencies);
    }
    if (runDependencies == 0) {
      if (runDependencyWatcher !== null) {
        clearInterval(runDependencyWatcher);
        runDependencyWatcher = null;
      }
      if (dependenciesFulfilled) {
        var callback = dependenciesFulfilled;
        dependenciesFulfilled = null;
        callback();
      }
    }
  }
  Module["removeRunDependency"] = removeRunDependency;
  Module["preloadedImages"] = {};
  Module["preloadedAudios"] = {};
  var memoryInitializer = null;
  var ASM_CONSTS = [];
  STATIC_BASE = 8;
  STATICTOP = STATIC_BASE + 1015616;
  __ATINIT__.push({func: (function() {
      __GLOBAL__sub_I_libretro_emscripten_cpp();
    })}, {func: (function() {
      __GLOBAL__sub_I_bind_cpp();
    })});
  allocate([152, 71, 0, 0, 33, 105, 12, 0, 152, 71, 0, 0, 22, 105, 12, 0, 152, 71, 0, 0, 11, 105, 12, 0, 152, 71, 0, 0, 249, 104, 12, 0, 152, 71, 0, 0, 227, 104, 12, 0, 152, 71, 0, 0, 205, 104, 12, 0, 152, 71, 0, 0, 183, 104, 12, 0, 152, 71, 0, 0, 159, 104, 12, 0, 152, 71, 0, 0, 138, 104, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 112, 127, 64, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 72, 0, 0, 145, 122, 15, 0, 0, 0, 0, 0, 1, 0, 0, 0, 120, 1, 0, 0, 0, 0, 0, 0, 4, 72, 0, 0, 82, 122, 15, 0, 0, 0, 0, 0, 1, 0, 0, 0, 120, 1, 0, 0, 0, 0, 0, 0, 4, 72, 0, 0, 237, 121, 15, 0, 0, 0, 0, 0, 1, 0, 0, 0, 120, 1, 0, 0, 0, 0, 0, 0, 180, 71, 0, 0, 218, 121, 15, 0, 180, 71, 0, 0, 187, 121, 15, 0, 180, 71, 0, 0, 156, 121, 15, 0, 180, 71, 0, 0, 125, 121, 15, 0, 180, 71, 0, 0, 94, 121, 15, 0, 180, 71, 0, 0, 63, 121, 15, 0, 180, 71, 0, 0, 32, 121, 15, 0, 180, 71, 0, 0, 1, 121, 15, 0, 180, 71, 0, 0, 226, 120, 15, 0, 180, 71, 0, 0, 195, 120, 15, 0, 180, 71, 0, 0, 164, 120, 15, 0, 180, 71, 0, 0, 133, 120, 15, 0, 180, 71, 0, 0, 102, 120, 15, 0, 180, 71, 0, 0, 44, 122, 15, 0, 180, 71, 0, 0, 208, 122, 15, 0, 220, 71, 0, 0, 221, 122, 15, 0, 128, 1, 0, 0, 0, 0, 0, 0, 220, 71, 0, 0, 254, 122, 15, 0, 136, 1, 0, 0, 0, 0, 0, 0, 220, 71, 0, 0, 68, 123, 15, 0, 136, 1, 0, 0, 0, 0, 0, 0, 220, 71, 0, 0, 32, 123, 15, 0, 168, 1, 0, 0, 0, 0, 0, 0, 220, 71, 0, 0, 102, 123, 15, 0, 136, 1, 0, 0, 0, 0, 0, 0, 124, 71, 0, 0, 142, 123, 15, 0, 44, 72, 0, 0, 144, 123, 15, 0, 0, 0, 0, 0, 216, 1, 0, 0, 124, 71, 0, 0, 147, 123, 15, 0, 124, 71, 0, 0, 255, 89, 15, 0, 124, 71, 0, 0, 150, 123, 15, 0, 124, 71, 0, 0, 152, 123, 15, 0, 124, 71, 0, 0, 253, 89, 15, 0, 124, 71, 0, 0, 154, 123, 15, 0, 124, 71, 0, 0, 98, 89, 15, 0, 124, 71, 0, 0, 156, 123, 15, 0, 124, 71, 0, 0, 158, 123, 15, 0, 124, 71, 0, 0, 160, 123, 15, 0, 124, 71, 0, 0, 162, 123, 15, 0, 124, 71, 0, 0, 51, 111, 15, 0, 124, 71, 0, 0, 164, 123, 15, 0, 220, 71, 0, 0, 166, 123, 15, 0, 136, 1, 0, 0, 0, 0, 0, 0, 220, 71, 0, 0, 199, 123, 15, 0, 152, 1, 0, 0, 0, 0, 0, 0, 220, 71, 0, 0, 236, 123, 15, 0, 152, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 216, 1, 0, 0, 48, 2, 0, 0, 48, 2, 0, 0, 48, 2, 0, 0, 216, 1, 0, 0, 48, 2, 0, 0, 48, 2, 0, 0, 84, 102, 15, 0, 227, 115, 15, 0, 228, 84, 15, 0, 236, 84, 15, 0, 245, 84, 15, 0, 91, 115, 15, 0, 252, 84, 15, 0, 207, 115, 15, 0, 236, 84, 15, 0, 2, 85, 15, 0, 9, 85, 15, 0, 42, 0, 0, 0, 0, 0, 0, 0, 15, 85, 15, 0, 210, 86, 15, 0, 0, 0, 0, 0, 183, 29, 193, 4, 110, 59, 130, 9, 217, 38, 67, 13, 220, 118, 4, 19, 107, 107, 197, 23, 178, 77, 134, 26, 5, 80, 71, 30, 184, 237, 8, 38, 15, 240, 201, 34, 214, 214, 138, 47, 97, 203, 75, 43, 100, 155, 12, 53, 211, 134, 205, 49, 10, 160, 142, 60, 189, 189, 79, 56, 112, 219, 17, 76, 199, 198, 208, 72, 30, 224, 147, 69, 169, 253, 82, 65, 172, 173, 21, 95, 27, 176, 212, 91, 194, 150, 151, 86, 117, 139, 86, 82, 200, 54, 25, 106, 127, 43, 216, 110, 166, 13, 155, 99, 17, 16, 90, 103, 20, 64, 29, 121, 163, 93, 220, 125, 122, 123, 159, 112, 205, 102, 94, 116, 224, 182, 35, 152, 87, 171, 226, 156, 142, 141, 161, 145, 57, 144, 96, 149, 60, 192, 39, 139, 139, 221, 230, 143, 82, 251, 165, 130, 229, 230, 100, 134, 88, 91, 43, 190, 239, 70, 234, 186, 54, 96, 169, 183, 129, 125, 104, 179, 132, 45, 47, 173, 51, 48, 238, 169, 234, 22, 173, 164, 93, 11, 108, 160, 144, 109, 50, 212, 39, 112, 243, 208, 254, 86, 176, 221, 73, 75, 113, 217, 76, 27, 54, 199, 251, 6, 247, 195, 34, 32, 180, 206, 149, 61, 117, 202, 40, 128, 58, 242, 159, 157, 251, 246, 70, 187, 184, 251, 241, 166, 121, 255, 244, 246, 62, 225, 67, 235, 255, 229, 154, 205, 188, 232, 45, 208, 125, 236, 119, 112, 134, 52, 192, 109, 71, 48, 25, 75, 4, 61, 174, 86, 197, 57, 171, 6, 130, 39, 28, 27, 67, 35, 197, 61, 0, 46, 114, 32, 193, 42, 207, 157, 142, 18, 120, 128, 79, 22, 161, 166, 12, 27, 22, 187, 205, 31, 19, 235, 138, 1, 164, 246, 75, 5, 125, 208, 8, 8, 202, 205, 201, 12, 7, 171, 151, 120, 176, 182, 86, 124, 105, 144, 21, 113, 222, 141, 212, 117, 219, 221, 147, 107, 108, 192, 82, 111, 181, 230, 17, 98, 2, 251, 208, 102, 191, 70, 159, 94, 8, 91, 94, 90, 209, 125, 29, 87, 102, 96, 220, 83, 99, 48, 155, 77, 212, 45, 90, 73, 13, 11, 25, 68, 186, 22, 216, 64, 151, 198, 165, 172, 32, 219, 100, 168, 249, 253, 39, 165, 78, 224, 230, 161, 75, 176, 161, 191, 252, 173, 96, 187, 37, 139, 35, 182, 146, 150, 226, 178, 47, 43, 173, 138, 152, 54, 108, 142, 65, 16, 47, 131, 246, 13, 238, 135, 243, 93, 169, 153, 68, 64, 104, 157, 157, 102, 43, 144, 42, 123, 234, 148, 231, 29, 180, 224, 80, 0, 117, 228, 137, 38, 54, 233, 62, 59, 247, 237, 59, 107, 176, 243, 140, 118, 113, 247, 85, 80, 50, 250, 226, 77, 243, 254, 95, 240, 188, 198, 232, 237, 125, 194, 49, 203, 62, 207, 134, 214, 255, 203, 131, 134, 184, 213, 52, 155, 121, 209, 237, 189, 58, 220, 90, 160, 251, 216, 238, 224, 12, 105, 89, 253, 205, 109, 128, 219, 142, 96, 55, 198, 79, 100, 50, 150, 8, 122, 133, 139, 201, 126, 92, 173, 138, 115, 235, 176, 75, 119, 86, 13, 4, 79, 225, 16, 197, 75, 56, 54, 134, 70, 143, 43, 71, 66, 138, 123, 0, 92, 61, 102, 193, 88, 228, 64, 130, 85, 83, 93, 67, 81, 158, 59, 29, 37, 41, 38, 220, 33, 240, 0, 159, 44, 71, 29, 94, 40, 66, 77, 25, 54, 245, 80, 216, 50, 44, 118, 155, 63, 155, 107, 90, 59, 38, 214, 21, 3, 145, 203, 212, 7, 72, 237, 151, 10, 255, 240, 86, 14, 250, 160, 17, 16, 77, 189, 208, 20, 148, 155, 147, 25, 35, 134, 82, 29, 14, 86, 47, 241, 185, 75, 238, 245, 96, 109, 173, 248, 215, 112, 108, 252, 210, 32, 43, 226, 101, 61, 234, 230, 188, 27, 169, 235, 11, 6, 104, 239, 182, 187, 39, 215, 1, 166, 230, 211, 216, 128, 165, 222, 111, 157, 100, 218, 106, 205, 35, 196, 221, 208, 226, 192, 4, 246, 161, 205, 179, 235, 96, 201, 126, 141, 62, 189, 201, 144, 255, 185, 16, 182, 188, 180, 167, 171, 125, 176, 162, 251, 58, 174, 21, 230, 251, 170, 204, 192, 184, 167, 123, 221, 121, 163, 198, 96, 54, 155, 113, 125, 247, 159, 168, 91, 180, 146, 31, 70, 117, 150, 26, 22, 50, 136, 173, 11, 243, 140, 116, 45, 176, 129, 195, 48, 113, 133, 153, 144, 138, 93, 46, 141, 75, 89, 247, 171, 8, 84, 64, 182, 201, 80, 69, 230, 142, 78, 242, 251, 79, 74, 43, 221, 12, 71, 156, 192, 205, 67, 33, 125, 130, 123, 150, 96, 67, 127, 79, 70, 0, 114, 248, 91, 193, 118, 253, 11, 134, 104, 74, 22, 71, 108, 147, 48, 4, 97, 36, 45, 197, 101, 233, 75, 155, 17, 94, 86, 90, 21, 135, 112, 25, 24, 48, 109, 216, 28, 53, 61, 159, 2, 130, 32, 94, 6, 91, 6, 29, 11, 236, 27, 220, 15, 81, 166, 147, 55, 230, 187, 82, 51, 63, 157, 17, 62, 136, 128, 208, 58, 141, 208, 151, 36, 58, 205, 86, 32, 227, 235, 21, 45, 84, 246, 212, 41, 121, 38, 169, 197, 206, 59, 104, 193, 23, 29, 43, 204, 160, 0, 234, 200, 165, 80, 173, 214, 18, 77, 108, 210, 203, 107, 47, 223, 124, 118, 238, 219, 193, 203, 161, 227, 118, 214, 96, 231, 175, 240, 35, 234, 24, 237, 226, 238, 29, 189, 165, 240, 170, 160, 100, 244, 115, 134, 39, 249, 196, 155, 230, 253, 9, 253, 184, 137, 190, 224, 121, 141, 103, 198, 58, 128, 208, 219, 251, 132, 213, 139, 188, 154, 98, 150, 125, 158, 187, 176, 62, 147, 12, 173, 255, 151, 177, 16, 176, 175, 6, 13, 113, 171, 223, 43, 50, 166, 104, 54, 243, 162, 109, 102, 180, 188, 218, 123, 117, 184, 3, 93, 54, 181, 180, 64, 247, 177, 107, 2, 0, 0, 208, 2, 0, 0, 127, 0, 0, 0, 225, 1, 0, 0, 163, 3, 0, 0, 48, 3, 0, 0, 45, 3, 0, 0, 233, 0, 0, 0, 54, 2, 0, 0, 247, 0, 0, 0, 217, 3, 0, 0, 212, 2, 0, 0, 205, 0, 0, 0, 198, 1, 0, 0, 95, 3, 0, 0, 235, 1, 0, 0, 229, 2, 0, 0, 242, 0, 0, 0, 181, 3, 0, 0, 214, 0, 0, 0, 221, 2, 0, 0, 91, 3, 0, 0, 79, 1, 0, 0, 196, 2, 0, 0, 109, 2, 0, 0, 62, 2, 0, 0, 73, 0, 0, 0, 142, 2, 0, 0, 218, 2, 0, 0, 216, 1, 0, 0, 163, 1, 0, 0, 180, 1, 0, 0, 22, 1, 0, 0, 240, 1, 0, 0, 99, 3, 0, 0, 210, 0, 0, 0, 143, 1, 0, 0, 168, 2, 0, 0, 224, 1, 0, 0, 51, 0, 0, 0, 110, 3, 0, 0, 209, 1, 0, 0, 43, 3, 0, 0, 169, 0, 0, 0, 101, 3, 0, 0, 163, 2, 0, 0, 99, 2, 0, 0, 185, 2, 0, 0, 99, 3, 0, 0, 49, 2, 0, 0, 94, 3, 0, 0, 175, 2, 0, 0, 251, 1, 0, 0, 27, 1, 0, 0, 226, 1, 0, 0, 129, 0, 0, 0, 39, 3, 0, 0, 79, 2, 0, 0, 221, 2, 0, 0, 111, 2, 0, 0, 150, 0, 0, 0, 238, 0, 0, 0, 59, 0, 0, 0, 123, 1, 0, 0, 172, 2, 0, 0, 109, 3, 0, 0, 113, 2, 0, 0, 169, 0, 0, 0, 131, 2, 0, 0, 105, 0, 0, 0, 170, 0, 0, 0, 95, 2, 0, 0, 8, 2, 0, 0, 164, 3, 0, 0, 215, 2, 0, 0, 220, 1, 0, 0, 181, 2, 0, 0, 169, 1, 0, 0, 174, 0, 0, 0, 135, 2, 0, 0, 73, 0, 0, 0, 122, 0, 0, 0, 79, 1, 0, 0, 18, 2, 0, 0, 186, 1, 0, 0, 85, 3, 0, 0, 183, 2, 0, 0, 249, 0, 0, 0, 189, 1, 0, 0, 3, 2, 0, 0, 141, 3, 0, 0, 33, 2, 0, 0, 191, 2, 0, 0, 151, 3, 0, 0, 106, 3, 0, 0, 218, 1, 0, 0, 114, 3, 0, 0, 244, 1, 0, 0, 82, 2, 0, 0, 100, 2, 0, 0, 129, 2, 0, 0, 33, 3, 0, 0, 220, 0, 0, 0, 162, 0, 0, 0, 51, 3, 0, 0, 216, 3, 0, 0, 77, 2, 0, 0, 1, 2, 0, 0, 239, 1, 0, 0, 31, 3, 0, 0, 161, 0, 0, 0, 92, 2, 0, 0, 190, 3, 0, 0, 21, 2, 0, 0, 221, 0, 0, 0, 144, 1, 0, 0, 130, 1, 0, 0, 99, 3, 0, 0, 88, 2, 0, 0, 14, 3, 0, 0, 126, 1, 0, 0, 84, 2, 0, 0, 158, 1, 0, 0, 171, 0, 0, 0, 4, 2, 0, 0, 119, 1, 0, 0, 170, 2, 0, 0, 229, 1, 0, 0, 143, 3, 0, 0, 20, 1, 0, 0, 98, 0, 0, 0, 41, 2, 0, 0, 163, 0, 0, 0, 98, 1, 0, 0, 154, 2, 0, 0, 165, 3, 0, 0, 168, 1, 0, 0, 85, 1, 0, 0, 21, 2, 0, 0, 102, 3, 0, 0, 227, 0, 0, 0, 218, 2, 0, 0, 219, 1, 0, 0, 186, 0, 0, 0, 7, 1, 0, 0, 135, 2, 0, 0, 25, 2, 0, 0, 174, 2, 0, 0, 88, 2, 0, 0, 224, 0, 0, 0, 213, 1, 0, 0, 68, 0, 0, 0, 2, 3, 0, 0, 151, 3, 0, 0, 190, 0, 0, 0, 117, 1, 0, 0, 38, 1, 0, 0, 54, 3, 0, 0, 40, 3, 0, 0, 206, 0, 0, 0, 184, 0, 0, 0, 175, 3, 0, 0, 27, 3, 0, 0, 128, 1, 0, 0, 127, 1, 0, 0, 205, 1, 0, 0, 148, 1, 0, 0, 246, 2, 0, 0, 71, 3, 0, 0, 119, 3, 0, 0, 203, 2, 0, 0, 67, 0, 0, 0, 106, 2, 0, 0, 20, 1, 0, 0, 204, 0, 0, 0, 150, 3, 0, 0, 105, 3, 0, 0, 9, 3, 0, 0, 92, 2, 0, 0, 48, 2, 0, 0, 183, 3, 0, 0, 160, 0, 0, 0, 66, 2, 0, 0, 210, 2, 0, 0, 79, 0, 0, 0, 36, 3, 0, 0, 96, 0, 0, 0, 153, 1, 0, 0, 201, 2, 0, 0, 172, 3, 0, 0, 140, 2, 0, 0, 166, 3, 0, 0, 202, 3, 0, 0, 191, 1, 0, 0, 62, 1, 0, 0, 97, 1, 0, 0, 91, 3, 0, 0, 160, 2, 0, 0, 112, 0, 0, 0, 17, 3, 0, 0, 133, 2, 0, 0, 95, 3, 0, 0, 35, 3, 0, 0, 94, 1, 0, 0, 139, 0, 0, 0, 93, 0, 0, 0, 98, 1, 0, 0, 99, 0, 0, 0, 52, 3, 0, 0, 140, 3, 0, 0, 97, 2, 0, 0, 4, 3, 0, 0, 154, 0, 0, 0, 18, 1, 0, 0, 68, 2, 0, 0, 184, 0, 0, 0, 79, 0, 0, 0, 114, 2, 0, 0, 118, 2, 0, 0, 230, 2, 0, 0, 141, 2, 0, 0, 26, 1, 0, 0, 250, 2, 0, 0, 111, 2, 0, 0, 168, 2, 0, 0, 81, 0, 0, 0, 159, 3, 0, 0, 114, 2, 0, 0, 21, 3, 0, 0, 125, 0, 0, 0, 155, 1, 0, 0, 9, 2, 0, 0, 170, 3, 0, 0, 44, 1, 0, 0, 53, 3, 0, 0, 78, 0, 0, 0, 87, 1, 0, 0, 175, 0, 0, 0, 128, 0, 0, 0, 250, 0, 0, 0, 170, 0, 0, 0, 6, 3, 0, 0, 204, 3, 0, 0, 19, 1, 0, 0, 231, 3, 0, 0, 127, 2, 0, 0, 239, 1, 0, 0, 78, 0, 0, 0, 96, 1, 0, 0, 126, 0, 0, 0, 89, 3, 0, 0, 188, 3, 0, 0, 102, 1, 0, 0, 107, 2, 0, 0, 68, 2, 0, 0, 124, 0, 0, 0, 225, 2, 0, 0, 82, 2, 0, 0, 189, 2, 0, 0, 100, 2, 0, 0, 157, 2, 0, 0, 112, 0, 0, 0, 134, 0, 0, 0, 182, 2, 0, 0, 107, 1, 0, 0, 224, 3, 0, 0, 41, 3, 0, 0, 231, 2, 0, 0, 168, 0, 0, 0, 206, 3, 0, 0, 176, 3, 0, 0, 119, 1, 0, 0, 236, 2, 0, 0, 52, 0, 0, 0, 88, 2, 0, 0, 235, 2, 0, 0, 130, 2, 0, 0, 182, 0, 0, 0, 94, 3, 0, 0, 81, 0, 0, 0, 88, 1, 0, 0, 37, 3, 0, 0, 220, 3, 0, 0, 227, 2, 0, 0, 255, 1, 0, 0, 143, 2, 0, 0, 46, 3, 0, 0, 78, 1, 0, 0, 249, 0, 0, 0, 3, 2, 0, 0, 129, 3, 0, 0, 187, 3, 0, 0, 152, 2, 0, 0, 213, 3, 0, 0, 137, 2, 0, 0, 113, 0, 0, 0, 206, 3, 0, 0, 203, 1, 0, 0, 125, 3, 0, 0, 228, 0, 0, 0, 177, 1, 0, 0, 69, 3, 0, 0, 41, 2, 0, 0, 12, 1, 0, 0, 158, 3, 0, 0, 240, 0, 0, 0, 102, 0, 0, 0, 142, 2, 0, 0, 203, 1, 0, 0, 51, 0, 0, 0, 174, 2, 0, 0, 242, 2, 0, 0, 38, 3, 0, 0, 248, 2, 0, 0, 237, 1, 0, 0, 147, 1, 0, 0, 159, 1, 0, 0, 138, 1, 0, 0, 175, 2, 0, 0, 188, 2, 0, 0, 178, 3, 0, 0, 158, 2, 0, 0, 144, 2, 0, 0, 98, 2, 0, 0, 226, 2, 0, 0, 136, 1, 0, 0, 248, 2, 0, 0, 31, 3, 0, 0, 119, 3, 0, 0, 141, 2, 0, 0, 210, 3, 0, 0, 65, 1, 0, 0, 64, 2, 0, 0, 105, 2, 0, 0, 114, 2, 0, 0, 246, 1, 0, 0, 126, 3, 0, 0, 167, 2, 0, 0, 243, 0, 0, 0, 184, 1, 0, 0, 168, 2, 0, 0, 111, 3, 0, 0, 194, 0, 0, 0, 60, 2, 0, 0, 128, 2, 0, 0, 212, 2, 0, 0, 158, 3, 0, 0, 56, 0, 0, 0, 204, 0, 0, 0, 188, 2, 0, 0, 195, 2, 0, 0, 151, 0, 0, 0, 201, 1, 0, 0, 193, 1, 0, 0, 29, 3, 0, 0, 195, 0, 0, 0, 23, 3, 0, 0, 46, 2, 0, 0, 177, 3, 0, 0, 167, 2, 0, 0, 41, 1, 0, 0, 59, 0, 0, 0, 87, 0, 0, 0, 56, 3, 0, 0, 201, 2, 0, 0, 151, 2, 0, 0, 156, 1, 0, 0, 181, 2, 0, 0, 86, 1, 0, 0, 94, 2, 0, 0, 134, 0, 0, 0, 108, 0, 0, 0, 59, 2, 0, 0, 108, 1, 0, 0, 119, 2, 0, 0, 212, 0, 0, 0, 174, 0, 0, 0, 131, 2, 0, 0, 48, 1, 0, 0, 73, 1, 0, 0, 87, 1, 0, 0, 97, 0, 0, 0, 174, 1, 0, 0, 239, 2, 0, 0, 241, 1, 0, 0, 58, 1, 0, 0, 215, 3, 0, 0, 118, 1, 0, 0, 54, 3, 0, 0, 160, 3, 0, 0, 140, 0, 0, 0, 206, 0, 0, 0, 73, 0, 0, 0, 7, 1, 0, 0, 212, 3, 0, 0, 224, 2, 0, 0, 108, 3, 0, 0, 222, 1, 0, 0, 174, 1, 0, 0, 49, 1, 0, 0, 170, 0, 0, 0, 2, 2, 0, 0, 108, 1, 0, 0, 180, 2, 0, 0, 61, 3, 0, 0, 82, 0, 0, 0, 87, 3, 0, 0, 185, 3, 0, 0, 164, 2, 0, 0, 246, 0, 0, 0, 113, 1, 0, 0, 202, 3, 0, 0, 38, 1, 0, 0, 238, 2, 0, 0, 39, 3, 0, 0, 59, 3, 0, 0, 150, 0, 0, 0, 22, 3, 0, 0, 32, 1, 0, 0, 155, 3, 0, 0, 36, 3, 0, 0, 122, 1, 0, 0, 215, 0, 0, 0, 60, 3, 0, 0, 80, 2, 0, 0, 25, 1, 0, 0, 53, 2, 0, 0, 43, 2, 0, 0, 198, 2, 0, 0, 82, 0, 0, 0, 128, 3, 0, 0, 63, 3, 0, 0, 35, 2, 0, 0, 5, 1, 0, 0, 12, 2, 0, 0, 206, 1, 0, 0, 37, 1, 0, 0, 209, 1, 0, 0, 246, 1, 0, 0, 56, 0, 0, 0, 149, 2, 0, 0, 53, 3, 0, 0, 208, 3, 0, 0, 223, 3, 0, 0, 146, 2, 0, 0, 101, 3, 0, 0, 137, 3, 0, 0, 246, 2, 0, 0, 233, 2, 0, 0, 193, 0, 0, 0, 0, 3, 0, 0, 38, 2, 0, 0, 96, 2, 0, 0, 165, 3, 0, 0, 122, 1, 0, 0, 30, 1, 0, 0, 215, 0, 0, 0, 211, 3, 0, 0, 24, 3, 0, 0, 193, 3, 0, 0, 61, 0, 0, 0, 176, 2, 0, 0, 25, 3, 0, 0, 132, 2, 0, 0, 218, 3, 0, 0, 147, 1, 0, 0, 106, 0, 0, 0, 110, 1, 0, 0, 137, 3, 0, 0, 132, 2, 0, 0, 116, 1, 0, 0, 55, 2, 0, 0, 210, 1, 0, 0, 178, 1, 0, 0, 133, 2, 0, 0, 210, 0, 0, 0, 133, 1, 0, 0, 38, 2, 0, 0, 151, 3, 0, 0, 135, 0, 0, 0, 12, 3, 0, 0, 5, 3, 0, 0, 123, 2, 0, 0, 133, 1, 0, 0, 195, 2, 0, 0, 100, 0, 0, 0, 114, 2, 0, 0, 190, 3, 0, 0, 165, 0, 0, 0, 248, 1, 0, 0, 152, 3, 0, 0, 176, 0, 0, 0, 193, 0, 0, 0, 201, 2, 0, 0, 89, 3, 0, 0, 9, 1, 0, 0, 203, 0, 0, 0, 50, 0, 0, 0, 156, 2, 0, 0, 108, 0, 0, 0, 133, 2, 0, 0, 222, 3, 0, 0, 114, 2, 0, 0, 197, 0, 0, 0, 254, 1, 0, 0, 101, 1, 0, 0, 102, 1, 0, 0, 82, 3, 0, 0, 90, 3, 0, 0, 108, 1, 0, 0, 168, 3, 0, 0, 126, 2, 0, 0, 168, 115, 15, 0, 172, 115, 15, 0, 178, 115, 15, 0, 181, 115, 15, 0, 186, 115, 15, 0, 193, 115, 15, 0, 197, 115, 15, 0, 203, 115, 15, 0, 207, 115, 15, 0, 216, 115, 15, 0, 221, 115, 15, 0, 224, 115, 15, 0, 33, 117, 15, 0, 227, 115, 15, 0, 231, 115, 15, 0, 235, 115, 15, 0, 238, 115, 15, 0, 245, 115, 15, 0, 252, 115, 15, 0, 1, 116, 15, 0, 6, 116, 15, 0, 12, 116, 15, 0, 18, 116, 15, 0, 21, 116, 15, 0, 24, 116, 15, 0, 28, 116, 15, 0, 31, 116, 15, 0, 34, 116, 15, 0, 37, 116, 15, 0, 40, 116, 15, 0, 43, 116, 15, 0, 46, 116, 15, 0, 49, 116, 15, 0, 55, 116, 15, 0, 64, 116, 15, 0, 74, 116, 15, 0, 81, 116, 15, 0, 82, 111, 15, 0, 90, 111, 15, 0, 101, 111, 15, 0, 106, 111, 15, 0, 113, 111, 15, 0, 119, 111, 15, 0, 124, 111, 15, 0, 130, 111, 15, 0, 136, 111, 15, 0, 142, 111, 15, 0, 148, 111, 15, 0, 154, 111, 15, 0, 160, 111, 15, 0, 167, 111, 15, 0, 174, 111, 15, 0, 180, 111, 15, 0, 187, 111, 15, 0, 193, 111, 15, 0, 199, 111, 15, 0, 205, 111, 15, 0, 212, 111, 15, 0, 217, 111, 15, 0, 222, 111, 15, 0, 231, 111, 15, 0, 17, 109, 15, 0, 42, 0, 0, 0, 24, 109, 15, 0, 43, 0, 0, 0, 39, 109, 15, 0, 44, 0, 0, 0, 46, 109, 15, 0, 45, 0, 0, 0, 52, 109, 15, 0, 46, 0, 0, 0, 65, 109, 15, 0, 47, 0, 0, 0, 72, 109, 15, 0, 48, 0, 0, 0, 81, 109, 15, 0, 49, 0, 0, 0, 86, 109, 15, 0, 50, 0, 0, 0, 91, 109, 15, 0, 51, 0, 0, 0, 97, 109, 15, 0, 52, 0, 0, 0, 103, 109, 15, 0, 53, 0, 0, 0, 109, 109, 15, 0, 54, 0, 0, 0, 118, 109, 15, 0, 55, 0, 0, 0, 125, 109, 15, 0, 56, 0, 0, 0, 132, 109, 15, 0, 57, 0, 0, 0, 139, 109, 15, 0, 58, 0, 0, 0, 146, 109, 15, 0, 59, 0, 0, 0, 159, 109, 15, 0, 60, 0, 0, 0, 168, 109, 15, 0, 61, 0, 0, 0, 177, 109, 15, 0, 62, 0, 0, 0, 90, 106, 15, 0, 0, 0, 0, 0, 26, 73, 15, 0, 0, 0, 0, 0, 88, 71, 15, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 127, 108, 15, 0, 63, 0, 0, 0, 134, 108, 15, 0, 64, 0, 0, 0, 141, 108, 15, 0, 65, 0, 0, 0, 149, 108, 15, 0, 66, 0, 0, 0, 156, 108, 15, 0, 67, 0, 0, 0, 161, 108, 15, 0, 68, 0, 0, 0, 167, 108, 15, 0, 69, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 209, 106, 15, 0, 70, 0, 0, 0, 215, 106, 15, 0, 71, 0, 0, 0, 228, 106, 15, 0, 72, 0, 0, 0, 236, 106, 15, 0, 73, 0, 0, 0, 244, 106, 15, 0, 74, 0, 0, 0, 253, 106, 15, 0, 75, 0, 0, 0, 52, 109, 15, 0, 76, 0, 0, 0, 9, 107, 15, 0, 77, 0, 0, 0, 20, 107, 15, 0, 78, 0, 0, 0, 32, 107, 15, 0, 79, 0, 0, 0, 42, 107, 15, 0, 80, 0, 0, 0, 55, 107, 15, 0, 81, 0, 0, 0, 63, 107, 15, 0, 82, 0, 0, 0, 146, 109, 15, 0, 83, 0, 0, 0, 72, 107, 15, 0, 84, 0, 0, 0, 83, 107, 15, 0, 85, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 84, 105, 15, 0, 86, 0, 0, 0, 90, 105, 15, 0, 87, 0, 0, 0, 58, 106, 15, 0, 88, 0, 0, 0, 96, 105, 15, 0, 89, 0, 0, 0, 64, 106, 15, 0, 90, 0, 0, 0, 69, 106, 15, 0, 91, 0, 0, 0, 76, 106, 15, 0, 92, 0, 0, 0, 102, 105, 15, 0, 93, 0, 0, 0, 82, 106, 15, 0, 94, 0, 0, 0, 90, 106, 15, 0, 95, 0, 0, 0, 120, 105, 15, 0, 96, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 84, 105, 15, 0, 86, 0, 0, 0, 90, 105, 15, 0, 97, 0, 0, 0, 96, 105, 15, 0, 98, 0, 0, 0, 102, 105, 15, 0, 99, 0, 0, 0, 107, 105, 15, 0, 100, 0, 0, 0, 112, 105, 15, 0, 101, 0, 0, 0, 120, 105, 15, 0, 102, 0, 0, 0, 101, 111, 15, 0, 103, 0, 0, 0, 126, 105, 15, 0, 104, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 109, 104, 15, 0, 105, 0, 0, 0, 113, 104, 15, 0, 106, 0, 0, 0, 118, 104, 15, 0, 107, 0, 0, 0, 123, 104, 15, 0, 108, 0, 0, 0, 128, 104, 15, 0, 109, 0, 0, 0, 133, 104, 15, 0, 110, 0, 0, 0, 137, 104, 15, 0, 111, 0, 0, 0, 141, 104, 15, 0, 112, 0, 0, 0, 145, 104, 15, 0, 113, 0, 0, 0, 155, 104, 15, 0, 114, 0, 0, 0, 161, 104, 15, 0, 115, 0, 0, 0, 166, 104, 15, 0, 116, 0, 0, 0, 170, 104, 15, 0, 117, 0, 0, 0, 174, 104, 15, 0, 118, 0, 0, 0, 178, 104, 15, 0, 119, 0, 0, 0, 182, 104, 15, 0, 120, 0, 0, 0, 187, 104, 15, 0, 121, 0, 0, 0, 191, 104, 15, 0, 122, 0, 0, 0, 198, 104, 15, 0, 123, 0, 0, 0, 209, 104, 15, 0, 124, 0, 0, 0, 213, 104, 15, 0, 125, 0, 0, 0, 218, 104, 15, 0, 126, 0, 0, 0, 90, 106, 15, 0, 127, 0, 0, 0, 144, 71, 15, 0, 0, 0, 0, 0, 147, 71, 15, 0, 0, 0, 0, 0, 152, 71, 15, 0, 0, 0, 0, 0, 163, 71, 15, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 38, 103, 15, 0, 128, 0, 0, 0, 44, 103, 15, 0, 129, 0, 0, 0, 49, 103, 15, 0, 130, 0, 0, 0, 58, 103, 15, 0, 131, 0, 0, 0, 66, 103, 15, 0, 132, 0, 0, 0, 71, 103, 15, 0, 133, 0, 0, 0, 78, 103, 15, 0, 134, 0, 0, 0, 85, 103, 15, 0, 135, 0, 0, 0, 92, 103, 15, 0, 136, 0, 0, 0, 102, 103, 15, 0, 137, 0, 0, 0, 107, 103, 15, 0, 138, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 162, 98, 15, 0, 139, 0, 0, 0, 83, 117, 15, 0, 140, 0, 0, 0, 167, 98, 15, 0, 141, 0, 0, 0, 172, 98, 15, 0, 142, 0, 0, 0, 177, 98, 15, 0, 143, 0, 0, 0, 184, 98, 15, 0, 144, 0, 0, 0, 191, 98, 15, 0, 145, 0, 0, 0, 196, 98, 15, 0, 146, 0, 0, 0, 200, 98, 15, 0, 147, 0, 0, 0, 206, 98, 15, 0, 148, 0, 0, 0, 212, 98, 15, 0, 149, 0, 0, 0, 216, 98, 15, 0, 150, 0, 0, 0, 224, 98, 15, 0, 151, 0, 0, 0, 228, 98, 15, 0, 152, 0, 0, 0, 234, 98, 15, 0, 153, 0, 0, 0, 239, 98, 15, 0, 154, 0, 0, 0, 248, 98, 15, 0, 155, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 181, 97, 15, 0, 156, 0, 0, 0, 188, 97, 15, 0, 157, 0, 0, 0, 234, 98, 15, 0, 158, 0, 0, 0, 248, 98, 15, 0, 159, 0, 0, 0, 78, 103, 15, 0, 160, 0, 0, 0, 195, 97, 15, 0, 161, 0, 0, 0, 200, 97, 15, 0, 162, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 32, 97, 15, 0, 163, 0, 0, 0, 39, 97, 15, 0, 164, 0, 0, 0, 83, 117, 15, 0, 165, 0, 0, 0, 196, 98, 15, 0, 166, 0, 0, 0, 49, 97, 15, 0, 167, 0, 0, 0, 189, 71, 15, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 97, 15, 0, 168, 0, 0, 0, 9, 97, 15, 0, 169, 0, 0, 0, 18, 73, 15, 0, 0, 0, 0, 0, 133, 72, 15, 0, 0, 0, 0, 0, 211, 71, 15, 0, 0, 0, 0, 0, 201, 71, 15, 0, 0, 0, 0, 0, 2, 73, 15, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 195, 95, 15, 0, 170, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 140, 70, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 126, 95, 15, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 5, 0, 0, 0, 129, 95, 15, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 6, 0, 0, 0, 134, 95, 15, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 7, 0, 0, 0, 139, 95, 15, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 145, 95, 15, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 147, 95, 15, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 9, 0, 0, 0, 149, 95, 15, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 151, 95, 15, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 10, 0, 0, 0, 153, 95, 15, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 11, 0, 0, 0, 156, 95, 15, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 12, 0, 0, 0, 159, 95, 15, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 13, 0, 0, 0, 162, 95, 15, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 14, 0, 0, 0, 165, 95, 15, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 15, 0, 0, 0, 168, 95, 15, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 171, 95, 15, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 178, 95, 15, 0, 255, 0, 0, 0, 255, 0, 0, 0, 255, 0, 0, 0, 255, 0, 0, 0, 205, 97, 15, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 1, 0, 0, 0, 5, 0, 0, 0, 2, 0, 0, 0, 6, 0, 0, 0, 3, 0, 0, 0, 7, 0, 0, 0, 4, 0, 0, 0, 8, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 6, 0, 0, 0, 9, 0, 0, 0, 7, 0, 0, 0, 1, 0, 0, 0, 8, 0, 0, 0, 10, 0, 0, 0, 9, 0, 0, 0, 11, 0, 0, 0, 10, 0, 0, 0, 12, 0, 0, 0, 11, 0, 0, 0, 13, 0, 0, 0, 12, 0, 0, 0, 14, 0, 0, 0, 13, 0, 0, 0, 15, 0, 0, 0, 14, 0, 0, 0, 2, 0, 0, 0, 15, 0, 0, 0, 3, 0, 0, 0, 16, 0, 0, 0, 42, 0, 0, 0, 42, 0, 0, 0, 43, 0, 0, 0, 43, 0, 0, 0, 164, 64, 0, 0, 176, 64, 0, 0, 255, 255, 255, 255, 72, 95, 15, 0, 1, 0, 0, 0, 57, 127, 15, 0, 1, 0, 0, 0, 74, 95, 15, 0, 1, 0, 0, 0, 193, 115, 15, 0, 3, 0, 0, 0, 221, 115, 15, 0, 2, 0, 0, 0, 28, 116, 15, 0, 2, 0, 0, 0, 207, 115, 15, 0, 8, 0, 0, 0, 33, 117, 15, 0, 5, 0, 0, 0, 34, 116, 15, 0, 2, 0, 0, 0, 12, 116, 15, 0, 5, 0, 0, 0, 76, 95, 15, 0, 1, 0, 0, 0, 78, 95, 15, 0, 1, 0, 0, 0, 80, 95, 15, 0, 1, 0, 0, 0, 203, 115, 15, 0, 3, 0, 0, 0, 252, 115, 15, 0, 4, 0, 0, 0, 168, 115, 15, 0, 3, 0, 0, 0, 31, 116, 15, 0, 2, 0, 0, 0, 82, 95, 15, 0, 1, 0, 0, 0, 186, 115, 15, 0, 6, 0, 0, 0, 181, 115, 15, 0, 4, 0, 0, 0, 84, 95, 15, 0, 1, 0, 0, 0, 227, 115, 15, 0, 3, 0, 0, 0, 220, 113, 15, 0, 4, 0, 0, 0, 86, 95, 15, 0, 1, 0, 0, 0, 1, 116, 15, 0, 4, 0, 0, 0, 88, 95, 15, 0, 1, 0, 0, 0, 90, 95, 15, 0, 1, 0, 0, 0, 92, 95, 15, 0, 1, 0, 0, 0, 94, 95, 15, 0, 1, 0, 0, 0, 96, 95, 15, 0, 1, 0, 0, 0, 197, 115, 15, 0, 5, 0, 0, 0, 98, 95, 15, 0, 1, 0, 0, 0, 100, 95, 15, 0, 1, 0, 0, 0, 178, 115, 15, 0, 2, 0, 0, 0, 102, 95, 15, 0, 1, 0, 0, 0, 37, 116, 15, 0, 2, 0, 0, 0, 245, 115, 15, 0, 6, 0, 0, 0, 57, 96, 15, 0, 1, 0, 0, 0, 104, 95, 15, 0, 1, 0, 0, 0, 106, 95, 15, 0, 1, 0, 0, 0, 235, 115, 15, 0, 2, 0, 0, 0, 231, 115, 15, 0, 3, 0, 0, 0, 18, 116, 15, 0, 2, 0, 0, 0, 224, 115, 15, 0, 2, 0, 0, 0, 108, 95, 15, 0, 1, 0, 0, 0, 6, 116, 15, 0, 5, 0, 0, 0, 110, 95, 15, 0, 1, 0, 0, 0, 216, 115, 15, 0, 4, 0, 0, 0, 172, 115, 15, 0, 5, 0, 0, 0, 43, 116, 15, 0, 2, 0, 0, 0, 112, 95, 15, 0, 1, 0, 0, 0, 114, 95, 15, 0, 1, 0, 0, 0, 46, 116, 15, 0, 2, 0, 0, 0, 116, 95, 15, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 40, 116, 15, 0, 2, 0, 0, 0, 118, 95, 15, 0, 1, 0, 0, 0, 120, 95, 15, 0, 1, 0, 0, 0, 122, 95, 15, 0, 1, 0, 0, 0, 24, 116, 15, 0, 3, 0, 0, 0, 238, 115, 15, 0, 6, 0, 0, 0, 124, 95, 15, 0, 1, 0, 0, 0, 21, 116, 15, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 205, 97, 15, 0, 0, 0, 0, 0, 0, 0, 0, 0, 205, 97, 15, 0, 0, 0, 0, 0, 0, 0, 0, 0, 205, 97, 15, 0, 0, 0, 0, 0, 0, 0, 0, 0, 205, 97, 15, 0, 0, 0, 0, 0, 0, 0, 0, 0, 205, 97, 15, 0, 0, 0, 0, 0, 0, 0, 0, 0, 205, 97, 15, 0, 0, 0, 0, 0, 0, 0, 0, 0, 205, 97, 15, 0, 0, 0, 0, 0, 0, 0, 0, 0, 205, 97, 15, 0, 0, 0, 0, 0, 0, 0, 0, 0, 205, 97, 15, 0, 0, 0, 0, 0, 0, 0, 0, 0, 51, 90, 15, 0, 53, 130, 12, 0, 31, 3, 0, 0, 61, 90, 15, 0, 18, 127, 12, 0, 149, 2, 0, 0, 70, 90, 15, 0, 106, 59, 13, 0, 26, 4, 2, 0, 79, 90, 15, 0, 207, 134, 12, 0, 142, 1, 0, 0, 92, 90, 15, 0, 98, 106, 12, 0, 159, 19, 0, 0, 102, 90, 15, 0, 185, 134, 12, 0, 22, 0, 0, 0, 115, 90, 15, 0, 196, 126, 12, 0, 78, 0, 0, 0, 128, 90, 15, 0, 71, 126, 12, 0, 103, 0, 0, 0, 141, 90, 15, 0, 88, 137, 12, 0, 239, 0, 0, 0, 154, 90, 15, 0, 93, 136, 12, 0, 251, 0, 0, 0, 167, 90, 15, 0, 94, 134, 12, 0, 91, 0, 0, 0, 176, 90, 15, 0, 167, 129, 12, 0, 142, 0, 0, 0, 205, 97, 15, 0, 0, 0, 0, 0, 0, 0, 0, 0, 205, 97, 15, 0, 0, 0, 0, 0, 0, 0, 0, 0, 205, 97, 15, 0, 0, 0, 0, 0, 0, 0, 0, 0, 190, 90, 15, 0, 84, 133, 12, 0, 244, 0, 0, 0, 203, 90, 15, 0, 6, 49, 13, 0, 104, 1, 0, 0, 219, 90, 15, 0, 22, 12, 13, 0, 104, 2, 0, 0, 235, 90, 15, 0, 34, 230, 12, 0, 104, 2, 0, 0, 251, 90, 15, 0, 66, 196, 12, 0, 240, 1, 0, 0, 11, 91, 15, 0, 190, 16, 13, 0, 152, 2, 0, 0, 27, 91, 15, 0, 50, 235, 12, 0, 104, 2, 0, 0, 43, 91, 15, 0, 154, 200, 12, 0, 168, 1, 0, 0, 59, 91, 15, 0, 114, 168, 12, 0, 168, 1, 0, 0, 75, 91, 15, 0, 126, 14, 13, 0, 64, 2, 0, 0, 91, 91, 15, 0, 138, 232, 12, 0, 168, 2, 0, 0, 107, 91, 15, 0, 50, 198, 12, 0, 104, 2, 0, 0, 123, 91, 15, 0, 202, 167, 12, 0, 168, 0, 0, 0, 139, 91, 15, 0, 222, 38, 13, 0, 104, 2, 0, 0, 155, 91, 15, 0, 218, 255, 12, 0, 44, 2, 0, 0, 171, 91, 15, 0, 6, 221, 12, 0, 168, 1, 0, 0, 187, 91, 15, 0, 214, 187, 12, 0, 232, 1, 0, 0, 203, 91, 15, 0, 110, 50, 13, 0, 140, 1, 0, 0, 219, 91, 15, 0, 6, 47, 13, 0, 0, 2, 0, 0, 235, 91, 15, 0, 110, 9, 13, 0, 168, 2, 0, 0, 251, 91, 15, 0, 30, 228, 12, 0, 4, 2, 0, 0, 11, 92, 15, 0, 250, 194, 12, 0, 72, 1, 0, 0, 27, 92, 15, 0, 98, 57, 13, 0, 8, 2, 0, 0, 43, 92, 15, 0, 30, 45, 13, 0, 232, 1, 0, 0, 59, 92, 15, 0, 134, 6, 13, 0, 232, 2, 0, 0, 75, 92, 15, 0, 86, 226, 12, 0, 200, 1, 0, 0, 91, 92, 15, 0, 146, 193, 12, 0, 104, 1, 0, 0, 107, 92, 15, 0, 130, 55, 13, 0, 224, 1, 0, 0, 123, 92, 15, 0, 46, 43, 13, 0, 240, 1, 0, 0, 139, 92, 15, 0, 110, 4, 13, 0, 24, 2, 0, 0, 155, 92, 15, 0, 82, 224, 12, 0, 4, 2, 0, 0, 171, 92, 15, 0, 6, 192, 12, 0, 140, 1, 0, 0, 187, 92, 15, 0, 218, 53, 13, 0, 168, 1, 0, 0, 203, 92, 15, 0, 70, 41, 13, 0, 232, 1, 0, 0, 219, 92, 15, 0, 6, 2, 13, 0, 104, 2, 0, 0, 235, 92, 15, 0, 174, 222, 12, 0, 164, 1, 0, 0, 251, 92, 15, 0, 190, 189, 12, 0, 72, 2, 0, 0, 11, 93, 15, 0, 250, 51, 13, 0, 224, 1, 0, 0, 27, 93, 15, 0, 110, 36, 13, 0, 112, 2, 0, 0, 43, 93, 15, 0, 50, 254, 12, 0, 168, 1, 0, 0, 59, 93, 15, 0, 158, 218, 12, 0, 104, 2, 0, 0, 75, 93, 15, 0, 246, 185, 12, 0, 224, 1, 0, 0, 91, 93, 15, 0, 6, 34, 13, 0, 104, 2, 0, 0, 107, 93, 15, 0, 202, 251, 12, 0, 104, 2, 0, 0, 123, 93, 15, 0, 54, 216, 12, 0, 104, 2, 0, 0, 139, 93, 15, 0, 22, 184, 12, 0, 224, 1, 0, 0, 155, 93, 15, 0, 30, 31, 13, 0, 232, 2, 0, 0, 171, 93, 15, 0, 98, 249, 12, 0, 104, 2, 0, 0, 187, 93, 15, 0, 30, 214, 12, 0, 24, 2, 0, 0, 203, 93, 15, 0, 206, 182, 12, 0, 72, 1, 0, 0, 219, 93, 15, 0, 214, 28, 13, 0, 72, 2, 0, 0, 235, 93, 15, 0, 42, 247, 12, 0, 56, 2, 0, 0, 251, 93, 15, 0, 182, 211, 12, 0, 104, 2, 0, 0, 11, 94, 15, 0, 254, 179, 12, 0, 208, 2, 0, 0, 27, 94, 15, 0, 110, 26, 13, 0, 104, 2, 0, 0, 43, 94, 15, 0, 198, 244, 12, 0, 100, 2, 0, 0, 59, 94, 15, 0, 78, 209, 12, 0, 104, 2, 0, 0, 75, 94, 15, 0, 18, 177, 12, 0, 236, 2, 0, 0, 91, 94, 15, 0, 38, 24, 13, 0, 72, 2, 0, 0, 107, 94, 15, 0, 102, 242, 12, 0, 96, 2, 0, 0, 123, 94, 15, 0, 14, 207, 12, 0, 64, 2, 0, 0, 139, 94, 15, 0, 170, 174, 12, 0, 104, 2, 0, 0, 155, 94, 15, 0, 190, 21, 13, 0, 104, 2, 0, 0, 171, 94, 15, 0, 2, 240, 12, 0, 100, 2, 0, 0, 187, 94, 15, 0, 170, 204, 12, 0, 100, 2, 0, 0, 203, 94, 15, 0, 218, 171, 12, 0, 208, 2, 0, 0, 219, 94, 15, 0, 86, 19, 13, 0, 104, 2, 0, 0, 235, 94, 15, 0, 154, 237, 12, 0, 104, 2, 0, 0, 251, 94, 15, 0, 66, 202, 12, 0, 104, 2, 0, 0, 11, 95, 15, 0, 26, 170, 12, 0, 192, 1, 0, 0, 27, 95, 15, 0, 1, 126, 12, 0, 70, 0, 0, 0, 39, 95, 15, 0, 72, 134, 12, 0, 22, 0, 0, 0, 205, 97, 15, 0, 0, 0, 0, 0, 0, 0, 0, 0, 205, 97, 15, 0, 0, 0, 0, 0, 0, 0, 0, 0, 205, 97, 15, 0, 0, 0, 0, 0, 0, 0, 0, 0, 205, 97, 15, 0, 0, 0, 0, 0, 0, 0, 0, 0, 205, 97, 15, 0, 0, 0, 0, 0, 0, 0, 0, 0, 205, 97, 15, 0, 0, 0, 0, 0, 0, 0, 0, 0, 205, 97, 15, 0, 0, 0, 0, 0, 0, 0, 0, 0, 205, 97, 15, 0, 0, 0, 0, 0, 0, 0, 0, 0, 205, 97, 15, 0, 0, 0, 0, 0, 0, 0, 0, 0, 205, 97, 15, 0, 0, 0, 0, 0, 0, 0, 0, 0, 205, 97, 15, 0, 0, 0, 0, 0, 0, 0, 0, 0, 205, 97, 15, 0, 0, 0, 0, 0, 0, 0, 0, 0, 205, 97, 15, 0, 0, 0, 0, 0, 0, 0, 0, 0, 205, 97, 15, 0, 0, 0, 0, 0, 0, 0, 0, 0, 205, 97, 15, 0, 0, 0, 0, 0, 0, 0, 0, 0, 205, 97, 15, 0, 0, 0, 0, 0, 0, 0, 0, 0, 205, 97, 15, 0, 0, 0, 0, 0, 0, 0, 0, 0, 205, 97, 15, 0, 0, 0, 0, 0, 0, 0, 0, 0, 205, 97, 15, 0, 0, 0, 0, 0, 0, 0, 0, 0, 205, 97, 15, 0, 0, 0, 0, 0, 0, 0, 0, 0, 205, 97, 15, 0, 0, 0, 0, 0, 0, 0, 0, 0, 48, 95, 15, 0, 71, 138, 12, 0, 22, 0, 0, 0, 60, 95, 15, 0, 174, 126, 12, 0, 22, 0, 0, 0, 100, 89, 15, 0, 171, 0, 0, 0, 110, 89, 15, 0, 172, 0, 0, 0, 121, 89, 15, 0, 173, 0, 0, 0, 191, 104, 15, 0, 174, 0, 0, 0, 131, 89, 15, 0, 175, 0, 0, 0, 137, 89, 15, 0, 176, 0, 0, 0, 141, 89, 15, 0, 177, 0, 0, 0, 151, 89, 15, 0, 178, 0, 0, 0, 160, 89, 15, 0, 179, 0, 0, 0, 170, 89, 15, 0, 180, 0, 0, 0, 180, 89, 15, 0, 181, 0, 0, 0, 194, 89, 15, 0, 182, 0, 0, 0, 202, 89, 15, 0, 183, 0, 0, 0, 213, 89, 15, 0, 184, 0, 0, 0, 221, 89, 15, 0, 185, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 235, 88, 15, 0, 186, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 195, 88, 15, 0, 187, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 149, 88, 15, 0, 188], "i8", ALLOC_NONE, Runtime.GLOBAL_BASE);
  allocate([82, 111, 15, 0, 189, 0, 0, 0, 90, 111, 15, 0, 190, 0, 0, 0, 126, 105, 15, 0, 191, 0, 0, 0, 101, 111, 15, 0, 192, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 82, 111, 15, 0, 193, 0, 0, 0, 90, 111, 15, 0, 194, 0, 0, 0, 126, 105, 15, 0, 195, 0, 0, 0, 101, 111, 15, 0, 196, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 82, 111, 15, 0, 197, 0, 0, 0, 90, 111, 15, 0, 198, 0, 0, 0, 126, 105, 15, 0, 199, 0, 0, 0, 101, 111, 15, 0, 200, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 82, 111, 15, 0, 201, 0, 0, 0, 90, 111, 15, 0, 202, 0, 0, 0, 126, 105, 15, 0, 203, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 188, 64, 0, 0, 200, 64, 0, 0, 255, 255, 255, 255, 148, 68, 0, 0, 160, 68, 0, 0, 255, 255, 255, 255, 212, 64, 0, 0, 224, 64, 0, 0, 255, 255, 255, 255, 236, 64, 0, 0, 248, 64, 0, 0, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 63, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 23, 0, 0, 0, 4, 65, 0, 0, 16, 65, 0, 0, 255, 255, 255, 255, 76, 68, 0, 0, 88, 68, 0, 0, 255, 255, 255, 255, 28, 65, 0, 0, 40, 65, 0, 0, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 28, 0, 0, 0, 52, 65, 0, 0, 64, 65, 0, 0, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 29, 0, 0, 0, 76, 65, 0, 0, 88, 65, 0, 0, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 30, 0, 0, 0, 100, 65, 0, 0, 112, 65, 0, 0, 255, 255, 255, 255, 28, 68, 0, 0, 40, 68, 0, 0, 255, 255, 255, 255, 124, 65, 0, 0, 136, 65, 0, 0, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 34, 0, 0, 0, 148, 65, 0, 0, 160, 65, 0, 0, 255, 255, 255, 255, 164, 67, 0, 0, 176, 67, 0, 0, 255, 255, 255, 255, 172, 65, 0, 0, 184, 65, 0, 0, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 41, 0, 0, 0, 196, 65, 0, 0, 208, 65, 0, 0, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 42, 0, 0, 0, 220, 65, 0, 0, 232, 65, 0, 0, 255, 255, 255, 255, 140, 67, 0, 0, 152, 67, 0, 0, 255, 255, 255, 255, 244, 65, 0, 0, 0, 66, 0, 0, 255, 255, 255, 255, 12, 66, 0, 0, 24, 66, 0, 0, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 62, 0, 0, 0, 36, 66, 0, 0, 48, 66, 0, 0, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 61, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 45, 0, 0, 0, 60, 66, 0, 0, 72, 66, 0, 0, 255, 255, 255, 255, 84, 66, 0, 0, 96, 66, 0, 0, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 60, 0, 0, 0, 108, 66, 0, 0, 120, 66, 0, 0, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 59, 0, 0, 0, 44, 67, 0, 0, 56, 67, 0, 0, 255, 255, 255, 255, 132, 66, 0, 0, 144, 66, 0, 0, 255, 255, 255, 255, 228, 66, 0, 0, 240, 66, 0, 0, 255, 255, 255, 255, 156, 66, 0, 0, 168, 66, 0, 0, 255, 255, 255, 255, 204, 66, 0, 0, 216, 66, 0, 0, 255, 255, 255, 255, 180, 66, 0, 0, 192, 66, 0, 0, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 57, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 58, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 55, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 56, 0, 0, 0, 20, 67, 0, 0, 32, 67, 0, 0, 255, 255, 255, 255, 252, 66, 0, 0, 8, 67, 0, 0, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 53, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 54, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 51, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 52, 0, 0, 0, 116, 67, 0, 0, 128, 67, 0, 0, 255, 255, 255, 255, 68, 67, 0, 0, 80, 67, 0, 0, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 48, 0, 0, 0, 92, 67, 0, 0, 104, 67, 0, 0, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 49, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 50, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 46, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 47, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 43, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 44, 0, 0, 0, 188, 67, 0, 0, 200, 67, 0, 0, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 40, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 35, 0, 0, 0, 212, 67, 0, 0, 224, 67, 0, 0, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 36, 0, 0, 0, 236, 67, 0, 0, 248, 67, 0, 0, 255, 255, 255, 255, 4, 68, 0, 0, 16, 68, 0, 0, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 39, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 37, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 38, 0, 0, 0, 52, 68, 0, 0, 64, 68, 0, 0, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 33, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 31, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 32, 0, 0, 0, 100, 68, 0, 0, 112, 68, 0, 0, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 27, 0, 0, 0, 124, 68, 0, 0, 136, 68, 0, 0, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 26, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 25, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 172, 68, 0, 0, 184, 68, 0, 0, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 196, 68, 0, 0, 208, 68, 0, 0, 255, 255, 255, 255, 220, 68, 0, 0, 232, 68, 0, 0, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 22, 0, 0, 0, 92, 70, 0, 0, 104, 70, 0, 0, 255, 255, 255, 255, 244, 68, 0, 0, 0, 69, 0, 0, 255, 255, 255, 255, 180, 69, 0, 0, 192, 69, 0, 0, 255, 255, 255, 255, 12, 69, 0, 0, 24, 69, 0, 0, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 14, 0, 0, 0, 36, 69, 0, 0, 48, 69, 0, 0, 255, 255, 255, 255, 132, 69, 0, 0, 144, 69, 0, 0, 255, 255, 255, 255, 60, 69, 0, 0, 72, 69, 0, 0, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 18, 0, 0, 0, 84, 69, 0, 0, 96, 69, 0, 0, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 19, 0, 0, 0, 108, 69, 0, 0, 120, 69, 0, 0, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 21, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 15, 0, 0, 0, 156, 69, 0, 0, 168, 69, 0, 0, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 17, 0, 0, 0, 68, 70, 0, 0, 80, 70, 0, 0, 255, 255, 255, 255, 204, 69, 0, 0, 216, 69, 0, 0, 255, 255, 255, 255, 44, 70, 0, 0, 56, 70, 0, 0, 255, 255, 255, 255, 228, 69, 0, 0, 240, 69, 0, 0, 255, 255, 255, 255, 20, 70, 0, 0, 32, 70, 0, 0, 255, 255, 255, 255, 252, 69, 0, 0, 8, 70, 0, 0, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 13, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 11, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 116, 70, 0, 0, 128, 70, 0, 0, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 0, 0, 0, 184, 95, 15, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 127, 0, 0, 0, 255, 7, 0, 0, 255, 255, 0, 0, 215, 103, 15, 0, 219, 103, 15, 0, 227, 103, 15, 0, 233, 103, 15, 0, 242, 103, 15, 0, 102, 103, 15, 0, 0, 0, 0, 0, 6, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 201, 105, 15, 0, 204, 105, 15, 0, 119, 107, 15, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 244, 105, 15, 0, 209, 105, 15, 0, 193, 115, 15, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 114, 107, 15, 0, 245, 115, 15, 0, 119, 107, 15, 0, 213, 110, 15, 0, 124, 107, 15, 0, 200, 110, 15, 0, 205, 110, 15, 0, 192, 110, 15, 0, 213, 110, 15, 0, 219, 110, 15, 0, 224, 110, 15, 0, 233, 110, 15, 0, 244, 110, 15, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 3, 0, 0, 0, 5, 0, 0, 0, 6, 0, 0, 0, 7, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 200, 1, 0, 0, 42, 0, 0, 0, 43, 0, 0, 0, 44, 0, 0, 0, 45, 0, 0, 0, 42, 0, 0, 0, 0, 0, 0, 0, 88, 2, 0, 0, 42, 0, 0, 0, 46, 0, 0, 0, 44, 0, 0, 0, 45, 0, 0, 0, 43, 0, 0, 0, 0, 0, 0, 0, 152, 1, 0, 0, 42, 0, 0, 0, 47, 0, 0, 0, 44, 0, 0, 0, 45, 0, 0, 0, 44, 0, 0, 0, 42, 0, 0, 0, 42, 0, 0, 0, 42, 0, 0, 0, 0, 0, 0, 0, 104, 2, 0, 0, 42, 0, 0, 0, 48, 0, 0, 0, 44, 0, 0, 0, 45, 0, 0, 0, 44, 0, 0, 0, 43, 0, 0, 0, 43, 0, 0, 0, 43, 0, 0, 0, 0, 0, 0, 0, 120, 2, 0, 0, 42, 0, 0, 0, 49, 0, 0, 0, 44, 0, 0, 0, 45, 0, 0, 0, 44, 0, 0, 0, 44, 0, 0, 0, 44, 0, 0, 0, 44, 0, 0, 0, 0, 0, 0, 0, 184, 1, 0, 0, 42, 0, 0, 0, 50, 0, 0, 0, 44, 0, 0, 0, 45, 0, 0, 0, 45, 0, 0, 0, 10, 0, 0, 0, 100, 0, 0, 0, 232, 3, 0, 0, 16, 39, 0, 0, 160, 134, 1, 0, 64, 66, 15, 0, 128, 150, 152, 0, 0, 225, 245, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 46, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 255], "i8", ALLOC_NONE, Runtime.GLOBAL_BASE + 16388);
  allocate([65, 80, 73, 95, 86, 69, 82, 83, 73, 79, 78, 0, 68, 69, 86, 73, 67, 69, 95, 84, 89, 80, 69, 95, 83, 72, 73, 70, 84, 0, 68, 69, 86, 73, 67, 69, 95, 77, 65, 83, 75, 0, 68, 69, 86, 73, 67, 69, 95, 78, 79, 78, 69, 0, 68, 69, 86, 73, 67, 69, 95, 74, 79, 89, 80, 65, 68, 0, 68, 69, 86, 73, 67, 69, 95, 77, 79, 85, 83, 69, 0, 68, 69, 86, 73, 67, 69, 95, 75, 69, 89, 66, 79, 65, 82, 68, 0, 68, 69, 86, 73, 67, 69, 95, 76, 73, 71, 72, 84, 71, 85, 78, 0, 68, 69, 86, 73, 67, 69, 95, 65, 78, 65, 76, 79, 71, 0, 68, 69, 86, 73, 67, 69, 95, 80, 79, 73, 78, 84, 69, 82, 0, 68, 69, 86, 73, 67, 69, 95, 73, 68, 95, 74, 79, 89, 80, 65, 68, 95, 66, 0, 68, 69, 86, 73, 67, 69, 95, 73, 68, 95, 74, 79, 89, 80, 65, 68, 95, 89, 0, 68, 69, 86, 73, 67, 69, 95, 73, 68, 95, 74, 79, 89, 80, 65, 68, 95, 83, 69, 76, 69, 67, 84, 0, 68, 69, 86, 73, 67, 69, 95, 73, 68, 95, 74, 79, 89, 80, 65, 68, 95, 83, 84, 65, 82, 84, 0, 68, 69, 86, 73, 67, 69, 95, 73, 68, 95, 74, 79, 89, 80, 65, 68, 95, 85, 80, 0, 68, 69, 86, 73, 67, 69, 95, 73, 68, 95, 74, 79, 89, 80, 65, 68, 95, 68, 79, 87, 78, 0, 68, 69, 86, 73, 67, 69, 95, 73, 68, 95, 74, 79, 89, 80, 65, 68, 95, 76, 69, 70, 84, 0, 68, 69, 86, 73, 67, 69, 95, 73, 68, 95, 74, 79, 89, 80, 65, 68, 95, 82, 73, 71, 72, 84, 0, 68, 69, 86, 73, 67, 69, 95, 73, 68, 95, 74, 79, 89, 80, 65, 68, 95, 65, 0, 68, 69, 86, 73, 67, 69, 95, 73, 68, 95, 74, 79, 89, 80, 65, 68, 95, 88, 0, 68, 69, 86, 73, 67, 69, 95, 73, 68, 95, 74, 79, 89, 80, 65, 68, 95, 76, 0, 68, 69, 86, 73, 67, 69, 95, 73, 68, 95, 74, 79, 89, 80, 65, 68, 95, 82, 0, 68, 69, 86, 73, 67, 69, 95, 73, 68, 95, 74, 79, 89, 80, 65, 68, 95, 76, 50, 0, 68, 69, 86, 73, 67, 69, 95, 73, 68, 95, 74, 79, 89, 80, 65, 68, 95, 82, 50, 0, 68, 69, 86, 73, 67, 69, 95, 73, 68, 95, 74, 79, 89, 80, 65, 68, 95, 76, 51, 0, 68, 69, 86, 73, 67, 69, 95, 73, 68, 95, 74, 79, 89, 80, 65, 68, 95, 82, 51, 0, 68, 69, 86, 73, 67, 69, 95, 73, 78, 68, 69, 88, 95, 65, 78, 65, 76, 79, 71, 95, 76, 69, 70, 84, 0, 68, 69, 86, 73, 67, 69, 95, 73, 78, 68, 69, 88, 95, 65, 78, 65, 76, 79, 71, 95, 82, 73, 71, 72, 84, 0, 68, 69, 86, 73, 67, 69, 95, 73, 68, 95, 65, 78, 65, 76, 79, 71, 95, 88, 0, 68, 69, 86, 73, 67, 69, 95, 73, 68, 95, 65, 78, 65, 76, 79, 71, 95, 89, 0, 68, 69, 86, 73, 67, 69, 95, 73, 68, 95, 77, 79, 85, 83, 69, 95, 88, 0, 68, 69, 86, 73, 67, 69, 95, 73, 68, 95, 77, 79, 85, 83, 69, 95, 89, 0, 68, 69, 86, 73, 67, 69, 95, 73, 68, 95, 77, 79, 85, 83, 69, 95, 76, 69, 70, 84, 0, 68, 69, 86, 73, 67, 69, 95, 73, 68, 95, 77, 79, 85, 83, 69, 95, 82, 73, 71, 72, 84, 0, 68, 69, 86, 73, 67, 69, 95, 73, 68, 95, 77, 79, 85, 83, 69, 95, 87, 72, 69, 69, 76, 85, 80, 0, 68, 69, 86, 73, 67, 69, 95, 73, 68, 95, 77, 79, 85, 83, 69, 95, 87, 72, 69, 69, 76, 68, 79, 87, 78, 0, 68, 69, 86, 73, 67, 69, 95, 73, 68, 95, 77, 79, 85, 83, 69, 95, 77, 73, 68, 68, 76, 69, 0, 68, 69, 86, 73, 67, 69, 95, 73, 68, 95, 77, 79, 85, 83, 69, 95, 72, 79, 82, 73, 90, 95, 87, 72, 69, 69, 76, 85, 80, 0, 68, 69, 86, 73, 67, 69, 95, 73, 68, 95, 77, 79, 85, 83, 69, 95, 72, 79, 82, 73, 90, 95, 87, 72, 69, 69, 76, 68, 79, 87, 78, 0, 68, 69, 86, 73, 67, 69, 95, 73, 68, 95, 76, 73, 71, 72, 84, 71, 85, 78, 95, 88, 0, 68, 69, 86, 73, 67, 69, 95, 73, 68, 95, 76, 73, 71, 72, 84, 71, 85, 78, 95, 89, 0, 68, 69, 86, 73, 67, 69, 95, 73, 68, 95, 76, 73, 71, 72, 84, 71, 85, 78, 95, 84, 82, 73, 71, 71, 69, 82, 0, 68, 69, 86, 73, 67, 69, 95, 73, 68, 95, 76, 73, 71, 72, 84, 71, 85, 78, 95, 67, 85, 82, 83, 79, 82, 0, 68, 69, 86, 73, 67, 69, 95, 73, 68, 95, 76, 73, 71, 72, 84, 71, 85, 78, 95, 84, 85, 82, 66, 79, 0, 68, 69, 86, 73, 67, 69, 95, 73, 68, 95, 76, 73, 71, 72, 84, 71, 85, 78, 95, 80, 65, 85, 83, 69, 0, 68, 69, 86, 73, 67, 69, 95, 73, 68, 95, 76, 73, 71, 72, 84, 71, 85, 78, 95, 83, 84, 65, 82, 84, 0, 68, 69, 86, 73, 67, 69, 95, 73, 68, 95, 80, 79, 73, 78, 84, 69, 82, 95, 88, 0, 68, 69, 86, 73, 67, 69, 95, 73, 68, 95, 80, 79, 73, 78, 84, 69, 82, 95, 89, 0, 68, 69, 86, 73, 67, 69, 95, 73, 68, 95, 80, 79, 73, 78, 84, 69, 82, 95, 80, 82, 69, 83, 83, 69, 68, 0, 82, 69, 71, 73, 79, 78, 95, 78, 84, 83, 67, 0, 82, 69, 71, 73, 79, 78, 95, 80, 65, 76, 0, 77, 69, 77, 79, 82, 89, 95, 77, 65, 83, 75, 0, 77, 69, 77, 79, 82, 89, 95, 83, 65, 86, 69, 95, 82, 65, 77, 0, 77, 69, 77, 79, 82, 89, 95, 82, 84, 67, 0, 77, 69, 77, 79, 82, 89, 95, 83, 89, 83, 84, 69, 77, 95, 82, 65, 77, 0, 77, 69, 77, 79, 82, 89, 95, 86, 73, 68, 69, 79, 95, 82, 65, 77, 0, 69, 78, 86, 73, 82, 79, 78, 77, 69, 78, 84, 95, 69, 88, 80, 69, 82, 73, 77, 69, 78, 84, 65, 76, 0, 69, 78, 86, 73, 82, 79, 78, 77, 69, 78, 84, 95, 80, 82, 73, 86, 65, 84, 69, 0, 69, 78, 86, 73, 82, 79, 78, 77, 69, 78, 84, 95, 83, 69, 84, 95, 82, 79, 84, 65, 84, 73, 79, 78, 0, 69, 78, 86, 73, 82, 79, 78, 77, 69, 78, 84, 95, 71, 69, 84, 95, 79, 86, 69, 82, 83, 67, 65, 78, 0, 69, 78, 86, 73, 82, 79, 78, 77, 69, 78, 84, 95, 71, 69, 84, 95, 67, 65, 78, 95, 68, 85, 80, 69, 0, 69, 78, 86, 73, 82, 79, 78, 77, 69, 78, 84, 95, 83, 69, 84, 95, 77, 69, 83, 83, 65, 71, 69, 0, 69, 78, 86, 73, 82, 79, 78, 77, 69, 78, 84, 95, 83, 72, 85, 84, 68, 79, 87, 78, 0, 69, 78, 86, 73, 82, 79, 78, 77, 69, 78, 84, 95, 83, 69, 84, 95, 80, 69, 82, 70, 79, 82, 77, 65, 78, 67, 69, 95, 76, 69, 86, 69, 76, 0, 69, 78, 86, 73, 82, 79, 78, 77, 69, 78, 84, 95, 71, 69, 84, 95, 83, 89, 83, 84, 69, 77, 95, 68, 73, 82, 69, 67, 84, 79, 82, 89, 0, 69, 78, 86, 73, 82, 79, 78, 77, 69, 78, 84, 95, 83, 69, 84, 95, 80, 73, 88, 69, 76, 95, 70, 79, 82, 77, 65, 84, 0, 69, 78, 86, 73, 82, 79, 78, 77, 69, 78, 84, 95, 83, 69, 84, 95, 73, 78, 80, 85, 84, 95, 68, 69, 83, 67, 82, 73, 80, 84, 79, 82, 83, 0, 69, 78, 86, 73, 82, 79, 78, 77, 69, 78, 84, 95, 83, 69, 84, 95, 75, 69, 89, 66, 79, 65, 82, 68, 95, 67, 65, 76, 76, 66, 65, 67, 75, 0, 69, 78, 86, 73, 82, 79, 78, 77, 69, 78, 84, 95, 83, 69, 84, 95, 68, 73, 83, 75, 95, 67, 79, 78, 84, 82, 79, 76, 95, 73, 78, 84, 69, 82, 70, 65, 67, 69, 0, 69, 78, 86, 73, 82, 79, 78, 77, 69, 78, 84, 95, 83, 69, 84, 95, 72, 87, 95, 82, 69, 78, 68, 69, 82, 0, 69, 78, 86, 73, 82, 79, 78, 77, 69, 78, 84, 95, 71, 69, 84, 95, 86, 65, 82, 73, 65, 66, 76, 69, 0, 69, 78, 86, 73, 82, 79, 78, 77, 69, 78, 84, 95, 83, 69, 84, 95, 86, 65, 82, 73, 65, 66, 76, 69, 83, 0, 69, 78, 86, 73, 82, 79, 78, 77, 69, 78, 84, 95, 71, 69, 84, 95, 86, 65, 82, 73, 65, 66, 76, 69, 95, 85, 80, 68, 65, 84, 69, 0, 69, 78, 86, 73, 82, 79, 78, 77, 69, 78, 84, 95, 83, 69, 84, 95, 83, 85, 80, 80, 79, 82, 84, 95, 78, 79, 95, 71, 65, 77, 69, 0, 69, 78, 86, 73, 82, 79, 78, 77, 69, 78, 84, 95, 71, 69, 84, 95, 76, 73, 66, 82, 69, 84, 82, 79, 95, 80, 65, 84, 72, 0, 69, 78, 86, 73, 82, 79, 78, 77, 69, 78, 84, 95, 83, 69, 84, 95, 65, 85, 68, 73, 79, 95, 67, 65, 76, 76, 66, 65, 67, 75, 0, 69, 78, 86, 73, 82, 79, 78, 77, 69, 78, 84, 95, 83, 69, 84, 95, 70, 82, 65, 77, 69, 95, 84, 73, 77, 69, 95, 67, 65, 76, 76, 66, 65, 67, 75, 0, 69, 78, 86, 73, 82, 79, 78, 77, 69, 78, 84, 95, 71, 69, 84, 95, 82, 85, 77, 66, 76, 69, 95, 73, 78, 84, 69, 82, 70, 65, 67, 69, 0, 69, 78, 86, 73, 82, 79, 78, 77, 69, 78, 84, 95, 71, 69, 84, 95, 73, 78, 80, 85, 84, 95, 68, 69, 86, 73, 67, 69, 95, 67, 65, 80, 65, 66, 73, 76, 73, 84, 73, 69, 83, 0, 69, 78, 86, 73, 82, 79, 78, 77, 69, 78, 84, 95, 71, 69, 84, 95, 83, 69, 78, 83, 79, 82, 95, 73, 78, 84, 69, 82, 70, 65, 67, 69, 0, 69, 78, 86, 73, 82, 79, 78, 77, 69, 78, 84, 95, 71, 69, 84, 95, 67, 65, 77, 69, 82, 65, 95, 73, 78, 84, 69, 82, 70, 65, 67, 69, 0, 69, 78, 86, 73, 82, 79, 78, 77, 69, 78, 84, 95, 71, 69, 84, 95, 76, 79, 71, 95, 73, 78, 84, 69, 82, 70, 65, 67, 69, 0, 69, 78, 86, 73, 82, 79, 78, 77, 69, 78, 84, 95, 71, 69, 84, 95, 80, 69, 82, 70, 95, 73, 78, 84, 69, 82, 70, 65, 67, 69, 0, 69, 78, 86, 73, 82, 79, 78, 77, 69, 78, 84, 95, 71, 69, 84, 95, 76, 79, 67, 65, 84, 73, 79, 78, 95, 73, 78, 84, 69, 82, 70, 65, 67, 69, 0, 69, 78, 86, 73, 82, 79, 78, 77, 69, 78, 84, 95, 71, 69, 84, 95, 67, 79, 82, 69, 95, 65, 83, 83, 69, 84, 83, 95, 68, 73, 82, 69, 67, 84, 79, 82, 89, 0, 69, 78, 86, 73, 82, 79, 78, 77, 69, 78, 84, 95, 71, 69, 84, 95, 83, 65, 86, 69, 95, 68, 73, 82, 69, 67, 84, 79, 82, 89, 0, 69, 78, 86, 73, 82, 79, 78, 77, 69, 78, 84, 95, 83, 69, 84, 95, 83, 89, 83, 84, 69, 77, 95, 65, 86, 95, 73, 78, 70, 79, 0, 69, 78, 86, 73, 82, 79, 78, 77, 69, 78, 84, 95, 83, 69, 84, 95, 80, 82, 79, 67, 95, 65, 68, 68, 82, 69, 83, 83, 95, 67, 65, 76, 76, 66, 65, 67, 75, 0, 69, 78, 86, 73, 82, 79, 78, 77, 69, 78, 84, 95, 83, 69, 84, 95, 83, 85, 66, 83, 89, 83, 84, 69, 77, 95, 73, 78, 70, 79, 0, 69, 78, 86, 73, 82, 79, 78, 77, 69, 78, 84, 95, 83, 69, 84, 95, 67, 79, 78, 84, 82, 79, 76, 76, 69, 82, 95, 73, 78, 70, 79, 0, 69, 78, 86, 73, 82, 79, 78, 77, 69, 78, 84, 95, 83, 69, 84, 95, 77, 69, 77, 79, 82, 89, 95, 77, 65, 80, 83, 0, 69, 78, 86, 73, 82, 79, 78, 77, 69, 78, 84, 95, 83, 69, 84, 95, 71, 69, 79, 77, 69, 84, 82, 89, 0, 69, 78, 86, 73, 82, 79, 78, 77, 69, 78, 84, 95, 71, 69, 84, 95, 85, 83, 69, 82, 78, 65, 77, 69, 0, 69, 78, 86, 73, 82, 79, 78, 77, 69, 78, 84, 95, 71, 69, 84, 95, 76, 65, 78, 71, 85, 65, 71, 69, 0, 77, 69, 77, 68, 69, 83, 67, 95, 67, 79, 78, 83, 84, 0, 77, 69, 77, 68, 69, 83, 67, 95, 66, 73, 71, 69, 78, 68, 73, 65, 78, 0, 77, 69, 77, 68, 69, 83, 67, 95, 65, 76, 73, 71, 78, 95, 50, 0, 77, 69, 77, 68, 69, 83, 67, 95, 65, 76, 73, 71, 78, 95, 52, 0, 77, 69, 77, 68, 69, 83, 67, 95, 65, 76, 73, 71, 78, 95, 56, 0, 77, 69, 77, 68, 69, 83, 67, 95, 77, 73, 78, 83, 73, 90, 69, 95, 50, 0, 77, 69, 77, 68, 69, 83, 67, 95, 77, 73, 78, 83, 73, 90, 69, 95, 52, 0, 77, 69, 77, 68, 69, 83, 67, 95, 77, 73, 78, 83, 73, 90, 69, 95, 56, 0, 83, 73, 77, 68, 95, 83, 83, 69, 0, 83, 73, 77, 68, 95, 83, 83, 69, 50, 0, 83, 73, 77, 68, 95, 86, 77, 88, 0, 83, 73, 77, 68, 95, 86, 77, 88, 49, 50, 56, 0, 83, 73, 77, 68, 95, 65, 86, 88, 0, 83, 73, 77, 68, 95, 78, 69, 79, 78, 0, 83, 73, 77, 68, 95, 83, 83, 69, 51, 0, 83, 73, 77, 68, 95, 83, 83, 83, 69, 51, 0, 83, 73, 77, 68, 95, 77, 77, 88, 0, 83, 73, 77, 68, 95, 77, 77, 88, 69, 88, 84, 0, 83, 73, 77, 68, 95, 83, 83, 69, 52, 0, 83, 73, 77, 68, 95, 83, 83, 69, 52, 50, 0, 83, 73, 77, 68, 95, 65, 86, 88, 50, 0, 83, 73, 77, 68, 95, 86, 70, 80, 85, 0, 83, 73, 77, 68, 95, 80, 83, 0, 83, 73, 77, 68, 95, 65, 69, 83, 0, 83, 69, 78, 83, 79, 82, 95, 65, 67, 67, 69, 76, 69, 82, 79, 77, 69, 84, 69, 82, 95, 88, 0, 83, 69, 78, 83, 79, 82, 95, 65, 67, 67, 69, 76, 69, 82, 79, 77, 69, 84, 69, 82, 95, 89, 0, 83, 69, 78, 83, 79, 82, 95, 65, 67, 67, 69, 76, 69, 82, 79, 77, 69, 84, 69, 82, 95, 90, 0, 72, 87, 95, 70, 82, 65, 77, 69, 95, 66, 85, 70, 70, 69, 82, 95, 86, 65, 76, 73, 68, 0, 108, 97, 110, 103, 117, 97, 103, 101, 0, 76, 65, 78, 71, 85, 65, 71, 69, 95, 68, 85, 77, 77, 89, 0, 76, 65, 78, 71, 85, 65, 71, 69, 95, 76, 65, 83, 84, 0, 76, 65, 78, 71, 85, 65, 71, 69, 95, 67, 72, 73, 78, 69, 83, 69, 95, 83, 73, 77, 80, 76, 73, 70, 73, 69, 68, 0, 76, 65, 78, 71, 85, 65, 71, 69, 95, 67, 72, 73, 78, 69, 83, 69, 95, 84, 82, 65, 68, 73, 84, 73, 79, 78, 65, 76, 0, 76, 65, 78, 71, 85, 65, 71, 69, 95, 75, 79, 82, 69, 65, 78, 0, 76, 65, 78, 71, 85, 65, 71, 69, 95, 82, 85, 83, 83, 73, 65, 78, 0, 76, 65, 78, 71, 85, 65, 71, 69, 95, 80, 79, 82, 84, 85, 71, 85, 69, 83, 69, 0, 76, 65, 78, 71, 85, 65, 71, 69, 95, 68, 85, 84, 67, 72, 0, 76, 65, 78, 71, 85, 65, 71, 69, 95, 73, 84, 65, 76, 73, 65, 78, 0, 76, 65, 78, 71, 85, 65, 71, 69, 95, 71, 69, 82, 77, 65, 78, 0, 76, 65, 78, 71, 85, 65, 71, 69, 95, 83, 80, 65, 78, 73, 83, 72, 0, 76, 65, 78, 71, 85, 65, 71, 69, 95, 70, 82, 69, 78, 67, 72, 0, 76, 65, 78, 71, 85, 65, 71, 69, 95, 74, 65, 80, 65, 78, 69, 83, 69, 0, 76, 65, 78, 71, 85, 65, 71, 69, 95, 69, 78, 71, 76, 73, 83, 72, 0, 107, 101, 121, 0, 75, 95, 68, 85, 77, 77, 89, 0, 75, 95, 76, 65, 83, 84, 0, 75, 95, 85, 78, 68, 79, 0, 75, 95, 69, 85, 82, 79, 0, 75, 95, 80, 79, 87, 69, 82, 0, 75, 95, 77, 69, 78, 85, 0, 75, 95, 66, 82, 69, 65, 75, 0, 75, 95, 83, 89, 83, 82, 69, 81, 0, 75, 95, 80, 82, 73, 78, 84, 0, 75, 95, 72, 69, 76, 80, 0, 75, 95, 67, 79, 77, 80, 79, 83, 69, 0, 75, 95, 77, 79, 68, 69, 0, 75, 95, 82, 83, 85, 80, 69, 82, 0, 75, 95, 76, 83, 85, 80, 69, 82, 0, 75, 95, 76, 77, 69, 84, 65, 0, 75, 95, 82, 77, 69, 84, 65, 0, 75, 95, 76, 65, 76, 84, 0, 75, 95, 82, 65, 76, 84, 0, 75, 95, 76, 67, 84, 82, 76, 0, 75, 95, 82, 67, 84, 82, 76, 0, 75, 95, 76, 83, 72, 73, 70, 84, 0, 75, 95, 82, 83, 72, 73, 70, 84, 0, 75, 95, 83, 67, 82, 79, 76, 76, 79, 67, 75, 0, 75, 95, 67, 65, 80, 83, 76, 79, 67, 75, 0, 75, 95, 78, 85, 77, 76, 79, 67, 75, 0, 75, 95, 70, 49, 53, 0, 75, 95, 70, 49, 52, 0, 75, 95, 70, 49, 51, 0, 75, 95, 70, 49, 50, 0, 75, 95, 70, 49, 49, 0, 75, 95, 70, 49, 48, 0, 75, 95, 70, 57, 0, 75, 95, 70, 56, 0, 75, 95, 70, 55, 0, 75, 95, 70, 54, 0, 75, 95, 70, 53, 0, 75, 95, 70, 52, 0, 75, 95, 70, 51, 0, 75, 95, 70, 50, 0, 75, 95, 70, 49, 0, 75, 95, 80, 65, 71, 69, 68, 79, 87, 78, 0, 75, 95, 80, 65, 71, 69, 85, 80, 0, 75, 95, 69, 78, 68, 0, 75, 95, 72, 79, 77, 69, 0, 75, 95, 73, 78, 83, 69, 82, 84, 0, 75, 95, 76, 69, 70, 84, 0, 75, 95, 82, 73, 71, 72, 84, 0, 75, 95, 68, 79, 87, 78, 0, 75, 95, 85, 80, 0, 75, 95, 75, 80, 95, 69, 81, 85, 65, 76, 83, 0, 75, 95, 75, 80, 95, 69, 78, 84, 69, 82, 0, 75, 95, 75, 80, 95, 80, 76, 85, 83, 0, 75, 95, 75, 80, 95, 77, 73, 78, 85, 83, 0, 75, 95, 75, 80, 95, 77, 85, 76, 84, 73, 80, 76, 89, 0, 75, 95, 75, 80, 95, 68, 73, 86, 73, 68, 69, 0, 75, 95, 75, 80, 95, 80, 69, 82, 73, 79, 68, 0, 75, 95, 75, 80, 57, 0, 75, 95, 75, 80, 56, 0, 75, 95, 75, 80, 55, 0, 75, 95, 75, 80, 54, 0, 75, 95, 75, 80, 53, 0, 75, 95, 75, 80, 52, 0, 75, 95, 75, 80, 51, 0, 75, 95, 75, 80, 50, 0, 75, 95, 75, 80, 49, 0, 75, 95, 75, 80, 48, 0, 75, 95, 68, 69, 76, 69, 84, 69, 0, 75, 95, 122, 0, 75, 95, 121, 0, 75, 95, 120, 0, 75, 95, 119, 0, 75, 95, 118, 0, 75, 95, 117, 0, 75, 95, 116, 0, 75, 95, 115, 0, 75, 95, 114, 0, 75, 95, 113, 0, 75, 95, 112, 0, 75, 95, 111, 0, 75, 95, 110, 0, 75, 95, 109, 0, 75, 95, 108, 0, 75, 95, 107, 0, 75, 95, 106, 0, 75, 95, 105, 0, 75, 95, 104, 0, 75, 95, 103, 0, 75, 95, 102, 0, 75, 95, 101, 0, 75, 95, 100, 0, 75, 95, 99, 0, 75, 95, 98, 0, 75, 95, 97, 0, 75, 95, 66, 65, 67, 75, 81, 85, 79, 84, 69, 0, 75, 95, 85, 78, 68, 69, 82, 83, 67, 79, 82, 69, 0, 75, 95, 67, 65, 82, 69, 84, 0, 75, 95, 82, 73, 71, 72, 84, 66, 82, 65, 67, 75, 69, 84, 0, 75, 95, 66, 65, 67, 75, 83, 76, 65, 83, 72, 0, 75, 95, 76, 69, 70, 84, 66, 82, 65, 67, 75, 69, 84, 0, 75, 95, 65, 84, 0, 75, 95, 81, 85, 69, 83, 84, 73, 79, 78, 0, 75, 95, 71, 82, 69, 65, 84, 69, 82, 0, 75, 95, 69, 81, 85, 65, 76, 83, 0, 75, 95, 76, 69, 83, 83, 0, 75, 95, 83, 69, 77, 73, 67, 79, 76, 79, 78, 0, 75, 95, 67, 79, 76, 79, 78, 0, 75, 95, 57, 0, 75, 95, 56, 0, 75, 95, 55, 0, 75, 95, 54, 0, 75, 95, 53, 0, 75, 95, 52, 0, 75, 95, 51, 0, 75, 95, 50, 0, 75, 95, 49, 0, 75, 95, 48, 0, 75, 95, 83, 76, 65, 83, 72, 0, 75, 95, 80, 69, 82, 73, 79, 68, 0, 75, 95, 77, 73, 78, 85, 83, 0, 75, 95, 67, 79, 77, 77, 65, 0, 75, 95, 80, 76, 85, 83, 0, 75, 95, 65, 83, 84, 69, 82, 73, 83, 75, 0, 75, 95, 82, 73, 71, 72, 84, 80, 65, 82, 69, 78, 0, 75, 95, 76, 69, 70, 84, 80, 65, 82, 69, 78, 0, 75, 95, 81, 85, 79, 84, 69, 0, 75, 95, 65, 77, 80, 69, 82, 83, 65, 78, 68, 0, 75, 95, 68, 79, 76, 76, 65, 82, 0, 75, 95, 72, 65, 83, 72, 0, 75, 95, 81, 85, 79, 84, 69, 68, 66, 76, 0, 75, 95, 69, 88, 67, 76, 65, 73, 77, 0, 75, 95, 83, 80, 65, 67, 69, 0, 75, 95, 69, 83, 67, 65, 80, 69, 0, 75, 95, 80, 65, 85, 83, 69, 0, 75, 95, 82, 69, 84, 85, 82, 78, 0, 75, 95, 67, 76, 69, 65, 82, 0, 75, 95, 84, 65, 66, 0, 75, 95, 66, 65, 67, 75, 83, 80, 65, 67, 69, 0, 75, 95, 70, 73, 82, 83, 84, 0, 75, 95, 85, 78, 75, 78, 79, 87, 78, 0, 109, 111, 100, 0, 77, 79, 68, 95, 68, 85, 77, 77, 89, 0, 77, 79, 68, 95, 83, 67, 82, 79, 76, 76, 79, 67, 75, 0, 77, 79, 68, 95, 67, 65, 80, 83, 76, 79, 67, 75, 0, 77, 79, 68, 95, 78, 85, 77, 76, 79, 67, 75, 0, 77, 79, 68, 95, 77, 69, 84, 65, 0, 77, 79, 68, 95, 65, 76, 84, 0, 77, 79, 68, 95, 67, 84, 82, 76, 0, 77, 79, 68, 95, 83, 72, 73, 70, 84, 0, 77, 79, 68, 95, 78, 79, 78, 69, 0, 108, 111, 103, 95, 108, 101, 118, 101, 108, 0, 76, 79, 71, 95, 68, 85, 77, 77, 89, 0, 76, 79, 71, 95, 69, 82, 82, 79, 82, 0, 76, 79, 71, 95, 87, 65, 82, 78, 0, 76, 79, 71, 95, 73, 78, 70, 79, 0, 76, 79, 71, 95, 68, 69, 66, 85, 71, 0, 115, 101, 110, 115, 111, 114, 95, 97, 99, 116, 105, 111, 110, 0, 83, 69, 78, 83, 79, 82, 95, 68, 85, 77, 77, 89, 0, 83, 69, 78, 83, 79, 82, 95, 65, 67, 67, 69, 76, 69, 82, 79, 77, 69, 84, 69, 82, 95, 68, 73, 83, 65, 66, 76, 69, 0, 83, 69, 78, 83, 79, 82, 95, 65, 67, 67, 69, 76, 69, 82, 79, 77, 69, 84, 69, 82, 95, 69, 78, 65, 66, 76, 69, 0, 99, 97, 109, 101, 114, 97, 95, 98, 117, 102, 102, 101, 114, 0, 67, 65, 77, 69, 82, 65, 95, 66, 85, 70, 70, 69, 82, 95, 68, 85, 77, 77, 89, 0, 67, 65, 77, 69, 82, 65, 95, 66, 85, 70, 70, 69, 82, 95, 82, 65, 87, 95, 70, 82, 65, 77, 69, 66, 85, 70, 70, 69, 82, 0, 67, 65, 77, 69, 82, 65, 95, 66, 85, 70, 70, 69, 82, 95, 79, 80, 69, 78, 71, 76, 95, 84, 69, 88, 84, 85, 82, 69, 0, 114, 117, 109, 98, 108, 101, 95, 101, 102, 102, 101, 99, 116, 0, 82, 85, 77, 66, 76, 69, 95, 68, 85, 77, 77, 89, 0, 82, 85, 77, 66, 76, 69, 95, 87, 69, 65, 75, 0, 82, 85, 77, 66, 76, 69, 95, 83, 84, 82, 79, 78, 71, 0, 104, 119, 95, 99, 111, 110, 116, 101, 120, 116, 95, 116, 121, 112, 101, 0, 72, 87, 95, 67, 79, 78, 84, 69, 88, 84, 95, 68, 85, 77, 77, 89, 0, 72, 87, 95, 67, 79, 78, 84, 69, 88, 84, 95, 79, 80, 69, 78, 71, 76, 69, 83, 95, 86, 69, 82, 83, 73, 79, 78, 0, 72, 87, 95, 67, 79, 78, 84, 69, 88, 84, 95, 79, 80, 69, 78, 71, 76, 69, 83, 51, 0, 72, 87, 95, 67, 79, 78, 84, 69, 88, 84, 95, 79, 80, 69, 78, 71, 76, 95, 67, 79, 82, 69, 0, 72, 87, 95, 67, 79, 78, 84, 69, 88, 84, 95, 79, 80, 69, 78, 71, 76, 69, 83, 50, 0, 72, 87, 95, 67, 79, 78, 84, 69, 88, 84, 95, 79, 80, 69, 78, 71, 76, 0, 72, 87, 95, 67, 79, 78, 84, 69, 88, 84, 95, 78, 79, 78, 69, 0, 112, 105, 120, 101, 108, 95, 102, 111, 114, 109, 97, 116, 0, 80, 73, 88, 69, 76, 95, 70, 79, 82, 77, 65, 84, 95, 85, 78, 75, 78, 79, 87, 78, 0, 80, 73, 88, 69, 76, 95, 70, 79, 82, 77, 65, 84, 95, 82, 71, 66, 53, 54, 53, 0, 80, 73, 88, 69, 76, 95, 70, 79, 82, 77, 65, 84, 95, 88, 82, 71, 66, 56, 56, 56, 56, 0, 80, 73, 88, 69, 76, 95, 70, 79, 82, 77, 65, 84, 95, 48, 82, 71, 66, 49, 53, 53, 53, 0, 118, 105, 0, 100, 101, 105, 110, 105, 116, 0, 97, 112, 105, 95, 118, 101, 114, 115, 105, 111, 110, 0, 105, 105, 0, 114, 101, 115, 101, 116, 0, 114, 117, 110, 0, 117, 110, 108, 111, 97, 100, 95, 103, 97, 109, 101, 0, 103, 101, 116, 95, 114, 101, 103, 105, 111, 110, 0, 99, 104, 101, 97, 116, 95, 114, 101, 115, 101, 116, 0, 103, 101, 116, 95, 109, 101, 109, 111, 114, 121, 95, 115, 105, 122, 101, 0, 105, 105, 105, 0, 115, 101, 114, 105, 97, 108, 105, 122, 101, 95, 115, 105, 122, 101, 0, 115, 101, 116, 95, 99, 111, 110, 116, 114, 111, 108, 108, 101, 114, 95, 112, 111, 114, 116, 95, 100, 101, 118, 105, 99, 101, 0, 118, 105, 105, 105, 0, 49, 56, 114, 101, 116, 114, 111, 95, 112, 105, 120, 101, 108, 95, 102, 111, 114, 109, 97, 116, 0, 50, 49, 114, 101, 116, 114, 111, 95, 104, 119, 95, 99, 111, 110, 116, 101, 120, 116, 95, 116, 121, 112, 101, 0, 49, 57, 114, 101, 116, 114, 111, 95, 114, 117, 109, 98, 108, 101, 95, 101, 102, 102, 101, 99, 116, 0, 49, 57, 114, 101, 116, 114, 111, 95, 99, 97, 109, 101, 114, 97, 95, 98, 117, 102, 102, 101, 114, 0, 49, 57, 114, 101, 116, 114, 111, 95, 115, 101, 110, 115, 111, 114, 95, 97, 99, 116, 105, 111, 110, 0, 49, 53, 114, 101, 116, 114, 111, 95, 108, 111, 103, 95, 108, 101, 118, 101, 108, 0, 57, 114, 101, 116, 114, 111, 95, 109, 111, 100, 0, 57, 114, 101, 116, 114, 111, 95, 107, 101, 121, 0, 49, 52, 114, 101, 116, 114, 111, 95, 108, 97, 110, 103, 117, 97, 103, 101, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 8, 8, 8, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 12, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 4, 4, 4, 4, 4, 4, 4, 21, 21, 21, 21, 21, 21, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 4, 4, 4, 4, 5, 4, 21, 21, 21, 21, 21, 21, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 96, 113, 65, 84, 80, 80, 92, 108, 60, 16, 60, 84, 108, 124, 124, 124, 124, 124, 124, 124, 124, 124, 124, 124, 124, 96, 96, 96, 96, 104, 34, 188, 188, 188, 132, 228, 84, 84, 16, 98, 98, 4, 98, 20, 81, 80, 23, 45, 45, 91, 91, 10, 67, 111, 112, 121, 114, 105, 103, 104, 116, 32, 40, 99, 41, 32, 50, 48, 49, 48, 226, 128, 147, 50, 48, 49, 53, 32, 65, 110, 100, 114, 195, 169, 32, 76, 101, 105, 114, 97, 100, 101, 108, 108, 97, 10, 10, 80, 101, 114, 109, 105, 115, 115, 105, 111, 110, 32, 105, 115, 32, 104, 101, 114, 101, 98, 121, 32, 103, 114, 97, 110, 116, 101, 100, 44, 32, 102, 114, 101, 101, 32, 111, 102, 32, 99, 104, 97, 114, 103, 101, 44, 32, 116, 111, 32, 97, 110, 121, 32, 112, 101, 114, 115, 111, 110, 32, 111, 98, 116, 97, 105, 110, 105, 110, 103, 32, 97, 32, 99, 111, 112, 121, 10, 111, 102, 32, 116, 104, 105, 115, 32, 115, 111, 102, 116, 119, 97, 114, 101, 32, 97, 110, 100, 32, 97, 115, 115, 111, 99, 105, 97, 116, 101, 100, 32, 100, 111, 99, 117, 109, 101, 110, 116, 97, 116, 105, 111, 110, 32, 102, 105, 108, 101, 115, 32, 40, 116, 104, 101, 32, 34, 83, 111, 102, 116, 119, 97, 114, 101, 34, 41, 44, 32, 116, 111, 32, 100, 101, 97, 108, 10, 105, 110, 32, 116, 104, 101, 32, 83, 111, 102, 116, 119, 97, 114, 101, 32, 119, 105, 116, 104, 111, 117, 116, 32, 114, 101, 115, 116, 114, 105, 99, 116, 105, 111, 110, 44, 32, 105, 110, 99, 108, 117, 100, 105, 110, 103, 32, 119, 105, 116, 104, 111, 117, 116, 32, 108, 105, 109, 105, 116, 97, 116, 105, 111, 110, 32, 116, 104, 101, 32, 114, 105, 103, 104, 116, 115, 10, 116, 111, 32, 117, 115, 101, 44, 32, 99, 111, 112, 121, 44, 32, 109, 111, 100, 105, 102, 121, 44, 32, 109, 101, 114, 103, 101, 44, 32, 112, 117, 98, 108, 105, 115, 104, 44, 32, 100, 105, 115, 116, 114, 105, 98, 117, 116, 101, 44, 32, 115, 117, 98, 108, 105, 99, 101, 110, 115, 101, 44, 32, 97, 110, 100, 47, 111, 114, 32, 115, 101, 108, 108, 10, 99, 111, 112, 105, 101, 115, 32, 111, 102, 32, 116, 104, 101, 32, 83, 111, 102, 116, 119, 97, 114, 101, 44, 32, 97, 110, 100, 32, 116, 111, 32, 112, 101, 114, 109, 105, 116, 32, 112, 101, 114, 115, 111, 110, 115, 32, 116, 111, 32, 119, 104, 111, 109, 32, 116, 104, 101, 32, 83, 111, 102, 116, 119, 97, 114, 101, 32, 105, 115, 10, 102, 117, 114, 110, 105, 115, 104, 101, 100, 32, 116, 111, 32, 100, 111, 32, 115, 111, 44, 32, 115, 117, 98, 106, 101, 99, 116, 32, 116, 111, 32, 116, 104, 101, 32, 102, 111, 108, 108, 111, 119, 105, 110, 103, 32, 99, 111, 110, 100, 105, 116, 105, 111, 110, 115, 58, 10, 10, 42, 32, 84, 104, 101, 32, 97, 98, 111, 118, 101, 32, 99, 111, 112, 121, 114, 105, 103, 104, 116, 32, 110, 111, 116, 105, 99, 101, 32, 97, 110, 100, 32, 116, 104, 105, 115, 32, 112, 101, 114, 109, 105, 115, 115, 105, 111, 110, 32, 110, 111, 116, 105, 99, 101, 32, 115, 104, 97, 108, 108, 32, 98, 101, 32, 105, 110, 99, 108, 117, 100, 101, 100, 32, 105, 110, 10, 32, 32, 97, 108, 108, 32, 99, 111, 112, 105, 101, 115, 32, 111, 114, 32, 115, 117, 98, 115, 116, 97, 110, 116, 105, 97, 108, 32, 112, 111, 114, 116, 105, 111, 110, 115, 32, 111, 102, 32, 116, 104, 101, 32, 83, 111, 102, 116, 119, 97, 114, 101, 46, 10, 10, 84, 72, 69, 32, 83, 79, 70, 84, 87, 65, 82, 69, 32, 73, 83, 32, 80, 82, 79, 86, 73, 68, 69, 68, 32, 34, 65, 83, 32, 73, 83, 34, 44, 32, 87, 73, 84, 72, 79, 85, 84, 32, 87, 65, 82, 82, 65, 78, 84, 89, 32, 79, 70, 32, 65, 78, 89, 32, 75, 73, 78, 68, 44, 32, 69, 88, 80, 82, 69, 83, 83, 32, 79, 82, 10, 73, 77, 80, 76, 73, 69, 68, 44, 32, 73, 78, 67, 76, 85, 68, 73, 78, 71, 32, 66, 85, 84, 32, 78, 79, 84, 32, 76, 73, 77, 73, 84, 69, 68, 32, 84, 79, 32, 84, 72, 69, 32, 87, 65, 82, 82, 65, 78, 84, 73, 69, 83, 32, 79, 70, 32, 77, 69, 82, 67, 72, 65, 78, 84, 65, 66, 73, 76, 73, 84, 89, 44, 10, 70, 73, 84, 78, 69, 83, 83, 32, 70, 79, 82, 32, 65, 32, 80, 65, 82, 84, 73, 67, 85, 76, 65, 82, 32, 80, 85, 82, 80, 79, 83, 69, 32, 65, 78, 68, 32, 78, 79, 78, 73, 78, 70, 82, 73, 78, 71, 69, 77, 69, 78, 84, 46, 32, 73, 78, 32, 78, 79, 32, 69, 86, 69, 78, 84, 32, 83, 72, 65, 76, 76, 32, 84, 72, 69, 10, 65, 85, 84, 72, 79, 82, 83, 32, 79, 82, 32, 67, 79, 80, 89, 82, 73, 71, 72, 84, 32, 72, 79, 76, 68, 69, 82, 83, 32, 66, 69, 32, 76, 73, 65, 66, 76, 69, 32, 70, 79, 82, 32, 65, 78, 89, 32, 67, 76, 65, 73, 77, 44, 32, 68, 65, 77, 65, 71, 69, 83, 32, 79, 82, 32, 79, 84, 72, 69, 82, 10, 76, 73, 65, 66, 73, 76, 73, 84, 89, 44, 32, 87, 72, 69, 84, 72, 69, 82, 32, 73, 78, 32, 65, 78, 32, 65, 67, 84, 73, 79, 78, 32, 79, 70, 32, 67, 79, 78, 84, 82, 65, 67, 84, 44, 32, 84, 79, 82, 84, 32, 79, 82, 32, 79, 84, 72, 69, 82, 87, 73, 83, 69, 44, 32, 65, 82, 73, 83, 73, 78, 71, 32, 70, 82, 79, 77, 44, 10, 79, 85, 84, 32, 79, 70, 32, 79, 82, 32, 73, 78, 32, 67, 79, 78, 78, 69, 67, 84, 73, 79, 78, 32, 87, 73, 84, 72, 32, 84, 72, 69, 32, 83, 79, 70, 84, 87, 65, 82, 69, 32, 79, 82, 32, 84, 72, 69, 32, 85, 83, 69, 32, 79, 82, 32, 79, 84, 72, 69, 82, 32, 68, 69, 65, 76, 73, 78, 71, 83, 32, 73, 78, 32, 84, 72, 69, 10, 83, 79, 70, 84, 87, 65, 82, 69, 46, 32, 10, 93, 93, 10, 10, 108, 111, 99, 97, 108, 32, 77, 32, 61, 32, 123, 125, 10, 10, 108, 111, 99, 97, 108, 32, 112, 97, 105, 114, 115, 32, 61, 32, 112, 97, 105, 114, 115, 10, 108, 111, 99, 97, 108, 32, 116, 121, 112, 101, 32, 61, 32, 116, 121, 112, 101, 10, 108, 111, 99, 97, 108, 32, 115, 117, 98, 32, 61, 32, 115, 116, 114, 105, 110, 103, 46, 115, 117, 98, 10, 108, 111, 99, 97, 108, 32, 117, 110, 112, 97, 99, 107, 32, 61, 32, 116, 97, 98, 108, 101, 46, 117, 110, 112, 97, 99, 107, 10, 108, 111, 99, 97, 108, 32, 115, 101, 116, 109, 101, 116, 97, 116, 97, 98, 108, 101, 32, 61, 32, 115, 101, 116, 109, 101, 116, 97, 116, 97, 98, 108, 101, 10, 108, 111, 99, 97, 108, 32, 95, 71, 32, 61, 32, 95, 71, 10, 108, 111, 99, 97, 108, 32, 109, 101, 116, 104, 111, 100, 115, 32, 61, 32, 123, 125, 10, 115, 101, 116, 109, 101, 116, 97, 116, 97, 98, 108, 101, 40, 32, 109, 101, 116, 104, 111, 100, 115, 44, 32, 123, 32, 95, 95, 109, 111, 100, 101, 32, 61, 32, 39, 107, 39, 32, 125, 32, 41, 10, 10, 102, 117, 110, 99, 116, 105, 111, 110, 32, 77, 46, 110, 101, 119, 40, 32, 46, 46, 46, 32, 41, 10, 32, 32, 108, 111, 99, 97, 108, 32, 97, 114, 103, 32, 61, 32, 123, 32, 46, 46, 46, 32, 125, 10, 32, 32, 45, 45, 32, 99, 114, 101, 97, 116, 101, 32, 97, 110, 32, 101, 109, 112, 116, 121, 32, 99, 108, 97, 115, 115, 10, 32, 32, 108, 111, 99, 97, 108, 32, 110, 101, 119, 95, 99, 108, 97, 115, 115, 32, 61, 32, 123, 125, 10, 32, 32, 10, 32, 32, 45, 45, 32, 99, 111, 112, 121, 32, 97, 108, 108, 32, 109, 101, 116, 104, 111, 100, 115, 32, 102, 114, 111, 109, 32, 116, 104, 101, 32, 115, 117, 112, 101, 114, 32, 99, 108, 97, 115, 115, 101, 115, 10, 32, 32, 102, 111, 114, 32, 105, 110, 100, 101, 120, 32, 61, 32, 49, 44, 32, 35, 97, 114, 103, 32, 100, 111, 10, 32, 32, 32, 32, 102, 111, 114, 32, 110, 97, 109, 101, 44, 32, 109, 101, 116, 104, 111, 100, 32, 105, 110, 32, 112, 97, 105, 114, 115, 40, 32, 97, 114, 103, 91, 32, 105, 110, 100, 101, 120, 32, 93, 32, 41, 32, 100, 111, 10, 32, 32, 32, 32, 32, 32, 105, 102, 32, 110, 111, 116, 32, 110, 101, 119, 95, 99, 108, 97, 115, 115, 91, 32, 110, 97, 109, 101, 32, 93, 32, 116, 104, 101, 110, 10, 32, 32, 32, 32, 32, 32, 32, 32, 110, 101, 119, 95, 99, 108, 97, 115, 115, 91, 32, 110, 97, 109, 101, 32, 93, 32, 61, 32, 109, 101, 116, 104, 111, 100, 10, 32, 32, 32, 32, 32, 32, 101, 110, 100, 10, 32, 32, 32, 32, 101, 110, 100, 10, 32, 32, 101, 110, 100, 10, 32, 32, 10, 32, 32, 45, 45, 32, 105, 110, 115, 101, 114, 116, 32, 97, 110, 32, 97, 100, 100, 105, 116, 105, 111, 110, 97, 108, 32, 109, 101, 116, 104, 111, 100, 32, 116, 111, 32, 99, 104, 101, 99, 107, 32, 116, 104, 101, 32, 99, 108, 97, 115, 115, 32, 111, 102, 32, 116, 104, 101, 32, 105, 110, 115, 116, 97, 110, 99, 101, 10, 32, 32, 110, 101, 119, 95, 99, 108, 97, 115, 115, 46, 105, 110, 115, 116, 97, 110, 99, 101, 79, 102, 32, 61, 32, 102, 117, 110, 99, 116, 105, 111, 110, 40, 32, 115, 101, 108, 102, 44, 32, 107, 108, 97, 115, 115, 32, 41, 10, 32, 32, 32, 32, 105, 102, 32, 107, 108, 97, 115, 115, 32, 61, 61, 32, 110, 101, 119, 95, 99, 108, 97, 115, 115, 32, 116, 104, 101, 110, 10, 32, 32, 32, 32, 32, 32, 114, 101, 116, 117, 114, 110, 32, 116, 114, 117, 101, 10, 32, 32, 32, 32, 101, 110, 100, 10, 32, 32, 32, 32, 10, 32, 32, 32, 32, 102, 111, 114, 32, 105, 110, 100, 101, 120, 32, 61, 32, 49, 44, 32, 35, 97, 114, 103, 32, 100, 111, 10, 32, 32, 32, 32, 32, 32, 105, 102, 32, 97, 114, 103, 91, 32, 105, 110, 100, 101, 120, 32, 93, 46, 105, 110, 115, 116, 97, 110, 99, 101, 79, 102, 40, 32, 115, 101, 108, 102, 44, 32, 107, 108, 97, 115, 115, 32, 41, 32, 116, 104, 101, 110, 10, 32, 32, 32, 32, 32, 32, 32, 32, 114, 101, 116, 117, 114, 110, 32, 116, 114, 117, 101, 10, 32, 32, 32, 32, 32, 32, 101, 110, 100, 10, 32, 32, 32, 32, 101, 110, 100, 10, 32, 32, 32, 32, 10, 32, 32, 32, 32, 114, 101, 116, 117, 114, 110, 32, 102, 97, 108, 115, 101, 10, 32, 32, 101, 110, 100, 10, 32, 32, 10, 32, 32, 45, 45, 32, 105, 110, 115, 101, 114, 116, 32, 97, 110, 32, 97, 100, 100, 105, 116, 105, 111, 110, 97, 108, 32, 109, 101, 116, 104, 111, 100, 32, 116, 111, 32, 114, 101, 116, 117, 114, 110, 32, 116, 104, 101, 32, 99, 108, 97, 115, 115, 32, 111, 102, 32, 97, 110, 32, 105, 110, 115, 116, 97, 110, 99, 101, 10, 32, 32, 110, 101, 119, 95, 99, 108, 97, 115, 115, 46, 103, 101, 116, 67, 108, 97, 115, 115, 32, 61, 32, 102, 117, 110, 99, 116, 105, 111, 110, 40, 41, 10, 32, 32, 32, 32, 114, 101, 116, 117, 114, 110, 32, 110, 101, 119, 95, 99, 108, 97, 115, 115, 10, 32, 32, 101, 110, 100, 10, 32, 32, 10, 32, 32, 45, 45, 32, 105, 110, 115, 101, 114, 116, 32, 97, 110, 32, 97, 100, 100, 105, 116, 105, 111, 110, 97, 108, 32, 109, 101, 116, 104, 111, 100, 32, 116, 111, 32, 114, 101, 116, 117, 114, 110, 32, 116, 104, 101, 32, 99, 108, 97, 115, 115, 32, 110, 97, 109, 101, 32, 111, 102, 32, 97, 110, 32, 105, 110, 115, 116, 97, 110, 99, 101, 32, 40, 111, 110, 108, 121, 32, 119, 111, 114, 107, 115, 32, 105, 102, 32, 116, 104, 101, 32, 99, 108, 97, 115, 115, 32, 105, 115, 32, 97, 99, 99, 101, 115, 115, 105, 98, 108, 101, 32, 102, 114, 111, 109, 32, 116, 104, 101, 32, 103, 108, 111, 98, 97, 108, 32, 115, 112, 97, 99, 101, 41, 10, 32, 32, 110, 101, 119, 95, 99, 108, 97, 115, 115, 46, 103, 101, 116, 67, 108, 97, 115, 115, 78, 97, 109, 101, 32, 61, 32, 102, 117, 110, 99, 116, 105, 111, 110, 40, 41, 10, 32, 32, 32, 32, 108, 111, 99, 97, 108, 32, 102, 117, 110, 99, 116, 105, 111, 110, 32, 102, 105, 110, 100, 40, 32, 115, 112, 97, 99, 101, 44, 32, 110, 97, 109, 101, 44, 32, 118, 105, 115, 105, 116, 101, 100, 32, 41, 10, 32, 32, 32, 32, 32, 32, 105, 102, 32, 118, 105, 115, 105, 116, 101, 100, 91, 32, 115, 112, 97, 99, 101, 32, 93, 32, 116, 104, 101, 110, 10, 32, 32, 32, 32, 32, 32, 32, 32, 114, 101, 116, 117, 114, 110, 32, 110, 105, 108, 10, 32, 32, 32, 32, 32, 32, 101, 110, 100, 10, 32, 32, 32, 32, 32, 32, 10, 32, 32, 32, 32, 32, 32, 118, 105, 115, 105, 116, 101, 100, 91, 32, 115, 112, 97, 99, 101, 32, 93, 32, 61, 32, 116, 114, 117, 101, 10, 32, 32, 32, 32, 32, 32, 10, 32, 32, 32, 32, 32, 32, 102, 111, 114, 32, 107, 101, 121, 44, 32, 118, 97, 108, 117, 101, 32, 105, 110, 32, 112, 97, 105, 114, 115, 40, 32, 115, 112, 97, 99, 101, 32, 41, 32, 100, 111, 10, 32, 32, 32, 32, 32, 32, 32, 32, 105, 102, 32, 118, 97, 108, 117, 101, 32, 61, 61, 32, 110, 101, 119, 95, 99, 108, 97, 115, 115, 32, 116, 104, 101, 110, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 114, 101, 116, 117, 114, 110, 32, 110, 97, 109, 101, 32, 46, 46, 32, 39, 46, 39, 32, 46, 46, 32, 107, 101, 121, 10, 32, 32, 32, 32, 32, 32, 32, 32, 101, 110, 100, 10, 32, 32, 32, 32, 32, 32, 32, 32, 10, 32, 32, 32, 32, 32, 32, 32, 32, 105, 102, 32, 116, 121, 112, 101, 40, 32, 118, 97, 108, 117, 101, 32, 41, 32, 61, 61, 32, 39, 116, 97, 98, 108, 101, 39, 32, 116, 104, 101, 110, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 108, 111, 99, 97, 108, 32, 102, 111, 117, 110, 100, 32, 61, 32, 102, 105, 110, 100, 40, 32, 118, 97, 108, 117, 101, 44, 32, 110, 97, 109, 101, 32, 46, 46, 32, 39, 46, 39, 32, 46, 46, 32, 107, 101, 121, 44, 32, 118, 105, 115, 105, 116, 101, 100, 32, 41, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 105, 102, 32, 102, 111, 117, 110, 100, 32, 126, 61, 32, 110, 105, 108, 32, 116, 104, 101, 110, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 114, 101, 116, 117, 114, 110, 32, 102, 111, 117, 110, 100, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 101, 110, 100, 10, 32, 32, 32, 32, 32, 32, 32, 32, 101, 110, 100, 10, 32, 32, 32, 32, 32, 32, 101, 110, 100, 10, 32, 32, 32, 32, 32, 32, 10, 32, 32, 32, 32, 32, 32, 114, 101, 116, 117, 114, 110, 32, 110, 105, 108, 10, 32, 32, 32, 32, 101, 110, 100, 10, 32, 32, 32, 32, 10, 32, 32, 32, 32, 108, 111, 99, 97, 108, 32, 102, 111, 117, 110, 100, 32, 61, 32, 102, 105, 110, 100, 40, 32, 95, 71, 44, 32, 39, 95, 71, 39, 44, 32, 123, 125, 32, 41, 10, 32, 32, 32, 32, 10, 32, 32, 32, 32, 105, 102, 32, 102, 111, 117, 110, 100, 32, 116, 104, 101, 110, 10, 32, 32, 32, 32, 32, 32, 114, 101, 116, 117, 114, 110, 32, 115, 117, 98, 40, 32, 102, 111, 117, 110, 100, 44, 32, 52, 44, 32, 45, 49, 32, 41, 10, 32, 32, 32, 32, 101, 110, 100, 10, 32, 32, 32, 32, 10, 32, 32, 32, 32, 114, 101, 116, 117, 114, 110, 32, 110, 105, 108, 10, 32, 32, 101, 110, 100, 10, 32, 32, 10, 32, 32, 45, 45, 32, 116, 104, 101, 32, 102, 117, 110, 99, 116, 105, 111, 110, 32, 116, 111, 32, 105, 110, 100, 101, 120, 32, 109, 97, 116, 104, 111, 100, 115, 32, 111, 102, 32, 116, 104, 101, 32, 99, 108, 97, 115, 115, 10, 32, 32, 108, 111, 99, 97, 108, 32, 105, 110, 100, 101, 120, 32, 61, 32, 102, 117, 110, 99, 116, 105, 111, 110, 40, 32, 105, 110, 115, 116, 97, 110, 99, 101, 44, 32, 107, 101, 121, 32, 41, 10, 32, 32, 32, 32, 45, 45, 32, 99, 104, 101, 99, 107, 32, 116, 104, 101, 32, 109, 101, 116, 104, 111, 100, 115, 32, 99, 97, 99, 104, 101, 10, 32, 32, 32, 32, 108, 111, 99, 97, 108, 32, 109, 101, 116, 104, 111, 100, 32, 61, 32, 109, 101, 116, 104, 111, 100, 115, 91, 32, 105, 110, 115, 116, 97, 110, 99, 101, 32, 93, 91, 32, 107, 101, 121, 32, 93, 10, 32, 32, 32, 32, 10, 32, 32, 32, 32, 105, 102, 32, 110, 111, 116, 32, 109, 101, 116, 104, 111, 100, 32, 116, 104, 101, 110, 10, 32, 32, 32, 32, 32, 32, 45, 45, 32, 110, 111, 116, 32, 102, 111, 117, 110, 100, 44, 32, 99, 114, 101, 97, 116, 101, 32, 116, 104, 101, 32, 109, 101, 116, 104, 111, 100, 32, 97, 110, 100, 32, 112, 117, 116, 32, 105, 116, 32, 105, 110, 116, 111, 32, 116, 104, 101, 32, 99, 97, 99, 104, 101, 10, 32, 32, 32, 32, 32, 32, 109, 101, 116, 104, 111, 100, 32, 61, 32, 102, 117, 110, 99, 116, 105, 111, 110, 40, 32, 46, 46, 46, 32, 41, 10, 32, 32, 32, 32, 32, 32, 32, 32, 114, 101, 116, 117, 114, 110, 32, 110, 101, 119, 95, 99, 108, 97, 115, 115, 91, 32, 107, 101, 121, 32, 93, 40, 32, 105, 110, 115, 116, 97, 110, 99, 101, 44, 32, 46, 46, 46, 32, 41, 10, 32, 32, 32, 32, 32, 32, 101, 110, 100, 10, 32, 32, 32, 32, 32, 32, 10, 32, 32, 32, 32, 32, 32, 109, 101, 116, 104, 111, 100, 115, 91, 32, 105, 110, 115, 116, 97, 110, 99, 101, 32, 93, 91, 32, 107, 101, 121, 32, 93, 32, 61, 32, 109, 101, 116, 104, 111, 100, 10, 32, 32, 32, 32, 101, 110, 100, 10, 32, 32, 32, 32, 10, 32, 32, 32, 32, 114, 101, 116, 117, 114, 110, 32, 109, 101, 116, 104, 111, 100, 10, 32, 32, 101, 110, 100, 10, 32, 32, 10, 32, 32, 45, 45, 32, 116, 104, 101, 32, 109, 101, 116, 97, 116, 97, 98, 108, 101, 32, 111, 102, 32, 116, 104, 101, 32, 105, 110, 115, 116, 97, 110, 99, 101, 115, 10, 32, 32, 108, 111, 99, 97, 108, 32, 115, 101, 108, 102, 95, 109, 101, 116, 97, 32, 61, 32, 123, 32, 95, 95, 105, 110, 100, 101, 120, 32, 61, 32, 105, 110, 100, 101, 120, 32, 125, 10, 32, 32, 10, 32, 32, 45, 45, 32, 116, 117, 114, 110, 32, 116, 104, 101, 32, 115, 101, 108, 102, 32, 116, 97, 98, 108, 101, 32, 105, 110, 116, 111, 32, 97, 110, 32, 105, 110, 115, 116, 97, 110, 99, 101, 32, 111, 102, 32, 116, 104, 101, 32, 99, 108, 97, 115, 115, 10, 32, 32, 110, 101, 119, 95, 99, 108, 97, 115, 115, 46, 109, 97, 107, 101, 73, 110, 115, 116, 97, 110, 99, 101, 32, 61, 32, 102, 117, 110, 99, 116, 105, 111, 110, 40, 32, 115, 101, 108, 102, 32, 41, 10, 32, 32, 32, 32, 45, 45, 32, 99, 114, 101, 97, 116, 101, 32, 116, 104, 101, 32, 109, 101, 116, 104, 111, 100, 115, 32, 99, 97, 99, 104, 101, 10, 32, 32, 32, 32, 109, 101, 116, 104, 111, 100, 115, 91, 32, 115, 101, 108, 102, 32, 93, 32, 61, 32, 123, 125, 10, 32, 32, 32, 32, 45, 45, 32, 115, 101, 116, 32, 116, 104, 101, 32, 109, 101, 116, 97, 116, 97, 98, 108, 101, 32, 97, 110, 100, 32, 114, 101, 116, 117, 114, 110, 32, 116, 104, 101, 32, 105, 110, 115, 116, 97, 110, 99, 101, 10, 32, 32, 32, 32, 114, 101, 116, 117, 114, 110, 32, 115, 101, 116, 109, 101, 116, 97, 116, 97, 98, 108, 101, 40, 32, 115, 101, 108, 102, 44, 32, 115, 101, 108, 102, 95, 109, 101, 116, 97, 32, 41, 10, 32, 32, 101, 110, 100, 10, 10, 32, 32, 45, 45, 32, 99, 114, 101, 97, 116, 101, 32, 97, 32, 95, 95, 99, 97, 108, 108, 32, 109, 101, 116, 97, 109, 101, 116, 104, 111, 100, 32, 116, 104, 97, 116, 32, 99, 114, 101, 97, 116, 101, 115, 32, 97, 32, 110, 101, 119, 32, 105, 110, 115, 116, 97, 110, 99, 101, 32, 111, 102, 32, 116, 104, 101, 32, 99, 108, 97, 115, 115, 10, 32, 32, 108, 111, 99, 97, 108, 32, 99, 108, 97, 115, 115, 95, 109, 101, 116, 97, 32, 61, 32, 123, 125, 10, 32, 32, 10, 32, 32, 99, 108, 97, 115, 115, 95, 109, 101, 116, 97, 46, 95, 95, 99, 97, 108, 108, 32, 61, 32, 102, 117, 110, 99, 116, 105, 111, 110, 40, 32, 46, 46, 46, 32, 41, 10, 32, 32, 32, 32, 108, 111, 99, 97, 108, 32, 97, 114, 103, 32, 61, 32, 123, 32, 46, 46, 46, 32, 125, 10, 32, 32, 32, 32, 10, 32, 32, 32, 32, 45, 45, 32, 99, 114, 101, 97, 116, 101, 32, 97, 110, 32, 101, 109, 112, 116, 121, 32, 105, 110, 115, 116, 97, 110, 99, 101, 10, 32, 32, 32, 32, 108, 111, 99, 97, 108, 32, 115, 101, 108, 102, 32, 61, 32, 123, 125, 10, 32, 32, 32, 32, 110, 101, 119, 95, 99, 108, 97, 115, 115, 46, 109, 97, 107, 101, 73, 110, 115, 116, 97, 110, 99, 101, 40, 32, 115, 101, 108, 102, 32, 41, 10, 32, 32, 32, 32, 10, 32, 32, 32, 32, 45, 45, 32, 116, 104, 101, 32, 102, 105, 114, 115, 116, 32, 97, 114, 103, 117, 109, 101, 110, 116, 32, 105, 115, 32, 116, 104, 101, 32, 99, 108, 97, 115, 115, 44, 32, 115, 104, 105, 102, 116, 32, 108, 101, 102, 116, 32, 97, 108, 108, 32, 111, 116, 104, 101, 114, 32, 97, 114, 103, 117, 109, 101, 110, 116, 115, 10, 32, 32, 32, 32, 102, 111, 114, 32, 105, 32, 61, 32, 50, 44, 32, 35, 97, 114, 103, 32, 100, 111, 10, 32, 32, 32, 32, 32, 32, 97, 114, 103, 91, 32, 105, 32, 45, 32, 49, 32, 93, 32, 61, 32, 97, 114, 103, 91, 32, 105, 32, 93, 10, 32, 32, 32, 32, 101, 110, 100, 10, 32, 32, 32, 32, 10, 32, 32, 32, 32, 97, 114, 103, 91, 32, 35, 97, 114, 103, 32, 93, 32, 61, 32, 110, 105, 108, 10, 32, 32, 32, 32, 10, 32, 32, 32, 32, 45, 45, 32, 99, 97, 108, 108, 32, 116, 104, 101, 32, 110, 101, 119, 32, 109, 101, 116, 104, 111, 100, 32, 116, 111, 32, 105, 110, 105, 116, 105, 97, 108, 105, 122, 101, 32, 116, 104, 101, 32, 105, 110, 115, 116, 97, 110, 99, 101, 10, 32, 32, 32, 32, 105, 102, 32, 110, 101, 119, 95, 99, 108, 97, 115, 115, 46, 110, 101, 119, 32, 116, 104, 101, 110, 10, 32, 32, 32, 32, 32, 32, 110, 101, 119, 95, 99, 108, 97, 115, 115, 46, 110, 101, 119, 40, 32, 115, 101, 108, 102, 44, 32, 117, 110, 112, 97, 99, 107, 40, 32, 97, 114, 103, 32, 41, 32, 41, 10, 32, 32, 32, 32, 101, 110, 100, 10, 32, 32, 32, 32, 10, 32, 32, 32, 32, 45, 45, 32, 114, 101, 116, 117, 114, 110, 32, 116, 104, 101, 32, 110, 101, 119, 108, 121, 32, 99, 114, 101, 97, 116, 101, 100, 32, 105, 110, 115, 116, 97, 110, 99, 101, 10, 32, 32, 32, 32, 114, 101, 116, 117, 114, 110, 32, 115, 101, 108, 102, 10, 32, 32, 101, 110, 100, 10, 10, 32, 32, 45, 45, 32, 115, 101, 116, 32, 116, 104, 101, 32, 109, 101, 116, 97, 116, 97, 98, 108, 101, 32, 111, 102, 32, 116, 104, 101, 32, 99, 108, 97, 115, 115, 32, 97, 110, 100, 32, 114, 101, 116, 117, 114, 110, 32, 105, 116, 10, 32, 32, 114, 101, 116, 117, 114, 110, 32, 115, 101, 116, 109, 101, 116, 97, 116, 97, 98, 108, 101, 40, 32, 110, 101, 119, 95, 99, 108, 97, 115, 115, 44, 32, 99, 108, 97, 115, 115, 95, 109, 101, 116, 97, 32, 41, 10, 101, 110, 100, 10, 10, 102, 117, 110, 99, 116, 105, 111, 110, 32, 77, 46, 105, 110, 115, 116, 97, 110, 99, 101, 79, 102, 40, 32, 105, 110, 115, 116, 97, 110, 99, 101, 44, 32, 99, 108, 97, 115, 115, 32, 41, 10, 32, 32, 114, 101, 116, 117, 114, 110, 32, 116, 121, 112, 101, 40, 32, 105, 110, 115, 116, 97, 110, 99, 101, 32, 41, 32, 61, 61, 32, 39, 116, 97, 98, 108, 101, 39, 32, 97, 110, 100, 32, 105, 110, 115, 116, 97, 110, 99, 101, 46, 105, 110, 115, 116, 97, 110, 99, 101, 79, 102, 32, 97, 110, 100, 32, 105, 110, 115, 116, 97, 110, 99, 101, 46, 105, 110, 115, 116, 97, 110, 99, 101, 79, 102, 40, 32, 99, 108, 97, 115, 115, 32, 41, 10, 101, 110, 100, 10, 10, 102, 117, 110, 99, 116, 105, 111, 110, 32, 77, 46, 97, 98, 115, 116, 114, 97, 99, 116, 40, 41, 10, 32, 32, 108, 111, 99, 97, 108, 32, 112, 114, 111, 120, 121, 32, 61, 32, 123, 125, 10, 32, 32, 10, 32, 32, 112, 114, 111, 120, 121, 46, 95, 95, 99, 97, 108, 108, 32, 61, 32, 32, 102, 117, 110, 99, 116, 105, 111, 110, 40, 32, 112, 114, 111, 120, 121, 44, 32, 115, 101, 108, 102, 32, 41, 10, 32, 32, 32, 32, 108, 111, 99, 97, 108, 32, 107, 108, 97, 115, 115, 32, 61, 32, 115, 101, 108, 102, 58, 103, 101, 116, 67, 108, 97, 115, 115, 40, 41, 10, 32, 32, 32, 32, 108, 111, 99, 97, 108, 32, 109, 101, 116, 104, 111, 100, 78, 97, 109, 101, 32, 61, 32, 39, 63, 39, 10, 32, 32, 32, 32, 10, 32, 32, 32, 32, 102, 111, 114, 32, 110, 97, 109, 101, 44, 32, 109, 101, 116, 104, 111, 100, 32, 105, 110, 32, 112, 97, 105, 114, 115, 40, 32, 107, 108, 97, 115, 115, 32, 41, 32, 100, 111, 10, 32, 32, 32, 32, 32, 32, 105, 102, 32, 109, 101, 116, 104, 111, 100, 32, 61, 61, 32, 112, 114, 111, 120, 121, 32, 116, 104, 101, 110, 10, 32, 32, 32, 32, 32, 32, 32, 32, 109, 101, 116, 104, 111, 100, 78, 97, 109, 101, 32, 61, 32, 110, 97, 109, 101, 10, 32, 32, 32, 32, 32, 32, 32, 32, 98, 114, 101, 97, 107, 10, 32, 32, 32, 32, 32, 32, 101, 110, 100, 10, 32, 32, 32, 32, 101, 110, 100, 10, 32, 32, 32, 32, 10, 32, 32, 32, 32, 101, 114, 114, 111, 114, 40, 32, 39, 84, 104, 101, 32, 109, 101, 116, 104, 111, 100, 32, 39, 32, 46, 46, 32, 40, 32, 115, 101, 108, 102, 58, 103, 101, 116, 67, 108, 97, 115, 115, 78, 97, 109, 101, 40, 41, 32, 111, 114, 32, 39, 63, 39, 32, 41, 32, 46, 46, 32, 39, 46, 39, 32, 46, 46, 32, 109, 101, 116, 104, 111, 100, 78, 97, 109, 101, 32, 46, 46, 32, 39, 32, 105, 115, 32, 97, 98, 115, 116, 114, 97, 99, 116, 44, 32, 112, 108, 101, 97, 115, 101, 32, 105, 109, 112, 108, 101, 109, 101, 110, 116, 32, 105, 116, 46, 39, 32, 41, 10, 32, 32, 101, 110, 100, 10, 32, 32, 10, 32, 32, 115, 101, 116, 109, 101, 116, 97, 116, 97, 98, 108, 101, 40, 32, 112, 114, 111, 120, 121, 44, 32, 112, 114, 111, 120, 121, 32, 41, 10, 32, 32, 114, 101, 116, 117, 114, 110, 32, 112, 114, 111, 120, 121, 10, 101, 110, 100, 10, 10, 114, 101, 116, 117, 114, 110, 32, 77, 10, 108, 111, 99, 97, 108, 32, 77, 32, 61, 32, 123, 125, 10, 10, 77, 46, 116, 115, 104, 105, 102, 116, 115, 116, 97, 116, 101, 32, 61, 32, 48, 10, 77, 46, 115, 115, 108, 101, 102, 116, 32, 61, 32, 48, 10, 77, 46, 116, 97, 99, 101, 110, 116, 101, 114, 32, 61, 32, 48], "i8", ALLOC_NONE, Runtime.GLOBAL_BASE + 808500);
  allocate([10, 10, 114, 101, 116, 117, 114, 110, 32, 77, 10, 108, 111, 99, 97, 108, 32, 77, 32, 61, 32, 123, 125, 10, 10, 77, 46, 116, 109, 111, 117, 115, 101, 98, 117, 116, 116, 111, 110, 32, 61, 32, 48, 10, 77, 46, 109, 98, 108, 101, 102, 116, 32, 61, 32, 48, 10, 77, 46, 99, 114, 104, 101, 108, 112, 32, 61, 32, 48, 10, 77, 46, 99, 114, 104, 97, 110, 100, 112, 111, 105, 110, 116, 32, 61, 32, 48, 10, 77, 46, 99, 114, 100, 101, 102, 97, 117, 108, 116, 32, 61, 32, 48, 10, 10, 114, 101, 116, 117, 114, 110, 32, 77, 10, 108, 111, 99, 97, 108, 32, 77, 32, 61, 32, 123, 125, 10, 114, 101, 116, 117, 114, 110, 32, 77, 10, 108, 111, 99, 97, 108, 32, 77, 32, 61, 32, 123, 125, 10, 10, 77, 46, 116, 105, 109, 97, 103, 101, 32, 61, 32, 115, 121, 115, 116, 101, 109, 46, 110, 101, 119, 105, 109, 97, 103, 101, 10, 77, 46, 116, 116, 105, 109, 101, 114, 32, 61, 32, 115, 121, 115, 116, 101, 109, 46, 110, 101, 119, 116, 105, 109, 101, 114, 10, 10, 114, 101, 116, 117, 114, 110, 32, 77, 10, 108, 111, 99, 97, 108, 32, 102, 109, 111, 100, 116, 121, 112, 101, 115, 32, 61, 32, 115, 121, 115, 116, 101, 109, 46, 108, 111, 97, 100, 117, 110, 105, 116, 32, 39, 102, 109, 111, 100, 116, 121, 112, 101, 115, 39, 10, 10, 108, 111, 99, 97, 108, 32, 77, 32, 61, 32, 123, 125, 10, 10, 77, 46, 102, 115, 111, 117, 110, 100, 95, 115, 97, 109, 112, 108, 101, 95, 102, 114, 101, 101, 32, 61, 32, 102, 117, 110, 99, 116, 105, 111, 110, 40, 41, 10, 101, 110, 100, 10, 10, 77, 46, 102, 115, 111, 117, 110, 100, 95, 99, 108, 111, 115, 101, 32, 61, 32, 102, 117, 110, 99, 116, 105, 111, 110, 40, 41, 10, 101, 110, 100, 10, 10, 77, 46, 102, 115, 111, 117, 110, 100, 95, 112, 108, 97, 121, 115, 111, 117, 110, 100, 32, 61, 32, 102, 117, 110, 99, 116, 105, 111, 110, 40, 32, 119, 104, 97, 116, 44, 32, 112, 102, 115, 32, 41, 10, 32, 32, 105, 102, 32, 119, 104, 97, 116, 32, 61, 61, 32, 102, 109, 111, 100, 116, 121, 112, 101, 115, 46, 102, 115, 111, 117, 110, 100, 95, 102, 114, 101, 101, 32, 111, 114, 32, 119, 104, 97, 116, 32, 61, 61, 32, 102, 109, 111, 100, 116, 121, 112, 101, 115, 46, 102, 115, 111, 117, 110, 100, 95, 114, 101, 112, 101, 97, 116, 32, 116, 104, 101, 110, 10, 32, 32, 32, 32, 115, 121, 115, 116, 101, 109, 46, 112, 108, 97, 121, 115, 111, 117, 110, 100, 40, 32, 112, 102, 115, 44, 32, 119, 104, 97, 116, 32, 61, 61, 32, 102, 109, 111, 100, 116, 121, 112, 101, 115, 46, 102, 115, 111, 117, 110, 100, 95, 114, 101, 112, 101, 97, 116, 32, 41, 10, 32, 32, 101, 108, 115, 101, 10, 32, 32, 32, 32, 101, 114, 114, 111, 114, 40, 32, 39, 102, 115, 111, 117, 110, 100, 95, 112, 108, 97, 121, 115, 111, 117, 110, 100, 32, 99, 97, 110, 32, 111, 110, 108, 121, 32, 98, 101, 32, 99, 97, 108, 108, 101, 100, 32, 119, 105, 116, 104, 32, 102, 115, 111, 117, 110, 100, 95, 102, 114, 101, 101, 32, 111, 114, 32, 102, 115, 111, 117, 110, 100, 95, 114, 101, 112, 101, 97, 116, 39, 32, 41, 10, 32, 32, 101, 110, 100, 10, 101, 110, 100, 10, 10, 77, 46, 102, 115, 111, 117, 110, 100, 95, 115, 116, 111, 112, 115, 111, 117, 110, 100, 32, 61, 32, 102, 117, 110, 99, 116, 105, 111, 110, 40, 32, 119, 104, 97, 116, 32, 41, 10, 32, 32, 105, 102, 32, 119, 104, 97, 116, 32, 61, 61, 32, 102, 109, 111, 100, 116, 121, 112, 101, 115, 46, 102, 115, 111, 117, 110, 100, 95, 97, 108, 108, 32, 116, 104, 101, 110, 10, 32, 32, 32, 32, 115, 121, 115, 116, 101, 109, 46, 115, 116, 111, 112, 115, 111, 117, 110, 100, 115, 40, 41, 10, 32, 32, 101, 108, 115, 101, 10, 32, 32, 32, 32, 101, 114, 114, 111, 114, 40, 32, 39, 102, 115, 111, 117, 110, 100, 95, 115, 116, 111, 112, 115, 111, 117, 110, 100, 32, 99, 97, 110, 32, 111, 110, 108, 121, 32, 98, 101, 32, 99, 97, 108, 108, 101, 100, 32, 119, 105, 116, 104, 32, 102, 115, 111, 117, 110, 100, 95, 97, 108, 108, 39, 32, 41, 10, 32, 32, 101, 110, 100, 10, 101, 110, 100, 10, 10, 77, 46, 102, 115, 111, 117, 110, 100, 95, 115, 101, 116, 115, 102, 120, 109, 97, 115, 116, 101, 114, 118, 111, 108, 117, 109, 101, 32, 61, 32, 102, 117, 110, 99, 116, 105, 111, 110, 40, 32, 118, 111, 108, 32, 41, 10, 101, 110, 100, 10, 10, 114, 101, 116, 117, 114, 110, 32, 77, 10, 108, 111, 99, 97, 108, 32, 77, 32, 61, 32, 123, 125, 10, 10, 77, 46, 112, 102, 115, 111, 117, 110, 100, 115, 97, 109, 112, 108, 101, 32, 61, 32, 115, 121, 115, 116, 101, 109, 46, 110, 101, 119, 115, 111, 117, 110, 100, 10, 77, 46, 102, 115, 111, 117, 110, 100, 95, 102, 114, 101, 101, 32, 61, 32, 48, 10, 77, 46, 102, 115, 111, 117, 110, 100, 95, 114, 101, 112, 101, 97, 116, 32, 61, 32, 49, 32, 45, 45, 32, 102, 115, 111, 117, 110, 100, 95, 114, 101, 112, 101, 97, 116, 32, 105, 115, 32, 97, 32, 103, 117, 101, 115, 115, 10, 77, 46, 102, 115, 111, 117, 110, 100, 95, 97, 108, 108, 32, 61, 32, 123, 125, 10, 10, 114, 101, 116, 117, 114, 110, 32, 77, 10, 108, 111, 99, 97, 108, 32, 99, 108, 97, 115, 115, 32, 61, 32, 115, 121, 115, 116, 101, 109, 46, 108, 111, 97, 100, 117, 110, 105, 116, 32, 39, 99, 108, 97, 115, 115, 39, 10, 108, 111, 99, 97, 108, 32, 103, 114, 97, 112, 104, 105, 99, 115, 32, 61, 32, 115, 121, 115, 116, 101, 109, 46, 108, 111, 97, 100, 117, 110, 105, 116, 32, 39, 103, 114, 97, 112, 104, 105, 99, 115, 39, 10, 108, 111, 99, 97, 108, 32, 115, 116, 100, 99, 116, 114, 108, 115, 32, 61, 32, 115, 121, 115, 116, 101, 109, 46, 108, 111, 97, 100, 117, 110, 105, 116, 32, 39, 115, 116, 100, 99, 116, 114, 108, 115, 39, 10, 10, 108, 111, 99, 97, 108, 32, 77, 32, 61, 32, 123, 125, 10, 10, 77, 46, 116, 102, 111, 114, 109, 32, 61, 32, 99, 108, 97, 115, 115, 46, 110, 101, 119, 40, 41, 10, 10, 102, 117, 110, 99, 116, 105, 111, 110, 32, 77, 46, 116, 102, 111, 114, 109, 58, 110, 101, 119, 40, 41, 10, 32, 32, 45, 45, 115, 101, 108, 102, 46, 112, 111, 112, 117, 112, 109, 101, 110, 117, 32, 61, 32, 77, 46, 116, 102, 111, 114, 109, 40, 41, 10, 32, 32, 115, 101, 108, 102, 46, 102, 111, 110, 116, 32, 61, 32, 103, 114, 97, 112, 104, 105, 99, 115, 46, 116, 102, 111, 110, 116, 40, 41, 10, 32, 32, 115, 101, 108, 102, 46, 104, 111, 114, 122, 115, 99, 114, 111, 108, 108, 98, 97, 114, 32, 61, 32, 115, 116, 100, 99, 116, 114, 108, 115, 46, 116, 115, 99, 114, 111, 108, 108, 98, 97, 114, 40, 41, 10, 32, 32, 115, 101, 108, 102, 46, 118, 101, 114, 116, 115, 99, 114, 111, 108, 108, 98, 97, 114, 32, 61, 32, 115, 116, 100, 99, 116, 114, 108, 115, 46, 116, 115, 99, 114, 111, 108, 108, 98, 97, 114, 40, 41, 10, 101, 110, 100, 10, 10, 102, 117, 110, 99, 116, 105, 111, 110, 32, 77, 46, 116, 102, 111, 114, 109, 58, 115, 104, 111, 119, 40, 41, 10, 101, 110, 100, 10, 10, 102, 117, 110, 99, 116, 105, 111, 110, 32, 77, 46, 116, 102, 111, 114, 109, 58, 111, 110, 97, 99, 116, 105, 118, 97, 116, 101, 40, 41, 10, 101, 110, 100, 10, 10, 102, 117, 110, 99, 116, 105, 111, 110, 32, 77, 46, 116, 102, 111, 114, 109, 58, 111, 110, 99, 108, 111, 115, 101, 40, 41, 10, 101, 110, 100, 10, 10, 102, 117, 110, 99, 116, 105, 111, 110, 32, 77, 46, 116, 102, 111, 114, 109, 58, 111, 110, 99, 114, 101, 97, 116, 101, 40, 41, 10, 101, 110, 100, 10, 10, 102, 117, 110, 99, 116, 105, 111, 110, 32, 77, 46, 116, 102, 111, 114, 109, 58, 111, 110, 107, 101, 121, 100, 111, 119, 110, 40, 41, 10, 101, 110, 100, 10, 10, 102, 117, 110, 99, 116, 105, 111, 110, 32, 77, 46, 116, 102, 111, 114, 109, 58, 111, 110, 107, 101, 121, 117, 112, 40, 41, 10, 101, 110, 100, 10, 10, 77, 46, 116, 99, 108, 111, 115, 101, 97, 99, 116, 105, 111, 110, 32, 61, 32, 99, 108, 97, 115, 115, 46, 110, 101, 119, 40, 41, 10, 10, 102, 117, 110, 99, 116, 105, 111, 110, 32, 77, 46, 116, 99, 108, 111, 115, 101, 97, 99, 116, 105, 111, 110, 58, 110, 101, 119, 40, 41, 10, 101, 110, 100, 10, 10, 77, 46, 99, 97, 102, 114, 101, 101, 32, 61, 32, 48, 10, 77, 46, 98, 115, 110, 111, 110, 101, 32, 61, 32, 48, 10, 77, 46, 112, 111, 110, 111, 110, 101, 32, 61, 32, 48, 10, 77, 46, 112, 111, 115, 99, 114, 101, 101, 110, 99, 101, 110, 116, 101, 114, 32, 61, 32, 49, 10, 77, 46, 118, 107, 95, 117, 112, 32, 61, 32, 45, 49, 10, 77, 46, 118, 107, 95, 100, 111, 119, 110, 32, 61, 32, 45, 50, 10, 77, 46, 118, 107, 95, 108, 101, 102, 116, 32, 61, 32, 45, 51, 10, 77, 46, 118, 107, 95, 114, 105, 103, 104, 116, 32, 61, 32, 45, 52, 10, 77, 46, 118, 107, 95, 99, 111, 110, 116, 114, 111, 108, 32, 61, 32, 45, 53, 10, 77, 46, 118, 107, 95, 109, 101, 110, 117, 32, 61, 32, 45, 54, 10, 77, 46, 118, 107, 95, 115, 104, 105, 102, 116, 32, 61, 32, 45, 55, 10, 77, 46, 118, 107, 95, 105, 110, 115, 101, 114, 116, 32, 61, 32, 45, 56, 10, 10, 114, 101, 116, 117, 114, 110, 32, 77, 10, 108, 111, 99, 97, 108, 32, 99, 108, 97, 115, 115, 32, 61, 32, 115, 121, 115, 116, 101, 109, 46, 108, 111, 97, 100, 117, 110, 105, 116, 32, 39, 99, 108, 97, 115, 115, 39, 10, 10, 108, 111, 99, 97, 108, 32, 77, 32, 61, 32, 123, 125, 10, 10, 77, 46, 116, 102, 111, 110, 116, 32, 61, 32, 99, 108, 97, 115, 115, 46, 110, 101, 119, 40, 41, 10, 10, 102, 117, 110, 99, 116, 105, 111, 110, 32, 77, 46, 116, 102, 111, 110, 116, 58, 110, 101, 119, 40, 41, 10, 101, 110, 100, 10, 10, 77, 46, 116, 112, 105, 99, 116, 117, 114, 101, 32, 61, 32, 115, 121, 115, 116, 101, 109, 46, 110, 101, 119, 112, 105, 99, 116, 117, 114, 101, 10, 10, 77, 46, 100, 101, 102, 97, 117, 108, 116, 95, 99, 104, 97, 114, 115, 101, 116, 32, 61, 32, 48, 10, 77, 46, 99, 108, 119, 104, 105, 116, 101, 32, 61, 32, 48, 120, 102, 102, 102, 102, 102, 102, 102, 102, 10, 77, 46, 99, 108, 102, 117, 99, 104, 115, 105, 97, 32, 61, 32, 48, 120, 102, 102, 102, 102, 48, 48, 102, 102, 10, 77, 46, 99, 108, 119, 105, 110, 100, 111, 119, 116, 101, 120, 116, 32, 61, 32, 48, 120, 102, 102, 48, 48, 48, 48, 48, 48, 10, 10, 114, 101, 116, 117, 114, 110, 32, 77, 10, 108, 111, 99, 97, 108, 32, 77, 32, 61, 32, 123, 125, 10, 114, 101, 116, 117, 114, 110, 32, 77, 10, 108, 111, 99, 97, 108, 32, 109, 97, 116, 104, 32, 61, 32, 114, 101, 113, 117, 105, 114, 101, 32, 39, 109, 97, 116, 104, 39, 10, 10, 108, 111, 99, 97, 108, 32, 77, 32, 61, 32, 123, 125, 10, 10, 77, 46, 102, 108, 111, 111, 114, 32, 61, 32, 109, 97, 116, 104, 46, 102, 108, 111, 111, 114, 10, 77, 46, 97, 98, 115, 32, 61, 32, 109, 97, 116, 104, 46, 97, 98, 115, 10, 10, 114, 101, 116, 117, 114, 110, 32, 77, 10, 108, 111, 99, 97, 108, 32, 77, 32, 61, 32, 123, 125, 10, 114, 101, 116, 117, 114, 110, 32, 77, 10, 108, 111, 99, 97, 108, 32, 99, 108, 97, 115, 115, 32, 61, 32, 115, 121, 115, 116, 101, 109, 46, 108, 111, 97, 100, 117, 110, 105, 116, 32, 39, 99, 108, 97, 115, 115, 39, 10, 10, 108, 111, 99, 97, 108, 32, 77, 32, 61, 32, 123, 125, 10, 10, 77, 46, 116, 114, 101, 103, 105, 110, 105, 102, 105, 108, 101, 32, 61, 32, 99, 108, 97, 115, 115, 46, 110, 101, 119, 40, 41, 10, 10, 102, 117, 110, 99, 116, 105, 111, 110, 32, 77, 46, 116, 114, 101, 103, 105, 110, 105, 102, 105, 108, 101, 58, 110, 101, 119, 40, 41, 10, 101, 110, 100, 10, 10, 102, 117, 110, 99, 116, 105, 111, 110, 32, 77, 46, 116, 114, 101, 103, 105, 110, 105, 102, 105, 108, 101, 58, 99, 114, 101, 97, 116, 101, 40, 41, 10, 32, 32, 114, 101, 116, 117, 114, 110, 32, 77, 46, 116, 114, 101, 103, 105, 110, 105, 102, 105, 108, 101, 40, 41, 10, 101, 110, 100, 10, 10, 102, 117, 110, 99, 116, 105, 111, 110, 32, 77, 46, 116, 114, 101, 103, 105, 110, 105, 102, 105, 108, 101, 58, 114, 101, 97, 100, 105, 110, 116, 101, 103, 101, 114, 40, 32, 97, 114, 103, 49, 44, 32, 107, 101, 121, 44, 32, 118, 97, 108, 117, 101, 32, 41, 10, 32, 32, 114, 101, 116, 117, 114, 110, 32, 115, 121, 115, 116, 101, 109, 46, 108, 111, 97, 100, 118, 97, 108, 117, 101, 40, 32, 107, 101, 121, 58, 108, 111, 119, 101, 114, 40, 41, 32, 41, 32, 111, 114, 32, 118, 97, 108, 117, 101, 10, 101, 110, 100, 10, 10, 102, 117, 110, 99, 116, 105, 111, 110, 32, 77, 46, 116, 114, 101, 103, 105, 110, 105, 102, 105, 108, 101, 58, 119, 114, 105, 116, 101, 105, 110, 116, 101, 103, 101, 114, 40, 32, 97, 114, 103, 49, 44, 32, 107, 101, 121, 44, 32, 118, 97, 108, 117, 101, 41, 10, 32, 32, 115, 121, 115, 116, 101, 109, 46, 115, 97, 118, 101, 118, 97, 108, 117, 101, 40, 32, 107, 101, 121, 58, 108, 111, 119, 101, 114, 40, 41, 44, 32, 118, 97, 108, 117, 101, 32, 41, 10, 101, 110, 100, 10, 10, 114, 101, 116, 117, 114, 110, 32, 77, 10, 108, 111, 99, 97, 108, 32, 99, 108, 97, 115, 115, 32, 61, 32, 115, 121, 115, 116, 101, 109, 46, 108, 111, 97, 100, 117, 110, 105, 116, 32, 39, 99, 108, 97, 115, 115, 39, 10, 108, 111, 99, 97, 108, 32, 103, 114, 97, 112, 104, 105, 99, 115, 32, 61, 32, 115, 121, 115, 116, 101, 109, 46, 108, 111, 97, 100, 117, 110, 105, 116, 32, 39, 103, 114, 97, 112, 104, 105, 99, 115, 39, 10, 10, 108, 111, 99, 97, 108, 32, 77, 32, 61, 32, 123, 125, 10, 10, 77, 46, 116, 108, 97, 98, 101, 108, 32, 61, 32, 99, 108, 97, 115, 115, 46, 110, 101, 119, 40, 41, 10, 10, 102, 117, 110, 99, 116, 105, 111, 110, 32, 77, 46, 116, 108, 97, 98, 101, 108, 58, 110, 101, 119, 40, 41, 10, 32, 32, 115, 101, 108, 102, 46, 102, 111, 110, 116, 32, 61, 32, 103, 114, 97, 112, 104, 105, 99, 115, 46, 116, 102, 111, 110, 116, 40, 41, 10, 101, 110, 100, 10, 10, 77, 46, 116, 115, 99, 114, 111, 108, 108, 98, 97, 114, 32, 61, 32, 99, 108, 97, 115, 115, 46, 110, 101, 119, 40, 41, 10, 10, 102, 117, 110, 99, 116, 105, 111, 110, 32, 77, 46, 116, 115, 99, 114, 111, 108, 108, 98, 97, 114, 58, 110, 101, 119, 40, 41, 10, 101, 110, 100, 10, 10, 114, 101, 116, 117, 114, 110, 32, 77, 10, 108, 111, 99, 97, 108, 32, 77, 32, 61, 32, 123, 125, 10, 10, 77, 46, 110, 111, 119, 32, 61, 32, 115, 121, 115, 116, 101, 109, 46, 110, 111, 119, 10, 77, 46, 100, 101, 99, 111, 100, 101, 116, 105, 109, 101, 32, 61, 32, 115, 121, 115, 116, 101, 109, 46, 115, 112, 108, 105, 116, 116, 105, 109, 101, 10, 77, 46, 105, 110, 116, 116, 111, 115, 116, 114, 32, 61, 32, 115, 121, 115, 116, 101, 109, 46, 105, 110, 116, 116, 111, 115, 116, 114, 10, 10, 102, 117, 110, 99, 116, 105, 111, 110, 32, 77, 46, 100, 101, 99, 111, 100, 101, 100, 97, 116, 101, 40, 32, 116, 105, 109, 101, 32, 41, 10, 32, 32, 108, 111, 99, 97, 108, 32, 104, 111, 117, 114, 44, 32, 109, 105, 110, 44, 32, 115, 101, 99, 44, 32, 109, 115, 101, 99, 44, 32, 100, 97, 121, 44, 32, 109, 111, 110, 116, 104, 44, 32, 121, 101, 97, 114, 32, 61, 32, 115, 121, 115, 116, 101, 109, 46, 115, 112, 108, 105, 116, 116, 105, 109, 101, 40, 32, 116, 105, 109, 101, 32, 41, 10, 32, 32, 114, 101, 116, 117, 114, 110, 32, 100, 97, 121, 44, 32, 109, 111, 110, 116, 104, 44, 32, 121, 101, 97, 114, 10, 101, 110, 100, 10, 10, 114, 101, 116, 117, 114, 110, 32, 77, 10, 108, 111, 99, 97, 108, 32, 77, 32, 61, 32, 123, 125, 10, 114, 101, 116, 117, 114, 110, 32, 77, 10, 108, 111, 99, 97, 108, 32, 99, 97, 99, 104, 101, 32, 61, 32, 123, 125, 10, 10, 114, 101, 116, 117, 114, 110, 32, 102, 117, 110, 99, 116, 105, 111, 110, 40, 32, 77, 32, 41, 10, 32, 32, 77, 46, 108, 111, 97, 100, 117, 110, 105, 116, 32, 61, 32, 102, 117, 110, 99, 116, 105, 111, 110, 40, 32, 110, 97, 109, 101, 32, 41, 10, 32, 32, 32, 32, 108, 111, 99, 97, 108, 32, 101, 110, 116, 114, 121, 32, 61, 32, 110, 97, 109, 101, 32, 46, 46, 32, 39, 46, 108, 117, 97, 39, 10, 32, 32, 32, 32, 108, 111, 99, 97, 108, 32, 117, 110, 105, 116, 32, 61, 32, 99, 97, 99, 104, 101, 91, 32, 101, 110, 116, 114, 121, 32, 93, 10, 32, 32, 32, 32, 10, 32, 32, 32, 32, 105, 102, 32, 117, 110, 105, 116, 32, 116, 104, 101, 110, 10, 32, 32, 32, 32, 32, 32, 114, 101, 116, 117, 114, 110, 32, 117, 110, 105, 116, 10, 32, 32, 32, 32, 101, 110, 100, 10, 10, 32, 32, 32, 32, 108, 111, 99, 97, 108, 32, 98, 105, 110, 32, 61, 32, 77, 46, 108, 111, 97, 100, 98, 105, 110, 40, 32, 101, 110, 116, 114, 121, 32, 41, 10, 10, 32, 32, 32, 32, 105, 102, 32, 110, 111, 116, 32, 98, 105, 110, 32, 116, 104, 101, 110, 10, 32, 32, 32, 32, 32, 32, 98, 105, 110, 32, 61, 32, 77, 46, 108, 111, 97, 100, 98, 115, 40, 32, 110, 97, 109, 101, 32, 46, 46, 32, 39, 46, 98, 115, 39, 32, 41, 10, 32, 32, 32, 32, 101, 110, 100, 10, 32, 32, 32, 32, 10, 32, 32, 32, 32, 105, 102, 32, 98, 105, 110, 32, 116, 104, 101, 110, 10, 32, 32, 32, 32, 32, 32, 108, 111, 99, 97, 108, 32, 101, 114, 114, 10, 32, 32, 32, 32, 32, 32, 117, 110, 105, 116, 44, 32, 101, 114, 114, 32, 61, 32, 108, 111, 97, 100, 40, 32, 98, 105, 110, 44, 32, 101, 110, 116, 114, 121, 44, 32, 39, 116, 39, 32, 41, 10, 32, 32, 32, 32, 32, 32, 10, 32, 32, 32, 32, 32, 32, 105, 102, 32, 110, 111, 116, 32, 117, 110, 105, 116, 32, 116, 104, 101, 110, 10, 32, 32, 32, 32, 32, 32, 32, 32, 101, 114, 114, 111, 114, 40, 32, 101, 114, 114, 32, 41, 10, 32, 32, 32, 32, 32, 32, 101, 110, 100, 10, 32, 32, 32, 32, 32, 32, 10, 32, 32, 32, 32, 32, 32, 117, 110, 105, 116, 32, 61, 32, 117, 110, 105, 116, 40, 41, 10, 32, 32, 32, 32, 32, 32, 99, 97, 99, 104, 101, 91, 32, 101, 110, 116, 114, 121, 32, 93, 32, 61, 32, 117, 110, 105, 116, 10, 32, 32, 32, 32, 32, 32, 114, 101, 116, 117, 114, 110, 32, 117, 110, 105, 116, 10, 32, 32, 32, 32, 101, 110, 100, 10, 32, 32, 32, 32, 10, 32, 32, 32, 32, 101, 114, 114, 111, 114, 40, 32, 39, 117, 110, 105, 116, 32, 39, 32, 46, 46, 32, 101, 110, 116, 114, 121, 32, 46, 46, 32, 39, 32, 110, 111, 116, 32, 102, 111, 117, 110, 100, 39, 32, 41, 10, 32, 32, 101, 110, 100, 10, 32, 32, 10, 32, 32, 108, 111, 99, 97, 108, 32, 99, 108, 97, 115, 115, 32, 61, 32, 77, 46, 108, 111, 97, 100, 117, 110, 105, 116, 32, 39, 99, 108, 97, 115, 115, 39, 10, 32, 32, 10, 32, 32, 77, 46, 116, 111, 98, 106, 101, 99, 116, 32, 61, 32, 99, 108, 97, 115, 115, 46, 110, 101, 119, 40, 41, 10, 10, 32, 32, 102, 117, 110, 99, 116, 105, 111, 110, 32, 77, 46, 116, 111, 98, 106, 101, 99, 116, 58, 110, 101, 119, 40, 41, 10, 32, 32, 101, 110, 100, 10, 32, 32, 10, 32, 32, 108, 111, 99, 97, 108, 32, 115, 110, 101, 115, 32, 61, 32, 77, 46, 110, 101, 119, 105, 109, 97, 103, 101, 40, 41, 10, 32, 32, 115, 110, 101, 115, 46, 112, 105, 99, 116, 117, 114, 101, 46, 100, 97, 116, 97, 32, 61, 32, 77, 46, 108, 111, 97, 100, 98, 105, 110, 40, 32, 34, 115, 110, 101, 115, 46, 114, 108, 101, 34, 32, 41, 10, 32, 32, 115, 110, 101, 115, 46, 118, 105, 115, 105, 98, 108, 101, 32, 61, 32, 102, 97, 108, 115, 101, 10, 32, 32, 10, 32, 32, 108, 111, 99, 97, 108, 32, 115, 112, 114, 105, 116, 101, 115, 32, 61, 32, 123, 10, 32, 32, 32, 32, 91, 32, 34, 32, 34, 32, 93, 32, 61, 32, 34, 98, 111, 120, 121, 98, 111, 108, 100, 95, 50, 48, 46, 114, 108, 101, 34, 44, 10, 32, 32, 32, 32, 91, 32, 34, 33, 34, 32, 93, 32, 61, 32, 34, 98, 111, 120, 121, 98, 111, 108, 100, 95, 50, 49, 46, 114, 108, 101, 34, 44, 10, 32, 32, 32, 32, 91, 32, 34, 92, 34, 34, 32, 93, 32, 61, 32, 34, 98, 111, 120, 121, 98, 111, 108, 100, 95, 50, 50, 46, 114, 108, 101, 34, 44, 10, 32, 32, 32, 32, 91, 32, 34, 35, 34, 32, 93, 32, 61, 32, 34, 98, 111, 120, 121, 98, 111, 108, 100, 95, 50, 51, 46, 114, 108, 101, 34, 44, 10, 32, 32, 32, 32, 91, 32, 34, 36, 34, 32, 93, 32, 61, 32, 34, 98, 111, 120, 121, 98, 111, 108, 100, 95, 50, 52, 46, 114, 108, 101, 34, 44, 10, 32, 32, 32, 32, 91, 32, 34, 37, 34, 32, 93, 32, 61, 32, 34, 98, 111, 120, 121, 98, 111, 108, 100, 95, 50, 53, 46, 114, 108, 101, 34, 44, 10, 32, 32, 32, 32, 91, 32, 34, 38, 34, 32, 93, 32, 61, 32, 34, 98, 111, 120, 121, 98, 111, 108, 100, 95, 50, 54, 46, 114, 108, 101, 34, 44, 10, 32, 32, 32, 32, 91, 32, 34, 39, 34, 32, 93, 32, 61, 32, 34, 98, 111, 120, 121, 98, 111, 108, 100, 95, 50, 55, 46, 114, 108, 101, 34, 44, 10, 32, 32, 32, 32, 91, 32, 34, 40, 34, 32, 93, 32, 61, 32, 34, 98, 111, 120, 121, 98, 111, 108, 100, 95, 50, 56, 46, 114, 108, 101, 34, 44, 10, 32, 32, 32, 32, 91, 32, 34, 41, 34, 32, 93, 32, 61, 32, 34, 98, 111, 120, 121, 98, 111, 108, 100, 95, 50, 57, 46, 114, 108, 101, 34, 44, 10, 32, 32, 32, 32, 91, 32, 34, 42, 34, 32, 93, 32, 61, 32, 34, 98, 111, 120, 121, 98, 111, 108, 100, 95, 50, 97, 46, 114, 108, 101, 34, 44, 10, 32, 32, 32, 32, 91, 32, 34, 43, 34, 32, 93, 32, 61, 32, 34, 98, 111, 120, 121, 98, 111, 108, 100, 95, 50, 98, 46, 114, 108, 101, 34, 44, 10, 32, 32, 32, 32, 91, 32, 34, 44, 34, 32, 93, 32, 61, 32, 34, 98, 111, 120, 121, 98, 111, 108, 100, 95, 50, 99, 46, 114, 108, 101, 34, 44, 10, 32, 32, 32, 32, 91, 32, 34, 45, 34, 32, 93, 32, 61, 32, 34, 98, 111, 120, 121, 98, 111, 108, 100, 95, 50, 100, 46, 114, 108, 101, 34, 44, 10, 32, 32, 32, 32, 91, 32, 34, 46, 34, 32, 93, 32, 61, 32, 34, 98, 111, 120, 121, 98, 111, 108, 100, 95, 50, 101, 46, 114, 108, 101, 34, 44, 10, 32, 32, 32, 32, 91, 32, 34, 47, 34, 32, 93, 32, 61, 32, 34, 98, 111, 120, 121, 98, 111, 108, 100, 95, 50, 102, 46, 114, 108, 101, 34, 44, 10, 32, 32, 32, 32, 91, 32, 34, 48, 34, 32, 93, 32, 61, 32, 34, 98, 111, 120, 121, 98, 111, 108, 100, 95, 51, 48, 46, 114, 108, 101, 34, 44, 10, 32, 32, 32, 32, 91, 32, 34, 49, 34, 32, 93, 32, 61, 32, 34, 98, 111, 120, 121, 98, 111, 108, 100, 95, 51, 49, 46, 114, 108, 101, 34, 44, 10, 32, 32, 32, 32, 91, 32, 34, 50, 34, 32, 93, 32, 61, 32, 34, 98, 111, 120, 121, 98, 111, 108, 100, 95, 51, 50, 46, 114, 108, 101, 34, 44, 10, 32, 32, 32, 32, 91, 32, 34, 51, 34, 32, 93, 32, 61, 32, 34, 98, 111, 120, 121, 98, 111, 108, 100, 95, 51, 51, 46, 114, 108, 101, 34, 44, 10, 32, 32, 32, 32, 91, 32, 34, 52, 34, 32, 93, 32, 61, 32, 34, 98, 111, 120, 121, 98, 111, 108, 100, 95, 51, 52, 46, 114, 108, 101, 34, 44, 10, 32, 32, 32, 32, 91, 32, 34, 53, 34, 32, 93, 32, 61, 32, 34, 98, 111, 120, 121, 98, 111, 108, 100, 95, 51, 53, 46, 114, 108, 101, 34, 44, 10, 32, 32, 32, 32, 91, 32, 34, 54, 34, 32, 93, 32, 61, 32, 34, 98, 111, 120, 121, 98, 111, 108, 100, 95, 51, 54, 46, 114, 108, 101, 34, 44, 10, 32, 32, 32, 32, 91, 32, 34, 55, 34, 32, 93, 32, 61, 32, 34, 98, 111, 120, 121, 98, 111, 108, 100, 95, 51, 55, 46, 114, 108, 101, 34, 44, 10, 32, 32, 32, 32, 91, 32, 34, 56, 34, 32, 93, 32, 61, 32, 34, 98, 111, 120, 121, 98, 111, 108, 100, 95, 51, 56, 46, 114, 108, 101, 34, 44, 10, 32, 32, 32, 32, 91, 32, 34, 57, 34, 32, 93, 32, 61, 32, 34, 98, 111, 120, 121, 98, 111, 108, 100, 95, 51, 57, 46, 114, 108, 101, 34, 44, 10, 32, 32, 32, 32, 91, 32, 34, 58, 34, 32, 93, 32, 61, 32, 34, 98, 111, 120, 121, 98, 111, 108, 100, 95, 51, 97, 46, 114, 108, 101, 34, 44, 10, 32, 32, 32, 32, 91, 32, 34, 59, 34, 32, 93, 32, 61, 32, 34, 98, 111, 120, 121, 98, 111, 108, 100, 95, 51, 98, 46, 114, 108, 101, 34, 44, 10, 32, 32, 32, 32, 91, 32, 34, 60, 34, 32, 93, 32, 61, 32, 34, 98, 111, 120, 121, 98, 111, 108, 100, 95, 51, 99, 46, 114, 108, 101, 34, 44, 10, 32, 32, 32, 32, 91, 32, 34, 61, 34, 32, 93, 32, 61, 32, 34, 98, 111, 120, 121, 98, 111, 108, 100, 95, 51, 100, 46, 114, 108, 101, 34, 44, 10, 32, 32, 32, 32, 91, 32, 34, 62, 34, 32, 93, 32, 61, 32, 34, 98, 111, 120, 121, 98, 111, 108, 100, 95, 51, 101, 46, 114, 108, 101, 34, 44, 10, 32, 32, 32, 32, 91, 32, 34, 63, 34, 32, 93, 32, 61, 32, 34, 98, 111, 120, 121, 98, 111, 108, 100, 95, 51, 102, 46, 114, 108, 101, 34, 44, 10, 32, 32, 32, 32, 91, 32, 34, 64, 34, 32, 93, 32, 61, 32, 34, 98, 111, 120, 121, 98, 111, 108, 100, 95, 52, 48, 46, 114, 108, 101, 34, 44, 10, 32, 32, 32, 32, 91, 32, 34, 65, 34, 32, 93, 32, 61, 32, 34, 98, 111, 120, 121, 98, 111, 108, 100, 95, 52, 49, 46, 114, 108, 101, 34, 44, 10, 32, 32, 32, 32, 91, 32, 34, 66, 34, 32, 93, 32, 61, 32, 34, 98, 111, 120, 121, 98, 111, 108, 100, 95, 52, 50, 46, 114, 108, 101, 34, 44, 10, 32, 32, 32, 32, 91, 32, 34, 67, 34, 32, 93, 32, 61, 32, 34, 98, 111, 120, 121, 98, 111, 108, 100, 95, 52, 51, 46, 114, 108, 101, 34, 44, 10, 32, 32, 32, 32, 91, 32, 34, 68, 34, 32, 93, 32, 61, 32, 34, 98, 111, 120, 121, 98, 111, 108, 100, 95, 52, 52, 46, 114, 108, 101, 34, 44, 10, 32, 32, 32, 32, 91, 32, 34, 69, 34, 32, 93, 32, 61, 32, 34, 98, 111, 120, 121, 98, 111, 108, 100, 95, 52, 53, 46, 114, 108, 101, 34, 44, 10, 32, 32, 32, 32, 91, 32, 34, 70, 34, 32, 93, 32, 61, 32, 34, 98, 111, 120, 121, 98, 111, 108, 100, 95, 52, 54, 46, 114, 108, 101, 34, 44, 10, 32, 32, 32, 32, 91, 32, 34, 71, 34, 32, 93, 32, 61, 32, 34, 98, 111, 120, 121, 98, 111, 108, 100, 95, 52, 55, 46, 114, 108, 101, 34, 44, 10, 32, 32, 32, 32, 91, 32, 34, 72, 34, 32, 93, 32, 61, 32, 34, 98, 111, 120, 121, 98, 111, 108, 100, 95, 52, 56, 46, 114, 108, 101, 34, 44, 10, 32, 32, 32, 32, 91, 32, 34, 73, 34, 32, 93, 32, 61, 32, 34, 98, 111, 120, 121, 98, 111, 108, 100, 95, 52, 57, 46, 114, 108, 101, 34, 44, 10, 32, 32, 32, 32, 91, 32, 34, 74, 34, 32, 93, 32, 61, 32, 34, 98, 111, 120, 121, 98, 111, 108, 100, 95, 52, 97, 46, 114, 108, 101, 34, 44, 10, 32, 32, 32, 32, 91, 32, 34, 75, 34, 32, 93, 32, 61, 32, 34, 98, 111, 120, 121, 98, 111, 108, 100, 95, 52, 98, 46, 114, 108, 101, 34, 44, 10, 32, 32, 32, 32, 91, 32, 34, 76, 34, 32, 93, 32, 61, 32, 34, 98, 111, 120, 121, 98, 111, 108, 100, 95, 52, 99, 46, 114, 108, 101, 34, 44, 10, 32, 32, 32, 32, 91, 32, 34, 77, 34, 32, 93, 32, 61, 32, 34, 98, 111, 120, 121, 98, 111, 108, 100, 95, 52, 100, 46, 114, 108, 101, 34, 44, 10, 32, 32, 32, 32, 91, 32, 34, 78, 34, 32, 93, 32, 61, 32, 34, 98, 111, 120, 121, 98, 111, 108, 100, 95, 52, 101, 46, 114, 108, 101, 34, 44, 10, 32, 32, 32, 32, 91, 32, 34, 79, 34, 32, 93, 32, 61, 32, 34, 98, 111, 120, 121, 98, 111, 108, 100, 95, 52, 102, 46, 114, 108, 101, 34, 44, 10, 32, 32, 32, 32, 91, 32, 34, 80, 34, 32, 93, 32, 61, 32, 34, 98, 111, 120, 121, 98, 111, 108, 100, 95, 53, 48, 46, 114, 108, 101, 34, 44, 10, 32, 32, 32, 32, 91, 32, 34, 81, 34, 32, 93, 32, 61, 32, 34, 98, 111, 120, 121, 98, 111, 108, 100, 95, 53, 49, 46, 114, 108, 101, 34, 44, 10, 32, 32, 32, 32, 91, 32, 34, 82, 34, 32, 93, 32, 61, 32, 34, 98, 111, 120, 121, 98, 111, 108, 100, 95, 53, 50, 46, 114, 108, 101, 34, 44, 10, 32, 32, 32, 32, 91, 32, 34, 83, 34, 32, 93, 32, 61, 32, 34, 98, 111, 120, 121, 98, 111, 108, 100, 95, 53, 51, 46, 114, 108, 101, 34, 44, 10, 32, 32, 32, 32, 91, 32, 34, 84, 34, 32, 93, 32, 61, 32, 34, 98, 111, 120, 121, 98, 111, 108, 100, 95, 53, 52, 46, 114, 108, 101, 34, 44, 10, 32, 32, 32, 32, 91, 32, 34, 85, 34, 32, 93, 32, 61, 32, 34, 98, 111, 120, 121, 98, 111, 108, 100, 95, 53, 53, 46, 114, 108, 101, 34, 44, 10, 32, 32, 32, 32, 91, 32, 34, 86, 34, 32, 93, 32, 61, 32, 34, 98, 111, 120, 121, 98, 111, 108, 100, 95, 53, 54, 46, 114, 108, 101, 34, 44, 10, 32, 32, 32, 32, 91, 32, 34, 87, 34, 32, 93, 32, 61, 32, 34, 98, 111, 120, 121, 98, 111, 108, 100, 95, 53, 55, 46, 114, 108, 101, 34, 44, 10, 32, 32, 32, 32, 91, 32, 34, 88, 34, 32, 93, 32, 61, 32, 34, 98, 111, 120, 121, 98, 111, 108, 100, 95, 53, 56, 46, 114, 108, 101, 34, 44, 10, 32, 32, 32, 32, 91, 32, 34, 89, 34, 32, 93, 32, 61, 32, 34, 98, 111, 120, 121, 98, 111, 108, 100, 95, 53, 57, 46, 114, 108, 101, 34, 44, 10, 32, 32, 32, 32, 91, 32, 34, 90, 34, 32, 93, 32, 61, 32, 34, 98, 111, 120, 121, 98, 111, 108, 100, 95, 53, 97, 46, 114, 108, 101, 34, 44, 10, 32, 32, 32, 32, 91, 32, 34, 91, 34, 32, 93, 32, 61, 32, 34, 98, 111, 120, 121, 98, 111, 108, 100, 95, 53, 98, 46, 114, 108, 101, 34, 44, 10, 32, 32, 32, 32, 91, 32, 34, 92, 92, 34, 32, 93, 32, 61, 32, 34, 98, 111, 120, 121, 98, 111, 108, 100, 95, 53, 99, 46, 114, 108, 101, 34, 44, 10, 32, 32, 32, 32, 91, 32, 34, 93, 34, 32, 93, 32, 61, 32, 34, 98, 111, 120, 121, 98, 111, 108, 100, 95, 53, 100, 46, 114, 108, 101, 34, 44, 10, 32, 32, 32, 32, 91, 32, 34, 94, 34, 32, 93, 32, 61, 32, 34, 98, 111, 120, 121, 98, 111, 108, 100, 95, 53, 101, 46, 114, 108, 101, 34, 44, 10, 32, 32, 32, 32, 91, 32, 34, 95, 34, 32, 93, 32, 61, 32, 34, 98, 111, 120, 121, 98, 111, 108, 100, 95, 53, 102, 46, 114, 108, 101, 34, 44, 10, 32, 32, 32, 32, 91, 32, 34, 96, 34, 32, 93, 32, 61, 32, 34, 98, 111, 120, 121, 98, 111, 108, 100, 95, 54, 48, 46, 114, 108, 101, 34, 44, 10, 32, 32, 32, 32, 91, 32, 34, 123, 34, 32, 93, 32, 61, 32, 34, 98, 111, 120, 121, 98, 111, 108, 100, 95, 55, 98, 46, 114, 108, 101, 34, 44, 10, 32, 32, 32, 32, 91, 32, 34, 124, 34, 32, 93, 32, 61, 32, 34, 98, 111, 120, 121, 98, 111, 108, 100, 95, 55, 99, 46, 114, 108, 101, 34, 44, 10, 32, 32, 32, 32, 91, 32, 34, 125, 34, 32, 93, 32, 61, 32, 34, 98, 111, 120, 121, 98, 111, 108, 100, 95, 55, 100, 46, 114, 108, 101, 34, 44, 10, 32, 32, 32, 32, 91, 32, 34, 126, 34, 32, 93, 32, 61, 32, 34, 98, 111, 120, 121, 98, 111, 108, 100, 95, 55, 101, 46, 114, 108, 101, 34, 44, 10, 32, 32, 125, 10, 32, 32, 10, 32, 32, 102, 111, 114, 32, 99, 104, 97, 114, 44, 32, 110, 97, 109, 101, 32, 105, 110, 32, 112, 97, 105, 114, 115, 40, 32, 115, 112, 114, 105, 116, 101, 115, 32, 41, 32, 100, 111, 10, 32, 32, 32, 32, 108, 111, 99, 97, 108, 32, 115, 112, 116, 32, 61, 32, 77, 46, 110, 101, 119, 105, 109, 97, 103, 101, 40, 41, 10, 32, 32, 32, 32, 115, 112, 116, 46, 112, 105, 99, 116, 117, 114, 101, 46, 100, 97, 116, 97, 32, 61, 32, 77, 46, 108, 111, 97, 100, 98, 105, 110, 40, 32, 110, 97, 109, 101, 32, 41, 10, 32, 32, 32, 32, 115, 112, 116, 46, 118, 105, 115, 105, 98, 108, 101, 32, 61, 32, 102, 97, 108, 115, 101, 10, 32, 32, 32, 32, 115, 112, 114, 105, 116, 101, 115, 91, 32, 99, 104, 97, 114, 32, 93, 32, 61, 32, 115, 112, 116, 10, 32, 32, 101, 110, 100, 10, 32, 32, 10, 32, 32, 115, 112, 114, 105, 116, 101, 115, 91, 32, 34, 97, 34, 32, 93, 32, 61, 32, 115, 112, 114, 105, 116, 101, 115, 46, 65, 10, 32, 32, 115, 112, 114, 105, 116, 101, 115, 91, 32, 34, 98, 34, 32, 93, 32, 61, 32, 115, 112, 114, 105, 116, 101, 115, 46, 66, 10, 32, 32, 115, 112, 114, 105, 116, 101, 115, 91, 32, 34, 99, 34, 32, 93, 32, 61, 32, 115, 112, 114, 105, 116, 101, 115, 46, 67, 10, 32, 32, 115, 112, 114, 105, 116, 101, 115, 91, 32, 34, 100, 34, 32, 93, 32, 61, 32, 115, 112, 114, 105, 116, 101, 115, 46, 68, 10, 32, 32, 115, 112, 114, 105, 116, 101, 115, 91, 32, 34, 101, 34, 32, 93, 32, 61, 32, 115, 112, 114, 105, 116, 101, 115, 46, 69, 10, 32, 32, 115, 112, 114, 105, 116, 101, 115, 91, 32, 34, 102, 34, 32, 93, 32, 61, 32, 115, 112, 114, 105, 116, 101, 115, 46, 70, 10, 32, 32, 115, 112, 114, 105, 116, 101, 115, 91, 32, 34, 103, 34, 32, 93, 32, 61, 32, 115, 112, 114, 105, 116, 101, 115, 46, 71, 10, 32, 32, 115, 112, 114, 105, 116, 101, 115, 91, 32, 34, 104, 34, 32, 93, 32, 61, 32, 115, 112, 114, 105, 116, 101, 115, 46, 72, 10, 32, 32, 115, 112, 114, 105, 116, 101, 115, 91, 32, 34, 105, 34, 32, 93, 32, 61, 32, 115, 112, 114, 105, 116, 101, 115, 46, 73, 10, 32, 32, 115, 112, 114, 105, 116, 101, 115, 91, 32, 34, 106, 34, 32, 93, 32, 61, 32, 115, 112, 114, 105, 116, 101, 115, 46, 74, 10, 32, 32, 115, 112, 114, 105, 116, 101, 115, 91, 32, 34, 107, 34, 32, 93, 32, 61, 32, 115, 112, 114, 105, 116, 101, 115, 46, 75, 10, 32, 32, 115, 112, 114, 105, 116, 101, 115, 91, 32, 34, 108, 34, 32, 93, 32, 61, 32, 115, 112, 114, 105, 116, 101, 115, 46, 76, 10, 32, 32, 115, 112, 114, 105, 116, 101, 115, 91, 32, 34, 109, 34, 32, 93, 32, 61, 32, 115, 112, 114, 105, 116, 101, 115, 46, 77, 10, 32, 32, 115, 112, 114, 105, 116, 101, 115, 91, 32, 34, 110, 34, 32, 93, 32, 61, 32, 115, 112, 114, 105, 116, 101, 115, 46, 78, 10, 32, 32, 115, 112, 114, 105, 116, 101, 115, 91, 32, 34, 111, 34, 32, 93, 32, 61, 32, 115, 112, 114, 105, 116, 101, 115, 46, 79, 10, 32, 32, 115, 112, 114, 105, 116, 101, 115, 91, 32, 34, 112, 34, 32, 93, 32, 61, 32, 115, 112, 114, 105, 116, 101, 115, 46, 80, 10, 32, 32, 115, 112, 114, 105, 116, 101, 115, 91, 32, 34, 113, 34, 32, 93, 32, 61, 32, 115, 112, 114, 105, 116, 101, 115, 46, 81, 10, 32, 32, 115, 112, 114, 105, 116, 101, 115, 91, 32, 34, 114, 34, 32, 93, 32, 61, 32, 115, 112, 114, 105, 116, 101, 115, 46, 82, 10, 32, 32, 115, 112, 114, 105, 116, 101, 115, 91, 32, 34, 115, 34, 32, 93, 32, 61, 32, 115, 112, 114, 105, 116, 101, 115, 46, 83, 10, 32, 32, 115, 112, 114, 105, 116, 101, 115, 91, 32, 34, 116, 34, 32, 93, 32, 61, 32, 115, 112, 114, 105, 116, 101, 115, 46, 84, 10, 32, 32, 115, 112, 114, 105, 116, 101, 115, 91, 32, 34, 117, 34, 32, 93, 32, 61, 32, 115, 112, 114, 105, 116, 101, 115, 46, 85, 10, 32, 32, 115, 112, 114, 105, 116, 101, 115, 91, 32, 34, 118, 34, 32, 93, 32, 61, 32, 115, 112, 114, 105, 116, 101, 115, 46, 86, 10, 32, 32, 115, 112, 114, 105, 116, 101, 115, 91, 32, 34, 119, 34, 32, 93, 32, 61, 32, 115, 112, 114, 105, 116, 101, 115, 46, 87, 10, 32, 32, 115, 112, 114, 105, 116, 101, 115, 91, 32, 34, 120, 34, 32, 93, 32, 61, 32, 115, 112, 114, 105, 116, 101, 115, 46, 88, 10, 32, 32, 115, 112, 114, 105, 116, 101, 115, 91, 32, 34, 121, 34, 32, 93, 32, 61, 32, 115, 112, 114, 105, 116, 101, 115, 46, 89, 10, 32, 32, 115, 112, 114, 105, 116, 101, 115, 91, 32, 34, 122, 34, 32, 93, 32, 61, 32, 115, 112, 114, 105, 116, 101, 115, 46, 90, 10, 32, 32, 10, 32, 32, 108, 111, 99, 97, 108, 32, 114, 101, 110, 100, 101, 114, 32, 61, 32, 102, 117, 110, 99, 116, 105, 111, 110, 40, 32, 120, 44, 32, 121, 44, 32, 116, 101, 120, 116, 44, 32, 97, 108, 105, 103, 110, 109, 101, 110, 116, 32, 41, 10, 32, 32, 32, 32, 108, 111, 99, 97, 108, 32, 108, 101, 110, 32, 61, 32, 49, 10, 32, 32, 32, 32, 108, 111, 99, 97, 108, 32, 108, 105, 115, 116, 32, 61, 32, 123, 125, 10, 32, 32, 32, 32, 10, 32, 32, 32, 32, 102, 111, 114, 32, 105, 32, 61, 32, 49, 44, 32, 35, 116, 101, 120, 116, 32, 100, 111, 10, 32, 32, 32, 32, 32, 32, 108, 111, 99, 97, 108, 32, 115, 112, 116, 32, 61, 32, 115, 112, 114, 105, 116, 101, 115, 91, 32, 116, 101, 120, 116, 58, 115, 117, 98, 40, 32, 105, 44, 32, 105, 32, 41, 32, 93, 32, 111, 114, 32, 115, 112, 114, 105, 116, 101, 115, 91, 32, 39, 63, 39, 32, 93, 10, 32, 32, 32, 32, 32, 32, 108, 105, 115, 116, 91, 32, 105, 32, 93, 32, 61, 32, 115, 112, 116, 46, 112, 105, 99, 116, 117, 114, 101, 10, 32, 32, 32, 32, 32, 32, 108, 101, 110, 32, 61, 32, 108, 101, 110, 32, 43, 32, 115, 112, 116, 46, 119, 105, 100, 116, 104, 32, 45, 32, 49, 10, 32, 32, 32, 32, 101, 110, 100, 10, 32, 32, 32, 32, 10, 32, 32, 32, 32, 105, 102, 32, 97, 108, 105, 103, 110, 109, 101, 110, 116, 32, 61, 61, 32, 39, 108, 101, 102, 116, 39, 32, 116, 104, 101, 110, 10, 32, 32, 32, 32, 32, 32, 45, 45, 32, 110, 111, 116, 104, 105, 110, 103, 10, 32, 32, 32, 32, 101, 108, 115, 101, 105, 102, 32, 97, 108, 105, 103, 110, 109, 101, 110, 116, 32, 61, 61, 32, 39, 114, 105, 103, 104, 116, 39, 32, 116, 104, 101, 110, 10, 32, 32, 32, 32, 32, 32, 120, 32, 61, 32, 120, 32, 45, 32, 108, 101, 110, 10, 32, 32, 32, 32, 101, 108, 115, 101, 32, 45, 45, 32, 99, 101, 110, 116, 101, 114, 10, 32, 32, 32, 32, 32, 32, 120, 32, 61, 32, 120, 32, 45, 32, 108, 101, 110, 32, 47, 47, 32, 50, 10, 32, 32, 32, 32, 101, 110, 100, 10, 32, 32, 32, 32, 10, 32, 32, 32, 32, 121, 32, 61, 32, 121, 32, 45, 32, 56, 10, 32, 32, 32, 32, 10, 32, 32, 32, 32, 102, 111, 114, 32, 105, 32, 61, 32, 49, 44, 32, 35, 108, 105, 115, 116, 32, 100, 111, 10, 32, 32, 32, 32, 32, 32, 108, 111, 99, 97, 108, 32, 115, 112, 116, 32, 61, 32, 77, 46, 110, 101, 119, 105, 109, 97, 103, 101, 40, 41, 10, 32, 32, 32, 32, 32, 32, 115, 112, 116, 46, 112, 105, 99, 116, 117, 114, 101, 32, 61, 32, 108, 105, 115, 116, 91, 32, 105, 32, 93, 10, 32, 32, 32, 32, 32, 32, 108, 105, 115, 116, 91, 32, 105, 32, 93, 32, 61, 32, 115, 112, 116, 10, 32, 32, 32, 32, 32, 32, 10, 32, 32, 32, 32, 32, 32, 115, 112, 116, 46, 108, 101, 102, 116, 32, 61, 32, 120, 10, 32, 32, 32, 32, 32, 32, 115, 112, 116, 46, 116, 111, 112, 32, 61, 32, 121, 10, 32, 32, 32, 32, 32, 32, 115, 112, 116, 46, 118, 105, 115, 105, 98, 108, 101, 32, 61, 32, 102, 97, 108, 115, 101, 10, 32, 32, 32, 32, 32, 32, 115, 112, 116, 46, 108, 97, 121, 101, 114, 32, 61, 32, 50, 48, 48, 10, 32, 32, 32, 32, 32, 32, 10, 32, 32, 32, 32, 32, 32, 120, 32, 61, 32, 120, 32, 43, 32, 115, 112, 116, 46, 119, 105, 100, 116, 104, 32, 45, 32, 49, 10, 32, 32, 32, 32, 101, 110, 100, 10, 32, 32, 32, 32, 10, 32, 32, 32, 32, 114, 101, 116, 117, 114, 110, 32, 123, 10, 32, 32, 32, 32, 32, 32, 115, 101, 116, 86, 105, 115, 105, 98, 108, 101, 32, 61, 32, 102, 117, 110, 99, 116, 105, 111, 110, 40, 32, 115, 101, 108, 102, 44, 32, 118, 105, 115, 105, 98, 108, 101, 32, 41, 10, 32, 32, 32, 32, 32, 32, 32, 32, 102, 111, 114, 32, 105, 32, 61, 32, 49, 44, 32, 35, 108, 105, 115, 116, 32, 100, 111, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 108, 105, 115, 116, 91, 32, 105, 32, 93, 46, 118, 105, 115, 105, 98, 108, 101, 32, 61, 32, 118, 105, 115, 105, 98, 108, 101, 10, 32, 32, 32, 32, 32, 32, 32, 32, 101, 110, 100, 10, 32, 32, 32, 32, 32, 32, 101, 110, 100, 10, 32, 32, 32, 32, 125, 10, 32, 32, 101, 110, 100, 10, 32, 32, 10, 32, 32, 108, 111, 99, 97, 108, 32, 99, 114, 101, 97, 116, 101, 104, 101, 108, 112, 32, 61, 32, 102, 117, 110, 99, 116, 105, 111, 110, 40, 32, 119, 105, 100, 116, 104, 44, 32, 104, 101, 105, 103, 104, 116, 44, 32, 109, 115, 103, 115, 32, 41, 10, 32, 32, 32, 32, 108, 111, 99, 97, 108, 32, 112, 111, 115, 32, 61, 32, 123, 10, 32, 32, 32, 32, 32, 32, 117, 112, 32, 32, 32, 32, 32, 61, 32, 123, 32, 32, 56, 48, 44, 32, 32, 55, 50, 32, 125, 44, 10, 32, 32, 32, 32, 32, 32, 100, 111, 119, 110, 32, 32, 32, 61, 32, 123, 32, 32, 56, 48, 44, 32, 49, 49, 56, 32, 125, 44, 10, 32, 32, 32, 32, 32, 32, 108, 101, 102, 116, 32, 32, 32, 61, 32, 123, 32, 32, 53, 56, 44, 32, 32, 57, 53, 44, 32, 39, 114, 105, 103, 104, 116, 39, 32, 125, 44, 10, 32, 32, 32, 32, 32, 32, 114, 105, 103, 104, 116, 32, 32, 61, 32, 123, 32, 49, 48, 50, 44, 32, 32, 57, 53, 44, 32, 39, 108, 101, 102, 116, 39, 32, 125, 44, 10, 32, 32, 32, 32, 32, 32, 97, 32, 32, 32, 32, 32, 32, 61, 32, 123, 32, 51, 54, 56, 44, 32, 32, 57, 54, 44, 32, 39, 108, 101, 102, 116, 39, 32, 125, 44, 10, 32, 32, 32, 32, 32, 32, 98, 32, 32, 32, 32, 32, 32, 61, 32, 123, 32, 51, 51, 52, 44, 32, 49, 51, 50, 32, 125, 44, 10, 32, 32, 32, 32, 32, 32, 120, 32, 32, 32, 32, 32, 32, 61, 32, 123, 32, 51, 50, 56, 44, 32, 32, 53, 57, 32, 125, 44, 10, 32, 32, 32, 32, 32, 32, 121, 32, 32, 32, 32, 32, 32, 61, 32, 123, 32, 50, 57, 52, 44, 32, 32, 57, 50, 44, 32, 39, 114, 105, 103, 104, 116, 39, 32, 125, 44, 10, 32, 32, 32, 32, 32, 32, 108, 49, 32, 32, 32, 32, 32, 61, 32, 123, 32, 32, 55, 54, 44, 32, 32, 32, 54, 32, 125, 44, 10, 32, 32, 32, 32, 32, 32, 114, 49, 32, 32, 32, 32, 32, 61, 32, 123, 32, 51, 51, 56, 44, 32, 32, 32, 54, 32, 125, 44, 10, 32, 32, 32, 32, 32, 32, 108, 50, 32, 32, 32, 32, 32, 61, 32, 123, 32, 32, 49, 50, 44, 32, 32, 51, 54, 32, 125, 44, 10, 32, 32, 32, 32, 32, 32, 114, 50, 32, 32, 32, 32, 32, 61, 32, 123, 32, 52, 48, 50, 44, 32, 32, 51, 54, 32, 125, 44, 10, 32, 32, 32, 32, 32, 32, 115, 101, 108, 101, 99, 116, 32, 61, 32, 123, 32, 49, 54, 55, 44, 32, 49, 52, 52, 32, 125, 44, 10, 32, 32, 32, 32, 32, 32, 115, 116, 97, 114, 116, 32, 32, 61, 32, 123, 32, 50, 51, 50, 44, 32, 49, 52, 52, 32, 125, 10, 32, 32, 32, 32, 125, 10, 32, 32, 32, 32, 10, 32, 32, 32, 32, 108, 111, 99, 97, 108, 32, 115, 110, 101, 115, 95, 120, 32, 61, 32, 40, 32, 119, 105, 100, 116, 104, 32, 45, 32, 115, 110, 101, 115, 46, 119, 105, 100, 116, 104, 32, 41, 32, 47, 47, 32, 50, 10, 32, 32, 32, 32, 108, 111, 99, 97, 108, 32, 115, 110, 101, 115, 95, 121, 32, 61, 32, 40, 32, 104, 101, 105, 103, 104, 116, 32, 45, 32, 115, 110, 101, 115, 46, 104, 101, 105, 103, 104, 116, 32, 41, 32, 47, 47, 32, 50, 10, 32, 32, 32, 32, 10, 32, 32, 32, 32, 108, 111, 99, 97, 108, 32, 115, 110, 101, 115, 95, 115, 112, 116, 32, 61, 32, 77, 46, 110, 101, 119, 105, 109, 97, 103, 101, 40, 41, 10, 32, 32, 32, 32, 115, 110, 101, 115, 95, 115, 112, 116, 46, 108, 101, 102, 116, 32, 61, 32, 115, 110, 101, 115, 95, 120, 10, 32, 32, 32, 32, 115, 110, 101, 115, 95, 115, 112, 116, 46, 116, 111, 112, 32, 61, 32, 115, 110, 101, 115, 95, 121, 10, 32, 32, 32, 32, 115, 110, 101, 115, 95, 115, 112, 116, 46, 112, 105, 99, 116, 117, 114, 101, 32, 61, 32, 115, 110, 101, 115, 46, 112, 105, 99, 116, 117, 114, 101, 10, 32, 32, 32, 32, 115, 110, 101, 115, 95, 115, 112, 116, 46, 118, 105, 115, 105, 98, 108, 101, 32, 61, 32, 102, 97, 108, 115, 101, 10, 32, 32, 32, 32, 115, 110, 101, 115, 95, 115, 112, 116, 46, 108, 97, 121, 101, 114, 32, 61, 32, 49, 57, 57, 10, 32, 32, 32, 32, 10, 32, 32, 32, 32, 108, 111, 99, 97, 108, 32, 116, 101, 120, 116, 32, 61, 32, 123, 125, 10, 32, 32, 32, 32, 10, 32, 32, 32, 32, 102, 111, 114, 32, 98, 117, 116, 116, 111, 110, 44, 32, 112, 111, 115, 32, 105, 110, 32, 112, 97, 105, 114, 115, 40, 32, 112, 111, 115, 32, 41, 32, 100, 111, 10, 32, 32, 32, 32, 32, 32, 116, 101, 120, 116, 91, 32, 98, 117, 116, 116, 111, 110, 32, 93, 32, 61, 32, 114, 101, 110, 100, 101, 114, 40, 32, 115, 110, 101, 115, 95, 120, 32, 43, 32, 112, 111, 115, 91, 32, 49, 32, 93, 44, 32, 115, 110, 101, 115, 95, 121, 32, 43, 32, 112, 111, 115, 91, 32, 50, 32, 93, 44, 32, 109, 115, 103, 115, 91, 32, 98, 117, 116, 116, 111, 110, 32, 93, 32, 111, 114, 32, 39, 39, 44, 32, 112, 111, 115, 91, 32, 51, 32, 93, 32, 41, 10, 32, 32, 32, 32, 101, 110, 100, 10, 32, 32, 32, 32, 10, 32, 32, 32, 32, 114, 101, 116, 117, 114, 110, 32, 123, 10, 32, 32, 32, 32, 32, 32, 45, 45, 116, 105, 109, 101, 114, 32, 61, 32, 77, 46, 110, 101, 119, 116, 105, 109, 101, 114, 40, 41, 44, 10, 32, 32, 32, 32, 32, 32, 115, 101, 116, 86, 105, 115, 105, 98, 108, 101, 32, 61, 32, 102, 117, 110, 99, 116, 105, 111, 110, 40, 32, 115, 101, 108, 102, 44, 32, 118, 105, 115, 105, 98, 108, 101, 32, 41, 10, 32, 32, 32, 32, 32, 32, 32, 32, 115, 110, 101, 115, 95, 115, 112, 116, 46, 118, 105, 115, 105, 98, 108, 101, 32, 61, 32, 118, 105, 115, 105, 98, 108, 101, 10, 32, 32, 32, 32, 32, 32, 32, 32, 10, 32, 32, 32, 32, 32, 32, 32, 32, 102, 111, 114, 32, 95, 44, 32, 114, 101, 110, 100, 101, 114, 32, 105, 110, 32, 112, 97, 105, 114, 115, 40, 32, 116, 101, 120, 116, 32, 41, 32, 100, 111, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 114, 101, 110, 100, 101, 114, 58, 115, 101, 116, 86, 105, 115, 105, 98, 108, 101, 40, 32, 118, 105, 115, 105, 98, 108, 101, 32, 41, 10, 32, 32, 32, 32, 32, 32, 32, 32, 101, 110, 100, 10, 32, 32, 32, 32, 32, 32, 101, 110, 100, 44, 10, 32, 32, 32, 32, 125, 10, 32, 32, 101, 110, 100, 10, 32, 32, 10, 32, 32, 77, 46, 105, 110, 105, 116, 32, 61, 32, 102, 117, 110, 99, 116, 105, 111, 110, 40, 32, 98, 97, 99, 107, 103, 114, 111, 117, 110, 100, 44, 32, 107, 101, 121, 109, 97, 112, 44, 32, 107, 101, 121, 100, 111, 119, 110, 44, 32, 107, 101, 121, 117, 112, 44, 32, 116, 105, 109, 101, 114, 115, 44, 32, 122, 111, 111, 109, 32, 41, 10, 32, 32, 32, 32, 108, 111, 99, 97, 108, 32, 109, 115, 103, 115, 32, 61, 32, 123, 125, 10, 32, 32, 32, 32, 10, 32, 32, 32, 32, 102, 111, 114, 32, 98, 117, 116, 116, 111, 110, 44, 32, 107, 101, 121, 115, 32, 105, 110, 32, 112, 97, 105, 114, 115, 40, 32, 107, 101, 121, 109, 97, 112, 32, 41, 32, 100, 111, 10, 32, 32, 32, 32, 32, 32, 109, 115, 103, 115, 91, 32, 98, 117, 116, 116, 111, 110, 32, 93, 32, 61, 32, 107, 101, 121, 115, 91, 32, 35, 107, 101, 121, 115, 32, 93, 10, 32, 32, 32, 32, 32, 32, 107, 101, 121, 115, 91, 32, 35, 107, 101, 121, 115, 32, 93, 32, 61, 32, 110, 105, 108, 10, 32, 32, 32, 32, 101, 110, 100, 10, 32, 32, 32, 32, 10, 32, 32, 32, 32, 109, 115, 103, 115, 46, 115, 101, 108, 101, 99, 116, 32, 61, 32, 122, 111, 111, 109, 32, 97, 110, 100, 32, 39, 90, 111, 111, 109, 39, 32, 111, 114, 32, 39, 39, 10, 32, 32, 32, 32, 109, 115, 103, 115, 46, 115, 116, 97, 114, 116, 32, 61, 32, 39, 72, 101, 108, 112, 39, 10, 32, 32, 32, 32, 10, 32, 32, 32, 32, 115, 121, 115, 116, 101, 109, 46, 115, 101, 116, 98, 97, 99, 107, 103, 114, 111, 117, 110, 100, 40, 32, 98, 97, 99, 107, 103, 114, 111, 117, 110, 100, 46, 112, 105, 99, 116, 117, 114, 101, 32, 41, 10, 32, 32, 32, 32, 108, 111, 99, 97, 108, 32, 104, 101, 108, 112, 32, 61, 32, 99, 114, 101, 97, 116, 101, 104, 101, 108, 112, 40, 32, 98, 97, 99, 107, 103, 114, 111, 117, 110, 100, 46, 119, 105, 100, 116, 104, 44, 32, 98, 97, 99, 107, 103, 114, 111, 117, 110, 100, 46, 104, 101, 105, 103, 104, 116, 44, 32, 109, 115, 103, 115, 32, 41, 10, 32, 32, 32, 32, 98, 97, 99, 107, 103, 114, 111, 117, 110, 100, 46, 112, 105, 99, 116, 117, 114, 101, 32, 61, 32, 110, 105, 108, 10, 32, 32, 32, 32, 10, 32, 32, 32, 32, 108, 111, 99, 97, 108, 32, 115, 116, 97, 116, 101, 44, 32, 110, 101, 119, 115, 116, 97, 116, 101, 32, 61, 32, 123, 125, 44, 32, 123, 125, 10, 32, 32, 32, 32, 108, 111, 99, 97, 108, 32, 122, 111, 111, 109, 101, 100, 32, 61, 32, 102, 97, 108, 115, 101, 10, 32, 32, 32, 32, 10, 32, 32, 32, 32, 114, 101, 116, 117, 114, 110, 32, 102, 117, 110, 99, 116, 105, 111, 110, 40, 41, 10, 32, 32, 32, 32, 32, 32, 115, 121, 115, 116, 101, 109, 46, 105, 110, 112, 117, 116, 115, 116, 97, 116, 101, 40, 32, 110, 101, 119, 115, 116, 97, 116, 101, 32, 41, 10, 32, 32, 32, 32, 32, 32, 10, 32, 32, 32, 32, 32, 32, 102, 111, 114, 32, 98, 117, 116, 116, 111, 110, 44, 32, 112, 114, 101, 115, 115, 101, 100, 32, 105, 110, 32, 112, 97, 105, 114, 115, 40, 32, 110, 101, 119, 115, 116, 97, 116, 101, 32, 41, 32, 100, 111, 10, 32, 32, 32, 32, 32, 32, 32, 32, 105, 102, 32, 115, 116, 97, 116, 101, 91, 32, 98, 117, 116, 116, 111, 110, 32, 93, 32, 126, 61, 32, 112, 114, 101, 115, 115, 101, 100, 32, 116, 104, 101, 110, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 108, 111, 99, 97, 108, 32, 107, 101, 121, 115, 32, 61, 32, 107, 101, 121, 109, 97, 112, 91, 32, 98, 117, 116, 116, 111, 110, 32, 93, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 105, 102, 32, 107, 101, 121, 115, 32, 116, 104, 101, 110, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 105, 102, 32, 112, 114, 101, 115, 115, 101, 100, 32, 116, 104, 101, 110, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 102, 111, 114, 32, 95, 44, 32, 107, 101, 121, 32, 105, 110, 32, 105, 112, 97, 105, 114, 115, 40, 32, 107, 101, 121, 115, 32, 41, 32, 100, 111, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 107, 101, 121, 100, 111, 119, 110, 40, 32, 107, 101, 121, 32, 41, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 101, 110, 100, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 101, 108, 115, 101, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 102, 111, 114, 32, 95, 44, 32, 107, 101, 121, 32, 105, 110, 32, 105, 112, 97, 105, 114, 115, 40, 32, 107, 101, 121, 115, 32, 41, 32, 100, 111, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 107, 101, 121, 117, 112, 40, 32, 107, 101, 121, 32, 41, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 101, 110, 100, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 101, 110, 100, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 101, 110, 100, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 115, 116, 97, 116, 101, 91, 32, 98, 117, 116, 116, 111, 110, 32, 93, 32, 61, 32, 112, 114, 101, 115, 115, 101, 100, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 10], "i8", ALLOC_NONE, Runtime.GLOBAL_BASE + 818740);
  allocate([32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 105, 102, 32, 98, 117, 116, 116, 111, 110, 32, 61, 61, 32, 39, 115, 116, 97, 114, 116, 39, 32, 116, 104, 101, 110, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 104, 101, 108, 112, 58, 115, 101, 116, 86, 105, 115, 105, 98, 108, 101, 40, 32, 115, 116, 97, 116, 101, 46, 115, 116, 97, 114, 116, 32, 41, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 101, 110, 100, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 105, 102, 32, 98, 117, 116, 116, 111, 110, 32, 61, 61, 32, 39, 115, 101, 108, 101, 99, 116, 39, 32, 97, 110, 100, 32, 112, 114, 101, 115, 115, 101, 100, 32, 116, 104, 101, 110, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 122, 111, 111, 109, 101, 100, 32, 61, 32, 110, 111, 116, 32, 122, 111, 111, 109, 101, 100, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 115, 121, 115, 116, 101, 109, 46, 115, 101, 116, 122, 111, 111, 109, 40, 32, 122, 111, 111, 109, 101, 100, 32, 97, 110, 100, 32, 122, 111, 111, 109, 32, 111, 114, 32, 110, 105, 108, 32, 41, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 101, 110, 100, 10, 32, 32, 32, 32, 32, 32, 32, 32, 101, 110, 100, 10, 32, 32, 32, 32, 32, 32, 101, 110, 100, 10, 32, 32, 32, 32, 32, 32, 10, 32, 32, 32, 32, 32, 32, 102, 111, 114, 32, 95, 44, 32, 116, 105, 109, 101, 114, 32, 105, 110, 32, 105, 112, 97, 105, 114, 115, 40, 32, 116, 105, 109, 101, 114, 115, 32, 41, 32, 100, 111, 10, 32, 32, 32, 32, 32, 32, 32, 32, 116, 105, 109, 101, 114, 58, 116, 105, 99, 107, 40, 41, 10, 32, 32, 32, 32, 32, 32, 101, 110, 100, 10, 32, 32, 32, 32, 32, 32, 10, 32, 32, 32, 32, 32, 32, 114, 101, 116, 117, 114, 110, 32, 115, 116, 97, 116, 101, 10, 32, 32, 32, 32, 101, 110, 100, 10, 32, 32, 101, 110, 100, 10, 101, 110, 100, 10, 0, 8, 0, 16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6, 0, 0, 0, 12, 0, 0, 0, 18, 0, 0, 0, 24, 0, 0, 0, 30, 0, 0, 0, 36, 0, 0, 0, 42, 0, 0, 0, 48, 0, 0, 0, 54, 0, 0, 0, 60, 0, 0, 0, 66, 0, 0, 0, 72, 0, 0, 0, 78, 0, 0, 0, 84, 0, 0, 0, 90, 0, 1, 0, 1, 0, 8, 0, 1, 0, 1, 0, 8, 0, 1, 0, 1, 0, 8, 0, 1, 0, 1, 0, 8, 0, 1, 0, 1, 0, 8, 0, 1, 0, 1, 0, 8, 0, 1, 0, 1, 0, 8, 0, 1, 0, 1, 0, 8, 0, 1, 0, 1, 0, 8, 0, 1, 0, 1, 0, 8, 0, 1, 0, 1, 0, 8, 0, 1, 0, 1, 0, 8, 0, 1, 0, 1, 0, 8, 0, 1, 0, 1, 0, 8, 0, 1, 0, 1, 0, 8, 0, 1, 0, 1, 0, 8, 0, 8, 0, 16, 0, 0, 0, 128, 0, 0, 0, 0, 0, 0, 0, 22, 0, 0, 0, 44, 0, 0, 0, 66, 0, 0, 0, 88, 0, 0, 0, 110, 0, 0, 0, 132, 0, 0, 0, 154, 0, 0, 0, 176, 0, 0, 0, 198, 0, 0, 0, 220, 0, 0, 0, 242, 0, 0, 1, 8, 0, 0, 1, 30, 0, 0, 1, 52, 0, 0, 1, 74, 0, 1, 0, 1, 128, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 8, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 8, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 8, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 8, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 8, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 8, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 8, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 8, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 14, 0, 16, 0, 0, 0, 140, 0, 0, 0, 0, 0, 0, 0, 34, 0, 0, 0, 68, 0, 0, 0, 102, 0, 0, 0, 136, 0, 0, 0, 170, 0, 0, 0, 204, 0, 0, 0, 238, 0, 0, 1, 16, 0, 0, 1, 50, 0, 0, 1, 84, 0, 0, 1, 90, 0, 0, 1, 96, 0, 0, 1, 102, 0, 0, 1, 108, 0, 0, 1, 114, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 14, 0, 1, 0, 1, 0, 14, 0, 1, 0, 1, 0, 14, 0, 1, 0, 1, 0, 14, 0, 1, 0, 1, 0, 14, 0, 1, 0, 1, 0, 14, 0, 18, 0, 16, 0, 0, 1, 4, 0, 0, 0, 0, 0, 0, 0, 38, 0, 0, 0, 76, 0, 0, 0, 118, 0, 0, 0, 160, 0, 0, 0, 202, 0, 0, 0, 244, 0, 0, 1, 30, 0, 0, 1, 72, 0, 0, 1, 114, 0, 0, 1, 156, 0, 0, 1, 198, 0, 0, 1, 240, 0, 0, 2, 22, 0, 0, 2, 60, 0, 0, 2, 98, 0, 1, 0, 3, 0, 2, 128, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 1, 0, 3, 0, 2, 128, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 1, 0, 1, 128, 18, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 18, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 18, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 18, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 18, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 18, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 18, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 18, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 18, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 18, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 3, 0, 2, 128, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 1, 0, 3, 0, 2, 128, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 1, 0, 5, 0, 2, 128, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 128, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 1, 0, 5, 0, 2, 128, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 128, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 14, 0, 16, 0, 0, 0, 224, 0, 0, 0, 0, 0, 0, 0, 34, 0, 0, 0, 68, 0, 0, 0, 102, 0, 0, 0, 136, 0, 0, 0, 170, 0, 0, 0, 204, 0, 0, 0, 238, 0, 0, 1, 16, 0, 0, 1, 50, 0, 0, 1, 84, 0, 0, 1, 118, 0, 0, 1, 152, 0, 0, 1, 186, 0, 0, 1, 220, 0, 0, 1, 254, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 255, 255, 255, 255, 0, 0, 0, 0, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 255, 255, 255, 255, 0, 0, 0, 0, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 0, 0, 0, 0, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 0, 0, 0, 0, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 20, 0, 16, 0, 0, 1, 20, 0, 0, 0, 0, 0, 0, 0, 40, 0, 0, 0, 80, 0, 0, 0, 120, 0, 0, 0, 160, 0, 0, 0, 206, 0, 0, 0, 252, 0, 0, 1, 42, 0, 0, 1, 88, 0, 0, 1, 134, 0, 0, 1, 180, 0, 0, 1, 220, 0, 0, 2, 4, 0, 0, 2, 44, 0, 0, 2, 84, 0, 0, 2, 124, 0, 1, 0, 2, 128, 16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 1, 0, 2, 128, 16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 1, 0, 2, 128, 16, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 0, 0, 0, 0, 0, 4, 0, 1, 0, 2, 128, 16, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 0, 0, 0, 0, 0, 4, 0, 1, 0, 1, 128, 20, 0, 0, 0, 0, 255, 255, 255, 255, 0, 0, 0, 0, 255, 255, 255, 255, 0, 0, 0, 0, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 20, 0, 0, 0, 0, 255, 255, 255, 255, 0, 0, 0, 0, 255, 255, 255, 255, 0, 0, 0, 0, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 20, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 20, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 0, 0, 0, 0, 255, 255, 255, 255, 0, 0, 0, 0, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 0, 0, 0, 0, 255, 255, 255, 255, 0, 0, 0, 0, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 2, 0, 4, 128, 16, 0, 0, 0, 0, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 2, 0, 4, 128, 16, 0, 0, 0, 0, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 2, 0, 4, 128, 16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 2, 0, 4, 128, 16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 4, 0, 4, 128, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 128, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 4, 0, 4, 128, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 128, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 18, 0, 16, 0, 0, 1, 16, 0, 0, 0, 0, 0, 0, 0, 36, 0, 0, 0, 72, 0, 0, 0, 108, 0, 0, 0, 144, 0, 0, 0, 186, 0, 0, 0, 228, 0, 0, 1, 14, 0, 0, 1, 56, 0, 0, 1, 98, 0, 0, 1, 140, 0, 0, 1, 182, 0, 0, 1, 224, 0, 0, 2, 10, 0, 0, 2, 52, 0, 0, 2, 94, 0, 1, 0, 2, 128, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 1, 0, 2, 128, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 1, 0, 2, 128, 14, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 4, 0, 1, 0, 2, 128, 14, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 4, 0, 1, 0, 1, 128, 18, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 18, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 18, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 18, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 18, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 18, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 18, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 18, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 18, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 18, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 18, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 18, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 0, 16, 0, 0, 0, 80, 0, 0, 0, 0, 0, 0, 0, 22, 0, 0, 0, 44, 0, 0, 0, 66, 0, 0, 0, 88, 0, 0, 0, 110, 0, 0, 0, 132, 0, 0, 0, 154, 0, 0, 0, 176, 0, 0, 0, 198, 0, 0, 0, 220, 0, 0, 0, 226, 0, 0, 0, 232, 0, 0, 0, 238, 0, 0, 0, 244, 0, 0, 0, 250, 0, 1, 0, 1, 128, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 8, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 8, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 8, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 8, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 8, 0, 1, 0, 1, 0, 8, 0, 1, 0, 1, 0, 8, 0, 1, 0, 1, 0, 8, 0, 1, 0, 1, 0, 8, 0, 1, 0, 1, 0, 8, 0, 10, 0, 16, 0, 0, 0, 152, 0, 0, 0, 0, 0, 0, 0, 24, 0, 0, 0, 48, 0, 0, 0, 74, 0, 0, 0, 100, 0, 0, 0, 126, 0, 0, 0, 152, 0, 0, 0, 178, 0, 0, 0, 204, 0, 0, 0, 230, 0, 0, 1, 0, 0, 0, 1, 26, 0, 0, 1, 52, 0, 0, 1, 78, 0, 0, 1, 104, 0, 0, 1, 128, 0, 1, 0, 2, 0, 2, 128, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 2, 0, 2, 128, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 10, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 10, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 10, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 10, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 10, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 10, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 10, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 10, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 10, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 10, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 2, 0, 2, 128, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 2, 0, 2, 128, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10, 0, 16, 0, 0, 0, 152, 0, 0, 0, 0, 0, 0, 0, 24, 0, 0, 0, 48, 0, 0, 0, 74, 0, 0, 0, 100, 0, 0, 0, 126, 0, 0, 0, 152, 0, 0, 0, 178, 0, 0, 0, 204, 0, 0, 0, 230, 0, 0, 1, 0, 0, 0, 1, 26, 0, 0, 1, 52, 0, 0, 1, 78, 0, 0, 1, 104, 0, 0, 1, 128, 0, 1, 0, 2, 128, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 1, 0, 2, 128, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 1, 0, 1, 128, 10, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 10, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 10, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 10, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 10, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 10, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 10, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 10, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 10, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 10, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 2, 128, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 1, 0, 2, 128, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 12, 0, 16, 0, 0, 0, 152, 0, 0, 0, 0, 0, 0, 0, 26, 0, 0, 0, 52, 0, 0, 0, 82, 0, 0, 0, 112, 0, 0, 0, 142, 0, 0, 0, 172, 0, 0, 0, 202, 0, 0, 0, 232, 0, 0, 1, 6, 0, 0, 1, 36, 0, 0, 1, 66, 0, 0, 1, 96, 0, 0, 1, 122, 0, 0, 1, 148, 0, 0, 1, 154, 0, 1, 0, 3, 0, 2, 128, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 1, 0, 3, 0, 2, 128, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 1, 0, 1, 128, 12, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 12, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 12, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 12, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 12, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 12, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 12, 0, 0, 0, 0, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 12, 0, 0, 0, 0, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 3, 128, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 128, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 3, 128, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 128, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 12, 0, 1, 0, 1, 0, 12, 0, 16, 0, 16, 0, 0, 0, 192, 0, 0, 0, 0, 0, 0, 0, 26, 0, 0, 0, 52, 0, 0, 0, 78, 0, 0, 0, 104, 0, 0, 0, 142, 0, 0, 0, 180, 0, 0, 0, 218, 0, 0, 1, 0, 0, 0, 1, 38, 0, 0, 1, 76, 0, 0, 1, 114, 0, 0, 1, 152, 0, 0, 1, 178, 0, 0, 1, 204, 0, 0, 1, 230, 0, 1, 0, 3, 0, 4, 128, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 1, 0, 3, 0, 4, 128, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 1, 0, 3, 0, 4, 128, 8, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 4, 0, 1, 0, 3, 0, 4, 128, 8, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 4, 0, 1, 0, 1, 128, 16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 16, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 16, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 3, 0, 4, 128, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 1, 0, 3, 0, 4, 128, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 1, 0, 3, 0, 4, 128, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 1, 0, 3, 0, 4, 128, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 10, 0, 16, 0, 0, 0, 108, 0, 0, 0, 0, 0, 0, 0, 6, 0, 0, 0, 12, 0, 0, 0, 18, 0, 0, 0, 24, 0, 0, 0, 48, 0, 0, 0, 72, 0, 0, 0, 96, 0, 0, 0, 120, 0, 0, 0, 146, 0, 0, 0, 172, 0, 0, 0, 198, 0, 0, 0, 224, 0, 0, 0, 250, 0, 0, 1, 20, 0, 0, 1, 44, 0, 1, 0, 1, 0, 10, 0, 1, 0, 1, 0, 10, 0, 1, 0, 1, 0, 10, 0, 1, 0, 1, 0, 10, 0, 1, 0, 2, 0, 2, 128, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 2, 0, 2, 128, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 2, 0, 2, 128, 8, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 2, 0, 2, 128, 8, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 10, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 10, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 10, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 10, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 2, 128, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 1, 0, 2, 128, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 12, 0, 16, 0, 0, 0, 96, 0, 0, 0, 0, 0, 0, 0, 6, 0, 0, 0, 12, 0, 0, 0, 18, 0, 0, 0, 24, 0, 0, 0, 54, 0, 0, 0, 84, 0, 0, 0, 114, 0, 0, 0, 144, 0, 0, 0, 174, 0, 0, 0, 204, 0, 0, 0, 234, 0, 0, 1, 8, 0, 0, 1, 14, 0, 0, 1, 20, 0, 0, 1, 26, 0, 1, 0, 1, 0, 12, 0, 1, 0, 1, 0, 12, 0, 1, 0, 1, 0, 12, 0, 1, 0, 1, 0, 12, 0, 1, 0, 1, 128, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 12, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 12, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 12, 0, 1, 0, 1, 0, 12, 0, 1, 0, 1, 0, 12, 0, 1, 0, 1, 0, 12, 0, 8, 0, 16, 0, 0, 0, 80, 0, 0, 0, 0, 0, 0, 0, 6, 0, 0, 0, 12, 0, 0, 0, 18, 0, 0, 0, 24, 0, 0, 0, 30, 0, 0, 0, 36, 0, 0, 0, 58, 0, 0, 0, 80, 0, 0, 0, 102, 0, 0, 0, 124, 0, 0, 0, 146, 0, 0, 0, 168, 0, 0, 0, 190, 0, 0, 0, 212, 0, 0, 0, 234, 0, 1, 0, 1, 0, 8, 0, 1, 0, 1, 0, 8, 0, 1, 0, 1, 0, 8, 0, 1, 0, 1, 0, 8, 0, 1, 0, 1, 0, 8, 0, 1, 0, 1, 0, 8, 0, 1, 0, 1, 128, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 8, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 8, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 8, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 8, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 12, 0, 16, 0, 0, 0, 152, 0, 0, 0, 0, 0, 0, 0, 24, 0, 0, 0, 48, 0, 0, 0, 72, 0, 0, 0, 96, 0, 0, 0, 124, 0, 0, 0, 152, 0, 0, 0, 182, 0, 0, 0, 212, 0, 0, 0, 242, 0, 0, 1, 16, 0, 0, 1, 44, 0, 0, 1, 72, 0, 0, 1, 96, 0, 0, 1, 120, 0, 0, 1, 144, 0, 1, 0, 2, 0, 4, 128, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 2, 0, 4, 128, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 2, 0, 4, 128, 8, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 2, 0, 4, 128, 8, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 2, 0, 2, 128, 10, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 2, 0, 2, 128, 10, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 12, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 12, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 12, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 12, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 2, 128, 10, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 1, 0, 2, 128, 10, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 1, 0, 2, 128, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 1, 0, 2, 128, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 1, 0, 2, 128, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 1, 0, 2, 128, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 14, 0, 16, 0, 0, 0, 224, 0, 0, 0, 0, 0, 0, 0, 34, 0, 0, 0, 68, 0, 0, 0, 102, 0, 0, 0, 136, 0, 0, 0, 170, 0, 0, 0, 204, 0, 0, 0, 238, 0, 0, 1, 16, 0, 0, 1, 50, 0, 0, 1, 84, 0, 0, 1, 118, 0, 0, 1, 152, 0, 0, 1, 186, 0, 0, 1, 220, 0, 0, 1, 254, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 0, 16, 0, 0, 0, 128, 0, 0, 0, 0, 0, 0, 0, 22, 0, 0, 0, 44, 0, 0, 0, 66, 0, 0, 0, 88, 0, 0, 0, 110, 0, 0, 0, 132, 0, 0, 0, 154, 0, 0, 0, 176, 0, 0, 0, 198, 0, 0, 0, 220, 0, 0, 0, 242, 0, 0, 1, 8, 0, 0, 1, 30, 0, 0, 1, 52, 0, 0, 1, 74, 0, 1, 0, 1, 128, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 8, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 8, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 8, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 8, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 8, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 8, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 8, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 8, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 8, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 8, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 14, 0, 16, 0, 0, 0, 224, 0, 0, 0, 0, 0, 0, 0, 34, 0, 0, 0, 68, 0, 0, 0, 102, 0, 0, 0, 136, 0, 0, 0, 170, 0, 0, 0, 204, 0, 0, 0, 238, 0, 0, 1, 16, 0, 0, 1, 50, 0, 0, 1, 84, 0, 0, 1, 118, 0, 0, 1, 152, 0, 0, 1, 186, 0, 0, 1, 220, 0, 0, 1, 254, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 14, 0, 16, 0, 0, 0, 220, 0, 0, 0, 0, 0, 0, 0, 34, 0, 0, 0, 68, 0, 0, 0, 102, 0, 0, 0, 136, 0, 0, 0, 170, 0, 0, 0, 204, 0, 0, 0, 236, 0, 0, 1, 12, 0, 0, 1, 46, 0, 0, 1, 80, 0, 0, 1, 114, 0, 0, 1, 148, 0, 0, 1, 182, 0, 0, 1, 216, 0, 0, 1, 250, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 2, 0, 2, 128, 12, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 2, 0, 2, 128, 12, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255], "i8", ALLOC_NONE, Runtime.GLOBAL_BASE + 828980);
  allocate([255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 14, 0, 16, 0, 0, 0, 200, 0, 0, 0, 0, 0, 0, 0, 34, 0, 0, 0, 68, 0, 0, 0, 102, 0, 0, 0, 136, 0, 0, 0, 170, 0, 0, 0, 204, 0, 0, 0, 238, 0, 0, 1, 16, 0, 0, 1, 50, 0, 0, 1, 84, 0, 0, 1, 118, 0, 0, 1, 152, 0, 0, 1, 176, 0, 0, 1, 200, 0, 0, 1, 224, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 2, 0, 6, 128, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 2, 0, 6, 128, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 2, 0, 6, 128, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 2, 0, 6, 128, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 14, 0, 16, 0, 0, 0, 224, 0, 0, 0, 0, 0, 0, 0, 34, 0, 0, 0, 68, 0, 0, 0, 102, 0, 0, 0, 136, 0, 0, 0, 170, 0, 0, 0, 204, 0, 0, 0, 238, 0, 0, 1, 16, 0, 0, 1, 50, 0, 0, 1, 84, 0, 0, 1, 118, 0, 0, 1, 152, 0, 0, 1, 186, 0, 0, 1, 220, 0, 0, 1, 254, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 14, 0, 16, 0, 0, 0, 224, 0, 0, 0, 0, 0, 0, 0, 34, 0, 0, 0, 68, 0, 0, 0, 102, 0, 0, 0, 136, 0, 0, 0, 170, 0, 0, 0, 204, 0, 0, 0, 238, 0, 0, 1, 16, 0, 0, 1, 50, 0, 0, 1, 84, 0, 0, 1, 118, 0, 0, 1, 152, 0, 0, 1, 186, 0, 0, 1, 220, 0, 0, 1, 254, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 14, 0, 16, 0, 0, 0, 176, 0, 0, 0, 0, 0, 0, 0, 34, 0, 0, 0, 68, 0, 0, 0, 102, 0, 0, 0, 136, 0, 0, 0, 170, 0, 0, 0, 204, 0, 0, 0, 238, 0, 0, 1, 16, 0, 0, 1, 40, 0, 0, 1, 64, 0, 0, 1, 88, 0, 0, 1, 112, 0, 0, 1, 136, 0, 0, 1, 160, 0, 0, 1, 184, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 2, 0, 6, 128, 8, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 2, 0, 6, 128, 8, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 2, 0, 6, 128, 8, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 2, 0, 6, 128, 8, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 2, 0, 6, 128, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 2, 0, 6, 128, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 2, 0, 6, 128, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 2, 0, 6, 128, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 14, 0, 16, 0, 0, 0, 224, 0, 0, 0, 0, 0, 0, 0, 34, 0, 0, 0, 68, 0, 0, 0, 102, 0, 0, 0, 136, 0, 0, 0, 170, 0, 0, 0, 204, 0, 0, 0, 238, 0, 0, 1, 16, 0, 0, 1, 50, 0, 0, 1, 84, 0, 0, 1, 118, 0, 0, 1, 152, 0, 0, 1, 186, 0, 0, 1, 220, 0, 0, 1, 254, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 14, 0, 16, 0, 0, 0, 224, 0, 0, 0, 0, 0, 0, 0, 34, 0, 0, 0, 68, 0, 0, 0, 102, 0, 0, 0, 136, 0, 0, 0, 170, 0, 0, 0, 204, 0, 0, 0, 238, 0, 0, 1, 16, 0, 0, 1, 50, 0, 0, 1, 84, 0, 0, 1, 118, 0, 0, 1, 152, 0, 0, 1, 186, 0, 0, 1, 220, 0, 0, 1, 254, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 0, 16, 0, 0, 0, 128, 0, 0, 0, 0, 0, 0, 0, 22, 0, 0, 0, 44, 0, 0, 0, 66, 0, 0, 0, 88, 0, 0, 0, 110, 0, 0, 0, 132, 0, 0, 0, 154, 0, 0, 0, 176, 0, 0, 0, 198, 0, 0, 0, 220, 0, 0, 0, 242, 0, 0, 1, 8, 0, 0, 1, 30, 0, 0, 1, 52, 0, 0, 1, 74, 0, 1, 0, 1, 128, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 8, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 8, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 8, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 8, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 8, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 8, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 8, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 8, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 0, 16, 0, 0, 0, 124, 0, 0, 0, 0, 0, 0, 0, 22, 0, 0, 0, 44, 0, 0, 0, 66, 0, 0, 0, 88, 0, 0, 0, 110, 0, 0, 0, 132, 0, 0, 0, 154, 0, 0, 0, 176, 0, 0, 0, 198, 0, 0, 0, 220, 0, 0, 0, 242, 0, 0, 1, 8, 0, 0, 1, 30, 0, 0, 1, 52, 0, 0, 1, 72, 0, 1, 0, 1, 128, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 8, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 8, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 8, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 8, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 8, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 8, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 8, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 8, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 2, 0, 2, 128, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 2, 0, 2, 128, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 12, 0, 16, 0, 0, 0, 164, 0, 0, 0, 0, 0, 0, 0, 24, 0, 0, 0, 48, 0, 0, 0, 76, 0, 0, 0, 104, 0, 0, 0, 134, 0, 0, 0, 164, 0, 0, 0, 192, 0, 0, 0, 220, 0, 0, 0, 250, 0, 0, 1, 24, 0, 0, 1, 54, 0, 0, 1, 84, 0, 0, 1, 112, 0, 0, 1, 140, 0, 0, 1, 164, 0, 1, 0, 2, 0, 4, 128, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 2, 0, 4, 128, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 2, 0, 2, 128, 10, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 2, 0, 2, 128, 10, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 12, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 12, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 2, 128, 10, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 1, 0, 2, 128, 10, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 1, 0, 1, 128, 12, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 12, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 2, 0, 2, 128, 10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 2, 0, 2, 128, 10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 2, 0, 4, 128, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 2, 0, 4, 128, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 12, 0, 16, 0, 0, 0, 144, 0, 0, 0, 0, 0, 0, 0, 6, 0, 0, 0, 12, 0, 0, 0, 42, 0, 0, 0, 72, 0, 0, 0, 102, 0, 0, 0, 132, 0, 0, 0, 162, 0, 0, 0, 192, 0, 0, 0, 222, 0, 0, 0, 252, 0, 0, 1, 26, 0, 0, 1, 56, 0, 0, 1, 86, 0, 0, 1, 116, 0, 0, 1, 122, 0, 1, 0, 1, 0, 12, 0, 1, 0, 1, 0, 12, 0, 1, 0, 1, 128, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 12, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 12, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 12, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 12, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 12, 0, 1, 0, 1, 0, 12, 0, 12, 0, 16, 0, 0, 0, 164, 0, 0, 0, 0, 0, 0, 0, 24, 0, 0, 0, 48, 0, 0, 0, 76, 0, 0, 0, 104, 0, 0, 0, 134, 0, 0, 0, 164, 0, 0, 0, 192, 0, 0, 0, 220, 0, 0, 0, 250, 0, 0, 1, 24, 0, 0, 1, 54, 0, 0, 1, 84, 0, 0, 1, 112, 0, 0, 1, 140, 0, 0, 1, 164, 0, 1, 0, 2, 128, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 1, 0, 2, 128, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 1, 0, 2, 128, 10, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 1, 0, 2, 128, 10, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 1, 0, 1, 128, 12, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 12, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 2, 0, 2, 128, 10, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 2, 0, 2, 128, 10, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 12, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 12, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 12, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 12, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 2, 128, 10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 1, 0, 2, 128, 10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 1, 0, 2, 128, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 1, 0, 2, 128, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 16, 0, 16, 0, 0, 0, 212, 0, 0, 0, 0, 0, 0, 0, 38, 0, 0, 0, 76, 0, 0, 0, 114, 0, 0, 0, 152, 0, 0, 0, 190, 0, 0, 0, 228, 0, 0, 1, 10, 0, 0, 1, 48, 0, 0, 1, 86, 0, 0, 1, 124, 0, 0, 1, 154, 0, 0, 1, 184, 0, 0, 1, 210, 0, 0, 1, 236, 0, 0, 2, 6, 0, 1, 0, 1, 128, 16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 16, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 16, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 16, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 16, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 3, 0, 4, 128, 10, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 1, 0, 3, 0, 4, 128, 10, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 1, 0, 3, 0, 4, 128, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 1, 0, 3, 0, 4, 128, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 1, 0, 3, 0, 4, 128, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 1, 0, 3, 0, 4, 128, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 16, 0, 16, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 38, 0, 0, 0, 76, 0, 0, 0, 114, 0, 0, 0, 152, 0, 0, 0, 190, 0, 0, 0, 228, 0, 0, 1, 10, 0, 0, 1, 48, 0, 0, 1, 86, 0, 0, 1, 124, 0, 0, 1, 162, 0, 0, 1, 200, 0, 0, 1, 238, 0, 0, 2, 20, 0, 0, 2, 58, 0, 1, 0, 1, 128, 16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 16, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 16, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 16, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 16, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 16, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 16, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 16, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 16, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 16, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 16, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 14, 0, 16, 0, 0, 0, 220, 0, 0, 0, 0, 0, 0, 0, 34, 0, 0, 0, 68, 0, 0, 0, 102, 0, 0, 0, 136, 0, 0, 0, 170, 0, 0, 0, 204, 0, 0, 0, 238, 0, 0, 1, 16, 0, 0, 1, 50, 0, 0, 1, 84, 0, 0, 1, 118, 0, 0, 1, 152, 0, 0, 1, 186, 0, 0, 1, 220, 0, 0, 1, 254, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 3, 128, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 128, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 3, 128, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 128, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 14, 0, 16, 0, 0, 0, 224, 0, 0, 0, 0, 0, 0, 0, 34, 0, 0, 0, 68, 0, 0, 0, 102, 0, 0, 0, 136, 0, 0, 0, 170, 0, 0, 0, 204, 0, 0, 0, 238, 0, 0, 1, 16, 0, 0, 1, 50, 0, 0, 1, 84, 0, 0, 1, 118, 0, 0, 1, 152, 0, 0, 1, 186, 0, 0, 1, 220, 0, 0, 1, 254, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 14, 0, 16, 0, 0, 0, 220, 0, 0, 0, 0, 0, 0, 0, 34, 0, 0, 0, 68, 0, 0, 0, 102, 0, 0, 0, 136, 0, 0, 0, 170, 0, 0, 0, 204, 0, 0, 0, 236, 0, 0, 1, 12, 0, 0, 1, 46, 0, 0, 1, 80, 0, 0, 1, 114, 0, 0, 1, 148, 0, 0, 1, 182, 0, 0, 1, 216, 0, 0, 1, 250, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 2, 128, 12, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 1, 0, 2, 128, 12, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 14, 0, 16, 0, 0, 0, 216, 0, 0, 0, 0, 0, 0, 0, 32, 0, 0, 0, 64, 0, 0, 0, 98, 0, 0, 0, 132, 0, 0, 0, 166, 0, 0, 0, 200, 0, 0, 0, 234, 0, 0, 1, 12, 0, 0, 1, 46, 0, 0, 1, 80, 0, 0, 1, 114, 0, 0, 1, 148, 0, 0, 1, 182, 0, 0, 1, 216, 0, 0, 1, 248, 0, 1, 0, 2, 128, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 1, 0, 2, 128, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 2, 128, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 1, 0, 2, 128, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 14, 0, 16, 0, 0, 0, 220, 0, 0, 0, 0, 0, 0, 0, 34, 0, 0, 0, 68, 0, 0, 0, 102, 0, 0, 0, 136, 0, 0, 0, 170, 0, 0, 0, 204, 0, 0, 0, 236, 0, 0, 1, 12, 0, 0, 1, 46, 0, 0, 1, 80, 0, 0, 1, 114, 0, 0, 1, 148, 0, 0, 1, 182, 0, 0, 1, 216, 0, 0, 1, 250, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 2, 128, 12, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 2, 0, 1, 0, 2, 128, 12, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 2, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255], "i8", ALLOC_NONE, Runtime.GLOBAL_BASE + 839220);
  allocate([1, 0, 1, 128, 14, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 14, 0, 16, 0, 0, 0, 192, 0, 0, 0, 0, 0, 0, 0, 34, 0, 0, 0, 68, 0, 0, 0, 102, 0, 0, 0, 136, 0, 0, 0, 170, 0, 0, 0, 204, 0, 0, 0, 238, 0, 0, 1, 16, 0, 0, 1, 48, 0, 0, 1, 80, 0, 0, 1, 112, 0, 0, 1, 144, 0, 0, 1, 168, 0, 0, 1, 192, 0, 0, 1, 216, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 2, 128, 12, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 1, 0, 2, 128, 12, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 1, 0, 2, 128, 12, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 1, 0, 2, 128, 12, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 1, 0, 2, 128, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6, 0, 1, 0, 2, 128, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6, 0, 1, 0, 2, 128, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6, 0, 1, 0, 2, 128, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6, 0, 14, 0, 16, 0, 0, 0, 224, 0, 0, 0, 0, 0, 0, 0, 34, 0, 0, 0, 68, 0, 0, 0, 102, 0, 0, 0, 136, 0, 0, 0, 170, 0, 0, 0, 204, 0, 0, 0, 238, 0, 0, 1, 16, 0, 0, 1, 50, 0, 0, 1, 84, 0, 0, 1, 118, 0, 0, 1, 152, 0, 0, 1, 186, 0, 0, 1, 220, 0, 0, 1, 254, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 14, 0, 16, 0, 0, 0, 220, 0, 0, 0, 0, 0, 0, 0, 34, 0, 0, 0, 68, 0, 0, 0, 102, 0, 0, 0, 136, 0, 0, 0, 170, 0, 0, 0, 204, 0, 0, 0, 238, 0, 0, 1, 16, 0, 0, 1, 50, 0, 0, 1, 84, 0, 0, 1, 118, 0, 0, 1, 152, 0, 0, 1, 186, 0, 0, 1, 220, 0, 0, 1, 254, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 3, 128, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 128, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 3, 128, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 128, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 0, 16, 0, 0, 0, 128, 0, 0, 0, 0, 0, 0, 0, 22, 0, 0, 0, 44, 0, 0, 0, 66, 0, 0, 0, 88, 0, 0, 0, 110, 0, 0, 0, 132, 0, 0, 0, 154, 0, 0, 0, 176, 0, 0, 0, 198, 0, 0, 0, 220, 0, 0, 0, 242, 0, 0, 1, 8, 0, 0, 1, 30, 0, 0, 1, 52, 0, 0, 1, 74, 0, 1, 0, 1, 128, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 8, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 8, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 8, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 8, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 8, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 8, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 8, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 8, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 8, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 8, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 14, 0, 16, 0, 0, 0, 188, 0, 0, 0, 0, 0, 0, 0, 24, 0, 0, 0, 48, 0, 0, 0, 72, 0, 0, 0, 96, 0, 0, 0, 120, 0, 0, 0, 144, 0, 0, 0, 178, 0, 0, 0, 212, 0, 0, 0, 246, 0, 0, 1, 24, 0, 0, 1, 58, 0, 0, 1, 92, 0, 0, 1, 126, 0, 0, 1, 160, 0, 0, 1, 194, 0, 1, 0, 2, 0, 6, 128, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 2, 0, 6, 128, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 2, 0, 6, 128, 8, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 2, 0, 6, 128, 8, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 2, 0, 6, 128, 8, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 2, 0, 6, 128, 8, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 14, 0, 16, 0, 0, 0, 224, 0, 0, 0, 0, 0, 0, 0, 34, 0, 0, 0, 68, 0, 0, 0, 102, 0, 0, 0, 136, 0, 0, 0, 170, 0, 0, 0, 204, 0, 0, 0, 238, 0, 0, 1, 16, 0, 0, 1, 50, 0, 0, 1, 84, 0, 0, 1, 118, 0, 0, 1, 152, 0, 0, 1, 186, 0, 0, 1, 220, 0, 0, 1, 254, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 14, 0, 16, 0, 0, 0, 176, 0, 0, 0, 0, 0, 0, 0, 24, 0, 0, 0, 48, 0, 0, 0, 72, 0, 0, 0, 96, 0, 0, 0, 120, 0, 0, 0, 144, 0, 0, 0, 168, 0, 0, 0, 192, 0, 0, 0, 226, 0, 0, 1, 4, 0, 0, 1, 38, 0, 0, 1, 72, 0, 0, 1, 106, 0, 0, 1, 140, 0, 0, 1, 174, 0, 1, 0, 2, 128, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6, 0, 1, 0, 2, 128, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6, 0, 1, 0, 2, 128, 8, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 6, 0, 1, 0, 2, 128, 8, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 6, 0, 1, 0, 2, 128, 8, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 6, 0, 1, 0, 2, 128, 8, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 6, 0, 1, 0, 2, 128, 8, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 6, 0, 1, 0, 2, 128, 8, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 6, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 18, 0, 16, 0, 0, 1, 24, 0, 0, 0, 0, 0, 0, 0, 42, 0, 0, 0, 84, 0, 0, 0, 126, 0, 0, 0, 168, 0, 0, 0, 210, 0, 0, 0, 252, 0, 0, 1, 38, 0, 0, 1, 80, 0, 0, 1, 122, 0, 0, 1, 164, 0, 0, 1, 206, 0, 0, 1, 248, 0, 0, 2, 34, 0, 0, 2, 76, 0, 0, 2, 118, 0, 1, 0, 3, 128, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 128, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 3, 128, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 128, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 18, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 18, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 18, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 18, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 18, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 18, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 18, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 255, 255, 255, 255, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 18, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 255, 255, 255, 255, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 18, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 18, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 18, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 18, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 3, 128, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 128, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 3, 128, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 128, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 16, 0, 16, 0, 0, 0, 252, 0, 0, 0, 0, 0, 0, 0, 38, 0, 0, 0, 76, 0, 0, 0, 114, 0, 0, 0, 152, 0, 0, 0, 190, 0, 0, 0, 228, 0, 0, 1, 10, 0, 0, 1, 48, 0, 0, 1, 86, 0, 0, 1, 124, 0, 0, 1, 162, 0, 0, 1, 200, 0, 0, 1, 238, 0, 0, 2, 20, 0, 0, 2, 58, 0, 1, 0, 1, 128, 16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 16, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 16, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 16, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 16, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 16, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 16, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 16, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 16, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 16, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 16, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 3, 128, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 128, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 3, 128, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 128, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 14, 0, 16, 0, 0, 0, 224, 0, 0, 0, 0, 0, 0, 0, 34, 0, 0, 0, 68, 0, 0, 0, 102, 0, 0, 0, 136, 0, 0, 0, 170, 0, 0, 0, 204, 0, 0, 0, 238, 0, 0, 1, 16, 0, 0, 1, 50, 0, 0, 1, 84, 0, 0, 1, 118, 0, 0, 1, 152, 0, 0, 1, 186, 0, 0, 1, 220, 0, 0, 1, 254, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 14, 0, 16, 0, 0, 0, 200, 0, 0, 0, 0, 0, 0, 0, 34, 0, 0, 0, 68, 0, 0, 0, 102, 0, 0, 0, 136, 0, 0, 0, 170, 0, 0, 0, 204, 0, 0, 0, 238, 0, 0, 1, 16, 0, 0, 1, 50, 0, 0, 1, 84, 0, 0, 1, 118, 0, 0, 1, 152, 0, 0, 1, 176, 0, 0, 1, 200, 0, 0, 1, 224, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 2, 128, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6, 0, 1, 0, 2, 128, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6, 0, 1, 0, 2, 128, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6, 0, 1, 0, 2, 128, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6, 0, 16, 0, 16, 0, 0, 0, 240, 0, 0, 0, 0, 0, 0, 0, 36, 0, 0, 0, 72, 0, 0, 0, 108, 0, 0, 0, 144, 0, 0, 0, 180, 0, 0, 0, 216, 0, 0, 0, 252, 0, 0, 1, 32, 0, 0, 1, 70, 0, 0, 1, 108, 0, 0, 1, 146, 0, 0, 1, 184, 0, 0, 1, 222, 0, 0, 2, 4, 0, 0, 2, 42, 0, 1, 0, 2, 128, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 1, 0, 2, 128, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 1, 0, 2, 128, 14, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 2, 0, 1, 0, 2, 128, 14, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 2, 0, 1, 0, 2, 128, 14, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 2, 0, 1, 0, 2, 128, 14, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 2, 0, 1, 0, 2, 128, 14, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 2, 0, 1, 0, 2, 128, 14, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 2, 0, 1, 0, 1, 128, 16, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 16, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 16, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 16, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 14, 0, 16, 0, 0, 0, 220, 0, 0, 0, 0, 0, 0, 0, 34, 0, 0, 0, 68, 0, 0, 0, 102, 0, 0, 0, 136, 0, 0, 0, 170, 0, 0, 0, 204, 0, 0, 0, 238, 0, 0, 1, 16, 0, 0, 1, 50, 0, 0, 1, 84, 0, 0, 1, 118, 0, 0, 1, 152, 0, 0, 1, 186, 0, 0, 1, 220, 0, 0, 1, 254, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 3, 128, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 128, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 3, 128, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 128, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 14, 0, 16, 0, 0, 0, 224, 0, 0, 0, 0, 0, 0, 0, 34, 0, 0, 0, 68, 0, 0, 0, 102, 0, 0, 0, 136, 0, 0, 0, 170, 0, 0, 0, 204, 0, 0, 0, 238, 0, 0, 1, 16, 0, 0, 1, 50, 0, 0, 1, 84, 0, 0, 1, 118, 0, 0, 1, 152, 0, 0, 1, 186, 0, 0, 1, 220, 0, 0, 1, 254, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 16, 0, 16, 0, 0, 0, 192, 0, 0, 0, 0, 0, 0, 0, 38, 0, 0, 0, 76, 0, 0, 0, 114, 0, 0, 0, 152, 0, 0, 0, 190, 0, 0, 0, 228, 0, 0, 1, 10, 0, 0, 1, 48, 0, 0, 1, 74, 0, 0, 1, 100, 0, 0, 1, 126, 0, 0, 1, 152, 0, 0, 1, 178, 0, 0, 1, 204, 0, 0, 1, 230, 0, 1, 0, 1, 128, 16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 16, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 16, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 3, 0, 4, 128, 8, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 4, 0, 1, 0, 3, 0, 4, 128, 8, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 4, 0, 1, 0, 3, 0, 4, 128, 8, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 4, 0, 1, 0, 3, 0, 4, 128, 8, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 4, 0, 1, 0, 3, 0, 4, 128, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 1, 0, 3, 0, 4, 128, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 1, 0, 3, 0, 4, 128, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 1, 0, 3, 0, 4, 128, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 14, 0, 16, 0, 0, 0, 224, 0, 0, 0, 0, 0, 0, 0, 34, 0, 0, 0, 68, 0, 0, 0, 102, 0, 0, 0, 136, 0, 0, 0, 170, 0, 0, 0, 204, 0, 0, 0, 238, 0, 0, 1, 16, 0, 0, 1, 50, 0, 0, 1, 84, 0, 0, 1, 118, 0, 0, 1, 152, 0, 0, 1, 186, 0, 0, 1, 220, 0, 0, 1, 254, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 14, 0, 16, 0, 0, 0, 200, 0, 0, 0, 0, 0, 0, 0, 34, 0, 0, 0, 68, 0, 0, 0, 102, 0, 0, 0, 136, 0, 0, 0, 170, 0, 0, 0, 204, 0, 0, 0, 238, 0, 0, 1, 16, 0, 0, 1, 50, 0, 0, 1, 84, 0, 0, 1, 118, 0, 0, 1, 152, 0, 0, 1, 182, 0, 0, 1, 212, 0, 0, 1, 234, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 0, 0, 0, 0, 255], "i8", ALLOC_NONE, Runtime.GLOBAL_BASE + 849461);
  allocate([255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 3, 0, 2, 128, 10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 1, 0, 3, 0, 2, 128, 10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 1, 0, 3, 0, 4, 128, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 1, 0, 3, 0, 4, 128, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 18, 0, 16, 0, 0, 1, 24, 0, 0, 0, 0, 0, 0, 0, 42, 0, 0, 0, 84, 0, 0, 0, 126, 0, 0, 0, 168, 0, 0, 0, 210, 0, 0, 0, 252, 0, 0, 1, 38, 0, 0, 1, 80, 0, 0, 1, 122, 0, 0, 1, 164, 0, 0, 1, 206, 0, 0, 1, 248, 0, 0, 2, 34, 0, 0, 2, 76, 0, 0, 2, 118, 0, 1, 0, 3, 128, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 128, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 3, 128, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 128, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 18, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 18, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 18, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 255, 255, 255, 255, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 18, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 255, 255, 255, 255, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 18, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 18, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 18, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 18, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 18, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 18, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 18, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 18, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 3, 128, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 128, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 3, 128, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 128, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 14, 0, 16, 0, 0, 0, 220, 0, 0, 0, 0, 0, 0, 0, 34, 0, 0, 0, 68, 0, 0, 0, 102, 0, 0, 0, 136, 0, 0, 0, 170, 0, 0, 0, 204, 0, 0, 0, 238, 0, 0, 1, 16, 0, 0, 1, 50, 0, 0, 1, 84, 0, 0, 1, 118, 0, 0, 1, 152, 0, 0, 1, 186, 0, 0, 1, 220, 0, 0, 1, 254, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 3, 128, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 128, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 3, 128, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 128, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 16, 0, 16, 0, 0, 0, 216, 0, 0, 0, 0, 0, 0, 0, 38, 0, 0, 0, 76, 0, 0, 0, 114, 0, 0, 0, 152, 0, 0, 0, 190, 0, 0, 0, 228, 0, 0, 1, 10, 0, 0, 1, 48, 0, 0, 1, 86, 0, 0, 1, 124, 0, 0, 1, 158, 0, 0, 1, 192, 0, 0, 1, 218, 0, 0, 1, 244, 0, 0, 2, 14, 0, 1, 0, 1, 128, 16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 16, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 16, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 16, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 16, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 16, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 16, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 3, 0, 2, 128, 12, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 1, 0, 3, 0, 2, 128, 12, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 1, 0, 3, 0, 4, 128, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 1, 0, 3, 0, 4, 128, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 1, 0, 3, 0, 4, 128, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 1, 0, 3, 0, 4, 128, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 14, 0, 16, 0, 0, 0, 224, 0, 0, 0, 0, 0, 0, 0, 34, 0, 0, 0, 68, 0, 0, 0, 102, 0, 0, 0, 136, 0, 0, 0, 170, 0, 0, 0, 204, 0, 0, 0, 238, 0, 0, 1, 16, 0, 0, 1, 50, 0, 0, 1, 84, 0, 0, 1, 118, 0, 0, 1, 152, 0, 0, 1, 186, 0, 0, 1, 220, 0, 0, 1, 254, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10, 0, 16, 0, 0, 0, 160, 0, 0, 0, 0, 0, 0, 0, 26, 0, 0, 0, 52, 0, 0, 0, 78, 0, 0, 0, 104, 0, 0, 0, 130, 0, 0, 0, 156, 0, 0, 0, 182, 0, 0, 0, 208, 0, 0, 0, 234, 0, 0, 1, 4, 0, 0, 1, 30, 0, 0, 1, 56, 0, 0, 1, 82, 0, 0, 1, 108, 0, 0, 1, 134, 0, 1, 0, 1, 128, 10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 10, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 10, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 10, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 10, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 10, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 10, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 10, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 10, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 10, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 10, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 12, 0, 16, 0, 0, 0, 152, 0, 0, 0, 0, 0, 0, 0, 24, 0, 0, 0, 48, 0, 0, 0, 72, 0, 0, 0, 96, 0, 0, 0, 124, 0, 0, 0, 152, 0, 0, 0, 182, 0, 0, 0, 212, 0, 0, 0, 242, 0, 0, 1, 16, 0, 0, 1, 44, 0, 0, 1, 72, 0, 0, 1, 96, 0, 0, 1, 120, 0, 0, 1, 144, 0, 1, 0, 2, 128, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 1, 0, 2, 128, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 1, 0, 2, 128, 8, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 4, 0, 1, 0, 2, 128, 8, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 4, 0, 1, 0, 2, 128, 10, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 1, 0, 2, 128, 10, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 1, 0, 1, 128, 12, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 12, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 2, 0, 2, 128, 10, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 2, 0, 2, 128, 10, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 2, 0, 4, 128, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 2, 0, 4, 128, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 2, 0, 4, 128, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 2, 0, 4, 128, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10, 0, 16, 0, 0, 0, 160, 0, 0, 0, 0, 0, 0, 0, 26, 0, 0, 0, 52, 0, 0, 0, 78, 0, 0, 0, 104, 0, 0, 0, 130, 0, 0, 0, 156, 0, 0, 0, 182, 0, 0, 0, 208, 0, 0, 0, 234, 0, 0, 1, 4, 0, 0, 1, 30, 0, 0, 1, 56, 0, 0, 1, 82, 0, 0, 1, 108, 0, 0, 1, 134, 0, 1, 0, 1, 128, 10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 10, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 10, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 10, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 10, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 10, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 10, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 10, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 10, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 10, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 10, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 16, 0, 16, 0, 0, 0, 160, 0, 0, 0, 0, 0, 0, 0, 26, 0, 0, 0, 52, 0, 0, 0, 86, 0, 0, 0, 120, 0, 0, 0, 158, 0, 0, 0, 196, 0, 0, 0, 234, 0, 0, 1, 16, 0, 0, 1, 54, 0, 0, 1, 92, 0, 0, 1, 126, 0, 0, 1, 160, 0, 0, 1, 166, 0, 0, 1, 172, 0, 0, 1, 178, 0, 1, 0, 3, 0, 4, 128, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 1, 0, 3, 0, 4, 128, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 1, 0, 3, 0, 2, 128, 12, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 1, 0, 3, 0, 2, 128, 12, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 1, 0, 1, 128, 16, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 16, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 16, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 16, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 3, 128, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 128, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 3, 128, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 128, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 16, 0, 1, 0, 1, 0, 16, 0, 1, 0, 1, 0, 16, 0, 1, 0, 1, 0, 16, 0, 12, 0, 16, 0, 0, 0, 96, 0, 0, 0, 0, 0, 0, 0, 6, 0, 0, 0, 12, 0, 0, 0, 18, 0, 0, 0, 24, 0, 0, 0, 30, 0, 0, 0, 36, 0, 0, 0, 42, 0, 0, 0, 48, 0, 0, 0, 78, 0, 0, 0, 108, 0, 0, 0, 138, 0, 0, 0, 168, 0, 0, 0, 198, 0, 0, 0, 228, 0, 0, 1, 2, 0, 1, 0, 1, 0, 12, 0, 1, 0, 1, 0, 12, 0, 1, 0, 1, 0, 12, 0, 1, 0, 1, 0, 12, 0, 1, 0, 1, 0, 12, 0, 1, 0, 1, 0, 12, 0, 1, 0, 1, 0, 12, 0, 1, 0, 1, 0, 12, 0, 1, 0, 1, 128, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 12, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 12, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10, 0, 16, 0, 0, 0, 108, 0, 0, 0, 0, 0, 0, 0, 24, 0, 0, 0, 48, 0, 0, 0, 72, 0, 0, 0, 96, 0, 0, 0, 122, 0, 0, 0, 148, 0, 0, 0, 174, 0, 0, 0, 200, 0, 0, 0, 226, 0, 0, 0, 252, 0, 0, 1, 20, 0, 0, 1, 44, 0, 0, 1, 50, 0, 0, 1, 56, 0, 0, 1, 62, 0, 1, 0, 2, 128, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 1, 0, 2, 128, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 1, 0, 2, 128, 8, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 2, 0, 1, 0, 2, 128, 8, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 2, 0, 1, 0, 1, 128, 10, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 10, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 10, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 10, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 2, 0, 2, 128, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 2, 0, 2, 128, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 10, 0, 1, 0, 1, 0, 10, 0, 1, 0, 1, 0, 10, 0, 1, 0, 1, 0, 10, 0, 10, 0, 16, 0, 0, 0, 152, 0, 0, 0, 0, 0, 0, 0, 24, 0, 0, 0, 48, 0, 0, 0, 74, 0, 0, 0, 100, 0, 0, 0, 126, 0, 0, 0, 152, 0, 0, 0, 178, 0, 0, 0, 204, 0, 0, 0, 230, 0, 0, 1, 0, 0, 0, 1, 26, 0, 0, 1, 52, 0, 0, 1, 78, 0, 0, 1, 104, 0, 0, 1, 128, 0, 1, 0, 2, 0, 2, 128, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 2, 0, 2, 128, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 10, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 10, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 10, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 10, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 10, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 10, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 10, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 10, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 10, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 10, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 2, 0, 2, 128, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 2, 0, 2, 128, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 0, 16, 0, 0, 0, 128, 0, 0, 0, 0, 0, 0, 0, 22, 0, 0, 0, 44, 0, 0, 0, 66, 0, 0, 0, 88, 0, 0, 0, 110, 0, 0, 0, 132, 0, 0, 0, 154, 0, 0, 0, 176, 0, 0, 0, 198, 0, 0, 0, 220, 0, 0, 0, 242, 0, 0, 1, 8, 0, 0, 1, 30, 0, 0, 1, 52, 0, 0, 1, 74, 0, 1, 0, 1, 128, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 8, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 8, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 8, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 8, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 8, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 8, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 8, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 8, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 8, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 8, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10, 0, 16, 0, 0, 0, 152, 0, 0, 0, 0, 0, 0, 0, 24, 0, 0, 0, 48, 0, 0, 0, 74, 0, 0, 0, 100, 0, 0, 0, 126, 0, 0, 0, 152, 0, 0, 0, 178, 0, 0, 0, 204, 0, 0, 0, 230, 0, 0, 1, 0, 0, 0, 1, 26, 0, 0, 1, 52, 0, 0, 1, 78, 0, 0, 1, 104, 0, 0, 1, 128, 0, 1, 0, 2, 128, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 1, 0, 2, 128, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 1, 0, 1, 128, 10, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 10, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 10, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 10, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 10, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 10, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 10, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 10, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 10, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 10, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 2, 128, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 1, 0, 2, 128, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 18, 0, 16, 0, 0, 0, 172, 0, 0, 0, 0, 0, 0, 0, 40, 0, 0, 0, 80, 0, 0, 0, 122, 0, 0, 0, 164, 0, 0, 0, 206, 0, 0, 0, 248, 0, 0, 1, 34, 0, 0, 1, 76, 0, 0, 1, 116, 0, 0, 1, 156, 0, 0, 1, 162, 0, 0, 1, 168, 0, 0, 1, 174, 0, 0, 1, 180, 0, 0, 1, 186, 0, 1, 0, 2, 0, 2, 128, 16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 2, 0, 2, 128, 16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 18, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 18, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 1, 0, 1, 128, 18, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 18, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 18, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 128, 18, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 2, 128, 16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 1, 0, 2, 128, 16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 1, 0, 1, 0, 18, 0, 1, 0, 1, 0, 18, 0, 1, 0, 1, 0, 18, 0, 1, 0, 1, 0, 18, 0, 1, 0, 1, 0, 18, 0, 1, 0, 1, 0, 18, 1, 158, 0, 181, 0, 0, 251, 68, 0, 0, 0, 0, 0, 0, 0, 254, 0, 0, 2, 28, 0, 0, 3, 74, 0, 0, 4, 140, 0, 0, 5, 220, 0, 0, 7, 50, 0, 0, 8, 148, 0, 0, 9, 254, 0, 0, 11, 112, 0, 0, 14, 22, 0, 0, 16, 188, 0, 0, 19, 98, 0, 0, 22, 20, 0, 0, 24, 202, 0, 0, 27, 134, 0, 0, 30, 72, 0, 0, 33, 16, 0, 0, 35, 218, 0, 0, 38, 168, 0, 0, 41, 122, 0, 0, 44, 80, 0, 0, 47, 42, 0, 0, 50, 6, 0, 0, 52, 228, 0, 0, 55, 194, 0, 0, 58, 160, 0, 0, 61, 126, 0, 0, 64, 92, 0, 0, 67, 58, 0, 0, 70, 24, 0, 0, 72, 242, 0, 0, 75, 204, 0, 0, 78, 170, 0, 0, 81, 140, 0, 0, 84, 114, 0, 0, 87, 96, 0, 0, 90, 78, 0, 0, 93, 64, 0, 0, 96, 54, 0, 0, 99, 48, 0, 0, 102, 46, 0, 0, 105, 48, 0, 0, 108, 46, 0, 0, 111, 52, 0, 0, 114, 62, 0, 0, 117, 76, 0, 0, 120, 86, 0, 0, 123, 104, 0, 0, 126, 126, 0, 0, 129, 148, 0, 0, 132, 174, 0, 0, 135, 204, 0, 0, 138, 234, 0, 0, 142, 12, 0, 0, 145, 46, 0, 0, 148, 84, 0, 0, 151, 122, 0, 0, 154, 164, 0, 0, 157, 206, 0, 0, 160, 252, 0, 0, 164, 42, 0, 0, 167, 92, 0, 0, 170, 142, 0, 0, 173, 188, 0, 0, 176, 242, 0, 0, 180, 40, 0, 0, 183, 90, 0, 0, 186, 148, 0, 0, 189, 206, 0, 0, 193, 4, 0, 0, 196, 66, 0, 0, 199, 128, 0, 0, 202, 186, 0, 0, 205, 252, 0, 0, 209, 62, 0, 0, 212, 128, 0, 0, 215, 190, 0, 0, 219, 4, 0, 0, 222, 74, 0, 0, 225, 144, 0, 0, 228, 214, 0, 0, 232, 28, 0, 0, 235, 94, 0, 0, 238, 164, 0, 0, 241, 234, 0, 0, 245, 48, 0, 0, 248, 118, 0, 0, 251, 188, 0, 0, 255, 2, 0, 1, 2, 72, 0, 1, 5, 142, 0, 1, 8, 212, 0, 1, 12, 22, 0, 1, 15, 88, 0, 1, 18, 154, 0, 1, 21, 220, 0, 1, 25, 30, 0, 1, 28, 96, 0, 1, 31, 166, 0, 1, 34, 236, 0, 1, 38, 50, 0, 1, 41, 120, 0, 1, 44, 190, 0, 1, 48, 4, 0, 1, 51, 74, 0, 1, 54, 144, 0, 1, 57, 214, 0, 1, 61, 24, 0, 1, 64, 94, 0, 1, 67, 164, 0, 1, 70, 234, 0, 1, 74, 48, 0, 1, 77, 118, 0, 1, 80, 180, 0, 1, 83, 246, 0, 1, 87, 56, 0, 1, 90, 122, 0, 1, 93, 180, 0, 1, 96, 242, 0, 1, 100, 48, 0, 1, 103, 102, 0, 1, 106, 160, 0, 1, 109, 218, 0, 1, 113, 12, 0, 1, 116, 66, 0, 1, 119, 120, 0, 1, 122, 166, 0, 1, 125, 216, 0, 1, 129, 10, 0, 1, 132, 56, 0, 1, 135, 102, 0, 1, 138, 144, 0, 1, 141, 186, 0, 1, 144, 224, 0, 1, 148, 6, 0, 1, 151, 40, 0, 1, 154, 74, 0, 1, 157, 104, 0, 1, 160, 134, 0, 1, 163, 160, 0, 1, 166, 182, 0, 1, 169, 204, 0, 1, 172, 222, 0, 1, 175, 232, 0, 1, 178, 246, 0, 1, 182, 0, 0, 1, 185, 6, 0, 1, 188, 4, 0, 1, 191, 6, 0, 1, 194, 4, 0, 1, 196, 254, 0, 1, 199, 244, 0, 1, 202, 230, 0, 1, 205, 212, 0, 1, 208, 190, 0, 1, 211, 164, 0, 1, 214, 134, 0, 1, 217, 104, 0, 1, 220, 66, 0, 1, 223, 24, 0, 1, 225, 234, 0, 1, 228, 184, 0, 1, 231, 130, 0, 1, 234, 68, 0, 1, 237, 2, 0, 1, 239, 200, 0, 1, 241, 94, 0, 1, 242, 240, 0, 1, 244, 110, 0, 1, 245, 220, 0, 1, 247, 66, 0, 1, 248, 160, 0, 1, 249, 238, 0, 1, 251, 36, 0, 1, 252, 74, 0, 1, 253, 96, 0, 1, 254, 94, 0, 1, 255, 76, 0, 2, 0, 26, 0, 2, 0, 200, 0, 1, 0, 11, 0, 72, 32, 1, 231, 91, 64, 2, 222, 251, 223, 27, 96, 53, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 231, 59, 231, 60, 231, 60, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 239, 124, 239, 124, 239, 124, 239, 124, 239, 124, 239, 124, 239, 124, 239, 124, 239, 124, 231, 92, 231, 92, 231, 92, 239, 124, 239, 124, 239, 124, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 60, 231, 92, 32, 1, 231, 92, 0, 156, 32, 1, 239, 125, 96, 53, 231, 92, 231, 60, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 239, 124, 239, 124, 239, 124, 239, 124, 239, 124, 231, 92, 231, 92, 231, 92, 239, 124, 239, 124, 239, 124, 239, 124, 239, 124, 239, 124, 239, 124, 239, 124, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 60, 231, 60, 231, 59, 231, 59, 223, 27, 223, 27, 223, 27, 222, 251, 223, 27, 223, 27, 223, 27, 64, 2, 222, 251, 223, 27, 32, 1, 231, 59, 0, 72, 0, 1, 0, 13, 0, 66, 32, 1, 223, 27, 64, 1, 222, 251, 96, 3, 222, 251, 222, 250, 222, 250, 128, 58, 222, 250, 214, 218, 214, 218, 214, 218, 214, 218, 222, 251, 223, 27, 223, 27, 231, 60, 231, 60, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 60, 231, 60, 223, 27, 223, 27, 222, 251, 214, 218, 223, 27, 64, 1, 231, 92, 0, 154, 32, 1, 239, 124, 128, 58, 223, 27, 214, 218, 222, 251, 223, 27, 223, 27, 231, 60, 231, 60, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 60, 231, 60, 223, 27, 223, 27, 222, 251, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 96, 3, 222, 250, 222, 250, 222, 251, 64, 1, 222, 251, 32, 1, 223, 27, 0, 66, 0, 1, 0, 11, 0, 62, 32, 1, 223, 27, 96, 3, 222, 250, 214, 218, 214, 218, 128, 64, 214, 186, 214, 186, 214, 186, 214, 218, 214, 218, 222, 251, 223, 27, 223, 27, 231, 60, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 60, 231, 60, 223, 27, 222, 251, 223, 27, 32, 1, 231, 92, 0, 152, 32, 1, 239, 124, 128, 65, 223, 27, 222, 251, 223, 27, 223, 27, 231, 60, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 60, 231, 60, 223, 27, 222, 251, 222, 251, 214, 218, 214, 186, 214, 186, 214, 186, 214, 218, 96, 2, 214, 218, 214, 218, 64, 1, 222, 251, 0, 62, 0, 1, 0, 13, 0, 58, 32, 1, 223, 27, 64, 1, 222, 250, 96, 1, 214, 218, 128, 69, 214, 218, 214, 186, 214, 186, 214, 186, 214, 218, 222, 251, 223, 27, 223, 27, 231, 60, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 223, 27, 223, 27, 223, 27, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 60, 223, 27, 223, 27, 96, 1, 231, 60, 0, 152, 96, 1, 231, 92, 128, 69, 223, 27, 223, 27, 231, 60, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 223, 27, 223, 27, 223, 27, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 60, 231, 60, 223, 27, 222, 251, 214, 218, 214, 186, 214, 186, 214, 186, 214, 218, 96, 1, 214, 218, 64, 1, 222, 250, 32, 1, 223, 27, 0, 58, 0, 1, 0, 12, 0, 55, 32, 1, 223, 27, 64, 1, 222, 250, 96, 1, 214, 218, 128, 73, 214, 218, 214, 186, 214, 186, 214, 218, 222, 251, 223, 27, 231, 60, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 60, 231, 60, 223, 27, 64, 1, 239, 124, 0, 150, 32, 1, 239, 124, 128, 73, 231, 59, 223, 27, 231, 60, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 60, 223, 27, 222, 251, 214, 218, 214, 218, 214, 186, 214, 186, 96, 2, 214, 218, 222, 250, 32, 1, 222, 250, 0, 55, 0, 1, 0, 11, 0, 53, 64, 1, 222, 250, 96, 1, 214, 218, 128, 76, 214, 218, 214, 186, 214, 218, 222, 251, 223, 27, 231, 60, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 60, 223, 27, 96, 1, 231, 92, 0, 150, 96, 1, 239, 124, 128, 76, 223, 27, 231, 60, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 60, 223, 27, 222, 251, 214, 218, 214, 186, 214, 218, 96, 1, 214, 218, 64, 1, 214, 218, 0, 53, 0, 1, 0, 11, 0, 50, 32, 1, 223, 27, 96, 2, 222, 250, 214, 218, 128, 78, 214, 218, 214, 218, 222, 251, 223, 27, 231, 60, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 60, 96, 1, 231, 92, 0, 150, 96, 1, 239, 124, 128, 79, 231, 60, 231, 92, 231, 92, 231, 92, 231, 92, 231], "i8", ALLOC_NONE, Runtime.GLOBAL_BASE + 859701);
  allocatei8", ALLOC_NONE, Runtime.GLOBAL_BASE + 869941);
  allocate([157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 231, 124, 198, 121, 132, 113, 41, 101, 16, 162, 99, 44, 173, 149, 214, 154, 206, 153, 190, 23, 165, 117, 148, 211, 132, 81, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 132, 81, 148, 211, 165, 85, 189, 247, 206, 121, 214, 154, 181, 182, 107, 77, 24, 195, 33, 69, 132, 81, 198, 121, 231, 124, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 124, 222, 251, 206, 153, 206, 153, 206, 153, 214, 186, 222, 251, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 92, 231, 92, 231, 92, 231, 92, 222, 251, 32, 1, 222, 250, 0, 27, 0, 1, 0, 5, 0, 27, 32, 1, 214, 218, 129, 102, 223, 27, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 60, 231, 60, 231, 60, 231, 60, 206, 153, 198, 88, 198, 56, 198, 56, 206, 121, 231, 60, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 214, 250, 157, 20, 49, 166, 16, 162, 107, 141, 198, 88, 206, 153, 198, 56, 165, 117, 140, 178, 116, 16, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 116, 16, 140, 178, 165, 85, 198, 56, 206, 153, 206, 121, 115, 174, 24, 227, 41, 134, 148, 243, 214, 218, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 231, 92, 214, 186, 206, 153, 206, 153, 206, 153, 214, 186, 223, 27, 231, 60, 231, 60, 231, 60, 231, 60, 231, 92, 231, 92, 231, 92, 231, 92, 231, 60, 64, 1, 214, 218, 0, 27, 0, 1, 0, 5, 0, 27, 64, 1, 214, 218, 129, 102, 231, 60, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 60, 231, 60, 222, 251, 198, 88, 198, 56, 198, 56, 198, 88, 222, 250, 239, 125, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 124, 198, 88, 99, 109, 0, 32, 90, 203, 189, 215, 206, 153, 190, 23, 157, 52, 132, 81, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 124, 81, 157, 20, 190, 23, 206, 153, 189, 247, 90, 235, 0, 0, 99, 44, 198, 88, 231, 124, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 125, 223, 27, 206, 153, 206, 121, 206, 121, 206, 153, 222, 251, 231, 60, 231, 60, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 60, 96, 1, 222, 250, 0, 27, 0, 1, 0, 5, 0, 27, 96, 1, 214, 218, 129, 102, 223, 27, 231, 60, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 214, 186, 198, 56, 198, 56, 198, 56, 206, 121, 231, 92, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 231, 92, 181, 214, 66, 40, 24, 227, 140, 81, 214, 154, 198, 88, 165, 84, 132, 81, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 132, 81, 165, 52, 198, 56, 214, 154, 140, 145, 33, 36, 58, 8, 173, 182, 231, 60, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 231, 92, 214, 186, 206, 121, 206, 121, 206, 121, 214, 218, 231, 60, 231, 92, 231, 92, 231, 92, 231, 92, 231, 60, 231, 60, 96, 1, 214, 218, 0, 27, 0, 1, 0, 5, 0, 27, 96, 1, 214, 218, 129, 102, 223, 27, 231, 60, 231, 92, 231, 92, 231, 92, 231, 60, 206, 88, 198, 56, 198, 56, 198, 56, 222, 250, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 231, 92, 173, 149, 41, 134, 49, 166, 165, 84, 206, 153, 181, 215, 140, 178, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 140, 178, 181, 214, 206, 153, 173, 117, 57, 231, 41, 101, 165, 85, 231, 60, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 223, 27, 206, 121, 206, 121, 206, 121, 206, 153, 231, 60, 231, 92, 231, 92, 231, 92, 231, 60, 223, 27, 96, 1, 214, 218, 0, 27, 0, 1, 0, 5, 0, 27, 96, 1, 214, 218, 129, 102, 222, 251, 223, 27, 231, 60, 231, 60, 223, 27, 198, 56, 198, 24, 198, 24, 198, 88, 231, 60, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 231, 92, 173, 182, 49, 166, 57, 199, 181, 182, 206, 121, 173, 150, 132, 113, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 132, 81, 173, 117, 206, 121, 189, 215, 66, 8, 41, 101, 173, 150, 231, 92, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 231, 92, 206, 153, 206, 121, 206, 121, 206, 121, 223, 27, 231, 60, 231, 60, 223, 27, 222, 251, 96, 1, 214, 218, 0, 27, 0, 1, 0, 5, 0, 27, 96, 1, 214, 218, 129, 102, 214, 218, 222, 251, 222, 251, 214, 186, 198, 56, 190, 23, 190, 23, 206, 153, 239, 124, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 124, 190, 56, 66, 40, 41, 101, 173, 117, 206, 153, 173, 149, 124, 81, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 124, 48, 173, 117, 206, 121, 181, 182, 49, 166, 58, 8, 190, 56, 239, 124, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 124, 214, 218, 206, 89, 206, 89, 206, 121, 214, 186, 223, 27, 222, 251, 214, 218, 96, 1, 214, 186, 0, 27, 0, 1, 0, 5, 0, 27, 64, 1, 214, 186, 129, 102, 214, 186, 214, 186, 206, 121, 190, 23, 190, 23, 190, 23, 222, 250, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 214, 218, 99, 109, 8, 97, 148, 210, 206, 153, 173, 150, 132, 81, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 124, 49, 173, 150, 206, 153, 156, 243, 16, 162, 99, 77, 206, 186, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 223, 27, 198, 88, 198, 88, 198, 88, 206, 153, 214, 186, 214, 186, 64, 1, 214, 186, 0, 27, 0, 1, 0, 5, 0, 28, 96, 1, 214, 186, 129, 100, 198, 56, 189, 247, 189, 247, 198, 56, 231, 59, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 231, 92, 157, 84, 16, 162, 107, 109, 214, 154, 189, 247, 132, 113, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 132, 113, 189, 247, 214, 154, 115, 174, 8, 130, 157, 19, 231, 92, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 231, 92, 206, 121, 198, 88, 198, 88, 206, 121, 96, 1, 214, 186, 0, 28, 0, 1, 0, 5, 0, 28, 96, 1, 189, 247, 129, 100, 189, 247, 189, 247, 198, 56, 231, 92, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 206, 153, 74, 138, 49, 134, 198, 56, 206, 89, 148, 243, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 148, 211, 198, 89, 206, 121, 57, 199, 66, 105, 206, 121, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 231, 92, 206, 121, 198, 88, 198, 88, 96, 1, 198, 88, 0, 28, 0, 1, 0, 5, 0, 27, 96, 1, 189, 247, 129, 102, 189, 247, 189, 247, 206, 88, 239, 124, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 231, 124, 165, 85, 8, 130, 124, 15, 206, 153, 173, 182, 124, 48, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 124, 48, 173, 150, 206, 153, 132, 48, 8, 65, 157, 20, 231, 92, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 124, 206, 153, 198, 56, 198, 56, 96, 1, 198, 56, 0, 27, 0, 1, 0, 5, 0, 26, 96, 1, 189, 247, 129, 104, 189, 247, 189, 247, 206, 153, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 214, 250, 99, 77, 33, 36, 198, 56, 198, 89, 140, 178, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 140, 178, 198, 88, 206, 121, 41, 133, 91, 12, 214, 218, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 125, 214, 186, 198, 56, 198, 56, 96, 1, 198, 56, 0, 26, 0, 1, 0, 5, 0, 25, 96, 1, 189, 215, 129, 106, 189, 215, 189, 215, 214, 153, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 198, 88, 41, 134, 99, 12, 214, 154, 181, 214, 124, 48, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 124, 48, 181, 182, 214, 154, 107, 77, 33, 69, 198, 56, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 214, 218, 198, 56, 198, 56, 96, 1, 198, 56, 0, 25, 0, 1, 0, 6, 0, 23, 32, 1, 189, 247, 96, 1, 181, 214, 129, 108, 181, 214, 181, 214, 214, 153, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 124, 165, 117, 8, 65, 148, 178, 206, 121, 157, 20, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 148, 243, 206, 121, 157, 19, 0, 32, 157, 52, 239, 124, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 214, 218, 198, 56, 198, 56, 96, 1, 198, 56, 0, 24, 0, 1, 0, 5, 0, 23, 96, 1, 181, 214, 129, 110, 181, 214, 181, 214, 206, 153, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239], "i8", ALLOC_NONE, Runtime.GLOBAL_BASE + 880181);
  allocatei8", ALLOC_NONE, Runtime.GLOBAL_BASE + 890421);
  allocatei8", ALLOC_NONE, Runtime.GLOBAL_BASE + 900661);
  allocate([138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 82, 203, 66, 73, 24, 195, 41, 101, 190, 23, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 92, 231, 92, 231, 92, 231, 92, 223, 27, 190, 23, 214, 186, 239, 124, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 115, 239, 115, 142, 198, 56, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 165, 117, 231, 92, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 173, 84, 2, 49, 3, 91, 3, 158, 3, 158, 3, 158, 3, 158, 3, 158, 3, 158, 3, 158, 3, 158, 3, 158, 3, 158, 3, 158, 3, 158, 3, 158, 3, 158, 3, 158, 3, 158, 3, 158, 3, 158, 3, 158, 3, 158, 3, 158, 3, 158, 3, 158, 2, 182, 33, 169, 214, 218, 231, 92, 124, 48, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 190, 24, 123, 239, 107, 142, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 231, 59, 165, 84, 165, 84, 64, 1, 165, 84, 0, 6, 0, 1, 0, 3, 0, 6, 129, 146, 156, 243, 156, 243, 173, 117, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 231, 60, 206, 120, 198, 88, 231, 92, 231, 92, 231, 92, 231, 92, 231, 91, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 222, 251, 222, 251, 107, 142, 24, 195, 74, 138, 82, 170, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 91, 12, 24, 227, 41, 101, 190, 23, 222, 251, 222, 251, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 92, 231, 92, 231, 92, 231, 92, 214, 185, 198, 55, 222, 251, 239, 125, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 222, 251, 8, 65, 214, 154, 148, 243, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 165, 117, 231, 92, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 198, 88, 17, 138, 2, 215, 3, 158, 3, 158, 3, 158, 3, 158, 3, 158, 3, 158, 3, 158, 3, 158, 3, 158, 3, 158, 3, 158, 3, 158, 3, 158, 3, 158, 3, 158, 3, 158, 3, 158, 3, 158, 3, 158, 3, 158, 3, 158, 3, 158, 3, 157, 2, 148, 123, 239, 239, 157, 214, 218, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 148, 210, 214, 154, 0, 0, 214, 218, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 181, 182, 165, 52, 165, 52, 0, 6, 0, 1, 0, 5, 0, 5, 32, 1, 148, 210, 129, 146, 156, 211, 156, 211, 206, 153, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 124, 214, 185, 198, 23, 231, 59, 231, 92, 231, 92, 231, 92, 231, 92, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 222, 251, 222, 251, 222, 251, 222, 251, 107, 142, 24, 195, 90, 235, 74, 170, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 66, 106, 66, 73, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 90, 236, 33, 69, 41, 101, 190, 23, 222, 251, 222, 251, 222, 251, 222, 251, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 91, 231, 92, 231, 92, 231, 92, 231, 92, 206, 88, 206, 120, 231, 60, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 140, 178, 99, 12, 198, 56, 115, 240, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 165, 117, 231, 92, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 231, 92, 99, 44, 2, 148, 3, 125, 3, 158, 3, 158, 3, 158, 3, 158, 3, 158, 3, 158, 3, 158, 3, 158, 3, 158, 3, 158, 3, 158, 3, 158, 3, 158, 3, 158, 3, 158, 3, 158, 3, 158, 3, 158, 3, 158, 3, 158, 3, 158, 2, 248, 9, 172, 181, 182, 239, 157, 190, 56, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 198, 56, 107, 109, 132, 113, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 214, 186, 165, 52, 165, 52, 32, 1, 165, 84, 0, 5, 0, 1, 0, 5, 0, 5, 96, 1, 148, 210, 129, 146, 148, 210, 157, 19, 239, 124, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 223, 27, 198, 55, 222, 250, 231, 92, 231, 92, 231, 92, 231, 92, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 107, 142, 24, 195, 91, 12, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 66, 105, 58, 40, 58, 8, 58, 40, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 90, 235, 41, 69, 41, 101, 190, 23, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 91, 231, 92, 231, 92, 231, 92, 231, 59, 190, 23, 214, 185, 239, 124, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 231, 60, 25, 4, 206, 121, 157, 20, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 165, 117, 231, 92, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 189, 247, 17, 138, 2, 215, 3, 158, 3, 158, 3, 158, 3, 158, 3, 158, 3, 158, 3, 158, 3, 158, 3, 158, 3, 158, 3, 158, 3, 158, 3, 158, 3, 158, 3, 158, 3, 158, 3, 158, 3, 158, 3, 158, 3, 158, 3, 125, 2, 116, 91, 12, 231, 59, 231, 92, 132, 113, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 157, 20, 214, 154, 16, 162, 223, 59, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 124, 165, 84, 165, 52, 96, 1, 165, 52, 0, 5, 0, 1, 0, 3, 0, 5, 129, 148, 148, 210, 148, 210, 189, 247, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 231, 92, 206, 121, 198, 88, 231, 92, 231, 92, 231, 92, 231, 92, 231, 91, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 107, 142, 24, 195, 91, 12, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 58, 40, 58, 8, 58, 8, 58, 8, 66, 73, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 90, 235, 41, 69, 41, 101, 190, 23, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 92, 231, 92, 231, 92, 231, 92, 214, 186, 198, 56, 223, 27, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 181, 215, 57, 231, 206, 121, 124, 16, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 165, 117, 231, 92, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 124, 115, 174, 2, 82, 3, 58, 3, 158, 3, 158, 3, 158, 3, 158, 3, 158, 3, 158, 3, 158, 3, 158, 3, 158, 3, 158, 3, 158, 3, 158, 3, 158, 3, 158, 3, 158, 3, 158, 3, 158, 3, 158, 3, 157, 2, 182, 17, 105, 189, 247, 239, 157, 214, 186, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 116, 16, 206, 89, 74, 73, 173, 149, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 198, 23, 165, 52, 165, 52, 0, 5, 0, 1, 0, 5, 0, 4, 64, 1, 148, 210, 129, 148, 148, 210, 148, 210, 222, 250, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 125, 214, 218, 190, 23, 231, 59, 231, 92, 231, 92, 231, 92, 231, 91, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 107, 142, 24, 195, 91, 12, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 66, 105, 58, 8, 49, 232, 49, 232, 49, 232, 58, 8, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 90, 235, 41, 69, 41, 101, 189, 247, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 91, 231, 92, 231, 92, 231, 92, 231, 92, 198, 56, 206, 153, 231, 92, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 74, 138, 165, 20, 173, 150, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 165, 117, 231, 92, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 214, 185, 58, 41, 2, 116, 3, 91, 3, 158, 3, 158, 3, 158, 3, 158, 3, 158, 3, 158, 3, 158, 3, 158, 3, 158, 3, 158, 3, 158, 3, 158, 3, 158, 3, 158, 3, 158, 3, 158, 3, 158, 2, 215, 9, 205, 148, 210, 239, 157, 231, 92, 148, 211, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 165, 117, 173, 117, 66, 40, 239, 125, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 222, 251, 165, 20, 165, 52, 64, 1, 165, 20, 0, 4, 0, 1, 0, 5, 0, 4, 96, 1, 148, 178, 129, 148, 148, 178, 157, 19, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 231, 60, 198, 88, 214, 153, 231, 92, 231, 92, 231, 92, 231, 92, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 107, 142, 24, 195, 91, 12, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 58, 8, 49, 232, 49, 231, 49, 231, 49, 231, 49, 232, 66, 41, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 90, 235, 41, 69, 41, 101, 189, 247, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 91, 231, 92, 231, 92, 231, 92, 223, 27, 190, 23, 222, 250, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 214, 186, 0, 32, 214, 154, 132, 145, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 165, 117, 231, 92, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 198, 55, 33, 136, 2, 148, 3, 26, 3, 158, 3, 158, 3, 158, 3, 158, 3, 158, 3, 158, 3, 158, 3, 158, 3, 158, 3, 158, 3, 158, 3, 158, 3, 158, 3, 158, 3, 157, 2, 182, 10, 15, 115, 206, 231, 92, 239, 157, 206, 121, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 132, 113, 206, 153, 16, 130, 206, 153, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 165, 84, 157, 19, 96, 1, 157, 19, 0, 4, 0, 1, 0, 3, 0, 4, 129, 150, 148, 178, 148, 178, 189, 214, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 124, 214, 186, 198, 55, 231, 92, 231, 92, 231, 92, 231, 92, 231, 91, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 250, 222, 250, 107, 142, 24, 195, 91, 12, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 66, 73, 49, 232, 49, 231, 49, 199, 49, 199, 49, 199, 49, 231, 49, 232, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 90, 235, 41, 69, 41, 101, 189, 247, 222, 250, 222, 250, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 92, 231, 92, 231, 92, 231, 92, 206, 120, 206, 121, 231, 92, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 140, 178, 99, 44, 190, 24, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 165, 117, 231, 92, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 198, 55, 58, 41, 2, 83, 2, 214, 3, 124, 3, 158, 3, 158, 3, 158, 3, 158, 3, 158, 3, 158, 3, 158, 3, 158, 3, 158, 3, 158, 3, 158, 3, 58, 2, 149, 9, 172, 140, 80, 223, 27, 239, 157, 223, 27, 124, 48, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 190, 23, 115, 142, 132, 81, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 190, 23, 157, 19, 157, 19, 0, 4, 0, 1, 0, 5, 0, 3, 32, 1, 148, 178, 129, 150, 148, 178, 148, 178, 214, 218, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 231, 92, 198, 88, 214, 185, 231, 92, 231, 92, 231, 92, 231, 92, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 250, 222, 250, 222, 250, 222, 250, 107, 142, 24, 195, 91, 12, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 58, 8, 49, 231, 49, 199, 49, 199, 49, 199, 49, 199, 49, 199, 49, 231, 58, 40, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 90, 235, 41, 69, 41, 101, 189, 247, 222, 250, 222, 250, 222, 250, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 91, 231, 92, 231, 92, 231, 92, 231, 59, 190, 23, 222, 250, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 124, 41, 134, 190, 23, 165, 52, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 165, 117, 231, 92, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 214, 153, 115, 174, 9, 171, 2, 149, 2, 215, 3, 91, 3, 158, 3, 158, 3, 158, 3, 158, 3, 158, 3, 158, 3, 125, 3, 26, 2, 181, 2, 49, 41, 201, 173, 117, 239, 124, 239, 157, 231, 92, 148, 243, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 157, 52, 206, 121, 33, 36, 231, 92, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 214, 218, 157, 19, 157, 19, 32, 1, 156, 243, 0, 3, 0, 1, 0, 5, 0, 3, 96, 1, 148, 146, 129, 150, 148, 178, 156, 211, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 124, 214, 186, 198, 23, 231, 92, 231, 92, 231, 92, 231, 92, 231, 91, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 250, 222, 250, 222, 250, 222, 250, 214, 218, 107, 142, 24, 195, 91, 12, 74, 138, 74, 138, 74, 138, 74, 138, 66, 73, 49, 232, 49, 231, 49, 199, 49, 167, 41, 166, 49, 167, 49, 199, 49, 231, 49, 232, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 90, 235, 41, 69, 41, 101, 189, 247, 214, 218, 222, 250, 222, 250, 222, 250, 222, 250, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 92, 231, 92, 231, 92, 231, 92, 206, 120, 206, 121, 231, 92, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 206, 153, 16, 162, 206, 153, 132, 81, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 165, 117, 231, 92, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 231, 92, 189, 247, 91, 12, 17, 138, 2, 49, 2, 149, 2, 149, 2, 182, 2, 182, 2, 181, 2, 149, 2, 148, 9, 238, 33, 169, 148, 210, 214, 185, 239, 157, 239, 157, 231, 92, 165, 85, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 124, 49, 206, 153, 33, 36, 198, 88, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 125, 165, 52, 156, 243, 96, 1, 156, 243, 0, 3, 0, 1, 0, 3, 0, 3, 129, 152, 148, 146, 148, 146, 181, 182, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 231, 92, 198, 88, 214, 185, 231, 92, 231, 92, 231, 92, 231, 92, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 250, 222, 250, 222, 250, 222, 250, 214, 218, 214, 218, 214, 218, 107, 142, 24, 195, 91, 12, 74, 138, 74, 138, 74, 138, 74, 138, 58, 8, 49, 232, 49, 231, 49, 199, 49, 167, 41, 166, 49, 167, 49, 199, 49, 231, 49, 232, 66, 41, 74, 138, 74, 138, 74, 138, 74, 138, 90, 235, 41, 69, 41, 101, 189, 247, 214, 218, 214, 218, 222, 250, 222, 250, 222, 250, 222, 250, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 91, 231, 92, 231, 92, 231, 92, 231, 59, 198, 23, 222, 251, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 140, 146, 107, 77, 190, 24, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 165, 117, 231, 92, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 231, 92, 198, 88, 165, 84, 107, 109, 50, 9, 33, 169, 25, 169, 41, 201, 74, 138, 140, 113, 181, 214, 214, 186, 239, 157, 239, 157, 239, 157, 231, 92, 173, 150, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 189, 247, 115, 206, 124, 48, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 181, 214, 156, 243, 156, 243, 0, 3, 0, 1, 0, 5, 0, 2, 32, 1, 140, 145, 129, 152, 140, 145, 140, 145, 206, 88, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 214, 218, 198, 55, 231, 92, 231, 92, 231, 92, 231, 92, 231, 91, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 250, 222, 250, 222, 250, 222, 250, 214, 218, 214, 218, 214, 218, 214, 218, 107, 142, 24, 195, 91, 12, 74, 138, 74, 138, 74, 138, 66, 105, 58, 8, 49, 232, 49, 231, 49, 199, 49, 199, 49, 199, 49, 199, 49, 199, 49, 231, 49, 232, 58, 8, 74, 138, 74, 138, 74, 138, 74, 138, 90, 235, 41, 69, 41, 101, 189, 247, 214, 218, 214, 218, 214, 218, 214, 218, 222, 250, 222, 250, 222, 250, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 92, 231, 92, 231, 92, 231, 92, 206, 120, 206, 153, 231, 92, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 124, 49, 199, 189, 247, 165, 84, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 165, 117, 231, 92, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 231, 59, 214, 218, 214, 186, 222, 250, 239, 124, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 231, 92, 173, 150, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 157, 52, 198, 88, 41, 101, 239, 124, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 206, 121, 156, 243, 156, 243, 32, 1, 148, 210, 0, 2, 0, 1, 0, 5, 0, 2, 64, 1, 140, 145, 129, 152, 140, 145, 140, 145, 223, 27, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 231, 92, 206, 121, 206, 121, 231, 92, 231, 92, 231, 92, 231, 92, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 250, 222, 250, 222, 250, 222, 250, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 107, 142, 24, 195, 91, 12, 74, 138, 74, 138, 74, 138, 58, 41, 58, 8, 58, 8, 49, 232, 49, 231, 49, 199, 49, 199, 49, 199, 49, 231, 49, 232, 58, 8, 58, 8, 66, 73, 74, 138, 74, 138, 74, 138, 90, 235, 41, 69, 41, 101, 189, 247, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 222, 250, 222, 250, 222, 250, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 91, 231, 92, 231, 92, 231, 92, 223, 27, 198, 55, 231, 59, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239], "i8", ALLOC_NONE, Runtime.GLOBAL_BASE + 910901);
  allocate([157, 239, 157, 214, 186, 0, 0, 214, 154, 140, 146, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 165, 117, 231, 92, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 231, 92, 173, 150, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 132, 113, 206, 153, 16, 130, 206, 153, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 231, 59, 156, 243, 156, 243, 64, 1, 156, 211, 0, 2, 0, 1, 0, 5, 0, 2, 96, 1, 140, 145, 129, 152, 140, 145, 148, 210, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 223, 27, 198, 23, 223, 27, 231, 92, 231, 92, 231, 92, 231, 91, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 250, 222, 250, 222, 250, 222, 250, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 107, 142, 24, 195, 91, 12, 74, 138, 74, 138, 66, 106, 58, 41, 58, 8, 58, 8, 50, 8, 49, 232, 49, 232, 49, 231, 49, 232, 49, 232, 58, 8, 58, 8, 58, 8, 58, 41, 74, 138, 74, 138, 74, 138, 90, 235, 41, 69, 41, 101, 189, 247, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 222, 250, 222, 250, 222, 250, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 92, 231, 92, 231, 92, 231, 92, 198, 55, 214, 186, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 173, 150, 74, 105, 206, 89, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 165, 117, 231, 92, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 231, 92, 173, 150, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 198, 88, 90, 203, 157, 52, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 165, 20, 156, 211, 96, 1, 156, 243, 0, 2, 0, 1, 0, 3, 0, 2, 129, 154, 140, 113, 140, 113, 173, 117, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 125, 214, 185, 198, 56, 231, 92, 231, 92, 231, 92, 231, 92, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 250, 222, 250, 222, 250, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 107, 142, 24, 195, 91, 12, 74, 138, 74, 138, 66, 73, 58, 41, 58, 40, 58, 8, 58, 8, 58, 8, 50, 8, 49, 232, 58, 8, 58, 8, 58, 8, 58, 8, 58, 40, 58, 41, 66, 105, 74, 138, 74, 138, 90, 235, 41, 69, 41, 101, 189, 247, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 222, 250, 222, 250, 222, 250, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 91, 231, 92, 231, 92, 231, 92, 206, 153, 206, 120, 231, 92, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 99, 77, 148, 146, 181, 182, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 165, 117, 231, 92, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 231, 92, 173, 150, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 173, 150, 157, 19, 82, 203, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 181, 182, 148, 210, 156, 211, 0, 2, 0, 1, 0, 5, 0, 1, 32, 1, 140, 113, 129, 154, 140, 113, 140, 113, 198, 56, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 231, 92, 206, 88, 214, 185, 231, 92, 231, 92, 231, 92, 231, 91, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 250, 222, 250, 222, 250, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 107, 142, 24, 195, 91, 12, 74, 138, 74, 138, 66, 73, 58, 73, 58, 41, 58, 40, 58, 8, 58, 8, 58, 8, 58, 8, 58, 8, 58, 8, 58, 40, 58, 40, 58, 41, 58, 73, 66, 105, 74, 138, 74, 138, 90, 235, 41, 69, 41, 101, 189, 247, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 222, 250, 222, 250, 222, 250, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 92, 231, 92, 231, 92, 231, 59, 198, 23, 223, 27, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 231, 92, 33, 4, 214, 154, 157, 20, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 165, 117, 231, 92, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 231, 92, 173, 150, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 148, 243, 214, 154, 16, 195, 231, 60, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 206, 120, 148, 210, 148, 210, 32, 1, 148, 210, 0, 1, 0, 1, 0, 5, 0, 1, 32, 1, 140, 113, 129, 154, 140, 113, 140, 113, 214, 218, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 223, 27, 198, 23, 231, 59, 231, 92, 231, 92, 231, 92, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 250, 222, 250, 222, 250, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 206, 153, 107, 110, 24, 195, 91, 12, 74, 138, 74, 138, 66, 105, 66, 73, 58, 73, 58, 41, 58, 41, 58, 40, 58, 40, 58, 40, 58, 40, 58, 40, 58, 41, 58, 41, 58, 73, 66, 73, 66, 105, 74, 138, 74, 138, 90, 235, 41, 69, 41, 101, 181, 214, 214, 186, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 222, 250, 222, 250, 222, 250, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 92, 231, 92, 231, 92, 231, 92, 198, 56, 214, 185, 239, 125, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 206, 153, 8, 65, 206, 153, 132, 113, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 165, 117, 231, 92, 239, 157, 239, 157, 239, 124, 206, 153, 181, 149, 157, 19, 140, 80, 107, 141, 123, 206, 148, 210, 165, 52, 190, 23, 223, 27, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 231, 92, 173, 150, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 132, 81, 206, 153, 24, 195, 206, 153, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 222, 250, 148, 178, 148, 178, 32, 1, 148, 210, 0, 1, 0, 1, 0, 5, 0, 1, 64, 1, 140, 113, 129, 154, 140, 81, 140, 81, 239, 124, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 125, 214, 186, 198, 56, 231, 92, 231, 92, 231, 92, 231, 92, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 250, 222, 250, 222, 250, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 206, 153, 206, 89, 107, 109, 24, 195, 91, 12, 74, 138, 74, 138, 74, 138, 74, 138, 66, 106, 66, 106, 66, 106, 66, 106, 66, 106, 66, 106, 66, 106, 66, 106, 66, 106, 66, 106, 74, 106, 74, 138, 74, 138, 74, 138, 74, 138, 90, 235, 41, 69, 41, 101, 173, 150, 206, 121, 214, 186, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 222, 250, 222, 250, 222, 250, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 91, 231, 92, 231, 92, 231, 92, 206, 153, 206, 120, 231, 92, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 181, 214, 66, 40, 206, 121, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 165, 85, 231, 92, 239, 157, 231, 92, 189, 214, 99, 109, 26, 103, 11, 203, 4, 238, 5, 47, 5, 79, 5, 79, 5, 14, 4, 141, 10, 233, 50, 104, 148, 178, 206, 153, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 231, 92, 173, 150, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 206, 89, 82, 170, 165, 117, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 124, 148, 178, 148, 178, 64, 1, 148, 210, 0, 1, 0, 1, 0, 5, 0, 1, 96, 1, 140, 81, 129, 154, 140, 81, 148, 210, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 231, 92, 206, 121, 206, 121, 231, 92, 231, 92, 231, 92, 231, 91, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 250, 222, 250, 222, 250, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 206, 153, 198, 88, 198, 24, 99, 109, 24, 195, 91, 12, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 90, 235, 41, 69, 41, 101, 173, 117, 198, 88, 206, 121, 214, 186, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 222, 250, 222, 250, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 92, 231, 92, 231, 92, 222, 250, 198, 55, 231, 59, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 124, 48, 123, 239, 189, 247, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 157, 20, 231, 92, 239, 157, 198, 56, 107, 141, 10, 233, 5, 47, 5, 112, 6, 147, 7, 20, 7, 85, 7, 117, 7, 117, 7, 53, 6, 244, 6, 17, 5, 79, 4, 141, 34, 71, 157, 19, 223, 27, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 231, 92, 173, 150, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 132, 113, 165, 85, 181, 215, 190, 23, 190, 23, 181, 214, 157, 52, 124, 81, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 181, 215, 140, 81, 115, 174, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 165, 20, 148, 178, 96, 1, 148, 178, 0, 1, 0, 1, 0, 5, 0, 1, 96, 1, 132, 80, 129, 154, 132, 80, 173, 84, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 231, 60, 198, 56, 222, 250, 231, 92, 231, 92, 231, 92, 231, 91, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 250, 222, 250, 222, 250, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 206, 153, 206, 89, 198, 24, 189, 247, 99, 77, 24, 195, 91, 12, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 90, 235, 41, 69, 41, 101, 165, 85, 190, 23, 198, 88, 206, 153, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 222, 250, 222, 250, 222, 250, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 92, 231, 92, 231, 92, 231, 92, 190, 23, 214, 218, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 66, 73, 181, 150, 173, 117, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 132, 113, 231, 59, 239, 157, 181, 182, 34, 39, 5, 14, 5, 176, 7, 52, 7, 117, 7, 117, 7, 117, 7, 117, 7, 117, 7, 117, 7, 117, 7, 117, 7, 117, 7, 117, 6, 147, 5, 79, 11, 203, 99, 76, 214, 185, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 231, 92, 173, 150, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 240, 165, 85, 206, 153, 223, 27, 239, 124, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 231, 92, 214, 250, 198, 56, 132, 113, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 165, 85, 189, 247, 49, 231, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 173, 149, 148, 178, 96, 1, 148, 178, 0, 1, 0, 1, 0, 3, 0, 1, 129, 156, 132, 80, 132, 80, 189, 247, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 222, 250, 190, 23, 231, 92, 231, 92, 231, 92, 231, 92, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 198, 56, 148, 211, 140, 146, 140, 146, 140, 146, 140, 146, 140, 146, 140, 146, 140, 146, 140, 146, 140, 146, 140, 146, 140, 146, 140, 146, 140, 146, 140, 146, 140, 146, 140, 146, 140, 113, 132, 81, 132, 81, 132, 49, 124, 48, 91, 12, 24, 195, 91, 12, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 90, 235, 41, 69, 41, 101, 132, 49, 132, 49, 132, 81, 132, 81, 140, 113, 140, 146, 140, 146, 140, 146, 140, 146, 140, 146, 140, 146, 140, 146, 140, 146, 140, 146, 140, 146, 140, 146, 140, 146, 140, 146, 140, 146, 140, 146, 140, 146, 140, 178, 173, 150, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 91, 231, 92, 231, 92, 231, 92, 198, 88, 214, 153, 239, 124, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 231, 92, 24, 227, 214, 154, 148, 243, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 214, 218, 239, 157, 165, 84, 18, 103, 5, 47, 6, 211, 7, 117, 7, 117, 7, 117, 7, 117, 7, 117, 7, 117, 7, 117, 7, 117, 7, 117, 7, 117, 7, 117, 7, 117, 7, 117, 7, 85, 5, 209, 4, 141, 66, 137, 206, 153, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 231, 92, 173, 150, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 124, 16, 181, 247, 223, 27, 239, 157, 239, 124, 206, 153, 181, 149, 157, 19, 140, 80, 115, 109, 123, 206, 148, 210, 165, 52, 190, 23, 223, 27, 239, 157, 231, 92, 206, 186, 132, 113, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 148, 211, 214, 154, 16, 130, 223, 27, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 190, 23, 148, 146, 148, 146, 0, 1, 0, 1, 0, 3, 32, 1, 132, 80, 129, 156, 132, 48, 132, 48, 206, 120, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 125, 214, 186, 198, 88, 231, 92, 231, 92, 231, 92, 231, 92, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 223, 27, 223, 27, 223, 27, 223, 27, 148, 243, 58, 8, 24, 195, 24, 195, 24, 195, 24, 195, 24, 195, 24, 195, 24, 195, 24, 195, 24, 195, 24, 195, 24, 195, 24, 195, 24, 195, 24, 195, 24, 195, 24, 195, 24, 195, 24, 195, 24, 195, 24, 195, 24, 195, 24, 195, 24, 195, 24, 195, 91, 12, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 90, 235, 41, 69, 24, 195, 24, 195, 24, 195, 24, 195, 24, 195, 24, 195, 24, 195, 24, 195, 24, 195, 24, 195, 24, 195, 24, 195, 24, 195, 24, 195, 24, 195, 24, 195, 24, 195, 24, 195, 24, 195, 24, 195, 24, 195, 24, 195, 24, 195, 33, 36, 115, 239, 214, 186, 223, 27, 223, 27, 223, 27, 223, 27, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 91, 231, 92, 231, 92, 231, 92, 214, 153, 206, 120, 231, 92, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 206, 186, 0, 0, 214, 154, 132, 145, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 173, 182, 239, 125, 181, 214, 18, 39, 5, 79, 7, 20, 7, 117, 7, 117, 7, 117, 7, 117, 7, 117, 7, 117, 7, 117, 7, 117, 7, 117, 7, 117, 7, 117, 7, 117, 7, 117, 7, 117, 7, 117, 7, 117, 6, 82, 4, 173, 91, 11, 222, 251, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 231, 92, 173, 150, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 157, 52, 223, 27, 239, 157, 231, 92, 189, 214, 107, 77, 81, 37, 137, 38, 177, 71, 185, 71, 185, 71, 193, 71, 185, 71, 161, 70, 105, 5, 81, 199, 148, 178, 206, 153, 239, 157, 231, 60, 173, 150, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 132, 113, 206, 153, 8, 97, 206, 153, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 206, 153, 148, 146, 148, 146, 32, 1, 148, 178, 0, 1, 0, 3, 32, 1, 132, 48, 129, 156, 132, 48, 132, 48, 214, 218, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 231, 92, 206, 153, 206, 120, 231, 92, 231, 92, 231, 92, 231, 91, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 223, 27, 223, 27, 223, 27, 173, 117, 41, 69, 24, 195, 24, 195, 24, 195, 41, 101, 66, 40, 66, 73, 66, 73, 66, 73, 66, 73, 66, 73, 66, 73, 66, 73, 66, 73, 66, 73, 66, 73, 66, 73, 66, 73, 66, 73, 66, 73, 66, 73, 66, 73, 66, 73, 66, 73, 66, 73, 66, 73, 99, 45, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 91, 12, 82, 203, 66, 73, 66, 73, 66, 73, 66, 73, 66, 73, 66, 73, 66, 73, 66, 73, 66, 73, 66, 73, 66, 73, 66, 73, 66, 73, 66, 73, 66, 73, 66, 73, 66, 73, 66, 73, 66, 73, 66, 73, 49, 199, 24, 227, 24, 195, 24, 195, 24, 195, 132, 81, 223, 27, 223, 27, 223, 27, 223, 27, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 92, 231, 92, 231, 92, 222, 250, 198, 56, 231, 60, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 190, 56, 41, 69, 206, 153, 124, 48, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 116, 16, 223, 27, 206, 121, 34, 7, 5, 47, 7, 20, 7, 117, 7, 117, 7, 117, 7, 117, 7, 117, 7, 117, 7, 117, 7, 117, 7, 117, 7, 117, 7, 117, 7, 117, 7, 117, 7, 117, 7, 117, 7, 117, 7, 117, 7, 117, 5, 241, 3, 235, 140, 113, 239, 125, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 231, 92, 173, 150, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 240, 198, 56, 231, 92, 239, 157, 198, 56, 107, 109, 105, 5, 185, 71, 193, 103, 225, 233, 234, 9, 242, 42, 250, 42, 242, 42, 242, 42, 233, 233, 209, 168, 185, 71, 161, 70, 73, 102, 157, 19, 223, 27, 239, 125, 198, 56, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 116, 16, 206, 153, 49, 198, 190, 24, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 214, 218, 140, 145, 140, 145, 32, 1, 140, 145, 0, 1, 0, 3, 64, 1, 132, 48, 129, 156, 132, 48, 132, 48, 223, 27, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 231, 92, 198, 88, 214, 153, 231, 92, 231, 92, 231, 92, 231, 91, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 223, 27, 223, 27, 223, 27, 223, 27, 107, 174, 24, 195, 24, 195, 24, 195, 58, 8, 90, 236, 82, 203, 82, 203, 82, 203, 82, 203, 82, 203, 82, 203, 82, 203, 82, 203, 82, 203, 82, 203, 82, 203, 82, 203, 82, 203, 82, 203, 82, 203, 82, 203, 82, 203, 82, 203, 82, 203, 82, 203, 82, 203, 82, 203, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 170, 82, 203, 82, 203, 82, 203, 82, 203, 82, 203, 82, 203, 82, 203, 82, 203, 82, 203, 82, 203, 82, 203, 82, 203, 82, 203, 82, 203, 82, 203, 82, 203, 82, 203, 82, 203, 82, 203, 82, 203, 82, 203, 82, 235, 82, 235, 24, 227, 24, 195, 24, 195, 57, 231, 198, 88, 223, 27, 223, 27, 223, 27, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 92, 231, 92, 231, 92, 231, 59, 190, 23, 223, 27, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 173, 150, 74, 137, 206, 121, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 173, 182, 239, 157, 140, 80, 4, 109, 6, 179, 7, 117, 7, 117, 7, 117, 7, 117, 7, 117, 7, 117, 7, 117, 7, 117, 7, 117, 7, 117, 7, 117, 7, 117, 7, 117, 7, 117, 7, 117, 7, 117, 7, 117, 7, 117, 7, 117, 7, 85, 5, 111, 18, 39, 198, 56, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 231, 92, 173, 150, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 124, 16, 214, 186, 239, 157, 239, 157, 181, 182, 73, 69, 177, 71, 201, 136, 242, 10, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 225, 233, 185, 103, 137, 38, 107, 44, 214, 185, 239, 125, 190, 56, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 198, 88, 90, 235, 165, 84, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 231, 59, 140, 145, 140, 145, 64, 1, 140, 145, 0, 1, 0, 3, 64, 1, 132, 16, 129, 156, 132, 16, 132, 48, 239, 125, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 231, 60, 198, 56, 222, 250, 231, 92, 231, 92, 231, 92, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 223, 27, 223, 27, 223, 27, 214, 218, 82, 203, 24, 195, 24, 195, 33, 68, 82, 235, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 82, 203, 66, 73, 24, 195, 24, 195, 33, 4, 173, 117, 223, 27, 223, 27, 223, 27, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 92, 231, 92, 231, 92, 231, 92, 190, 23, 214, 218, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 140, 178, 115, 142, 190, 24, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 214, 218, 198, 56, 18, 39, 5, 111, 7, 85, 7, 85, 7, 85, 7, 85, 7, 85, 7, 85, 7, 85, 7, 85, 7, 85, 7, 85, 7, 85, 7, 85, 7, 85, 7, 85, 7, 85, 7, 85, 7, 85, 7, 85, 7, 85, 7, 85, 7, 85, 6, 244, 4, 206, 115, 174, 239, 124, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 231, 92, 173, 150, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115], "i8", ALLOC_NONE, Runtime.GLOBAL_BASE + 921141);
  allocate([239, 115, 239, 124, 16, 214, 250, 239, 157, 239, 157, 165, 84, 81, 4, 185, 71, 233, 233, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 242, 42, 201, 136, 161, 70, 82, 73, 206, 153, 239, 125, 173, 150, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 189, 247, 124, 15, 132, 80, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 125, 140, 113, 140, 113, 64, 1, 140, 113, 0, 1, 0, 3, 64, 1, 132, 16, 129, 156, 132, 16, 140, 113, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 223, 27, 190, 23, 231, 59, 231, 92, 231, 92, 231, 92, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 223, 27, 223, 27, 223, 27, 214, 218, 74, 170, 24, 195, 24, 195, 66, 73, 82, 203, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 66, 106, 66, 105, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 106, 66, 73, 58, 41, 58, 41, 58, 41, 66, 73, 66, 105, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 106, 66, 105, 66, 106, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 91, 12, 24, 195, 24, 195, 25, 4, 165, 117, 223, 27, 223, 27, 223, 27, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 91, 231, 92, 231, 92, 231, 92, 198, 55, 214, 185, 239, 125, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 107, 174, 140, 145, 181, 182, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 132, 113, 231, 92, 156, 210, 4, 173, 6, 212, 7, 85, 7, 85, 7, 85, 7, 85, 7, 85, 7, 85, 7, 85, 7, 85, 7, 85, 7, 85, 7, 85, 7, 85, 7, 85, 7, 85, 7, 85, 7, 85, 7, 85, 7, 85, 7, 85, 7, 85, 7, 85, 7, 85, 5, 144, 18, 71, 206, 121, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 231, 92, 173, 150, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 124, 16, 214, 250, 239, 157, 239, 157, 181, 214, 73, 4, 185, 71, 234, 9, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 217, 200, 169, 71, 98, 235, 222, 251, 231, 60, 132, 113, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 173, 150, 156, 243, 91, 12, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 148, 178, 140, 113, 64, 1, 140, 113, 0, 1, 0, 3, 96, 1, 132, 16, 129, 156, 132, 16, 148, 210, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 214, 218, 190, 23, 231, 92, 231, 92, 231, 92, 231, 92, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 223, 27, 223, 27, 223, 27, 214, 218, 74, 170, 24, 195, 24, 195, 82, 170, 74, 170, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 66, 73, 58, 41, 58, 41, 66, 73, 66, 73, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 66, 73, 58, 40, 58, 40, 58, 8, 58, 8, 58, 8, 58, 8, 58, 40, 58, 41, 66, 106, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 66, 73, 66, 73, 58, 41, 58, 41, 66, 73, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 90, 236, 33, 36, 24, 195, 25, 4, 165, 117, 223, 27, 223, 27, 223, 27, 223, 27, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 91, 231, 92, 231, 92, 231, 92, 198, 88, 206, 153, 239, 124, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 74, 170, 173, 85, 173, 117, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 181, 214, 231, 60, 66, 137, 5, 47, 7, 85, 7, 85, 7, 85, 7, 85, 7, 85, 7, 85, 7, 85, 7, 85, 7, 85, 7, 85, 7, 85, 7, 85, 7, 85, 7, 85, 7, 85, 7, 85, 7, 85, 7, 85, 7, 85, 7, 85, 7, 85, 7, 85, 7, 85, 6, 147, 4, 12, 173, 117, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 231, 92, 173, 150, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 124, 16, 214, 218, 239, 157, 239, 157, 206, 121, 65, 102, 185, 71, 234, 9, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 209, 168, 137, 38, 140, 113, 239, 125, 206, 153, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 165, 85, 181, 214, 66, 40, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 157, 19, 140, 113, 96, 1, 140, 113, 0, 1, 0, 3, 96, 1, 123, 239, 129, 156, 124, 15, 156, 243, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 214, 218, 198, 55, 231, 92, 231, 92, 231, 92, 231, 92, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 223, 27, 223, 27, 223, 27, 214, 218, 74, 170, 24, 195, 24, 195, 82, 203, 74, 170, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 106, 66, 41, 58, 8, 58, 8, 58, 40, 58, 41, 58, 41, 66, 73, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 58, 41, 58, 40, 58, 8, 58, 8, 58, 8, 58, 8, 58, 8, 58, 8, 58, 8, 58, 8, 58, 41, 66, 105, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 66, 73, 58, 41, 58, 41, 58, 40, 58, 8, 58, 8, 66, 73, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 91, 12, 33, 36, 24, 195, 25, 4, 165, 117, 223, 27, 223, 27, 223, 27, 223, 27, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 91, 231, 92, 231, 92, 231, 92, 206, 153, 206, 121, 239, 124, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 49, 199, 198, 24, 165, 85, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 198, 121, 198, 88, 10, 168, 5, 209, 7, 85, 7, 85, 7, 85, 7, 85, 7, 85, 7, 85, 7, 85, 7, 85, 7, 85, 7, 85, 7, 85, 7, 85, 7, 85, 7, 85, 7, 85, 7, 85, 7, 85, 7, 85, 7, 85, 7, 85, 7, 85, 7, 85, 7, 85, 7, 53, 5, 47, 115, 206, 239, 125, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 231, 92, 173, 150, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 124, 16, 214, 218, 239, 157, 239, 157, 239, 125, 140, 80, 161, 70, 225, 233, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 242, 42, 193, 103, 73, 4, 198, 56, 231, 92, 132, 145, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 165, 52, 206, 153, 33, 69, 239, 125, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 165, 84, 140, 113, 96, 1, 140, 113, 0, 1, 0, 3, 96, 1, 123, 239, 129, 156, 123, 239, 157, 19, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 125, 214, 185, 198, 55, 231, 92, 231, 92, 231, 92, 231, 91, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 223, 27, 223, 27, 223, 27, 223, 27, 214, 218, 74, 170, 24, 195, 24, 195, 82, 203, 74, 170, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 106, 58, 40, 57, 232, 49, 232, 50, 8, 58, 8, 58, 8, 58, 40, 58, 41, 58, 73, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 58, 41, 58, 40, 58, 8, 58, 8, 49, 232, 49, 232, 49, 232, 49, 232, 49, 232, 58, 8, 58, 8, 58, 8, 58, 41, 74, 106, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 58, 41, 58, 41, 58, 40, 58, 8, 58, 8, 49, 232, 49, 232, 58, 8, 66, 73, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 91, 12, 33, 36, 24, 195, 25, 4, 165, 117, 223, 27, 223, 27, 223, 27, 223, 27, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 91, 231, 92, 231, 92, 231, 92, 206, 153, 206, 88, 231, 92, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 125, 33, 36, 214, 154, 157, 20, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 214, 218, 189, 214, 11, 171, 6, 114, 7, 85, 7, 85, 7, 85, 7, 85, 7, 85, 7, 85, 7, 85, 7, 85, 7, 85, 7, 85, 7, 85, 7, 85, 7, 85, 7, 85, 7, 85, 7, 85, 7, 85, 7, 85, 7, 85, 7, 85, 7, 85, 7, 85, 7, 85, 7, 85, 5, 79, 50, 104, 231, 59, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 231, 92, 173, 150, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 124, 16, 214, 218, 239, 157, 239, 157, 239, 157, 198, 56, 73, 4, 193, 103, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 234, 9, 169, 71, 115, 174, 239, 124, 198, 88, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 148, 243, 214, 154, 24, 227, 231, 92, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 165, 84, 140, 81, 96, 1, 140, 81, 0, 1, 0, 3, 96, 1, 123, 239, 129, 156, 123, 239, 165, 52, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 124, 214, 153, 198, 56, 231, 92, 231, 92, 231, 92, 231, 91, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 223, 27, 223, 27, 223, 27, 223, 27, 214, 218, 74, 170, 24, 195, 24, 195, 82, 203, 74, 170, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 58, 41, 49, 232, 49, 231, 49, 231, 49, 231, 49, 232, 49, 232, 58, 8, 58, 8, 58, 40, 58, 41, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 66, 105, 58, 40, 58, 8, 58, 8, 49, 232, 49, 232, 49, 231, 49, 231, 49, 231, 49, 231, 49, 232, 58, 8, 58, 8, 58, 8, 66, 73, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 58, 41, 58, 40, 58, 8, 58, 8, 49, 232, 49, 231, 49, 231, 49, 231, 49, 231, 49, 232, 66, 41, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 91, 12, 33, 36, 24, 195, 25, 4, 165, 117, 223, 27, 223, 27, 223, 27, 223, 27, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 92, 231, 92, 231, 92, 214, 185, 198, 88, 231, 92, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 231, 60, 24, 195, 214, 154, 148, 243, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 214, 250, 173, 117, 4, 44, 6, 147, 7, 53, 7, 53, 7, 53, 7, 53, 7, 53, 7, 53, 7, 53, 7, 53, 7, 53, 7, 53, 7, 53, 7, 53, 7, 53, 7, 53, 7, 53, 7, 53, 7, 53, 7, 53, 7, 53, 7, 53, 7, 53, 7, 53, 7, 53, 7, 53, 5, 79, 34, 71, 214, 218, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 231, 92, 173, 150, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 124, 16, 214, 218, 239, 157, 239, 157, 239, 157, 239, 157, 156, 210, 169, 71, 234, 9, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 193, 136, 81, 4, 206, 121, 214, 250, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 148, 211, 214, 154, 16, 130, 223, 27, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 173, 117, 140, 81, 96, 1, 140, 81, 0, 1, 0, 1, 129, 158, 123, 239, 123, 239, 173, 84, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 124, 206, 153, 198, 88, 231, 92, 231, 92, 231, 92, 231, 91, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 223, 27, 223, 27, 223, 27, 223, 27, 214, 218, 74, 170, 24, 195, 24, 195, 82, 203, 74, 170, 74, 138, 74, 138, 74, 138, 74, 138, 66, 41, 58, 8, 49, 232, 49, 231, 49, 199, 49, 199, 49, 199, 49, 199, 49, 231, 49, 232, 58, 8, 58, 8, 58, 41, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 58, 41, 58, 8, 58, 8, 49, 232, 49, 232, 49, 231, 49, 199, 49, 199, 49, 199, 49, 199, 49, 231, 49, 232, 58, 8, 58, 8, 58, 40, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 58, 41, 58, 8, 58, 8, 49, 232, 49, 231, 49, 199, 49, 199, 49, 199, 49, 199, 49, 231, 49, 232, 58, 8, 66, 73, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 91, 12, 33, 36, 24, 195, 25, 4, 165, 117, 223, 27, 223, 27, 223, 27, 223, 27, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 92, 231, 92, 231, 92, 214, 186, 198, 56, 231, 92, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 223, 27, 16, 130, 214, 154, 148, 211, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 223, 27, 165, 52, 4, 173, 6, 211, 7, 53, 7, 53, 7, 53, 7, 53, 7, 53, 7, 53, 7, 53, 7, 53, 7, 53, 7, 53, 7, 53, 7, 53, 7, 53, 7, 53, 7, 53, 7, 53, 7, 53, 7, 53, 7, 53, 7, 53, 7, 53, 7, 53, 7, 53, 7, 53, 5, 112, 26, 104, 214, 186, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 231, 92, 173, 150, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 124, 16, 214, 218, 239, 157, 239, 157, 239, 157, 239, 157, 231, 59, 82, 40, 185, 71, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 225, 233, 145, 38, 173, 117, 231, 92, 132, 81, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 140, 178, 214, 154, 0, 65, 222, 251, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 173, 149, 132, 80, 132, 80, 0, 1, 0, 1, 129, 158, 123, 239, 123, 239, 173, 117, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 124, 206, 153, 198, 88, 231, 92, 231, 92, 231, 92, 231, 91, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 223, 27, 223, 27, 223, 27, 223, 27, 214, 218, 74, 170, 24, 195, 24, 195, 82, 203, 74, 170, 74, 138, 74, 138, 66, 106, 58, 40, 58, 8, 49, 232, 49, 231, 49, 199, 49, 199, 49, 167, 49, 199, 49, 199, 49, 231, 49, 232, 58, 8, 58, 8, 58, 40, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 58, 40, 58, 8, 58, 8, 49, 232, 49, 231, 49, 199, 49, 199, 49, 199, 49, 199, 49, 199, 49, 231, 49, 232, 50, 8, 58, 8, 58, 40, 66, 105, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 58, 40, 58, 8, 58, 8, 49, 232, 49, 231, 49, 199, 49, 199, 49, 167, 49, 199, 49, 199, 49, 231, 49, 232, 58, 8, 58, 40, 74, 106, 74, 138, 74, 138, 74, 138, 91, 12, 33, 36, 24, 195, 25, 4, 165, 117, 223, 27, 223, 27, 223, 27, 223, 27, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 92, 231, 92, 231, 92, 214, 218, 198, 56, 231, 92, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 223, 27, 8, 97, 214, 154, 148, 211, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 223, 27, 173, 117, 4, 44, 6, 147, 7, 53, 7, 53, 7, 53, 7, 53, 7, 53, 7, 53, 7, 53, 7, 53, 7, 53, 7, 53, 7, 53, 7, 53, 7, 53, 7, 53, 7, 53, 7, 53, 7, 53, 7, 53, 7, 53, 7, 53, 7, 53, 7, 53, 7, 53, 7, 53, 5, 79, 34, 71, 214, 218, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 231, 92, 173, 150, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 124, 16, 214, 218, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 198, 88, 97, 5, 201, 168, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 242, 42, 185, 71, 115, 174, 239, 157, 157, 52, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 140, 178, 214, 154, 0, 0, 214, 218, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 181, 150, 132, 80, 132, 80, 0, 1, 0, 1, 129, 158, 123, 207, 123, 207, 181, 149, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 124, 206, 153, 206, 120, 231, 92, 231, 92, 231, 92, 231, 91, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 223, 27, 223, 27, 223, 27, 223, 27, 214, 218, 74, 170, 24, 195, 24, 195, 82, 203, 74, 170, 74, 138, 74, 138, 58, 41, 58, 8, 58, 8, 49, 232, 49, 231, 49, 199, 49, 167, 41, 166, 41, 167, 49, 199, 49, 199, 49, 232, 58, 8, 58, 8, 58, 40, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 66, 138, 58, 40, 58, 8, 58, 8, 49, 232, 49, 231, 49, 199, 49, 167, 41, 166, 41, 167, 49, 199, 49, 199, 49, 231, 49, 232, 58, 8, 58, 40, 66, 73, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 58, 40, 58, 8, 50, 8, 49, 232, 49, 199, 49, 199, 41, 167, 41, 166, 49, 167, 49, 199, 49, 231, 49, 232, 58, 8, 58, 8, 66, 73, 74, 138, 74, 138, 74, 138, 91, 12, 33, 36, 24, 195, 25, 4, 165, 117, 223, 27, 223, 27, 223, 27, 223, 27, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 92, 231, 92, 231, 92, 222, 250, 198, 56, 231, 60, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 222, 251, 0, 65, 214, 154, 140, 178, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 214, 250, 189, 214, 11, 171, 6, 82, 7, 53, 7, 53, 7, 53, 7, 53, 7, 53, 7, 53, 7, 53, 7, 53, 7, 53, 7, 53, 7, 53, 7, 53, 7, 53, 7, 53, 7, 53, 7, 53, 7, 53, 7, 53, 7, 53, 7, 53, 7, 53, 7, 53, 7, 53, 7, 53, 5, 47, 50, 104, 231, 59, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 231, 92, 173, 150, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 124, 16, 214, 218, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 189, 214, 129, 37, 225, 201, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 185, 103, 81, 231, 231, 59, 181, 214, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 140, 146, 214, 154, 0, 0, 214, 218, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 181, 214, 132, 48, 132, 48, 0, 1, 0, 1, 129, 158, 123, 207, 123, 207, 173, 149, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 124, 206, 153, 206, 120, 231, 92, 231, 92, 231, 92, 231, 91, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 223, 27, 223, 27, 223, 27, 223, 27, 214, 218, 74, 170, 24, 195, 24, 195, 82, 203, 74, 170, 74, 138, 74, 138, 66, 73, 58, 8, 58, 8, 49, 232, 49, 231, 49, 199, 49, 199, 41, 167, 49, 167, 49, 199, 49, 231, 49, 232, 58, 8, 58, 8, 58, 40, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 66, 138, 58, 40, 58, 8, 58, 8, 49, 232, 49, 231, 49, 199, 49, 167, 41, 166, 41, 167, 49, 199, 49, 199, 49, 231, 49, 232, 58, 8, 58, 40, 66, 73, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 58, 40, 58, 8, 58, 8, 49, 232, 49, 199, 49, 199, 49, 167, 41, 167, 49, 199, 49, 199, 49, 231, 49, 232, 58, 8, 58, 8, 66, 73, 74, 138, 74, 138, 74, 138, 91, 12, 33, 36, 24, 195, 25, 4, 165, 117, 223, 27, 223, 27, 223, 27, 223, 27, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 92, 231, 92, 231, 92, 222, 250, 198, 56, 231, 60, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 125, 239, 124, 239, 124, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 124, 231, 92, 239, 125, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 214, 218, 0, 32, 214, 154, 140, 178, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 206, 186, 198, 88, 18, 168, 5, 208, 7, 52, 7, 52, 7, 52, 7, 52, 7, 52, 7, 52, 7, 52, 7, 52, 7, 52, 7, 52, 7, 52, 7, 52, 7, 52, 7, 52, 7, 52, 7, 52, 7, 52, 7, 52, 7, 52, 7, 52, 7, 52, 7, 52, 7, 52, 7, 20, 5, 47, 115, 206, 239, 125, 239, 157, 239, 157, 239, 157, 239, 157, 231, 92, 173, 150, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 124, 16, 214, 218, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 173, 117, 153, 38, 225, 233, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 193, 103, 73, 69, 214, 218, 189, 247, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 140, 146, 206, 153, 0, 0, 206, 154, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 181, 182, 132, 48, 132, 48, 0, 1, 0, 1, 129, 158, 115, 206, 115, 206, 173, 84, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 124, 206, 153, 198, 88, 231, 92, 231, 92, 231, 92, 231, 91, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 223, 27, 223, 27, 223, 27, 223, 27, 214, 218, 74, 170, 24, 195, 24, 195, 82, 203, 74, 170, 74, 138, 74, 138, 74, 138, 66, 73, 58, 8, 49, 232, 49, 231, 49, 199, 49, 199, 49, 199, 49, 199, 49, 199, 49, 231, 49, 232, 58, 8, 58, 8, 58, 41, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 58, 40, 58, 8, 58, 8, 49, 232, 49, 231, 49, 199, 49, 199, 49, 199, 49, 199, 49, 199, 49, 231, 49, 232, 50, 8, 58, 8, 58, 40, 66, 105, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 58, 40, 58, 8, 58, 8, 49, 232, 49, 231, 49, 199, 49, 199, 49, 199, 49, 199, 49, 199, 49, 231, 49, 232, 58, 8, 66, 73, 74, 138, 74, 138, 74, 138, 74, 138, 91, 12, 33, 36, 24, 195, 25, 4, 165, 117, 223, 27, 223, 27, 223, 27, 223, 27, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 92, 231, 92, 231, 92, 214, 218, 198, 56, 231, 92, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 222, 250, 198, 88, 132, 80, 140, 80, 206, 120, 223, 27, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 124, 214, 186, 173, 84, 115, 206, 173, 84, 214, 185, 239, 124, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 222, 251, 0, 65, 214, 154, 140, 178, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 198, 88, 231, 59, 66, 169, 5, 47, 7, 52, 7, 52, 7, 52, 7, 52, 7, 52, 7, 52, 7, 52, 7, 52, 7, 52, 7, 52, 7, 52, 7, 52, 7, 52, 7, 52, 7, 52, 7, 52, 7, 52, 7, 52, 7, 52, 7, 52, 7, 52, 7, 52, 7, 52, 6, 114, 4, 12, 173, 117, 239, 157, 239, 157, 239, 157, 239, 157, 231, 92, 173, 150, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 124, 16, 214, 218, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 165, 52, 161, 70, 234, 9, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 193, 136, 81, 37, 214, 186, 189, 247, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 140, 146, 214, 154, 0, 0, 214, 218, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 173, 149, 132, 48, 132, 48, 0, 1, 0, 1, 129, 158, 115, 206, 115, 206, 165, 84, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 124, 206, 153, 198, 88, 231, 92, 231, 92, 231, 92, 231, 91, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 223, 27, 223, 27, 223, 27, 223, 27, 214, 218, 74, 170, 24, 195, 24, 195, 82, 203, 74, 170, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 58, 41, 49, 232, 49, 231, 49, 231, 49, 199, 49, 231, 49, 231, 49, 232, 58, 8, 58, 8, 58, 40, 58, 41, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 58, 41, 58, 8, 58, 8, 49, 232, 49, 232, 49, 231, 49, 199, 49, 199, 49, 199, 49, 199, 49, 231, 49, 232, 58, 8, 58, 8, 58, 40, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 58, 41, 58, 40, 58, 8, 50, 8, 49, 232, 49, 231, 49, 199, 49, 199, 49, 231, 49, 231, 58, 8, 66, 73, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 91, 12, 33, 36, 24, 195, 25, 4, 165, 117, 223, 27, 223, 27, 223, 27, 223, 27, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 92, 231, 92, 231, 92, 214, 186, 198, 56, 231, 92, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 214, 218, 124, 15, 41, 101, 57, 231, 58, 40, 41, 134, 148, 210, 222, 250, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 124, 206, 153, 49, 166, 49, 166, 58, 8, 41, 134, 57, 231, 214, 185, 239, 125, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 223, 27, 8, 97, 214, 154, 148, 211, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 165, 85, 239, 157, 156, 210, 4, 141, 6, 179, 7, 20, 7, 20, 7, 20, 7, 20, 7, 20, 7, 20, 7, 20, 7, 20, 7, 20, 7, 20, 7, 20, 7, 20, 7, 20, 7, 20, 7, 20, 7, 20, 7, 20, 7, 20, 7, 20, 7, 20, 7, 20, 7, 20, 5, 112, 18, 71, 206, 121, 239, 157, 239, 157, 239, 157, 231, 92, 173, 150, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 124, 16, 214, 218, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 173, 117, 153, 38, 225, 233, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 193, 103, 73, 69, 214, 218, 181, 247, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 140, 178, 214, 154, 0, 0, 214, 218, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 173, 117, 132, 16, 132, 16, 0, 1, 0, 3, 96, 1, 115, 174, 129, 156, 115, 174, 157, 19, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 124, 214, 153, 198, 56, 231, 92, 231, 92, 231, 92, 231, 91, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 223, 27, 223, 27, 223, 27, 223, 27, 214, 218, 74, 170, 24, 195, 24, 195, 82, 203, 74, 170, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 106, 66, 40, 49, 232, 49, 232, 49, 232, 49, 232, 58, 8, 58, 8, 58, 8, 58, 41, 58, 41, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 66, 105, 58, 40, 58, 8, 58, 8, 49, 232, 49, 232, 49, 231, 49, 231, 49, 231, 49, 231, 49, 232, 58, 8, 58, 8, 58, 8, 66, 73, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 58, 41, 58, 40, 58, 8, 58, 8, 58, 8, 49, 232, 49, 232, 49, 232, 49, 232, 66, 41, 74, 106, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 91, 12, 33, 36, 24, 195, 25, 4, 165, 117, 223, 27, 223, 27, 223, 27, 223, 27, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 92, 231, 92, 231, 92, 214, 185, 198, 88, 231, 92, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 214, 218, 123, 239, 41, 166, 74, 170, 99, 77, 99, 109, 99, 109, 49, 166, 148, 210, 222, 250, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 124, 206, 153, 49, 166, 66, 73, 74, 170, 91, 44, 91, 44, 66, 105, 49, 199, 214, 185, 239, 125, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 223, 27, 16, 130, 214, 154, 148, 211, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 124, 16, 231, 59, 198, 88, 18, 38, 5, 79, 7, 20, 7, 20, 7, 20, 7, 20, 7, 20, 7, 20, 7, 20, 7, 20, 7, 20, 7, 20, 7, 20, 7, 20, 7, 20, 7, 20, 7, 20, 7, 20, 7, 20, 7, 20, 7, 20, 7, 20, 7, 20, 6, 179, 4, 206, 115, 206, 239, 124, 239, 157, 239, 157, 231, 92, 173, 150, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 124, 16, 214, 218, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 189, 214, 129, 37, 225, 201, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 185, 103, 81, 232, 231, 60, 165, 117, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 140, 178, 214, 154, 0, 65, 223, 27, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 165, 84, 132, 16, 96, 1, 132, 16, 0, 1, 0, 3, 96, 1, 115, 174, 129, 156, 115, 174, 157, 19, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 125, 214, 185, 198, 55, 231, 92, 231, 92, 231, 92, 231, 91, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231], "i8", ALLOC_NONE, Runtime.GLOBAL_BASE + 931381);
  allocate([59, 231, 59, 223, 27, 223, 27, 223, 27, 223, 27, 214, 218, 74, 170, 24, 195, 24, 195, 82, 203, 74, 170, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 106, 66, 41, 58, 8, 58, 8, 58, 8, 58, 8, 58, 40, 58, 41, 58, 73, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 58, 41, 58, 40, 58, 8, 58, 8, 49, 232, 49, 232, 49, 232, 49, 232, 49, 232, 58, 8, 58, 8, 58, 8, 58, 40, 66, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 58, 73, 58, 41, 58, 40, 58, 8, 58, 8, 58, 8, 58, 8, 66, 73, 74, 106, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 91, 12, 33, 36, 24, 195, 25, 4, 165, 117, 223, 27, 223, 27, 223, 27, 223, 27, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 91, 231, 92, 231, 92, 231, 92, 206, 153, 206, 88, 231, 92, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 214, 218, 123, 239, 41, 166, 74, 170, 99, 77, 107, 142, 107, 174, 107, 207, 107, 142, 41, 134, 190, 23, 239, 124, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 124, 206, 153, 49, 166, 66, 73, 91, 44, 91, 44, 99, 77, 99, 77, 91, 45, 66, 73, 66, 40, 214, 186, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 231, 60, 24, 195, 214, 154, 148, 243, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 198, 121, 239, 125, 140, 80, 4, 109, 6, 114, 7, 20, 7, 20, 7, 20, 7, 20, 7, 20, 7, 20, 7, 20, 7, 20, 7, 20, 7, 20, 7, 20, 7, 20, 7, 20, 7, 20, 7, 20, 7, 20, 7, 20, 7, 20, 7, 20, 7, 20, 5, 79, 18, 38, 198, 56, 239, 157, 239, 157, 231, 92, 173, 150, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 124, 16, 214, 218, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 198, 88, 89, 5, 201, 168, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 242, 42, 185, 71, 115, 174, 239, 124, 140, 145, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 148, 211, 214, 154, 16, 130, 223, 27, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 165, 84, 132, 16, 96, 1, 132, 16, 0, 1, 0, 3, 96, 1, 115, 174, 129, 156, 115, 174, 148, 210, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 214, 218, 198, 55, 231, 92, 231, 92, 231, 92, 231, 92, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 223, 27, 223, 27, 223, 27, 214, 218, 74, 170, 24, 195, 24, 195, 82, 203, 74, 170, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 66, 73, 58, 40, 58, 41, 58, 41, 58, 73, 66, 73, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 58, 41, 58, 40, 58, 8, 58, 8, 58, 8, 58, 8, 58, 8, 58, 8, 58, 8, 58, 8, 58, 40, 66, 105, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 66, 73, 58, 73, 58, 41, 58, 40, 58, 40, 66, 73, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 91, 12, 33, 36, 24, 195, 25, 4, 165, 117, 223, 27, 223, 27, 223, 27, 223, 27, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 91, 231, 92, 231, 92, 231, 92, 206, 153, 206, 121, 239, 124, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 214, 218, 123, 239, 41, 166, 74, 170, 99, 77, 107, 142, 107, 207, 115, 207, 107, 207, 107, 142, 82, 203, 66, 40, 214, 218, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 124, 206, 153, 49, 166, 66, 73, 91, 44, 99, 77, 99, 109, 99, 109, 99, 77, 91, 77, 91, 44, 41, 134, 190, 23, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 125, 33, 36, 214, 154, 157, 20, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 132, 113, 231, 92, 206, 153, 42, 7, 5, 46, 6, 179, 7, 20, 7, 20, 7, 20, 7, 20, 7, 20, 7, 20, 7, 20, 7, 20, 7, 20, 7, 20, 7, 20, 7, 20, 7, 20, 7, 20, 7, 20, 7, 20, 7, 20, 7, 20, 5, 209, 11, 203, 140, 113, 239, 125, 239, 157, 231, 92, 173, 150, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 124, 16, 214, 218, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 231, 59, 82, 40, 185, 71, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 225, 233, 145, 38, 173, 117, 223, 27, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 157, 19, 214, 154, 24, 227, 231, 92, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 157, 19, 124, 15, 96, 1, 124, 15, 0, 1, 0, 3, 96, 1, 115, 174, 129, 156, 115, 142, 140, 113, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 214, 218, 190, 23, 231, 92, 231, 92, 231, 92, 231, 92, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 223, 27, 223, 27, 223, 27, 214, 218, 74, 170, 24, 195, 24, 195, 82, 170, 74, 170, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 66, 105, 66, 73, 66, 73, 66, 105, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 66, 73, 58, 40, 58, 40, 58, 8, 58, 8, 58, 8, 58, 8, 58, 40, 58, 41, 66, 106, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 66, 105, 66, 73, 66, 73, 66, 105, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 91, 12, 33, 36, 24, 195, 25, 4, 165, 117, 223, 27, 223, 27, 223, 27, 223, 27, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 91, 231, 92, 231, 92, 231, 92, 198, 88, 206, 153, 239, 124, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 214, 218, 123, 239, 41, 166, 74, 170, 99, 77, 107, 142, 115, 207, 115, 239, 115, 207, 107, 174, 99, 109, 91, 12, 49, 198, 214, 185, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 124, 206, 153, 49, 166, 74, 170, 99, 77, 99, 109, 99, 109, 99, 142, 99, 109, 99, 109, 91, 77, 74, 170, 49, 166, 173, 84, 239, 124, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 49, 199, 198, 24, 165, 85, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 190, 56, 239, 157, 189, 214, 18, 39, 5, 47, 6, 179, 7, 20, 7, 20, 7, 20, 7, 20, 7, 20, 7, 20, 7, 20, 7, 20, 7, 20, 7, 20, 7, 20, 7, 20, 7, 20, 7, 20, 7, 20, 7, 20, 6, 17, 4, 173, 91, 11, 223, 27, 239, 157, 231, 92, 173, 150, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 124, 16, 214, 218, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 156, 210, 161, 70, 234, 9, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 193, 136, 81, 4, 206, 121, 206, 153, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 165, 52, 206, 153, 33, 69, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 148, 178, 123, 239, 96, 1, 123, 239, 0, 1, 0, 3, 64, 1, 115, 142, 129, 156, 115, 142, 123, 239, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 223, 27, 190, 23, 231, 59, 231, 92, 231, 92, 231, 92, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 223, 27, 223, 27, 223, 27, 214, 218, 74, 170, 24, 195, 24, 195, 66, 73, 82, 203, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 66, 106, 66, 73, 66, 73, 58, 41, 58, 41, 66, 73, 66, 106, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 91, 12, 24, 195, 24, 195, 25, 4, 165, 117, 223, 27, 223, 27, 223, 27, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 91, 231, 92, 231, 92, 231, 92, 198, 55, 214, 185, 239, 125, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 214, 218, 123, 239, 41, 166, 74, 170, 99, 109, 107, 174, 115, 207, 115, 239, 115, 239, 107, 174, 99, 109, 91, 44, 66, 40, 82, 170, 222, 250, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 124, 206, 153, 49, 166, 74, 170, 99, 109, 99, 142, 107, 142, 107, 142, 107, 142, 99, 109, 99, 77, 91, 44, 74, 170, 41, 133, 206, 121, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 74, 170, 173, 85, 173, 117, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 116, 16, 222, 251, 239, 157, 165, 84, 18, 103, 5, 47, 6, 114, 7, 20, 7, 20, 7, 20, 7, 20, 7, 20, 7, 20, 7, 20, 7, 20, 7, 20, 7, 20, 7, 20, 7, 20, 7, 20, 6, 244, 5, 144, 4, 141, 66, 137, 206, 153, 239, 157, 231, 92, 173, 150, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 124, 16, 214, 218, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 198, 88, 73, 4, 193, 103, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 234, 9, 169, 71, 115, 206, 239, 124, 165, 117, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 165, 85, 181, 214, 66, 40, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 132, 80, 123, 239, 64, 1, 123, 239, 0, 1, 0, 3, 64, 1, 115, 142, 129, 156, 115, 142, 115, 174, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 231, 60, 198, 56, 222, 250, 231, 92, 231, 92, 231, 92, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 223, 27, 223, 27, 223, 27, 214, 218, 82, 203, 24, 195, 24, 195, 33, 36, 90, 235, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 82, 203, 66, 73, 24, 195, 24, 195, 33, 4, 173, 117, 223, 27, 223, 27, 223, 27, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 92, 231, 92, 231, 92, 231, 92, 190, 23, 214, 218, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 214, 218, 123, 239, 41, 166, 91, 12, 99, 109, 107, 174, 115, 239, 116, 16, 115, 239, 107, 207, 99, 109, 91, 44, 74, 138, 41, 101, 206, 153, 239, 125, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 124, 206, 153, 49, 166, 74, 170, 99, 109, 107, 142, 107, 174, 107, 174, 107, 174, 107, 142, 99, 109, 99, 77, 74, 170, 49, 199, 99, 12, 214, 218, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 107, 174, 140, 145, 181, 182, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 132, 113, 223, 59, 239, 157, 181, 182, 34, 39, 4, 238, 5, 144, 6, 179, 6, 244, 6, 244, 6, 244, 6, 244, 6, 244, 6, 244, 6, 244, 6, 244, 6, 244, 6, 244, 6, 82, 5, 47, 11, 171, 99, 109, 214, 186, 239, 157, 231, 92, 165, 85, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 124, 16, 214, 218, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 125, 140, 80, 161, 70, 225, 233, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 242, 42, 193, 103, 73, 4, 198, 56, 223, 27, 116, 16, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 173, 150, 156, 243, 91, 12, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 123, 239, 123, 239, 64, 1, 123, 239, 0, 1, 0, 3, 64, 1, 107, 141, 129, 156, 107, 141, 107, 141, 231, 59, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 231, 92, 198, 88, 214, 153, 231, 92, 231, 92, 231, 92, 231, 91, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 223, 27, 223, 27, 223, 27, 223, 27, 107, 174, 24, 195, 24, 195, 24, 195, 58, 8, 91, 12, 82, 203, 82, 203, 82, 203, 82, 203, 82, 203, 82, 203, 82, 203, 82, 203, 82, 203, 82, 203, 82, 203, 82, 203, 82, 203, 82, 203, 82, 203, 82, 203, 82, 203, 82, 203, 82, 203, 82, 203, 82, 203, 82, 203, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 82, 203, 82, 203, 82, 203, 82, 203, 82, 203, 82, 203, 82, 203, 82, 203, 82, 203, 82, 203, 82, 203, 82, 203, 82, 203, 82, 203, 82, 203, 82, 203, 82, 203, 82, 203, 82, 203, 82, 203, 82, 203, 82, 203, 82, 203, 82, 203, 24, 227, 24, 195, 24, 195, 57, 231, 198, 88, 223, 27, 223, 27, 223, 27, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 92, 231, 92, 231, 92, 231, 59, 190, 23, 223, 27, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 214, 218, 123, 239, 41, 166, 91, 12, 99, 109, 107, 174, 115, 239, 124, 16, 116, 16, 107, 207, 99, 142, 91, 44, 74, 138, 41, 133, 189, 247, 231, 60, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 124, 206, 153, 49, 166, 74, 170, 99, 141, 107, 174, 107, 207, 115, 207, 115, 207, 107, 174, 107, 142, 99, 109, 91, 44, 49, 199, 74, 138, 214, 186, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 140, 178, 115, 142, 190, 24, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 132, 145, 223, 27, 239, 157, 198, 88, 107, 141, 10, 232, 5, 47, 5, 79, 6, 50, 6, 179, 6, 211, 6, 244, 6, 244, 6, 211, 6, 146, 5, 209, 5, 47, 4, 109, 34, 71, 165, 51, 223, 27, 239, 157, 223, 27, 148, 211, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 124, 16, 214, 218, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 206, 153, 65, 134, 185, 71, 234, 9, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 209, 168, 137, 38, 140, 113, 239, 125, 181, 247, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 189, 247, 124, 15, 132, 80, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 231, 60, 123, 239, 123, 239, 64, 1, 123, 239, 0, 1, 0, 3, 32, 1, 107, 109, 129, 156, 107, 109, 107, 109, 214, 218, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 124, 206, 153, 206, 120, 231, 92, 231, 92, 231, 92, 231, 91, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 223, 27, 223, 27, 223, 27, 165, 84, 33, 36, 24, 195, 24, 195, 24, 195, 41, 69, 58, 8, 66, 73, 66, 73, 66, 73, 66, 73, 66, 73, 66, 73, 66, 73, 66, 73, 66, 73, 66, 73, 66, 73, 66, 73, 66, 73, 66, 73, 66, 73, 66, 73, 66, 73, 66, 73, 66, 73, 66, 73, 99, 45, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 99, 45, 66, 73, 66, 73, 66, 73, 66, 73, 66, 73, 66, 73, 66, 73, 66, 73, 66, 73, 66, 73, 66, 73, 66, 73, 66, 73, 66, 73, 66, 73, 66, 73, 66, 73, 66, 73, 66, 73, 66, 73, 66, 73, 49, 166, 24, 227, 24, 195, 24, 195, 24, 195, 124, 48, 223, 27, 223, 27, 223, 27, 223, 27, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 92, 231, 92, 231, 92, 222, 250, 198, 56, 231, 60, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 214, 218, 123, 239, 41, 166, 91, 12, 99, 109, 107, 174, 115, 240, 124, 48, 124, 16, 115, 207, 107, 142, 91, 77, 74, 138, 41, 133, 189, 247, 231, 92, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 124, 206, 153, 49, 166, 74, 203, 107, 142, 107, 174, 115, 239, 115, 239, 115, 239, 115, 207, 107, 174, 99, 109, 91, 77, 49, 199, 74, 138, 214, 186, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 173, 150, 74, 137, 206, 121, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 124, 48, 214, 186, 239, 125, 239, 124, 189, 214, 107, 109, 26, 103, 11, 171, 4, 206, 5, 47, 5, 79, 5, 79, 5, 14, 4, 141, 10, 232, 50, 104, 148, 178, 214, 153, 239, 157, 231, 92, 206, 121, 124, 48, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 124, 16, 214, 218, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 189, 214, 73, 4, 185, 71, 234, 9, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 217, 200, 169, 71, 99, 11, 223, 27, 223, 27, 124, 16, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 198, 88, 90, 235, 165, 84, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 214, 218, 123, 207, 123, 207, 32, 1, 123, 239, 0, 1, 0, 3, 32, 1, 107, 109, 129, 156, 107, 109, 107, 109, 198, 56, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 125, 214, 186, 198, 56, 231, 92, 231, 92, 231, 92, 231, 92, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 223, 27, 223, 27, 223, 27, 223, 27, 148, 211, 66, 8, 24, 195, 24, 195, 24, 195, 24, 195, 24, 195, 24, 195, 24, 195, 24, 195, 24, 195, 24, 195, 24, 195, 24, 195, 24, 195, 24, 195, 24, 195, 24, 195, 24, 195, 24, 195, 24, 195, 24, 195, 24, 195, 24, 195, 24, 195, 24, 195, 91, 12, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 91, 12, 24, 195, 24, 195, 24, 195, 24, 195, 24, 195, 24, 195, 24, 195, 24, 195, 24, 195, 24, 195, 24, 195, 24, 195, 24, 195, 24, 195, 24, 195, 24, 195, 24, 195, 24, 195, 24, 195, 24, 195, 24, 195, 24, 195, 24, 195, 24, 195, 33, 36, 115, 207, 214, 186, 223, 27, 223, 27, 223, 27, 223, 27, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 91, 231, 92, 231, 92, 231, 92, 214, 153, 206, 120, 231, 92, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 214, 218, 123, 239, 41, 166, 91, 12, 99, 109, 107, 174, 116, 16, 124, 48, 124, 48, 115, 239, 107, 142, 99, 77, 74, 138, 41, 133, 189, 247, 231, 92, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 124, 206, 153, 49, 166, 82, 203, 107, 142, 107, 207, 115, 239, 116, 16, 116, 16, 115, 239, 107, 207, 107, 142, 99, 77, 49, 199, 74, 137, 214, 186, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 198, 56, 41, 69, 206, 153, 124, 48, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 165, 117, 222, 251, 239, 157, 239, 124, 214, 153, 181, 149, 156, 210, 123, 206, 99, 76, 107, 109, 132, 80, 165, 52, 190, 23, 223, 27, 239, 157, 231, 92, 214, 186, 140, 210, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 124, 16, 214, 218, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 165, 84, 81, 5, 185, 71, 225, 233, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 242, 42, 201, 136, 161, 70, 82, 73, 206, 153, 239, 124, 157, 84, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 116, 16, 206, 153, 49, 198, 190, 24, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 198, 88, 123, 207, 123, 207, 32, 1, 123, 207, 0, 1, 0, 3, 0, 1, 129, 156, 107, 109, 107, 109, 173, 149, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 222, 250, 190, 23, 231, 92, 231, 92, 231, 92, 231, 92, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 198, 56, 148, 243, 140, 146, 140, 146, 140, 146, 140, 146, 140, 146, 140, 146, 140, 146, 140, 146, 140, 146, 140, 146, 140, 146, 140, 146, 140, 146, 140, 146, 140, 146, 140, 146, 140, 113, 132, 81, 132, 81, 132, 49, 124, 48, 91, 12, 24, 195, 91, 12, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 91, 12, 24, 195, 41, 101, 132, 49, 132, 49, 132, 81, 132, 81, 140, 113, 140, 146, 140, 146, 140, 146, 140, 146, 140, 146, 140, 146, 140, 146, 140, 146, 140, 146, 140, 146, 140, 146, 140, 146, 140, 146, 140, 146, 140, 146, 140, 146, 148, 178, 173, 150, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 91, 231, 92, 231, 92, 231, 92, 198, 88, 214, 153, 239, 124, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 214, 218, 123, 239, 41, 166, 91, 12, 99, 109, 107, 207, 116, 16, 124, 81, 124, 48, 115, 239, 107, 142, 99, 77, 74, 138, 41, 133, 189, 247, 231, 92, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 124, 206, 153, 49, 166, 82, 203, 107, 142, 115, 207, 116, 16, 124, 48, 124, 48, 116, 16, 115, 207, 107, 142, 99, 109, 58, 8, 74, 137, 214, 186, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 214, 186, 0, 0, 214, 154, 132, 145, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 165, 84, 206, 153, 223, 27, 239, 125, 239, 157, 239, 157, 239, 125, 239, 157, 239, 157, 239, 157, 231, 92, 214, 218, 190, 24, 132, 113, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 124, 16, 214, 218, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 181, 182, 73, 69, 177, 71, 201, 136, 234, 9, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 250, 42, 242, 42, 225, 233, 185, 71, 129, 38, 107, 77, 214, 186, 239, 157, 198, 88, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 132, 113, 206, 153, 8, 97, 206, 153, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 181, 182, 115, 206, 115, 206, 0, 1, 0, 1, 0, 5, 0, 1, 96, 1, 107, 109, 129, 154, 107, 109, 148, 210, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 231, 92, 198, 56, 222, 250, 231, 92, 231, 92, 231, 92, 231, 91, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 250, 222, 250, 222, 250, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 206, 153, 206, 89, 198, 24, 189, 247, 99, 77, 24, 195, 91, 12, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 91, 12, 24, 195, 41, 101, 165, 85, 190, 23, 198, 88, 206, 153, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 222, 250, 222, 250, 222, 250, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 92, 231, 92, 231, 92, 231, 92, 190, 23, 214, 218, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 214, 218, 123, 239, 41, 166, 91, 12, 99, 109, 107, 207, 124, 16, 132, 81, 124, 49, 115, 239, 107, 174, 99, 77, 74, 138, 41, 133, 189, 247, 231, 92, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 124, 206, 153, 49, 166, 82, 203, 107, 142, 115, 207, 116, 16, 124, 49, 124, 81, 124, 16, 115, 239, 107, 174, 99, 109, 58, 8, 74, 137, 214, 186, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 231, 92, 24, 227, 214, 154, 156, 243, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 140, 146, 165, 117, 181, 215, 181, 214, 181, 215, 173, 150, 148, 243, 124, 16, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 124, 16, 214, 218, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 198, 88, 115, 109, 105, 5, 185, 71, 193, 103, 225, 201, 234, 9, 242, 42, 250, 42, 242, 42, 242, 42, 233, 233, 209, 168, 185, 103, 161, 70, 73, 102, 165, 51, 223, 27, 239, 157, 214, 218, 116, 16, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 148, 243, 214, 154, 16, 130, 223, 27, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 157, 19, 115, 206, 96, 1, 115, 206, 0, 1, 0, 1, 0, 5, 0, 1, 96, 1, 107, 77, 129, 154, 107, 77, 132, 16, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 231, 92, 206, 121, 206, 121, 231, 92, 231, 92, 231, 92, 231, 91, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 250, 222, 250, 222, 250, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 206, 153, 198, 88, 198, 24, 99, 109, 24, 195, 91, 12, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 91, 12, 24, 195, 41, 101, 173, 117, 198, 88, 206, 121, 214, 186, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 222, 250, 222, 250, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 92, 231, 92, 231, 92, 222, 250, 198, 55, 231, 59, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 214, 218, 123, 239, 41, 166, 91, 12, 99, 109, 107, 207, 124, 16, 132, 81, 124, 81, 115, 239, 107, 174, 99, 77, 74, 138, 41, 133, 189, 247, 231, 92, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 124, 206, 153, 49, 166, 74, 203, 107, 142, 115, 207, 116, 16, 124, 81, 132, 113, 124, 48, 115, 239, 107, 174, 99, 109, 58, 8, 74, 137, 214, 186, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 66, 73, 181, 150, 173, 117, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 124, 16, 214, 218, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 124, 189, 214, 107, 77, 81, 37, 129, 38, 177, 71, 185, 71, 185, 71, 185, 71, 185, 71, 161, 70, 105, 5, 81, 199, 148, 178, 214, 153, 239, 157, 239, 157, 222, 251, 124, 48, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 165, 85, 189, 247, 49, 231, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 140, 113, 115, 174, 96, 1, 115, 174, 0, 1, 0, 1, 0, 5, 0, 1, 64, 1, 107, 77, 129, 154, 107, 77, 107, 109, 239, 125, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 125, 214, 186, 198, 56, 231, 92, 231, 92, 231, 92, 231, 92, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 250, 222, 250, 222, 250, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 206, 153, 206, 89, 107, 109, 24, 195, 91, 12, 74, 138, 74, 138, 66, 106, 66, 73, 66, 73, 66, 73, 58, 41, 58, 41, 58, 41, 58, 41, 58, 41, 58, 41, 58, 41, 66, 73, 66, 73, 66, 73, 74, 138, 74, 138, 74, 138, 91, 12, 24, 195, 41, 101, 173, 150, 206, 121, 214, 186, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 222, 250, 222, 250, 222, 250, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 91, 231, 92, 231, 92, 231, 92, 206, 153, 206, 120, 231, 92, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 214, 218, 123, 239, 41, 166, 91, 12, 99, 109, 107, 174, 116, 16, 132, 81, 124, 81, 115, 239, 107, 174, 99, 77, 74, 138, 41, 133, 189, 247, 231, 92, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 124, 206, 153, 49, 166, 74, 171, 107, 142, 107, 207, 116, 16, 124, 81, 132, 113, 124, 48, 115, 239, 107, 207, 99, 142, 58, 40, 74, 137, 214, 186, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 124, 48, 123, 239, 189, 247, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 124, 16, 214, 218, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 124, 214, 153, 181, 149, 156, 210, 123, 206, 107, 44, 107, 109, 132, 80, 165, 52, 190, 23, 223, 27, 239, 157, 239, 157, 239, 157, 222, 251, 124, 48, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 181, 215, 140, 81, 115, 174, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 125, 115, 206, 115, 174, 64, 1, 115, 174, 0, 1, 0, 1, 0, 5, 0, 1, 32, 1, 99, 76, 129, 154, 107, 77, 107, 77, 214, 218, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 223, 27, 198, 23, 231, 59, 231, 92, 231, 92, 231, 92, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 250, 222, 250, 222, 250, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 206, 153, 107, 110, 24, 195, 91, 12, 74, 138, 74, 138, 66, 73, 66, 73, 58, 41, 58, 41, 58, 40, 58, 8, 58, 8, 58, 8, 58, 8, 58, 8, 58, 40, 58, 41, 58, 41, 66, 73, 66, 105, 74, 138, 74, 138, 91, 12, 24, 195, 41, 101, 181, 214, 214, 186, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 222, 250, 222, 250, 222, 250, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 92, 231, 92, 231], "i8", ALLOC_NONE, Runtime.GLOBAL_BASE + 941621);
  allocate([92, 231, 92, 198, 88, 214, 185, 239, 125, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 214, 218, 123, 239, 41, 166, 74, 170, 99, 109, 107, 174, 116, 16, 132, 81, 124, 81, 115, 239, 107, 174, 99, 77, 74, 138, 41, 133, 189, 247, 231, 92, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 124, 206, 153, 49, 166, 74, 170, 99, 142, 107, 174, 115, 239, 124, 48, 124, 81, 124, 48, 115, 240, 107, 207, 107, 142, 58, 40, 74, 137, 214, 186, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 181, 214, 66, 40, 206, 121, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 124, 16, 214, 218, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 125, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 222, 251, 124, 48, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 206, 89, 82, 170, 165, 117, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 222, 250, 115, 174, 115, 174, 32, 1, 115, 142, 0, 1, 0, 1, 0, 5, 0, 1, 32, 1, 107, 77, 129, 154, 99, 76, 99, 76, 189, 214, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 231, 92, 206, 88, 214, 185, 231, 92, 231, 92, 231, 92, 231, 91, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 250, 222, 250, 222, 250, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 107, 142, 24, 195, 91, 12, 74, 138, 74, 138, 66, 105, 58, 41, 58, 41, 58, 40, 58, 8, 58, 8, 58, 8, 58, 8, 58, 8, 58, 8, 58, 8, 58, 40, 58, 41, 58, 41, 66, 105, 74, 138, 74, 138, 91, 12, 24, 195, 41, 101, 189, 247, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 222, 250, 222, 250, 222, 250, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 92, 231, 92, 231, 92, 231, 59, 198, 23, 223, 27, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 214, 218, 123, 239, 41, 166, 74, 170, 99, 109, 107, 174, 116, 16, 124, 81, 124, 48, 115, 239, 107, 174, 99, 77, 74, 138, 41, 133, 189, 247, 231, 92, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 125, 206, 153, 49, 166, 74, 170, 99, 109, 107, 174, 115, 239, 124, 16, 124, 48, 124, 48, 115, 239, 107, 207, 107, 142, 58, 40, 74, 137, 214, 186, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 206, 186, 8, 65, 206, 153, 132, 113, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 124, 16, 214, 218, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 222, 251, 124, 48, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 132, 81, 206, 153, 24, 195, 206, 153, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 189, 247, 115, 142, 115, 142, 32, 1, 115, 174, 0, 1, 0, 1, 0, 3, 0, 2, 129, 154, 99, 44, 99, 44, 148, 210, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 125, 214, 185, 198, 56, 231, 92, 231, 92, 231, 92, 231, 92, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 250, 222, 250, 222, 250, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 107, 142, 24, 195, 91, 12, 74, 138, 74, 138, 66, 106, 58, 41, 58, 40, 58, 8, 58, 8, 49, 232, 49, 232, 49, 232, 49, 232, 49, 232, 58, 8, 58, 8, 58, 40, 58, 41, 74, 106, 74, 138, 74, 138, 91, 12, 24, 195, 41, 101, 189, 247, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 222, 250, 222, 250, 222, 250, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 91, 231, 92, 231, 92, 231, 92, 206, 153, 206, 120, 231, 92, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 214, 218, 123, 239, 41, 166, 74, 170, 99, 109, 107, 174, 115, 239, 124, 48, 124, 48, 115, 239, 107, 174, 99, 77, 74, 138, 41, 133, 189, 247, 231, 92, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 125, 206, 153, 49, 166, 74, 170, 99, 109, 107, 142, 115, 207, 115, 239, 124, 16, 116, 16, 115, 239, 107, 174, 107, 142, 58, 40, 74, 137, 214, 186, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 231, 92, 33, 36, 214, 154, 157, 20, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 124, 16, 214, 218, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 222, 251, 124, 48, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 148, 243, 214, 154, 16, 195, 231, 92, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 157, 19, 115, 142, 115, 142, 0, 2, 0, 1, 0, 5, 0, 2, 96, 1, 99, 44, 129, 152, 99, 44, 115, 174, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 223, 27, 198, 23, 223, 27, 231, 92, 231, 92, 231, 92, 231, 91, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 250, 222, 250, 222, 250, 222, 250, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 107, 142, 24, 195, 91, 12, 74, 138, 74, 138, 74, 138, 58, 41, 58, 8, 58, 8, 49, 232, 49, 231, 49, 231, 49, 231, 49, 231, 49, 231, 49, 232, 58, 8, 58, 8, 66, 73, 74, 138, 74, 138, 74, 138, 91, 12, 24, 195, 41, 101, 189, 247, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 222, 250, 222, 250, 222, 250, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 92, 231, 92, 231, 92, 231, 92, 198, 55, 214, 186, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 214, 218, 123, 239, 41, 166, 74, 170, 99, 77, 107, 174, 115, 239, 124, 48, 124, 48, 115, 239, 107, 174, 99, 77, 74, 138, 41, 133, 189, 247, 231, 92, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 125, 206, 153, 49, 166, 66, 73, 99, 77, 107, 142, 107, 174, 115, 239, 115, 239, 115, 239, 115, 207, 107, 174, 99, 141, 58, 40, 74, 137, 214, 186, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 99, 77, 148, 146, 181, 182, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 124, 16, 214, 218, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 222, 251, 124, 48, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 173, 150, 157, 19, 82, 235, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 124, 15, 107, 141, 96, 1, 107, 141, 0, 2, 0, 1, 0, 5, 0, 2, 64, 1, 99, 44, 129, 152, 99, 44, 99, 44, 223, 27, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 124, 206, 121, 206, 121, 231, 92, 231, 92, 231, 92, 231, 92, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 250, 222, 250, 222, 250, 222, 250, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 107, 142, 24, 195, 91, 12, 74, 138, 74, 138, 74, 138, 66, 73, 58, 8, 49, 232, 49, 231, 49, 199, 49, 199, 49, 199, 49, 199, 49, 199, 49, 232, 49, 232, 58, 8, 66, 105, 74, 138, 74, 138, 74, 138, 91, 12, 24, 195, 41, 101, 189, 247, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 222, 250, 222, 250, 222, 250, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 91, 231, 92, 231, 92, 231, 92, 223, 26, 198, 55, 231, 59, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 214, 218, 123, 239, 41, 166, 74, 170, 99, 77, 107, 174, 115, 239, 124, 16, 124, 16, 115, 239, 107, 142, 99, 77, 74, 138, 41, 133, 189, 247, 231, 92, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 125, 206, 153, 49, 166, 66, 73, 91, 77, 99, 109, 107, 174, 107, 207, 115, 207, 115, 207, 107, 207, 107, 174, 99, 109, 58, 8, 74, 137, 214, 186, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 173, 150, 74, 105, 206, 121, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 124, 16, 214, 218, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 222, 251, 124, 48, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 198, 89, 90, 203, 165, 84, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 223, 27, 107, 141, 107, 141, 64, 1, 107, 141, 0, 2, 0, 1, 0, 5, 0, 2, 32, 1, 99, 44, 129, 152, 99, 44, 99, 44, 189, 247, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 214, 218, 198, 23, 231, 92, 231, 92, 231, 92, 231, 92, 231, 91, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 250, 222, 250, 222, 250, 222, 250, 214, 218, 214, 218, 214, 218, 214, 218, 107, 142, 24, 195, 91, 12, 74, 138, 74, 138, 74, 138, 74, 138, 58, 8, 49, 232, 49, 231, 49, 199, 49, 199, 49, 167, 49, 199, 49, 199, 49, 231, 49, 232, 58, 40, 74, 138, 74, 138, 74, 138, 74, 138, 91, 12, 24, 195, 41, 101, 189, 247, 214, 218, 214, 218, 214, 218, 214, 218, 222, 250, 222, 250, 222, 250, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 92, 231, 92, 231, 92, 231, 92, 206, 120, 206, 153, 239, 124, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 223, 27, 132, 80, 41, 166, 74, 170, 99, 77, 107, 142, 115, 207, 116, 16, 116, 16, 115, 207, 107, 142, 99, 77, 74, 138, 41, 133, 189, 247, 231, 92, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 214, 185, 49, 166, 66, 73, 91, 44, 99, 77, 99, 142, 107, 174, 107, 174, 107, 174, 107, 174, 107, 142, 99, 109, 58, 8, 74, 137, 214, 186, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 214, 218, 0, 0, 214, 154, 140, 146, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 124, 16, 214, 218, 239, 157, 239, 157, 239, 157, 239, 157, 214, 218, 189, 214, 165, 19, 148, 145, 115, 173, 115, 141, 140, 145, 165, 19, 181, 214, 214, 218, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 222, 251, 124, 48, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 132, 113, 206, 153, 16, 130, 206, 154, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 198, 23, 107, 109, 107, 109, 32, 1, 107, 109, 0, 2, 0, 1, 0, 3, 0, 3, 129, 152, 99, 12, 99, 12, 148, 178, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 231, 92, 198, 88, 214, 185, 231, 92, 231, 92, 231, 92, 231, 92, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 250, 222, 250, 222, 250, 222, 250, 214, 218, 214, 218, 214, 218, 107, 142, 24, 195, 91, 12, 74, 138, 74, 138, 74, 138, 74, 138, 66, 73, 49, 232, 49, 231, 49, 199, 41, 167, 41, 166, 49, 167, 49, 199, 49, 231, 49, 232, 66, 105, 74, 138, 74, 138, 74, 138, 74, 138, 91, 12, 24, 195, 41, 101, 189, 247, 214, 218, 214, 218, 222, 250, 222, 250, 222, 250, 222, 250, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 91, 231, 92, 231, 92, 231, 92, 231, 59, 190, 23, 222, 251, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 214, 186, 41, 101, 74, 170, 91, 77, 107, 142, 107, 207, 115, 239, 115, 239, 115, 207, 107, 142, 99, 77, 74, 138, 41, 133, 189, 247, 231, 92, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 231, 92, 115, 206, 49, 231, 74, 170, 91, 77, 99, 109, 107, 142, 107, 142, 107, 174, 107, 142, 99, 109, 99, 77, 58, 8, 74, 137, 214, 186, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 125, 49, 199, 189, 247, 165, 85, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 116, 16, 214, 218, 239, 157, 239, 157, 239, 125, 198, 88, 132, 48, 74, 6, 114, 165, 163, 167, 171, 231, 180, 7, 180, 7, 171, 231, 163, 167, 114, 165, 74, 5, 124, 15, 198, 55, 239, 125, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 222, 251, 124, 48, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 157, 52, 198, 88, 41, 101, 239, 125, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 156, 243, 107, 109, 107, 109, 0, 3, 0, 1, 0, 5, 0, 3, 96, 1, 99, 12, 129, 150, 99, 12, 107, 109, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 214, 186, 190, 23, 231, 92, 231, 92, 231, 92, 231, 92, 231, 91, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 250, 222, 250, 222, 250, 222, 250, 214, 218, 107, 142, 24, 195, 91, 12, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 49, 232, 49, 231, 49, 199, 49, 199, 49, 167, 49, 199, 49, 199, 49, 231, 58, 40, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 91, 12, 24, 195, 41, 101, 189, 247, 214, 218, 222, 250, 222, 250, 222, 250, 222, 250, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 92, 231, 92, 231, 92, 231, 92, 206, 120, 206, 121, 231, 92, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 198, 56, 49, 166, 91, 45, 99, 141, 107, 174, 115, 239, 115, 239, 107, 207, 107, 142, 99, 77, 74, 138, 41, 133, 189, 247, 231, 92, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 214, 218, 66, 40, 74, 138, 91, 44, 99, 77, 99, 109, 99, 141, 99, 142, 99, 109, 99, 109, 99, 77, 58, 8, 74, 137, 214, 186, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 140, 178, 107, 77, 190, 24, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 206, 153, 239, 157, 239, 157, 214, 185, 140, 112, 82, 5, 171, 199, 180, 39, 212, 232, 237, 106, 245, 138, 253, 202, 253, 202, 245, 138, 237, 105, 212, 233, 180, 39, 171, 231, 82, 4, 132, 48, 206, 153, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 222, 251, 124, 48, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 189, 247, 115, 206, 132, 80, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 115, 174, 107, 109, 96, 1, 107, 109, 0, 3, 0, 1, 0, 5, 0, 3, 64, 1, 91, 11, 129, 150, 99, 12, 99, 12, 206, 121, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 231, 92, 198, 88, 214, 185, 231, 92, 231, 92, 231, 92, 231, 92, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 250, 222, 250, 222, 250, 222, 250, 107, 142, 24, 195, 91, 12, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 58, 41, 49, 231, 49, 199, 49, 199, 49, 199, 49, 199, 49, 199, 49, 231, 66, 105, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 91, 12, 24, 195, 41, 101, 189, 247, 222, 250, 222, 250, 222, 250, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 91, 231, 92, 231, 92, 231, 92, 231, 59, 190, 23, 222, 250, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 206, 121, 49, 166, 99, 109, 107, 174, 115, 207, 115, 207, 107, 174, 99, 142, 91, 77, 74, 138, 41, 133, 189, 247, 231, 92, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 231, 59, 82, 170, 66, 73, 91, 44, 99, 77, 99, 109, 99, 109, 99, 109, 99, 77, 91, 44, 49, 199, 74, 137, 214, 186, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 206, 153, 16, 162, 206, 153, 132, 81, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 181, 214, 239, 125, 239, 157, 198, 88, 82, 104, 155, 134, 180, 39, 229, 73, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 229, 73, 188, 39, 155, 134, 74, 71, 198, 56, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 222, 251, 124, 48, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 124, 81, 206, 153, 33, 36, 198, 121, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 206, 153, 107, 109, 107, 109, 64, 1, 107, 77, 0, 3, 0, 1, 0, 3, 0, 4, 129, 150, 90, 235, 90, 235, 157, 19, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 125, 214, 186, 198, 55, 231, 92, 231, 92, 231, 92, 231, 92, 231, 91, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 250, 222, 250, 107, 142, 24, 195, 91, 12, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 49, 232, 49, 231, 49, 231, 49, 199, 49, 231, 49, 231, 58, 8, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 91, 12, 24, 195, 41, 101, 189, 247, 222, 250, 222, 250, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 92, 231, 92, 231, 92, 231, 92, 206, 121, 206, 121, 231, 92, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 214, 186, 66, 72, 82, 203, 107, 207, 107, 207, 107, 174, 99, 109, 91, 44, 74, 138, 41, 133, 189, 247, 231, 92, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 125, 190, 23, 41, 101, 91, 44, 91, 77, 99, 77, 99, 77, 91, 44, 91, 44, 49, 199, 74, 137, 214, 186, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 125, 41, 134, 190, 23, 165, 52, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 132, 113, 231, 60, 239, 157, 190, 23, 65, 230, 171, 231, 212, 232, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 212, 233, 171, 231, 65, 229, 189, 247, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 222, 251, 124, 48, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 157, 52, 206, 121, 33, 36, 231, 124, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 165, 52, 107, 77, 107, 77, 0, 4, 0, 1, 0, 5, 0, 4, 96, 1, 90, 235, 129, 148, 90, 235, 115, 141, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 231, 60, 198, 88, 206, 153, 231, 92, 231, 92, 231, 92, 231, 92, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 107, 142, 24, 195, 91, 12, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 66, 41, 49, 232, 49, 232, 49, 232, 49, 232, 49, 232, 66, 105, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 91, 12, 24, 195, 41, 101, 189, 247, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 91, 231, 92, 231, 92, 231, 92, 223, 27, 190, 23, 222, 250, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 214, 185, 57, 231, 82, 235, 107, 142, 99, 109, 91, 44, 74, 138, 41, 133, 189, 247, 231, 92, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 223, 27, 156, 243, 41, 166, 91, 44, 91, 44, 91, 44, 74, 170, 49, 199, 74, 137, 214, 186, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 148, 210, 99, 44, 198, 56, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 206, 153, 239, 157, 206, 153, 66, 39, 171, 231, 229, 41, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 229, 73, 171, 231, 66, 6, 206, 120, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 222, 251, 124, 48, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 190, 23, 115, 142, 132, 113, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 123, 239, 107, 77, 96, 1, 107, 77, 0, 4, 0, 1, 0, 5, 0, 4, 64, 1, 90, 235, 129, 148, 90, 235, 90, 235, 214, 186, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 125, 214, 218, 190, 23, 231, 59, 231, 92, 231, 92, 231, 92, 231, 91, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 107, 142, 24, 195, 91, 12, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 58, 8, 58, 8, 58, 8, 58, 8, 58, 40, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 91, 12, 24, 195, 41, 101, 189, 247, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 91, 231, 92, 231, 92, 231, 92, 231, 92, 198, 55, 206, 153, 231, 92, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 214, 185, 58, 8, 58, 8, 74, 170, 57, 231, 41, 133, 189, 247, 231, 92, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 223, 27, 156, 243, 41, 134, 58, 40, 66, 73, 41, 134, 82, 170, 214, 186, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 214, 186, 0, 32, 214, 154, 140, 146, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 140, 178, 231, 92, 231, 59, 99, 11, 163, 166, 221, 9, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 221, 41, 163, 199, 90, 202, 223, 27, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 222, 251, 124, 48, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 132, 113, 206, 153, 16, 130, 206, 153, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 214, 218, 107, 77, 107, 77, 64, 1, 107, 77, 0, 4, 0, 1, 0, 3, 0, 5, 129, 148, 90, 235, 90, 235, 156, 243, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 231, 92, 206, 121, 198, 88, 231, 92, 231, 92, 231, 92, 231, 92, 231, 91, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 107, 142, 24, 195, 91, 12, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 66, 73, 58, 8, 58, 8, 58, 8, 66, 106, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 91, 12, 24, 195, 41, 101, 190, 23, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 92, 231, 92, 231, 92, 231, 92, 214, 186, 198, 56, 223, 27, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 125, 214, 186, 157, 19, 91, 11, 132, 80, 214, 185, 231, 92, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 231, 59, 206, 121, 115, 174, 99, 76, 181, 182, 214, 218, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 74, 170, 165, 20, 173, 150, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115], "i8", ALLOC_NONE, Runtime.GLOBAL_BASE + 951861);
  allocate([239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 206, 121, 239, 157, 181, 149, 106, 133, 204, 168, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 204, 200, 114, 165, 173, 117, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 222, 251, 124, 48, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 173, 117, 173, 117, 66, 40, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 165, 52, 99, 44, 99, 44, 0, 5, 0, 1, 0, 5, 0, 5, 96, 1, 90, 203, 129, 146, 90, 203, 99, 44, 239, 125, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 223, 27, 198, 55, 214, 218, 231, 92, 231, 92, 231, 92, 231, 92, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 107, 142, 24, 195, 91, 12, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 66, 73, 58, 40, 66, 105, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 91, 12, 24, 195, 41, 101, 190, 23, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 91, 231, 92, 231, 92, 231, 92, 231, 59, 190, 23, 214, 185, 239, 125, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 124, 231, 92, 231, 92, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 231, 92, 231, 92, 239, 125, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 181, 215, 57, 231, 206, 121, 124, 16, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 116, 16, 223, 59, 222, 251, 74, 72, 172, 7, 245, 170, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 245, 170, 180, 7, 66, 7, 214, 218, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 222, 251, 124, 48, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 116, 16, 206, 121, 74, 73, 173, 149, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 125, 107, 141, 99, 44, 96, 1, 99, 44, 0, 5, 0, 1, 0, 5, 0, 5, 32, 1, 90, 203, 129, 146, 90, 203, 90, 203, 189, 247, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 124, 214, 185, 190, 23, 231, 59, 231, 92, 231, 92, 231, 92, 231, 92, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 222, 251, 222, 251, 222, 251, 222, 251, 107, 142, 24, 195, 90, 236, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 90, 236, 24, 195, 41, 101, 190, 23, 222, 251, 222, 251, 222, 251, 222, 251, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 91, 231, 92, 231, 92, 231, 92, 231, 92, 198, 88, 206, 120, 231, 92, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 231, 92, 25, 4, 206, 121, 157, 52, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 157, 52, 239, 157, 181, 214, 114, 165, 212, 232, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 213, 9, 122, 197, 181, 182, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 222, 251, 124, 48, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 157, 20, 214, 154, 16, 162, 223, 60, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 190, 23, 99, 44, 99, 44, 32, 1, 99, 44, 0, 5, 0, 1, 0, 3, 0, 6, 129, 146, 90, 203, 90, 203, 132, 16, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 231, 60, 206, 120, 198, 56, 231, 92, 231, 92, 231, 92, 231, 92, 231, 91, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 222, 251, 222, 251, 107, 142, 24, 195, 74, 138, 82, 170, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 170, 74, 138, 24, 195, 41, 101, 190, 23, 222, 251, 222, 251, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 92, 231, 92, 231, 92, 231, 92, 214, 185, 198, 55, 222, 251, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 148, 210, 99, 12, 198, 88, 115, 240, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 198, 56, 239, 157, 140, 113, 171, 199, 237, 138, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 245, 138, 171, 231, 132, 48, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 222, 251, 124, 48, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 198, 56, 107, 109, 132, 113, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 132, 80, 99, 44, 99, 44, 0, 6, 0, 1, 0, 5, 0, 6, 64, 1, 90, 203, 129, 144, 90, 203, 90, 203, 222, 251, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 223, 27, 198, 56, 214, 153, 231, 92, 231, 92, 231, 92, 231, 92, 231, 91, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 107, 142, 24, 195, 41, 134, 82, 203, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 74, 138, 82, 203, 41, 134, 24, 195, 41, 101, 190, 23, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 92, 231, 92, 231, 92, 231, 92, 223, 27, 190, 23, 214, 186, 239, 125, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 222, 251, 8, 65, 214, 154, 148, 243, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 206, 153, 223, 27, 82, 71, 180, 7, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 180, 39, 74, 38, 222, 250, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 222, 251, 124, 48, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 148, 211, 214, 154, 0, 0, 214, 218, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 222, 251, 99, 44, 99, 12, 64, 1, 99, 12, 0, 6, 0, 1, 0, 5, 0, 6, 32, 1, 90, 235, 129, 144, 90, 203, 90, 203, 156, 243, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 125, 214, 218, 190, 23, 222, 250, 231, 92, 231, 92, 231, 92, 231, 92, 231, 91, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 107, 142, 24, 195, 24, 195, 66, 73, 90, 236, 82, 203, 82, 203, 82, 203, 82, 203, 82, 203, 82, 203, 82, 203, 82, 203, 82, 203, 82, 203, 82, 203, 82, 203, 82, 203, 82, 203, 82, 203, 90, 236, 66, 73, 24, 195, 24, 195, 41, 134, 190, 56, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 92, 231, 92, 231, 92, 231, 92, 231, 60, 190, 23, 206, 153, 231, 92, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 115, 239, 115, 142, 198, 56, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 214, 218, 214, 185, 82, 5, 188, 104, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 196, 136, 82, 4, 206, 88, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 222, 251, 124, 48, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 190, 24, 123, 239, 107, 142, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 157, 19, 99, 12, 99, 12, 32, 1, 99, 12, 0, 6, 0, 1, 0, 5, 0, 7, 96, 1, 90, 203, 129, 142, 90, 203, 91, 11, 231, 60, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 231, 92, 206, 153, 198, 23, 231, 59, 231, 92, 231, 92, 231, 92, 231, 92, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 123, 239, 24, 195, 24, 195, 24, 195, 41, 133, 66, 40, 66, 73, 66, 73, 66, 73, 66, 73, 66, 73, 66, 73, 66, 73, 66, 73, 66, 73, 66, 73, 66, 73, 66, 73, 66, 73, 66, 40, 41, 134, 24, 195, 24, 195, 24, 195, 74, 105, 214, 186, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 198, 88, 206, 88, 231, 59, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 214, 186, 0, 0, 214, 154, 148, 243, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 222, 251, 198, 88, 90, 69, 204, 168, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 212, 232, 98, 101, 189, 247, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 222, 251, 124, 48, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 148, 211, 214, 154, 0, 32, 206, 153, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 231, 60, 99, 44, 99, 12, 96, 1, 99, 12, 0, 7, 0, 1, 0, 5, 0, 7, 32, 1, 82, 202, 129, 142, 90, 203, 90, 203, 165, 52, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 231, 60, 206, 121, 198, 23, 231, 59, 231, 92, 231, 92, 231, 92, 231, 92, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 165, 117, 33, 68, 24, 195, 24, 195, 24, 195, 24, 195, 24, 195, 24, 195, 24, 195, 24, 195, 24, 195, 24, 195, 24, 195, 24, 195, 24, 195, 24, 195, 24, 195, 24, 195, 24, 195, 24, 195, 24, 195, 24, 195, 24, 195, 24, 195, 132, 81, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 206, 121, 198, 56, 222, 251, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 115, 207, 115, 142, 198, 56, 116, 16, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 223, 27, 198, 23, 106, 133, 212, 233, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 221, 9, 114, 197, 189, 214, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 222, 251, 124, 48, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 198, 56, 123, 239, 99, 109, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 165, 84, 91, 11, 91, 11, 32, 1, 91, 11, 0, 7, 0, 1, 0, 5, 0, 8, 96, 1, 90, 203, 129, 140, 90, 203, 99, 44, 231, 92, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 231, 59, 206, 88, 198, 55, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 148, 211, 57, 199, 24, 195, 24, 195, 24, 195, 24, 195, 24, 195, 24, 195, 24, 195, 24, 195, 24, 195, 24, 195, 24, 195, 24, 195, 24, 195, 24, 195, 24, 195, 24, 195, 24, 195, 24, 195, 24, 195, 25, 4, 115, 174, 214, 186, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 206, 153, 198, 55, 214, 218, 239, 125, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 214, 218, 0, 32, 214, 154, 157, 20, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 223, 27, 198, 88, 90, 69, 204, 168, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 212, 232, 98, 101, 189, 247, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 222, 251, 124, 48, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 157, 19, 214, 154, 0, 0, 206, 186, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 231, 92, 107, 77, 90, 235, 96, 1, 90, 235, 0, 8, 0, 1, 0, 5, 0, 8, 32, 1, 90, 235, 129, 140, 90, 203, 90, 203, 173, 117, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 223, 27, 198, 88, 198, 88, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 91, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 189, 247, 140, 146, 124, 48, 124, 48, 124, 48, 124, 48, 124, 48, 124, 48, 124, 48, 124, 48, 124, 48, 124, 48, 124, 48, 124, 48, 124, 48, 124, 48, 124, 48, 124, 48, 124, 48, 132, 81, 165, 84, 222, 250, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 214, 186, 198, 23, 214, 218, 239, 124, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 124, 48, 99, 12, 206, 121, 124, 48, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 214, 218, 214, 185, 82, 5, 188, 104, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 196, 136, 82, 4, 206, 88, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 222, 251, 124, 48, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 124, 48, 206, 89, 107, 109, 115, 207, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 173, 117, 90, 235, 90, 235, 32, 1, 90, 235, 0, 8, 0, 1, 0, 5, 0, 9, 96, 1, 90, 203, 129, 138, 90, 203, 99, 76, 231, 92, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 125, 222, 251, 198, 88, 198, 88, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 91, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 214, 218, 190, 23, 214, 186, 239, 124, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 222, 251, 24, 195, 198, 56, 173, 149, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 206, 121, 223, 27, 82, 71, 180, 7, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 180, 39, 74, 38, 222, 250, 239, 157, 239, 157, 239, 157, 239, 157, 222, 251, 124, 48, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 165, 117, 214, 154, 8, 130, 214, 251, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 231, 92, 107, 77, 90, 235, 96, 1, 90, 235, 0, 9, 0, 1, 0, 5, 0, 9, 32, 1, 90, 203, 129, 138, 90, 203, 90, 203, 165, 52, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 125, 222, 251, 198, 88, 198, 56, 231, 59, 231, 92, 231, 92, 231, 92, 231, 92, 231, 91, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 91, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 214, 185, 190, 23, 214, 186, 239, 124, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 157, 52, 57, 231, 206, 153, 132, 145, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 189, 247, 239, 157, 140, 113, 171, 231, 237, 106, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 245, 138, 171, 231, 132, 48, 239, 157, 239, 157, 239, 157, 239, 157, 222, 251, 124, 48, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 132, 113, 206, 153, 66, 72, 148, 243, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 165, 52, 90, 235, 90, 235, 32, 1, 90, 235, 0, 9, 0, 1, 0, 5, 0, 10, 96, 1, 90, 203, 129, 136, 90, 203, 91, 11, 223, 27, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 125, 223, 27, 198, 88, 198, 55, 231, 59, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 91, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 206, 121, 198, 23, 214, 218, 239, 124, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 231, 92, 58, 8, 148, 210, 190, 24, 115, 240, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 140, 146, 239, 124, 181, 214, 106, 165, 212, 232, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 212, 233, 122, 197, 181, 182, 239, 157, 239, 157, 239, 157, 222, 251, 124, 48, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 190, 23, 165, 52, 49, 166, 231, 60, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 223, 27, 99, 12, 90, 203, 96, 1, 90, 203, 0, 10, 0, 1, 0, 5, 0, 10, 32, 1, 90, 203, 129, 136, 90, 203, 90, 203, 140, 145, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 223, 27, 206, 120, 198, 23, 231, 59, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 91, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231], "i8", ALLOC_NONE, Runtime.GLOBAL_BASE + 962101);
  allocate([59, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 206, 88, 198, 56, 214, 218, 239, 124, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 198, 88, 0, 32, 214, 154, 165, 52, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 214, 218, 222, 251, 74, 72, 172, 7, 245, 170, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 245, 170, 180, 7, 66, 7, 214, 218, 239, 157, 239, 157, 222, 251, 124, 48, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 157, 20, 214, 154, 16, 130, 190, 56, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 140, 145, 90, 203, 90, 203, 32, 1, 90, 203, 0, 10, 0, 1, 0, 5, 0, 11, 96, 1, 90, 203, 129, 134, 90, 203, 90, 203, 214, 153, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 231, 60, 206, 153, 190, 23, 214, 218, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 91, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 59, 198, 55, 198, 88, 222, 250, 239, 125, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 124, 16, 82, 202, 206, 121, 132, 113, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 173, 150, 239, 157, 181, 149, 106, 133, 204, 168, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 204, 200, 114, 165, 173, 117, 239, 157, 239, 157, 222, 251, 124, 48, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 132, 81, 206, 121, 99, 12, 107, 174, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 214, 153, 90, 203, 90, 203, 96, 1, 90, 203, 0, 11, 0, 1, 0, 5, 0, 11, 32, 1, 82, 202, 129, 134, 90, 203, 90, 203, 123, 207, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 231, 92, 214, 185, 190, 23, 206, 121, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 91, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 91, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 214, 218, 190, 23, 206, 121, 223, 27, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 223, 27, 41, 134, 165, 20, 190, 24, 116, 16, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 222, 251, 231, 59, 99, 12, 163, 166, 221, 9, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 221, 41, 163, 199, 90, 202, 223, 27, 239, 157, 222, 251, 124, 48, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 240, 190, 23, 173, 117, 33, 36, 223, 27, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 123, 207, 90, 203, 90, 203, 32, 1, 82, 202, 0, 11, 0, 1, 0, 5, 0, 12, 64, 1, 90, 203, 129, 132, 90, 203, 90, 203, 173, 117, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 124, 214, 218, 198, 88, 198, 55, 231, 59, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 91, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 206, 120, 198, 23, 214, 185, 231, 92, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 190, 56, 0, 32, 214, 154, 173, 117, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 148, 211, 231, 92, 206, 153, 74, 39, 171, 231, 229, 41, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 229, 73, 171, 231, 66, 6, 206, 120, 239, 157, 222, 251, 124, 48, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 165, 85, 214, 154, 16, 130, 190, 23, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 173, 117, 90, 203, 90, 203, 64, 1, 90, 203, 0, 12, 0, 1, 0, 5, 0, 13, 96, 1, 90, 203, 129, 130, 90, 203, 91, 11, 222, 250, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 125, 223, 27, 206, 121, 190, 23, 214, 153, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 91, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 91, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 222, 250, 198, 55, 198, 88, 222, 250, 239, 124, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 132, 113, 66, 40, 206, 153, 148, 211, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 181, 214, 239, 125, 190, 23, 65, 230, 171, 231, 212, 200, 245, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 212, 232, 171, 231, 65, 229, 189, 247, 239, 157, 214, 250, 124, 48, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 140, 178, 206, 153, 74, 137, 124, 16, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 222, 251, 91, 11, 90, 203, 96, 1, 90, 203, 0, 13, 0, 1, 0, 5, 0, 13, 32, 1, 90, 235, 129, 130, 90, 203, 90, 203, 123, 239, 239, 125, 239, 125, 239, 125, 239, 125, 239, 125, 239, 125, 239, 125, 239, 125, 239, 125, 239, 125, 239, 125, 239, 125, 239, 125, 239, 125, 239, 125, 239, 125, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 231, 92, 214, 218, 198, 56, 198, 55, 222, 250, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 91, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 91, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 59, 206, 88, 198, 23, 206, 153, 231, 60, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 231, 92, 66, 105, 123, 239, 206, 121, 132, 81, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 190, 56, 239, 124, 198, 88, 82, 137, 147, 134, 180, 39, 229, 73, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 253, 202, 229, 73, 180, 39, 155, 134, 82, 104, 198, 56, 239, 125, 206, 186, 124, 16, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 132, 81, 206, 121, 132, 48, 58, 8, 231, 60, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 124, 15, 90, 203, 90, 203, 32, 1, 90, 235, 0, 13, 0, 1, 0, 5, 0, 14, 64, 1, 90, 203, 129, 128, 90, 203, 90, 203, 173, 149, 239, 124, 239, 124, 239, 124, 239, 124, 239, 124, 239, 124, 239, 124, 239, 124, 239, 124, 239, 124, 239, 124, 239, 124, 239, 124, 239, 125, 239, 125, 239, 125, 239, 125, 239, 125, 239, 125, 239, 125, 239, 125, 239, 125, 239, 125, 239, 125, 239, 125, 239, 125, 239, 125, 239, 125, 239, 125, 239, 125, 239, 125, 239, 125, 239, 124, 223, 27, 206, 153, 198, 23, 206, 120, 231, 59, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 91, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 91, 231, 91, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 214, 185, 190, 23, 206, 120, 222, 250, 231, 92, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 214, 186, 24, 227, 173, 117, 198, 56, 124, 16, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 181, 214, 231, 92, 214, 186, 140, 113, 82, 5, 163, 199, 180, 39, 212, 200, 237, 105, 245, 138, 245, 202, 253, 202, 245, 138, 237, 106, 212, 232, 180, 39, 171, 199, 82, 5, 140, 80, 214, 185, 231, 92, 181, 215, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 116, 16, 190, 24, 181, 214, 16, 162, 206, 186, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 181, 182, 90, 203, 90, 203, 64, 1, 90, 203, 0, 14, 0, 1, 0, 3, 0, 15, 129, 128, 90, 203, 90, 203, 90, 235, 214, 153, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 239, 124, 239, 124, 239, 124, 239, 124, 239, 124, 239, 124, 239, 124, 239, 124, 239, 124, 239, 124, 239, 124, 239, 124, 239, 124, 239, 124, 239, 124, 239, 124, 239, 124, 239, 124, 239, 124, 239, 124, 239, 124, 239, 124, 239, 124, 239, 124, 231, 92, 222, 250, 206, 121, 190, 23, 206, 120, 231, 59, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 91, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 91, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 214, 185, 198, 23, 198, 88, 214, 218, 231, 92, 239, 125, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 190, 24, 0, 0, 214, 154, 181, 182, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 148, 243, 222, 250, 239, 125, 198, 88, 132, 48, 74, 6, 106, 165, 163, 166, 171, 231, 180, 7, 180, 7, 171, 231, 163, 167, 114, 165, 74, 6, 132, 15, 198, 56, 231, 92, 206, 185, 132, 113, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 181, 182, 214, 154, 8, 97, 181, 215, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 214, 218, 91, 11, 90, 203, 90, 203, 0, 15, 0, 1, 0, 5, 0, 15, 32, 1, 90, 203, 129, 126, 90, 203, 90, 203, 115, 142, 231, 59, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 60, 222, 250, 206, 121, 190, 23, 206, 120, 231, 59, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 91, 231, 91, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 91, 231, 91, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 60, 214, 153, 190, 23, 198, 88, 214, 186, 231, 60, 239, 124, 239, 125, 239, 125, 239, 125, 239, 125, 239, 125, 239, 125, 239, 125, 239, 125, 239, 125, 239, 125, 239, 125, 239, 125, 239, 125, 239, 125, 239, 125, 239, 125, 239, 125, 239, 125, 239, 125, 239, 125, 239, 125, 239, 125, 239, 125, 239, 125, 239, 125, 239, 125, 239, 125, 239, 125, 239, 125, 239, 125, 239, 125, 239, 125, 239, 125, 239, 125, 239, 125, 239, 125, 239, 125, 239, 125, 239, 125, 239, 125, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 148, 211, 33, 68, 214, 154, 173, 117, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 173, 150, 214, 218, 239, 124, 222, 250, 189, 246, 157, 19, 132, 15, 107, 76, 107, 76, 132, 15, 157, 19, 181, 214, 214, 218, 231, 60, 206, 121, 140, 210, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 165, 85, 214, 154, 49, 134, 140, 146, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 124, 115, 142, 90, 203, 90, 203, 32, 1, 90, 203, 0, 15, 0, 1, 0, 5, 0, 16, 64, 1, 90, 203, 129, 124, 90, 203, 90, 203, 140, 113, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 60, 222, 250, 206, 121, 198, 55, 198, 56, 214, 186, 231, 91, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 222, 250, 206, 88, 190, 23, 206, 88, 214, 218, 231, 59, 231, 92, 239, 124, 239, 124, 239, 124, 239, 124, 239, 124, 239, 124, 239, 124, 239, 124, 239, 124, 239, 124, 239, 124, 239, 124, 239, 124, 239, 124, 239, 124, 239, 124, 239, 124, 239, 124, 239, 124, 239, 124, 239, 124, 239, 124, 239, 124, 239, 124, 239, 124, 239, 124, 239, 124, 239, 124, 239, 124, 239, 124, 239, 124, 239, 124, 239, 124, 239, 124, 239, 124, 239, 124, 239, 124, 239, 124, 239, 124, 239, 124, 239, 125, 239, 125, 239, 125, 239, 125, 239, 125, 239, 125, 239, 125, 239, 125, 239, 125, 239, 125, 239, 125, 239, 125, 239, 125, 239, 125, 239, 125, 239, 125, 239, 125, 239, 125, 239, 125, 239, 125, 239, 125, 239, 125, 239, 125, 239, 125, 239, 125, 239, 125, 239, 125, 239, 125, 239, 125, 239, 125, 239, 125, 239, 125, 239, 125, 239, 125, 239, 125, 239, 125, 239, 125, 239, 125, 239, 125, 239, 125, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 125, 115, 207, 66, 40, 206, 153, 157, 52, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 140, 178, 190, 23, 206, 121, 214, 218, 223, 27, 223, 27, 223, 27, 214, 250, 206, 186, 198, 56, 157, 52, 116, 16, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 157, 19, 206, 153, 82, 138, 107, 109, 239, 124, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 140, 145, 90, 203, 90, 203, 64, 1, 90, 203, 0, 16, 0, 1, 0, 5, 0, 17, 96, 1, 90, 203, 129, 122, 90, 203, 90, 203, 173, 149, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 59, 223, 27, 214, 185, 198, 88, 190, 23, 206, 120, 214, 218, 231, 91, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 222, 250, 206, 121, 190, 23, 198, 56, 206, 153, 222, 250, 231, 59, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 239, 124, 239, 124, 239, 124, 239, 124, 239, 124, 239, 124, 239, 124, 239, 124, 239, 124, 239, 124, 239, 124, 239, 124, 239, 124, 239, 124, 239, 124, 239, 124, 239, 124, 239, 124, 239, 124, 239, 124, 239, 124, 239, 124, 239, 124, 239, 124, 239, 124, 239, 124, 239, 124, 239, 124, 239, 124, 239, 124, 239, 124, 239, 124, 239, 124, 239, 124, 239, 124, 239, 124, 239, 124, 239, 124, 239, 124, 239, 124, 239, 124, 239, 125, 239, 125, 239, 125, 239, 125, 239, 125, 239, 125, 239, 125, 239, 125, 239, 125, 239, 125, 239, 125, 239, 125, 239, 125, 239, 125, 239, 125, 239, 125, 239, 125, 239, 125, 239, 125, 239, 125, 239, 125, 239, 125, 239, 125, 239, 125, 239, 125, 239, 125, 239, 125, 239, 125, 239, 125, 239, 125, 239, 125, 239, 125, 239, 125, 239, 125, 239, 125, 239, 125, 239, 125, 239, 125, 239, 125, 239, 125, 239, 125, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 231, 92, 90, 235, 90, 235, 206, 153, 148, 243, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 148, 243, 206, 153, 107, 77, 74, 170, 231, 60, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 181, 214, 90, 203, 90, 203, 96, 1, 90, 203, 0, 17, 0, 1, 0, 3, 0, 18, 129, 122, 90, 203, 90, 203, 90, 203, 198, 88, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 60, 231, 60, 231, 59, 222, 250, 206, 153, 198, 88, 190, 23, 198, 55, 206, 121, 222, 250, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 223, 27, 206, 153, 198, 88, 190, 23, 198, 56, 206, 121, 214, 218, 231, 59, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 239, 124, 239, 124, 239, 124, 239, 124, 239, 124, 239, 124, 239, 124, 239, 124, 239, 124, 239, 124, 239, 124, 239, 124, 239, 124, 239, 124, 239, 124, 239, 124, 239, 124, 239, 124, 239, 124, 239, 124, 239, 124, 239, 124, 239, 124, 239, 124, 239, 124, 239, 124, 239, 124, 239, 124, 239, 124, 239, 124, 239, 124, 239, 124, 239, 124, 239, 124, 239, 124, 239, 124, 239, 124, 239, 124, 239, 124, 239, 124, 239, 124, 239, 125, 239, 125, 239, 125, 239, 125, 239, 125, 239, 125, 239, 125, 239, 125, 239, 125, 239, 125, 239, 125, 239, 125, 239, 125, 239, 125, 239, 125, 239, 125, 239, 125, 239, 125, 239, 125, 239, 125, 239, 125, 239, 125, 239, 125, 239, 125, 239, 125, 239, 125, 239, 125, 239, 125, 239, 125, 239, 125, 239, 125, 239, 125, 239, 125, 239, 125, 239, 125, 239, 125, 239, 125, 239, 125, 239, 125, 239, 125, 239, 125, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 222, 251, 66, 73, 107, 109, 206, 153, 148, 211, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 140, 210, 206, 153, 115, 206, 58, 8, 223, 27, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 214, 186, 91, 11, 90, 203, 90, 203, 0, 18, 0, 1, 0, 5, 0, 18, 32, 1, 82, 202, 129, 120, 90, 203, 90, 203, 107, 76, 206, 153, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 222, 250, 214, 185, 206, 121, 198, 56, 190, 23, 198, 23, 198, 56, 206, 120, 214, 185, 222, 250, 231, 59, 231, 59, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 59, 223, 26, 214, 186, 206, 121, 198, 88, 198, 55, 190, 23, 198, 55, 206, 88, 206, 153, 214, 218, 223, 27, 231, 59, 231, 59, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 239, 124, 239, 124, 239, 124, 239, 124, 239, 124, 239, 124, 239, 124, 239, 124, 239, 124, 239, 124, 239, 124, 239, 124, 239, 124, 239, 124, 239, 124, 239, 124, 239, 124, 239, 124, 239, 124, 239, 124, 239, 124, 239, 124, 239, 124, 239, 124, 239, 124, 239, 124, 239, 124, 239, 124, 239, 124, 239, 124, 239, 124, 239, 124, 239, 124, 239, 124, 239, 124, 239, 124, 239, 124, 239, 124, 239, 124, 239, 124, 239, 125, 239, 125, 239, 125, 239, 125, 239, 125, 239, 125, 239, 125, 239, 125, 239, 125, 239, 125, 214, 218, 57, 231, 115, 206, 206, 153, 148, 211, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 140, 178, 206, 121, 132, 16, 41, 166, 214, 218, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 223, 27, 107, 77, 90, 203, 90, 203, 32, 1, 82, 202, 0, 18, 0, 1, 0, 5, 0, 19, 64, 1, 90, 203, 129, 118, 90, 203, 90, 203, 115, 141, 214, 218, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 222, 251, 214, 218, 214, 153, 206, 121, 198, 88, 198, 56, 198, 23, 190, 23, 189, 247, 189, 247, 190, 23, 198, 23, 190, 23, 190, 23, 189, 247, 189, 247, 190, 23, 198, 55, 198, 88, 206, 120, 206, 153, 214, 186, 222, 250, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231], "i8", ALLOC_NONE, Runtime.GLOBAL_BASE + 972341);
  allocate([59, 231, 59, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 239, 124, 239, 124, 239, 124, 239, 124, 239, 124, 239, 124, 239, 124, 239, 124, 239, 124, 239, 124, 239, 124, 239, 124, 239, 124, 214, 186, 49, 166, 123, 207, 206, 153, 148, 243, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 148, 211, 206, 121, 132, 16, 41, 101, 214, 218, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 231, 92, 115, 174, 90, 203, 90, 203, 64, 1, 90, 203, 0, 19, 0, 1, 0, 5, 0, 20, 64, 1, 90, 203, 129, 116, 90, 203, 90, 203, 132, 15, 222, 250, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 222, 251, 222, 250, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 222, 250, 222, 250, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 206, 153, 49, 199, 115, 142, 206, 153, 157, 20, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 148, 243, 206, 153, 123, 239, 41, 134, 206, 186, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 157, 239, 125, 132, 48, 90, 203, 90, 203, 64, 1, 90, 203, 0, 20, 0, 1, 0, 5, 0, 21, 96, 1, 90, 203, 129, 114, 90, 203, 90, 203, 140, 145, 222, 250, 222, 250, 222, 250, 222, 250, 222, 250, 222, 250, 222, 250, 222, 250, 222, 250, 222, 250, 222, 250, 222, 250, 222, 250, 222, 250, 222, 250, 222, 250, 222, 250, 222, 250, 222, 250, 222, 250, 222, 250, 222, 250, 222, 250, 222, 250, 222, 250, 222, 250, 222, 250, 222, 250, 222, 250, 222, 250, 222, 250, 222, 250, 222, 250, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 206, 186, 58, 8, 99, 76, 206, 153, 165, 85, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 165, 52, 206, 153, 107, 141, 49, 199, 214, 186, 239, 125, 239, 125, 239, 125, 239, 125, 239, 125, 239, 125, 239, 125, 239, 124, 148, 178, 90, 203, 90, 203, 96, 1, 90, 203, 0, 21, 0, 1, 0, 5, 0, 22, 96, 1, 90, 203, 129, 112, 90, 203, 90, 203, 148, 145, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 222, 250, 222, 250, 222, 250, 222, 250, 222, 250, 222, 250, 222, 250, 222, 250, 222, 250, 222, 250, 222, 250, 222, 250, 222, 250, 222, 250, 222, 250, 222, 250, 222, 250, 222, 250, 222, 250, 222, 250, 222, 250, 222, 250, 222, 250, 222, 250, 222, 250, 222, 250, 222, 250, 222, 250, 222, 250, 222, 250, 222, 250, 222, 250, 222, 250, 222, 250, 222, 250, 222, 250, 222, 250, 222, 250, 222, 250, 222, 250, 222, 250, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 214, 186, 74, 138, 82, 170, 214, 154, 181, 150, 116, 16, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 240, 173, 150, 214, 154, 90, 235, 66, 73, 214, 186, 239, 124, 239, 124, 239, 124, 239, 124, 239, 124, 239, 124, 239, 124, 231, 92, 148, 210, 90, 203, 90, 203, 96, 1, 90, 203, 0, 22, 0, 1, 0, 5, 0, 23, 96, 1, 90, 203, 129, 110, 90, 203, 90, 203, 148, 145, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 222, 250, 222, 250, 222, 250, 222, 250, 222, 250, 222, 250, 222, 250, 222, 250, 222, 250, 222, 250, 222, 250, 222, 250, 222, 250, 222, 250, 222, 250, 222, 250, 222, 250, 222, 250, 222, 250, 222, 250, 222, 250, 222, 250, 222, 250, 222, 250, 222, 250, 222, 250, 222, 250, 222, 250, 222, 250, 222, 250, 222, 250, 222, 250, 222, 250, 222, 250, 222, 250, 222, 250, 222, 250, 222, 250, 222, 250, 222, 250, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 214, 218, 99, 77, 57, 199, 214, 154, 189, 247, 124, 48, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 124, 48, 181, 247, 214, 154, 66, 8, 91, 12, 214, 250, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 148, 210, 90, 203, 90, 203, 96, 1, 90, 203, 0, 23, 0, 1, 0, 5, 0, 24, 96, 1, 90, 203, 129, 108, 90, 203, 90, 203, 148, 145, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 222, 250, 222, 250, 222, 250, 222, 250, 222, 250, 222, 250, 222, 250, 222, 250, 222, 250, 222, 250, 222, 250, 222, 250, 222, 250, 222, 250, 222, 250, 222, 250, 222, 250, 222, 250, 222, 250, 222, 250, 222, 250, 222, 250, 222, 250, 222, 250, 222, 250, 222, 250, 222, 250, 222, 250, 222, 250, 222, 250, 222, 250, 222, 250, 222, 250, 222, 250, 222, 250, 222, 250, 222, 250, 222, 250, 222, 250, 222, 250, 222, 250, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 222, 251, 124, 48, 16, 162, 198, 24, 198, 88, 140, 146, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 132, 113, 198, 88, 206, 121, 33, 4, 115, 239, 223, 27, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 231, 92, 148, 210, 90, 203, 90, 203, 96, 1, 90, 203, 0, 24, 0, 1, 0, 5, 0, 25, 96, 1, 90, 203, 129, 106, 90, 203, 90, 203, 140, 145, 214, 153, 214, 185, 214, 185, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 222, 250, 222, 250, 222, 250, 222, 250, 222, 250, 222, 250, 222, 250, 222, 250, 222, 250, 222, 250, 222, 250, 222, 250, 222, 250, 222, 250, 222, 250, 222, 250, 222, 250, 222, 250, 222, 250, 222, 250, 222, 250, 222, 250, 222, 250, 222, 250, 222, 250, 222, 250, 222, 250, 222, 250, 222, 250, 222, 250, 222, 250, 222, 250, 222, 250, 222, 250, 222, 250, 222, 250, 222, 250, 222, 250, 222, 250, 222, 250, 222, 250, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 165, 84, 8, 65, 148, 178, 206, 121, 157, 20, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 157, 19, 206, 121, 157, 19, 0, 32, 157, 20, 223, 59, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 60, 231, 59, 148, 210, 90, 203, 90, 203, 96, 1, 90, 203, 0, 25, 0, 1, 0, 5, 0, 26, 96, 1, 90, 203, 129, 104, 90, 203, 90, 203, 132, 80, 206, 153, 214, 153, 214, 153, 214, 153, 214, 153, 214, 153, 214, 153, 214, 153, 214, 153, 214, 153, 214, 153, 214, 153, 214, 153, 214, 153, 214, 153, 214, 153, 214, 153, 214, 153, 214, 153, 214, 153, 214, 153, 214, 153, 214, 153, 214, 153, 214, 185, 214, 185, 214, 185, 214, 185, 214, 185, 214, 185, 214, 185, 214, 185, 214, 185, 214, 185, 214, 185, 214, 185, 214, 185, 214, 185, 214, 185, 214, 185, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 222, 250, 222, 250, 222, 250, 222, 250, 222, 250, 222, 250, 222, 250, 222, 250, 222, 250, 222, 250, 222, 250, 222, 250, 222, 250, 222, 250, 222, 250, 222, 250, 222, 250, 222, 250, 222, 250, 222, 250, 222, 250, 222, 250, 222, 250, 222, 250, 222, 250, 222, 250, 222, 250, 222, 250, 222, 250, 222, 250, 222, 250, 222, 250, 222, 250, 222, 250, 222, 250, 222, 250, 222, 250, 222, 250, 222, 250, 222, 250, 222, 250, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 190, 23, 41, 134, 99, 12, 214, 154, 181, 215, 124, 48, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 124, 48, 181, 182, 214, 154, 107, 77, 33, 69, 190, 23, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 231, 59, 223, 27, 140, 113, 90, 203, 90, 203, 96, 1, 90, 203, 0, 26, 0, 1, 0, 6, 0, 26, 32, 1, 90, 234, 96, 1, 90, 203, 129, 102, 90, 203, 90, 203, 115, 206, 198, 88, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 214, 153, 214, 153, 214, 153, 214, 153, 214, 153, 214, 153, 214, 153, 214, 153, 214, 153, 214, 153, 214, 153, 214, 153, 214, 153, 214, 153, 214, 153, 214, 153, 214, 153, 214, 153, 214, 153, 214, 153, 214, 153, 214, 153, 214, 153, 214, 153, 214, 185, 214, 185, 214, 185, 214, 185, 214, 185, 214, 185, 214, 185, 214, 185, 214, 185, 214, 185, 214, 185, 214, 185, 214, 185, 214, 185, 214, 185, 214, 185, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 222, 250, 222, 250, 222, 250, 222, 250, 222, 250, 222, 250, 222, 250, 222, 250, 222, 250, 222, 250, 222, 250, 222, 250, 222, 250, 222, 250, 222, 250, 222, 250, 222, 250, 222, 250, 222, 250, 222, 250, 222, 250, 222, 250, 222, 250, 222, 250, 222, 250, 222, 250, 222, 250, 222, 250, 222, 250, 222, 250, 222, 250, 222, 250, 222, 250, 206, 121, 99, 45, 33, 36, 198, 56, 198, 89, 140, 210, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 140, 178, 198, 88, 206, 121, 41, 133, 91, 12, 206, 153, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 214, 218, 123, 239, 90, 203, 90, 203, 96, 1, 90, 203, 0, 27, 0, 1, 0, 5, 0, 28, 96, 1, 90, 203, 129, 100, 90, 203, 90, 203, 107, 109, 190, 23, 206, 121, 206, 121, 206, 121, 206, 121, 206, 121, 206, 121, 206, 121, 206, 121, 206, 121, 206, 121, 206, 121, 206, 121, 206, 121, 206, 121, 206, 121, 206, 121, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 214, 153, 214, 153, 214, 153, 214, 153, 214, 153, 214, 153, 214, 153, 214, 153, 214, 153, 214, 153, 214, 153, 214, 153, 214, 153, 214, 153, 214, 153, 214, 153, 214, 153, 214, 153, 214, 153, 214, 153, 214, 153, 214, 153, 214, 153, 214, 153, 214, 185, 214, 185, 214, 185, 214, 185, 214, 185, 214, 185, 214, 185, 214, 185, 214, 185, 214, 185, 214, 185, 214, 185, 214, 185, 214, 185, 214, 185, 214, 185, 214, 185, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 157, 20, 16, 130, 124, 15, 206, 153, 181, 182, 124, 48, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 124, 48, 173, 150, 206, 153, 132, 48, 8, 65, 148, 243, 214, 250, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 223, 27, 206, 153, 115, 142, 90, 203, 90, 203, 96, 1, 90, 203, 0, 28, 0, 1, 0, 5, 0, 29, 96, 1, 90, 203, 129, 98, 90, 203, 90, 203, 99, 76, 181, 182, 206, 121, 206, 121, 206, 121, 206, 121, 206, 121, 206, 121, 206, 121, 206, 121, 206, 121, 206, 121, 206, 121, 206, 121, 206, 121, 206, 121, 206, 121, 206, 121, 206, 121, 206, 121, 206, 121, 206, 121, 206, 121, 206, 121, 206, 121, 206, 121, 206, 121, 206, 121, 206, 121, 206, 121, 206, 121, 206, 121, 206, 121, 206, 121, 206, 121, 206, 121, 206, 121, 206, 121, 206, 121, 206, 121, 206, 121, 206, 121, 206, 121, 206, 121, 206, 121, 206, 121, 206, 121, 206, 121, 206, 121, 206, 121, 206, 121, 206, 121, 206, 121, 206, 121, 206, 121, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 214, 153, 214, 153, 214, 153, 214, 153, 214, 153, 214, 153, 214, 153, 214, 153, 214, 153, 214, 153, 214, 153, 214, 153, 214, 153, 214, 153, 214, 153, 214, 153, 214, 153, 214, 153, 214, 153, 214, 153, 214, 153, 214, 153, 214, 153, 214, 153, 214, 153, 214, 185, 214, 185, 214, 185, 214, 185, 214, 185, 214, 185, 214, 185, 214, 185, 214, 185, 214, 185, 214, 185, 214, 185, 214, 185, 214, 185, 214, 185, 214, 185, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 190, 24, 74, 138, 49, 134, 198, 56, 206, 121, 148, 243, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 148, 243, 206, 89, 206, 121, 57, 199, 66, 73, 190, 56, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 222, 251, 198, 23, 107, 76, 90, 203, 90, 203, 96, 1, 90, 203, 0, 29, 0, 1, 0, 5, 0, 30, 64, 1, 82, 202, 129, 96, 90, 203, 90, 203, 90, 235, 156, 243, 206, 88, 206, 88, 206, 88, 206, 88, 206, 88, 206, 88, 206, 88, 206, 88, 206, 88, 206, 120, 206, 120, 206, 120, 206, 120, 206, 120, 206, 120, 206, 120, 206, 120, 206, 120, 206, 120, 206, 120, 206, 120, 206, 120, 206, 120, 206, 120, 206, 120, 206, 121, 206, 121, 206, 121, 206, 121, 206, 121, 206, 121, 206, 121, 206, 121, 206, 121, 206, 121, 206, 121, 206, 121, 206, 121, 206, 121, 206, 121, 206, 121, 206, 121, 206, 121, 206, 121, 206, 121, 206, 121, 206, 121, 206, 121, 206, 121, 206, 121, 206, 121, 206, 121, 206, 121, 206, 121, 206, 121, 206, 121, 206, 121, 206, 121, 206, 121, 206, 121, 206, 121, 206, 121, 206, 121, 206, 121, 206, 121, 206, 121, 206, 121, 206, 121, 206, 121, 206, 121, 206, 121, 206, 121, 206, 121, 206, 121, 206, 121, 206, 121, 206, 121, 206, 121, 206, 121, 206, 121, 206, 121, 206, 121, 206, 121, 206, 121, 206, 121, 206, 121, 206, 121, 206, 121, 206, 121, 206, 121, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 214, 153, 214, 153, 214, 153, 214, 153, 214, 153, 214, 153, 214, 153, 214, 153, 214, 153, 214, 153, 214, 153, 214, 153, 214, 153, 214, 153, 214, 153, 214, 153, 214, 153, 214, 153, 214, 153, 214, 153, 214, 153, 214, 153, 214, 153, 214, 153, 214, 153, 214, 185, 214, 185, 214, 185, 214, 185, 214, 185, 214, 185, 214, 185, 214, 185, 214, 185, 214, 185, 214, 185, 214, 185, 214, 185, 214, 185, 214, 185, 214, 185, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 206, 153, 148, 243, 16, 162, 107, 109, 214, 154, 190, 23, 140, 146, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 132, 113, 189, 247, 214, 154, 115, 174, 8, 130, 148, 243, 214, 186, 222, 250, 222, 250, 222, 250, 222, 250, 222, 250, 222, 250, 222, 250, 222, 250, 222, 250, 165, 84, 90, 235, 90, 203, 90, 203, 64, 1, 90, 202, 0, 30, 0, 1, 0, 5, 0, 31, 64, 1, 90, 203, 129, 94, 90, 203, 90, 203, 90, 203, 132, 16, 198, 56, 198, 88, 198, 88, 198, 88, 198, 88, 198, 88, 198, 88, 198, 88, 198, 88, 198, 88, 198, 88, 198, 88, 198, 88, 198, 88, 198, 88, 198, 88, 198, 88, 198, 88, 198, 88, 198, 88, 198, 88, 198, 88, 198, 88, 198, 88, 198, 88, 198, 88, 198, 88, 198, 88, 198, 88, 198, 88, 206, 88, 206, 88, 206, 88, 206, 88, 206, 88, 206, 88, 206, 88, 206, 88, 206, 88, 206, 88, 206, 88, 206, 88, 206, 88, 206, 88, 206, 88, 206, 88, 206, 120, 206, 120, 206, 120, 206, 120, 206, 120, 206, 120, 206, 120, 206, 120, 206, 120, 206, 120, 206, 120, 206, 120, 206, 120, 206, 120, 206, 120, 206, 120, 206, 120, 206, 121, 206, 121, 206, 121, 206, 121, 206, 121, 206, 121, 206, 121, 206, 121, 206, 121, 206, 121, 206, 121, 206, 121, 206, 121, 206, 121, 206, 121, 206, 121, 206, 121, 206, 121, 206, 121, 206, 121, 206, 121, 206, 121, 206, 121, 206, 121, 206, 121, 206, 121, 206, 121, 206, 121, 206, 121, 206, 121, 206, 121, 206, 121, 206, 121, 206, 121, 206, 121, 206, 121, 206, 121, 206, 121, 206, 121, 206, 121, 206, 121, 206, 121, 206, 121, 206, 121, 206, 121, 206, 121, 206, 121, 206, 121, 206, 121, 206, 121, 206, 121, 206, 121, 206, 121, 206, 121, 206, 121, 206, 121, 206, 121, 206, 121, 206, 121, 206, 121, 206, 121, 206, 121, 206, 121, 206, 121, 206, 121, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 214, 153, 214, 153, 214, 153, 214, 153, 214, 153, 214, 153, 214, 153, 214, 153, 214, 153, 214, 153, 214, 153, 214, 153, 214, 153, 214, 153, 214, 153, 214, 153, 214, 153, 214, 153, 214, 153, 214, 153, 214, 153, 214, 153, 214, 153, 214, 153, 214, 185, 214, 185, 214, 185, 214, 185, 214, 185, 214, 185, 214, 185, 214, 185, 214, 185, 214, 185, 214, 185, 214, 185, 214, 185, 214, 185, 214, 185, 214, 185, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 198, 56, 99, 77, 8, 97, 148, 210, 206, 153, 181, 182, 132, 81, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 132, 81, 173, 150, 206, 153, 156, 243, 16, 162, 99, 44, 198, 56, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 186, 132, 80, 90, 203, 90, 203, 90, 203, 64, 1, 90, 203, 0, 31, 0, 1, 0, 5, 0, 32, 32, 1, 90, 203, 129, 92, 90, 203, 90, 203, 90, 203, 107, 109, 181, 182, 198, 56, 198, 56, 198, 56, 198, 56, 198, 56, 198, 56, 198, 56, 198, 56, 198, 56, 198, 88, 198, 88, 198, 88, 198, 88, 198, 88, 198, 88, 198, 88, 198, 88, 198, 88, 198, 88, 198, 88, 198, 88, 198, 88, 198, 88, 198, 88, 198, 88, 198, 88, 198, 88, 198, 88, 198, 88, 198, 88, 198, 88, 198, 88, 198, 88, 198, 88, 198, 88, 198, 88, 198, 88, 198, 88, 198, 88, 198, 88, 198, 88, 198, 88, 198, 88, 198, 88, 198, 88, 198, 88, 198, 88, 198, 88, 198, 88, 198, 88, 198, 88, 198, 88, 198, 88, 198, 88, 198, 88, 198, 88, 198, 88, 198, 88, 198, 88, 198, 88, 198, 88, 198, 88, 198, 88, 198, 88, 198, 88, 198, 88, 206, 88, 206, 88, 206, 88, 206, 88, 206, 88, 206, 88, 206, 88, 206, 88, 206, 88, 206, 88, 206, 88, 206, 88, 206, 88, 206, 88, 206, 88, 206, 88, 206, 88, 206, 120, 206, 120, 206, 120, 206, 120, 206, 120, 206, 120, 206, 120, 206, 120, 206, 120, 206, 120, 206, 120, 206, 120, 206, 120, 206, 120, 206, 120, 206, 120, 206, 121, 206, 121, 206, 121, 206, 121, 206, 121, 206, 121, 206, 121, 206, 121, 206, 121, 206, 121, 206, 121, 206, 121, 206, 121, 206, 121, 206, 121, 206, 121, 206, 121, 206, 121, 206, 121, 206, 121, 206, 121, 206, 121, 206, 121, 206, 121, 206, 121, 206, 121, 206, 121, 206, 121, 206, 121, 206, 121, 206, 121, 206, 121, 206, 121, 206, 121, 206, 121, 206, 121, 206, 121, 206, 121, 206, 121, 206, 121, 206, 121, 206, 121, 206, 121, 206, 121, 206, 121, 206, 121, 206, 121, 206, 121, 206, 121, 206, 121, 206, 121, 206, 121, 206, 121, 206, 121, 206, 121, 206, 121, 206, 121, 206, 121, 206, 121, 206, 121, 206, 121, 206, 121, 206, 121, 206, 121, 206, 121, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 206, 121, 198, 88, 198, 88, 198, 88, 198, 88, 198, 88, 198, 88, 198, 88, 198, 88, 198, 88, 198, 88, 198, 88, 198, 88, 198, 88, 198, 88, 198, 88, 198, 88, 198, 88, 198, 88, 198, 88, 198, 88, 198, 88, 198, 88, 198, 88, 198, 88, 198, 88, 198, 88, 198, 88, 198, 56, 190, 23, 190, 23, 190, 23, 190, 23, 190, 23, 190, 23, 190, 23, 190, 23, 190, 23, 190, 23, 190, 23, 190, 23, 190, 23, 190, 23, 190, 23, 190, 23, 190, 23, 190, 23, 190, 23, 190, 23, 198, 56, 206, 88, 206, 88, 206, 88, 206, 88, 206, 88, 206, 88, 206, 88, 206, 120, 214, 153, 214, 153, 214, 153, 214, 153, 214, 153, 214, 153, 214, 153, 214, 153, 214, 153, 214, 185, 214, 185, 214, 185, 214, 185, 214, 153, 181, 214, 66, 73, 41, 101, 173, 117, 206, 153, 173, 150, 124, 81, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 124, 81, 173, 117, 206, 153, 181, 182, 49, 166, 58, 8, 181, 214, 214, 186, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 214, 218, 198, 56, 107, 109, 90, 203, 90, 203, 90, 203, 32, 1, 90, 203, 0, 32, 0, 1, 0, 5, 0, 34, 96, 1, 90, 203, 129, 88, 90, 203, 90, 203, 90, 235, 148, 178, 198, 56, 198, 56, 198, 56, 198, 56, 198, 56, 198, 56, 198, 56, 198, 56, 198, 56, 198, 56, 198, 56, 198, 56, 198, 56, 198, 56, 198, 56, 198, 56, 198, 56, 198, 56, 198, 56, 198, 56, 198, 56, 198, 56, 198, 56, 198, 56, 198, 56, 198, 56, 198, 56, 198, 56, 198, 56, 198, 56, 198, 56, 198, 56, 198, 56, 198, 56, 198, 56, 198, 56, 198, 56, 198, 56, 198, 56, 198, 56, 198, 56, 198, 56, 198, 56, 198, 56, 198, 56, 198, 56, 198, 56, 198, 88, 198], "i8", ALLOC_NONE, Runtime.GLOBAL_BASE + 982581);
  allocate([88, 198, 88, 198, 88, 198, 88, 198, 88, 198, 88, 198, 88, 198, 88, 198, 88, 198, 88, 198, 88, 198, 88, 198, 88, 198, 88, 198, 88, 198, 88, 198, 88, 198, 88, 198, 88, 198, 88, 198, 88, 198, 88, 198, 88, 198, 88, 198, 88, 198, 88, 198, 88, 198, 88, 198, 88, 198, 88, 198, 88, 198, 88, 198, 88, 198, 88, 198, 88, 198, 88, 198, 88, 198, 88, 198, 88, 198, 88, 198, 88, 198, 88, 198, 88, 198, 88, 198, 88, 198, 88, 173, 117, 140, 113, 140, 113, 140, 113, 140, 113, 140, 113, 132, 48, 132, 48, 132, 48, 132, 48, 132, 48, 132, 48, 132, 16, 124, 15, 124, 15, 124, 15, 124, 15, 124, 15, 123, 239, 115, 206, 115, 206, 115, 206, 115, 206, 115, 206, 115, 206, 115, 206, 107, 141, 107, 141, 107, 141, 107, 141, 107, 141, 107, 141, 107, 141, 107, 141, 107, 141, 107, 141, 107, 141, 107, 141, 107, 141, 107, 77, 107, 76, 107, 76, 107, 76, 107, 76, 107, 76, 107, 76, 107, 76, 107, 76, 107, 76, 107, 76, 107, 76, 107, 76, 99, 12, 99, 12, 99, 12, 99, 12, 99, 12, 99, 12, 99, 12, 99, 12, 99, 12, 99, 12, 99, 12, 99, 12, 99, 12, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 99, 11, 107, 109, 140, 113, 181, 214, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 206, 121, 165, 85, 49, 166, 57, 199, 181, 182, 206, 121, 173, 150, 132, 113, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 132, 81, 173, 149, 206, 121, 189, 215, 66, 8, 41, 101, 157, 84, 206, 153, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 186, 214, 185, 156, 243, 90, 235, 90, 203, 90, 203, 96, 1, 90, 203, 0, 34, 0, 1, 0, 5, 0, 35, 64, 1, 82, 202, 129, 86, 90, 203, 90, 203, 90, 203, 107, 141, 181, 149, 198, 23, 198, 23, 198, 55, 198, 55, 198, 55, 198, 55, 198, 55, 198, 55, 198, 55, 198, 55, 198, 56, 198, 56, 198, 56, 198, 56, 198, 56, 198, 56, 198, 56, 198, 56, 198, 56, 198, 56, 198, 56, 198, 56, 198, 56, 198, 56, 198, 56, 198, 56, 198, 56, 198, 56, 198, 56, 198, 56, 198, 56, 198, 56, 198, 56, 198, 56, 198, 56, 198, 56, 198, 56, 198, 56, 198, 56, 198, 56, 198, 56, 198, 56, 198, 56, 198, 56, 198, 56, 198, 56, 198, 56, 198, 56, 198, 56, 198, 56, 198, 56, 198, 56, 198, 56, 198, 56, 198, 56, 198, 56, 198, 56, 198, 56, 198, 56, 198, 56, 198, 56, 198, 56, 198, 56, 198, 56, 198, 56, 198, 56, 198, 56, 198, 56, 198, 56, 198, 56, 198, 56, 198, 56, 198, 56, 198, 56, 198, 56, 198, 56, 198, 56, 198, 56, 198, 56, 198, 56, 198, 56, 198, 56, 198, 56, 198, 88, 198, 88, 198, 88, 198, 88, 198, 88, 198, 88, 198, 88, 157, 19, 99, 44, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 123, 239, 181, 214, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 198, 88, 157, 20, 41, 134, 49, 166, 165, 84, 206, 153, 181, 215, 140, 178, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 140, 178, 181, 214, 206, 153, 173, 117, 57, 231, 41, 101, 157, 19, 206, 121, 214, 185, 214, 185, 214, 185, 214, 185, 214, 185, 214, 185, 214, 185, 214, 185, 214, 185, 214, 185, 190, 23, 115, 174, 90, 203, 90, 203, 90, 203, 64, 1, 90, 202, 0, 35, 0, 1, 0, 11, 0, 36, 32, 1, 82, 202, 96, 1, 90, 203, 128, 104, 90, 203, 90, 203, 90, 235, 140, 145, 190, 23, 190, 23, 190, 23, 190, 23, 190, 23, 190, 23, 190, 23, 190, 23, 190, 23, 190, 23, 190, 23, 190, 23, 190, 23, 190, 23, 198, 23, 198, 23, 198, 23, 198, 23, 198, 23, 198, 23, 198, 23, 198, 23, 198, 23, 198, 23, 198, 23, 198, 23, 198, 23, 198, 23, 198, 23, 198, 23, 198, 23, 198, 23, 198, 23, 198, 23, 198, 23, 198, 23, 198, 23, 198, 23, 198, 23, 198, 55, 198, 55, 198, 55, 198, 55, 198, 55, 198, 55, 198, 55, 198, 55, 198, 56, 198, 56, 198, 56, 198, 56, 198, 56, 198, 56, 198, 56, 198, 56, 198, 56, 198, 56, 198, 56, 198, 56, 198, 56, 198, 56, 198, 56, 198, 56, 198, 56, 198, 56, 198, 56, 198, 56, 198, 56, 198, 56, 198, 56, 198, 56, 198, 56, 198, 56, 198, 56, 198, 56, 198, 56, 198, 56, 198, 56, 198, 56, 198, 56, 198, 56, 198, 56, 198, 56, 198, 56, 198, 56, 198, 56, 198, 56, 189, 246, 115, 206, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 96, 37, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 82, 202, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 64, 99, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 82, 202, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 82, 202, 82, 202, 82, 202, 82, 202, 82, 202, 82, 202, 82, 202, 82, 202, 82, 202, 82, 202, 82, 202, 82, 202, 82, 202, 82, 202, 82, 202, 82, 202, 82, 202, 82, 202, 82, 202, 82, 202, 82, 202, 82, 202, 82, 202, 82, 202, 82, 202, 82, 202, 90, 203, 82, 202, 82, 202, 82, 202, 82, 202, 90, 202, 90, 202, 90, 202, 90, 202, 90, 202, 90, 202, 90, 202, 90, 202, 90, 202, 90, 202, 90, 202, 90, 202, 90, 202, 90, 202, 90, 202, 90, 202, 90, 202, 90, 202, 90, 202, 90, 202, 90, 202, 90, 202, 90, 202, 90, 202, 90, 202, 90, 202, 90, 202, 90, 202, 90, 202, 90, 202, 90, 202, 90, 202, 90, 202, 90, 202, 90, 202, 90, 202, 90, 202, 90, 202, 90, 202, 90, 202, 90, 203, 90, 203, 90, 203, 96, 1, 90, 203, 128, 97, 90, 203, 90, 203, 90, 203, 90, 203, 140, 81, 198, 56, 206, 121, 206, 121, 206, 121, 206, 121, 206, 121, 206, 121, 206, 121, 206, 121, 198, 88, 165, 85, 58, 40, 24, 227, 140, 81, 214, 154, 198, 88, 165, 85, 132, 81, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 132, 81, 165, 84, 198, 88, 214, 154, 140, 145, 33, 36, 57, 232, 165, 84, 206, 121, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 148, 210, 90, 235, 90, 203, 90, 203, 96, 1, 90, 202, 32, 1, 90, 203, 0, 36, 0, 1, 0, 9, 0, 38, 64, 1, 82, 202, 128, 94, 90, 203, 90, 203, 90, 203, 107, 109, 165, 52, 190, 23, 190, 23, 190, 23, 190, 23, 190, 23, 190, 23, 190, 23, 190, 23, 190, 23, 190, 23, 190, 23, 190, 23, 190, 23, 190, 23, 190, 23, 190, 23, 190, 23, 190, 23, 190, 23, 190, 23, 190, 23, 190, 23, 190, 23, 190, 23, 190, 23, 190, 23, 190, 23, 190, 23, 190, 23, 190, 23, 190, 23, 190, 23, 190, 23, 190, 23, 190, 23, 190, 23, 190, 23, 190, 23, 190, 23, 190, 23, 190, 23, 190, 23, 190, 23, 190, 23, 190, 23, 190, 23, 190, 23, 190, 23, 190, 23, 190, 23, 190, 23, 198, 23, 198, 23, 198, 23, 198, 23, 198, 23, 198, 23, 198, 23, 198, 23, 198, 23, 198, 23, 198, 23, 198, 23, 198, 23, 198, 23, 198, 23, 198, 23, 198, 23, 198, 23, 198, 23, 198, 23, 198, 23, 198, 23, 198, 23, 198, 23, 198, 55, 198, 55, 198, 55, 198, 55, 198, 55, 198, 55, 198, 55, 198, 55, 198, 23, 156, 243, 99, 12, 90, 203, 90, 203, 90, 203, 64, 1, 90, 203, 0, 146, 64, 1, 90, 203, 128, 94, 90, 203, 90, 203, 90, 203, 99, 44, 157, 19, 206, 88, 206, 120, 206, 120, 206, 120, 206, 121, 206, 121, 206, 121, 206, 121, 206, 121, 198, 88, 173, 182, 99, 44, 0, 32, 90, 203, 189, 215, 206, 153, 190, 24, 165, 52, 132, 81, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 132, 81, 157, 52, 190, 23, 206, 153, 189, 247, 90, 235, 0, 0, 91, 12, 173, 182, 206, 121, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 206, 153, 181, 149, 107, 141, 90, 203, 90, 203, 90, 203, 64, 1, 90, 203, 0, 38, 0, 1, 0, 12, 0, 39, 32, 1, 82, 170, 96, 1, 90, 203, 128, 90, 90, 203, 90, 203, 90, 203, 115, 206, 173, 149, 189, 247, 189, 247, 189, 247, 189, 247, 189, 247, 189, 247, 189, 247, 189, 247, 189, 247, 189, 247, 189, 247, 189, 247, 189, 247, 189, 247, 189, 247, 189, 247, 189, 247, 189, 247, 189, 247, 189, 247, 189, 247, 189, 247, 189, 247, 189, 247, 189, 247, 189, 247, 189, 247, 189, 247, 189, 247, 189, 247, 190, 23, 190, 23, 190, 23, 190, 23, 190, 23, 190, 23, 190, 23, 190, 23, 190, 23, 190, 23, 190, 23, 190, 23, 190, 23, 190, 23, 190, 23, 190, 23, 190, 23, 190, 23, 190, 23, 190, 23, 190, 23, 190, 23, 190, 23, 190, 23, 190, 23, 190, 23, 190, 23, 190, 23, 190, 23, 190, 23, 190, 23, 190, 23, 190, 23, 190, 23, 190, 23, 190, 23, 190, 23, 190, 23, 190, 23, 190, 23, 190, 23, 190, 23, 190, 23, 190, 23, 190, 23, 190, 23, 190, 23, 190, 23, 190, 23, 190, 23, 165, 52, 107, 109, 90, 203, 90, 203, 90, 203, 96, 1, 82, 202, 0, 149, 32, 1, 90, 235, 96, 1, 90, 203, 128, 90, 90, 203, 90, 203, 90, 203, 107, 109, 173, 84, 198, 88, 198, 88, 198, 88, 198, 88, 198, 88, 198, 88, 198, 88, 198, 88, 206, 88, 206, 88, 189, 247, 140, 178, 49, 166, 16, 162, 107, 141, 198, 88, 206, 153, 198, 56, 173, 117, 140, 178, 124, 16, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 124, 16, 140, 178, 165, 117, 198, 56, 206, 153, 206, 121, 115, 174, 24, 227, 41, 134, 140, 146, 190, 23, 206, 121, 206, 121, 206, 121, 206, 121, 206, 121, 206, 121, 206, 121, 206, 121, 206, 121, 206, 121, 206, 121, 206, 121, 189, 247, 123, 239, 90, 203, 90, 203, 90, 203, 96, 1, 90, 203, 32, 1, 90, 203, 0, 39, 0, 1, 0, 9, 0, 41, 64, 1, 90, 203, 128, 88, 90, 203, 90, 203, 90, 203, 90, 203, 132, 48, 181, 182, 189, 246, 189, 247, 189, 247, 189, 247, 189, 247, 189, 247, 189, 247, 189, 247, 189, 247, 189, 247, 189, 247, 189, 247, 189, 247, 189, 247, 189, 247, 189, 247, 189, 247, 189, 247, 189, 247, 189, 247, 189, 247, 189, 247, 189, 247, 189, 247, 189, 247, 189, 247, 189, 247, 189, 247, 189, 247, 189, 247, 189, 247, 189, 247, 189, 247, 189, 247, 189, 247, 189, 247, 189, 247, 189, 247, 189, 247, 189, 247, 189, 247, 189, 247, 189, 247, 189, 247, 189, 247, 189, 247, 189, 247, 189, 247, 189, 247, 189, 247, 189, 247, 189, 247, 189, 247, 189, 247, 189, 247, 189, 247, 189, 247, 189, 247, 189, 247, 189, 247, 189, 247, 189, 247, 189, 247, 189, 247, 189, 247, 189, 247, 190, 23, 190, 23, 190, 23, 190, 23, 190, 23, 190, 23, 190, 23, 190, 23, 190, 23, 190, 23, 173, 117, 115, 174, 90, 203, 90, 203, 90, 203, 90, 203, 32, 1, 90, 203, 0, 152, 32, 1, 90, 203, 128, 88, 90, 203, 90, 203, 90, 203, 90, 203, 115, 206, 181, 182, 198, 88, 198, 88, 198, 88, 198, 88, 198, 88, 198, 88, 198, 88, 198, 88, 198, 88, 198, 88, 198, 56, 173, 182, 124, 16, 41, 101, 16, 162, 99, 44, 173, 149, 214, 154, 206, 153, 190, 24, 165, 117, 148, 211, 132, 81, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 132, 81, 148, 211, 165, 117, 190, 23, 206, 153, 214, 154, 181, 182, 107, 77, 24, 195, 33, 69, 124, 16, 181, 182, 198, 88, 206, 120, 206, 120, 206, 120, 206, 120, 206, 120, 206, 120, 206, 120, 206, 120, 206, 120, 206, 120, 206, 120, 206, 120, 198, 56, 140, 113, 90, 235, 90, 203, 90, 203, 90, 203, 64, 1, 90, 203, 0, 41, 0, 1, 0, 9, 0, 43, 64, 1, 90, 203, 128, 84, 90, 203, 90, 203, 90, 203, 90, 235, 132, 48, 181, 149, 181, 214, 181, 214, 181, 214, 181, 214, 181, 214, 189, 214, 189, 214, 189, 214, 189, 214, 189, 214, 189, 214, 189, 214, 189, 214, 189, 214, 189, 214, 189, 214, 189, 214, 189, 214, 189, 214, 189, 214, 189, 214, 189, 246, 189, 246, 189, 246, 189, 246, 189, 246, 189, 246, 189, 246, 189, 246, 189, 246, 189, 246, 189, 246, 189, 246, 189, 246, 189, 246, 189, 246, 189, 246, 189, 247, 189, 247, 189, 247, 189, 247, 189, 247, 189, 247, 189, 247, 189, 247, 189, 247, 189, 247, 189, 247, 189, 247, 189, 247, 189, 247, 189, 247, 189, 247, 189, 247, 189, 247, 189, 247, 189, 247, 189, 247, 189, 247, 189, 247, 189, 247, 189, 247, 189, 247, 189, 247, 189, 247, 189, 247, 189, 247, 189, 247, 189, 247, 189, 247, 189, 247, 189, 247, 173, 117, 123, 239, 90, 203, 90, 203, 90, 203, 90, 203, 64, 1, 90, 203, 0, 156, 64, 1, 90, 203, 128, 84, 90, 203, 90, 203, 90, 203, 90, 203, 124, 15, 181, 182, 198, 56, 198, 56, 198, 56, 198, 56, 198, 56, 198, 56, 198, 56, 198, 56, 198, 56, 198, 56, 198, 56, 198, 56, 173, 182, 132, 113, 66, 40, 0, 65, 49, 166, 115, 174, 181, 150, 214, 154, 206, 153, 206, 121, 190, 23, 173, 150, 165, 52, 148, 243, 140, 146, 124, 81, 124, 16, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 115, 239, 116, 16, 124, 49, 140, 146, 148, 243, 165, 52, 173, 150, 190, 23, 206, 121, 206, 153, 214, 154, 181, 182, 115, 206, 49, 198, 0, 32, 58, 8, 132, 81, 173, 182, 198, 56, 198, 88, 198, 88, 198, 88, 198, 88, 198, 88, 198, 88, 198, 88, 198, 88, 198, 88, 198, 88, 198, 88, 198, 88, 198, 88, 190, 23, 140, 113, 90, 235, 90, 203, 90, 203, 90, 203, 64, 1, 90, 203, 0, 43, 0, 1, 0, 11, 0, 44, 32, 1, 82, 170, 96, 1, 90, 203, 128, 80, 90, 203, 90, 203, 90, 203, 90, 235, 124, 15, 173, 117, 181, 214, 181, 214, 181, 214, 181, 214, 181, 214, 181, 214, 181, 214, 181, 214, 181, 214, 181, 214, 181, 214, 181, 214, 181, 214, 181, 214, 181, 214, 181, 214, 181, 214, 181, 214, 181, 214, 181, 214, 181, 214, 181, 214, 181, 214, 181, 214, 181, 214, 181, 214, 181, 214, 181, 214, 181, 214, 181, 214, 181, 214, 181, 214, 181, 214, 181, 214, 181, 214, 181, 214, 181, 214, 181, 214, 181, 214, 181, 214, 181, 214, 189, 214, 189, 214, 189, 214, 189, 214, 189, 214, 189, 214, 189, 214, 189, 214, 189, 214, 189, 214, 189, 214, 189, 214, 189, 214, 189, 214, 189, 214, 189, 214, 189, 246, 189, 246, 189, 246, 189, 246, 189, 246, 189, 246, 189, 246, 189, 246, 189, 246, 189, 246, 189, 246, 165, 52, 115, 206, 90, 203, 90, 203, 90, 203, 90, 203, 64, 1, 90, 203, 0, 160, 64, 1, 90, 203, 128, 80, 90, 203, 90, 203, 90, 203, 90, 203, 123, 207, 173, 117, 198, 56, 198, 56, 198, 56, 198, 56, 198, 56, 198, 56, 198, 56, 198, 56, 198, 56, 198, 56, 198, 56, 198, 56, 198, 56, 181, 214, 165, 117, 124, 16, 66, 40, 16, 130, 16, 162, 66, 72, 115, 206, 165, 20, 206, 89, 214, 154, 214, 154, 206, 153, 206, 153, 206, 121, 198, 88, 198, 56, 190, 23, 190, 23, 181, 247, 181, 247, 190, 23, 190, 23, 198, 56, 198, 88, 206, 121, 206, 153, 206, 153, 214, 154, 214, 154, 206, 121, 165, 52, 123, 207, 74, 105, 24, 195, 16, 130, 58, 8, 124, 15, 165, 85, 181, 215, 198, 56, 198, 56, 198, 56, 198, 56, 198, 56, 198, 56, 198, 88, 198, 88, 198, 88, 198, 88, 198, 88, 198, 88, 198, 88, 198, 88, 198, 88, 189, 214, 132, 80, 90, 235, 90, 203, 90, 203, 90, 203, 96, 1, 90, 203, 32, 1, 82, 170, 0, 44, 0, 1, 0, 13, 0, 46, 32, 1, 90, 203, 96, 1, 90, 203, 128, 76, 90, 203, 90, 203, 90, 203, 90, 203, 123, 239, 157, 19, 181, 182, 181, 182, 181, 182, 181, 182, 181, 182, 181, 182, 181, 182, 181, 182, 181, 182, 181, 182, 181, 182, 181, 182, 181, 182, 181, 182, 181, 182, 181, 182, 181, 182, 181, 182, 181, 182, 181, 182, 181, 214, 181, 214, 181, 214, 181, 214, 181, 214, 181, 214, 181, 214, 181, 214, 181, 214, 181, 214, 181, 214, 181, 214, 181, 214, 181, 214, 181, 214, 181, 214, 181, 214, 181, 214, 181, 214, 181, 214, 181, 214, 181, 214, 181, 214, 181, 214, 181, 214, 181, 214, 181, 214, 181, 214, 181, 214, 181, 214, 181, 214, 181, 214, 181, 214, 181, 214, 181, 214, 181, 214, 181, 214, 181, 214, 181, 214, 181, 214, 181, 214, 181, 214, 181, 214, 181, 214, 156, 243, 107, 141, 90, 203, 90, 203, 90, 203, 90, 203, 96, 1, 90, 203, 32, 1, 90, 203, 0, 162, 32, 1, 90, 203, 96, 1, 90, 203, 128, 76, 90, 203, 90, 203, 90, 203, 90, 203, 115, 174, 165, 52, 190, 23, 198, 23, 198, 23, 198, 23, 198, 23, 198, 23, 198, 23, 198, 23, 198, 23, 198, 23, 198, 23, 198, 23, 198, 23, 198, 23, 198, 55, 181, 215, 173, 150, 157, 20, 124, 16, 82, 170, 41, 101, 16, 162, 0, 0, 24, 227, 49, 166, 74, 105, 90, 235, 107, 109, 115, 174, 123, 239, 132, 16, 132, 16, 123, 239, 115, 206, 107, 109, 90, 235, 74, 105, 49, 166, 24, 227, 0, 0, 16, 130, 41, 101, 74, 170, 124, 15, 157, 19, 173, 150, 181, 247, 198, 56, 198, 56, 198, 56, 198, 56, 198, 56, 198, 56, 198, 56, 198, 56, 198, 56, 198, 56, 198, 56, 198, 56, 198, 56, 198, 56, 198, 56, 198, 56, 198, 56, 173, 117, 124, 15, 90, 235, 90, 203, 90, 203, 90, 203, 96, 1, 90, 203, 32, 1, 90, 203, 0, 46, 0, 1, 0, 13, 0, 48, 32, 1, 82, 202, 96, 1, 90, 203, 128, 72, 90, 202, 90, 202, 90, 202, 90, 202, 99, 76, 140, 113, 173, 117, 181, 182, 181, 182, 181, 182, 181, 182, 181, 182, 181, 182, 181, 182, 181, 182, 181, 182, 181, 182, 181, 182, 181, 182, 181, 182, 181, 182, 181, 182, 181, 182, 181, 182, 181, 182, 181, 182, 181, 182, 181, 182, 181, 182, 181, 182, 181, 182, 181, 182, 181, 182, 181, 182, 181, 182, 181, 182, 181, 182, 181, 182, 181, 182, 181, 182, 181, 182, 181, 182, 181, 182, 181, 182, 181, 182, 181, 182, 181, 182, 181, 182, 181, 182, 181, 182, 181, 182, 181, 182, 181, 182, 181, 182, 181, 182, 181, 182, 181, 182, 181, 182, 181, 182, 181, 182, 181, 182, 181, 182, 181, 182, 181, 214, 181, 214, 173, 84, 132, 80, 99, 12, 90, 203, 90, 203, 90, 203, 90, 203, 64, 1, 90, 203, 32, 1, 82, 170, 0, 166, 32, 1, 82, 170, 64, 1, 90, 203, 128, 72, 90, 203, 90, 203, 90, 203, 90, 203, 99, 44, 140, 113, 181, 149, 190, 23, 190, 23, 190, 23, 190, 23, 190, 23, 190, 23, 190, 23, 190, 23, 190, 23, 190, 23, 190, 23, 190, 23, 190, 23, 190, 23, 190, 23, 190, 23, 190, 23, 190, 23, 181, 215, 173, 182, 173, 117, 165, 85, 157, 20, 140, 178, 132, 81, 124, 48, 115, 239, 115, 207, 115, 207, 115, 239, 124, 48, 132, 81, 140, 178, 157, 20, 165, 85, 173, 117, 181, 182, 189, 247, 190, 23, 198, 23, 198, 23, 198, 23, 198, 23, 198, 23, 198, 23, 198, 23, 198, 23, 198, 23, 198, 23, 198, 23, 198, 55, 198, 55, 198, 55, 198, 55, 198, 55, 198, 55, 198, 55, 198, 55, 189, 247, 148, 178, 107, 77, 90, 203, 90, 203, 90, 203, 90, 203, 96, 1, 90, 203, 32, 1, 82, 202, 0, 48, 0, 1, 0, 11, 0, 50, 32, 1, 90, 203, 96, 1, 90, 202, 128, 68, 90, 202, 90, 202, 90, 202, 90, 202, 90, 235, 115, 206, 148, 210, 173, 149, 181, 150, 181, 150, 181, 150, 181, 150, 181, 150, 181, 150, 181, 150, 181, 150, 181, 150, 181, 150, 181, 182, 181, 182, 181, 182, 181, 182, 181, 182, 181, 182, 181, 182, 181, 182, 181, 182, 181, 182, 181, 182, 181, 182, 181, 182, 181, 182, 181, 182, 181, 182, 181, 182, 181, 182, 181, 182, 181, 182, 181, 182, 181, 182, 181, 182, 181, 182, 181, 182, 181, 182, 181, 182, 181, 182, 181, 182, 181, 182, 181, 182, 181, 182, 181, 182, 181, 182, 181, 182, 181, 182, 181, 182, 181, 182, 181, 182, 181, 182, 181, 182, 181, 182, 173, 149, 148, 178, 115, 142, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 64, 1, 90, 203, 0, 172, 64, 1, 90, 203, 128, 68, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 115, 174, 156, 210, 181, 214, 189, 247, 189, 247, 189, 247, 190, 23, 190, 23, 190, 23, 190, 23, 190, 23, 190, 23, 190, 23, 190, 23, 190, 23, 190, 23, 190, 23, 190, 23, 190, 23, 190, 23, 190, 23, 190, 23, 190, 23, 190, 23, 190, 23, 190, 23, 190, 23, 190, 23, 190, 23, 190, 23, 190, 23, 190, 23, 190, 23, 190, 23, 190, 23, 190, 23, 190, 23, 190, 23, 190, 23, 190, 23, 190, 23, 190, 23, 190, 23, 190, 23, 190, 23, 190, 23, 190, 23, 190, 23, 190, 23, 190, 23, 190, 23, 190, 23, 190, 23, 190, 23, 190, 23, 189, 247, 157, 19, 123, 239, 90, 235, 90, 203, 90, 203, 90, 203, 90, 203, 96, 1, 90, 203, 32, 1, 90, 203, 0, 50, 0, 1, 0, 13, 0, 53, 64, 1, 82, 202, 96, 1, 90, 202, 128, 62, 90, 202, 90, 202, 90, 202, 90, 202, 90, 235, 115, 174, 148, 178, 173, 117, 173, 149, 173, 149, 173, 149, 173, 149, 181, 149, 181, 149, 181, 149, 181, 149, 181, 149, 181, 149, 181, 149, 181, 149, 181, 149, 181, 149, 181, 149, 181, 149, 181, 149, 181, 149, 181, 149, 181, 149, 181, 149, 181, 149, 181, 149, 181, 149, 181, 149, 181, 149, 181, 149, 181, 149, 181, 149, 181, 150, 181, 150, 181, 150, 181, 150, 181, 150, 181, 150, 181, 150, 181, 150, 181, 150, 181, 150, 181, 150, 181, 150, 181, 150, 181, 150, 181, 150, 181, 150, 181, 182, 173, 84, 140, 145, 115, 141, 90, 203, 90, 202, 90, 202, 90, 202, 90, 202, 96, 1, 90, 202, 64, 1, 82, 202, 0, 176, 64, 1, 82, 202, 96, 1, 90, 203, 128, 62, 90, 203, 90, 203, 90, 203, 90, 203, 90, 235, 115, 174, 148, 178, 181, 182, 189, 247, 189, 247, 189, 247, 189, 247, 189, 247, 189, 247, 189, 247, 189, 247, 189, 247, 189, 247, 189, 247, 189, 247, 189, 247, 189, 247, 189, 247, 189, 247, 189, 247, 189, 247, 189, 247, 189, 247, 189, 247, 189, 247, 189, 247, 189, 247, 189, 247, 189, 247, 189, 247, 189, 247, 189, 247, 189, 247, 189, 247, 189, 247, 189, 247, 189, 247, 189, 247, 189, 247, 189, 247, 189, 247, 189, 247, 190, 23, 190, 23, 190, 23, 190, 23, 190, 23, 190, 23, 190, 23, 189, 214, 156, 243, 123, 239, 90, 235, 90, 203, 90, 203, 90, 203, 90, 203, 96, 1, 90, 203, 64, 1, 82, 202, 0, 53, 0, 1, 0, 13, 0, 55, 32, 1, 82, 202, 96, 1, 90, 202, 128, 58, 90, 202, 90, 202, 90, 202, 90, 202, 90, 202, 90, 235, 107, 141, 132, 48, 156, 242, 173, 117, 173, 149, 173, 149, 173, 149, 173, 149, 173, 149, 173, 149, 173, 149, 173, 149, 173, 149, 173, 149, 173, 149, 173, 149, 173, 149, 173, 149, 173, 149, 173, 149, 173, 149, 173, 149, 173, 149, 173, 149, 173, 149, 173, 149, 173, 149, 173, 149, 173, 149, 173, 149, 173, 149, 173, 149, 173, 149, 173, 149, 173, 149, 173, 149, 173, 149, 173, 149, 173, 149, 173, 149, 173, 149, 173, 149, 173, 117, 156, 210, 132, 48, 107, 109, 90, 202, 90, 202, 90, 202, 90, 202, 90, 202, 90, 202, 64, 1, 90, 202, 32, 1, 82, 170, 0, 180, 32, 1, 82, 170, 64, 1, 90, 203, 128, 58, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 107, 109, 140, 80, 157, 19, 181, 214, 189, 246, 189, 246, 189, 246, 189, 246, 189, 246, 189, 246, 189, 246, 189, 246, 189, 247, 189, 247, 189, 247, 189, 247, 189, 247, 189, 247, 189, 247, 189, 247, 189, 247, 189, 247, 189, 247, 189, 247, 189, 247, 189, 247, 189, 247, 189, 247, 189, 247, 189, 247, 189, 247, 189, 247, 189, 247, 189, 247, 189, 247, 189, 247, 189, 247, 189, 247, 189, 247, 189, 247, 189, 247, 189, 247, 189, 214, 165, 52, 140, 113, 115, 174, 90, 235, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 96, 1, 90, 203, 32, 1, 82, 202, 0, 55, 0, 1, 0, 13, 0, 58, 32, 1, 90, 202, 96, 1, 90, 203, 128, 52, 90, 202, 90, 202, 90, 202, 90, 202, 90, 202, 90, 202, 90, 235, 107, 109, 132, 16, 148, 145, 165, 19, 173, 117, 173, 117, 173, 117, 173, 117, 173, 117, 173, 117, 173, 117, 173, 117, 173, 117, 173, 117, 173, 117, 173, 117, 173, 117, 173, 117, 173, 117, 173, 117, 173, 117, 173, 117, 173, 117, 173, 117, 173, 117, 173, 117, 173, 117, 173, 117, 173, 117, 173, 117, 173, 117, 173, 117, 173, 117, 173, 117, 165, 52, 148, 177, 124, 15, 107, 109, 90, 203, 90, 202, 90, 202, 90, 202, 90, 202, 90, 202, 90, 202, 64, 1, 90, 202, 32, 1, 90, 202, 0, 186, 32, 1, 90, 203, 64, 1, 90, 203, 128, 52, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 107, 109, 132, 48, 156, 243, 173, 117, 181, 214, 181, 214, 181, 214, 181, 214, 181, 214, 181, 214, 181, 214, 181, 214, 181, 214, 181, 214, 189, 214, 189, 214, 189, 214, 189, 214, 189, 214, 189, 214, 189, 214, 189, 214, 189, 214, 189, 214, 189, 214, 189, 214, 189, 214, 189, 214, 189, 214, 189, 214, 189, 246, 189, 246, 189, 246, 189, 246, 173, 117, 156, 243, 140, 80, 107, 141, 90, 235, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 96, 1, 90, 203, 32, 1, 90, 203, 0, 58, 0, 1, 0, 17, 0, 61, 32, 1, 90, 203, 64, 1, 90, 203, 96, 1, 90, 202, 128, 44, 90, 202, 90, 202, 90, 202, 90, 202, 90, 202, 90, 202, 90, 202, 90, 235, 107, 77, 123, 206, 132, 48, 140, 145, 148, 210, 157, 19, 165, 84, 173, 117, 173, 117, 173, 117, 173, 117, 173, 117, 173, 117, 173, 117, 173, 117, 173, 117, 173, 117, 173, 117, 173, 117, 173, 117, 173, 117, 173, 84, 165, 19, 148, 210, 140, 145, 132, 48, 115, 174, 107, 77, 90, 235, 90, 202, 90, 202, 90, 202, 90, 202, 90, 202, 90, 202, 90, 202, 96, 1, 90, 202, 64, 1, 90, 203, 32, 1, 82, 202, 0, 192, 32, 1, 82, 202, 64, 1, 90, 203, 96, 1, 90, 203, 128, 44, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 235, 107, 109, 123, 207, 140, 113, 148, 210, 165, 19, 173, 85, 181, 182, 181, 214, 181, 214, 181, 214, 181, 214, 181, 214, 181, 214, 181, 214, 181, 214, 181, 214, 181, 214, 181, 214, 181, 214, 181, 214, 181, 214, 181, 182, 173, 117, 165, 19, 148, 210, 140, 113, 123, 239, 107, 109, 90, 235, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 96, 1, 90, 203, 64, 1, 90, 203, 32, 1, 90, 203, 0, 61, 0, 1, 0, 17, 0, 65, 32, 1, 90, 202, 64, 1, 82, 202, 96, 1, 90, 202, 128, 36, 90, 202, 90, 202, 90, 202, 90, 202, 90, 202, 90, 202, 90, 202, 90, 202, 90, 202, 90, 202, 90, 202, 99, 11, 99, 44, 107, 76, 107, 109, 107, 109, 115, 141, 115, 174, 115, 174, 107, 141, 107, 109, 107, 109, 107, 77, 99, 44, 90, 235, 90, 202, 90, 202, 90, 202, 90, 202, 90, 202, 90, 202, 90, 202, 90, 202, 90, 202, 90, 202, 90, 202, 96, 1, 90, 202, 64, 1, 90, 202, 32, 1, 82, 170, 0, 200, 32, 1, 90, 203, 64, 1, 90, 203, 96, 1, 90, 203, 128, 36, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 235, 99, 76, 107, 109, 107, 109, 115, 142, 115, 174, 115, 206, 115, 206, 115, 174, 115, 142, 107, 109, 107, 109, 99, 44, 99, 12, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 90, 203, 96, 1, 90, 203, 64, 1, 90, 203, 32, 1, 90, 203, 0, 65, 0, 1, 0, 17, 0, 69, 32, 1, 82, 202, 64, 2, 90, 203, 90, 203, 96, 1, 90, 202, 128, 26, 90, 202, 90, 202, 90, 202, 90, 202, 90, 202, 90, 202, 90, 202, 90, 202, 90, 202, 90, 202, 90, 202, 90, 202, 90, 202, 90, 202, 90, 202, 90, 202, 90, 202, 90, 202, 90, 202, 90, 202, 90, 202, 90, 202, 90, 202, 90, 202, 90, 202, 90, 202, 96, 1, 90, 202, 64, 2, 90, 202, 90, 202, 32, 1, 82, 170, 0, 208, 32, 1, 90, 202, 64, 2, 90, 203, 90, 202, 96, 1, 90, 202, 128, 26, 90, 202, 90, 202, 90, 202, 90, 202, 90, 202, 90, 202, 90, 202, 90, 202, 90, 202, 90, 202, 90, 202, 90, 202, 90, 202, 90, 202, 90, 202, 90, 202, 90, 202, 90, 202, 90, 202, 90, 202, 90, 202, 90, 202, 90, 202, 90, 202, 90, 202, 90, 202, 96, 1, 90, 203, 64, 2, 90, 203, 90, 203, 32, 1, 82, 202, 0, 69, 0, 1, 0, 13, 0, 75, 32, 2, 82, 170, 82, 202, 64, 3, 90, 202, 90, 202, 90, 202, 96, 12, 90, 202, 82, 202, 90, 202, 90, 202, 90, 202, 90, 202, 90, 202, 90, 202, 90, 202, 90, 202, 90, 202, 90, 202, 64, 2, 90, 202, 90, 203, 32, 3, 90, 203, 82, 202, 90, 203, 0, 220, 32, 3, 90, 203, 82, 202, 90, 203, 64, 2, 90, 203, 90, 202, 96, 12, 90, 202, 90, 202, 90, 202, 90, 202, 90, 202, 90, 202, 90, 202, 90, 202, 90, 202, 90, 202, 82, 202, 90, 202, 64, 3, 90, 202, 90, 202, 90, 202, 32, 2, 82, 202, 82, 170, 0, 75, 40, 42, 110, 111, 32, 110, 97, 109, 101, 41, 0, 99, 111, 110, 116, 114, 111, 108, 32, 115, 116, 114, 117, 99, 116, 117, 114, 101, 32, 116, 111, 111, 32, 108, 111, 110, 103, 0, 102, 117, 110, 99, 116, 105, 111, 110, 32, 111, 114, 32, 101, 120, 112, 114, 101, 115, 115, 105, 111, 110, 32, 116, 111, 111, 32, 99, 111, 109, 112, 108, 101, 120, 0, 99, 111, 110, 115, 116, 114, 117, 99, 116, 111, 114, 32, 116, 111, 111, 32, 108, 111, 110, 103, 0, 40, 42, 116, 101, 109, 112, 111, 114, 97, 114, 121, 41, 0, 40, 42, 118, 97, 114, 97, 114, 103, 41, 0, 61, 91, 67, 93, 0, 61, 63, 0, 109, 97, 105, 110, 0, 76, 117, 97, 0, 67, 0, 102, 111, 114, 32, 105, 116, 101, 114, 97, 116, 111, 114, 0, 109, 101, 116, 97, 109, 101, 116, 104, 111, 100, 0, 104, 111, 111, 107, 0, 97, 116, 116, 101, 109, 112, 116, 32, 116, 111, 32, 37, 115, 32, 97, 32, 37, 115, 32, 118, 97, 108, 117, 101, 37, 115, 0, 99, 111, 110, 99, 97, 116, 101, 110, 97, 116, 101, 0, 110, 117, 109, 98, 101, 114, 37, 115, 32, 104, 97, 115, 32, 110, 111, 32, 105, 110, 116, 101, 103, 101, 114, 32, 114, 101, 112, 114, 101, 115, 101, 110, 116, 97, 116, 105, 111, 110, 0, 97, 116, 116, 101, 109, 112, 116, 32, 116, 111, 32, 99, 111, 109, 112, 97, 114, 101, 32, 116, 119, 111, 32, 37, 115, 32, 118, 97, 108, 117, 101, 115, 0, 97, 116, 116, 101, 109, 112, 116, 32, 116, 111, 32, 99, 111, 109, 112, 97, 114, 101, 32, 37, 115, 32, 119, 105, 116, 104, 32, 37, 115, 0, 101, 114, 114, 111, 114, 32, 105, 110, 32, 101, 114, 114, 111, 114, 32, 104, 97, 110, 100, 108, 105, 110, 103, 0, 67, 32, 115, 116, 97, 99, 107, 32, 111, 118, 101, 114, 102, 108, 111, 119, 0, 97, 116, 116, 101, 109, 112, 116, 32, 116, 111, 32, 121, 105, 101, 108, 100, 32, 97, 99, 114, 111, 115, 115, 32, 97, 32, 67, 45, 99, 97, 108, 108, 32, 98, 111, 117, 110, 100, 97, 114, 121, 0, 97, 116, 116, 101, 109, 112, 116, 32, 116, 111, 32, 121, 105, 101, 108, 100, 32, 102, 114, 111, 109, 32, 111, 117, 116, 115, 105, 100, 101, 32, 97, 32, 99, 111, 114, 111, 117, 116, 105, 110, 101, 0, 39, 37, 99, 39, 0, 39, 37, 115, 39, 0, 116, 111, 111, 32, 109, 97, 110, 121, 32, 37, 115, 32, 40, 108, 105, 109, 105, 116, 32, 105, 115, 32, 37, 100, 41, 0, 109, 101, 109, 111, 114, 121, 32, 97, 108, 108, 111, 99, 97, 116, 105, 111, 110, 32, 101, 114, 114, 111, 114, 58, 32, 98, 108, 111, 99, 107, 32, 116, 111, 111, 32, 98, 105, 103, 0, 0, 1, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 110, 78, 0, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 0, 60, 92, 37, 100, 62, 0, 37, 112, 0, 105, 110, 118, 97, 108, 105, 100, 32, 111, 112, 116, 105, 111, 110, 32, 39, 37, 37, 37, 99, 39, 32, 116, 111, 32, 39, 108, 117, 97, 95, 112, 117, 115, 104, 102, 115, 116, 114, 105, 110, 103, 39, 0, 91, 115, 116, 114, 105, 110, 103, 32, 34, 0, 34, 93, 0, 105, 110, 118, 97, 108, 105, 100, 32, 107, 101, 121, 32, 116, 111, 32, 39, 110, 101, 120, 116, 39, 0, 116, 97, 98, 108, 101, 32, 111, 118, 101, 114, 102, 108, 111, 119, 0, 116, 97, 98, 108, 101, 32, 105, 110, 100, 101, 120, 32, 105, 115, 32, 110, 105, 108, 0, 116, 97, 98, 108, 101, 32, 105, 110, 100, 101, 120, 32, 105, 115, 32, 78, 97, 78, 0, 112, 101, 114, 102, 111, 114, 109, 32, 98, 105, 116, 119, 105, 115, 101, 32, 111, 112, 101, 114, 97, 116, 105, 111, 110, 32, 111, 110, 0, 112, 101, 114, 102, 111, 114, 109, 32, 97, 114, 105, 116, 104, 109, 101, 116, 105, 99, 32, 111, 110, 0, 98, 105, 110, 97, 114, 121, 32, 115, 116, 114, 105, 110, 103, 0, 116, 114, 117, 110, 99, 97, 116, 101, 100, 0, 27, 76, 117, 97, 0, 110, 111, 116, 32, 97, 0, 118, 101, 114, 115, 105, 111, 110, 32, 109, 105, 115, 109, 97, 116, 99, 104, 32, 105, 110, 0, 102, 111, 114, 109, 97, 116, 32, 109, 105, 115, 109, 97, 116, 99, 104, 32, 105, 110, 0, 25, 147, 13, 10, 26, 10, 0, 99, 111, 114, 114, 117, 112, 116, 101, 100, 0, 37, 115, 32, 115, 105, 122, 101, 32, 109, 105, 115, 109, 97, 116, 99, 104, 32, 105, 110, 0, 115, 105, 122, 101, 95, 116, 0, 73, 110, 115, 116, 114, 117, 99, 116, 105, 111, 110, 0, 108, 117, 97, 95, 73, 110, 116, 101, 103, 101, 114, 0, 108, 117, 97, 95, 78, 117, 109, 98, 101, 114, 0, 101, 110, 100, 105, 97, 110, 110, 101, 115, 115, 32, 109, 105, 115, 109, 97, 116, 99, 104, 32, 105, 110, 0, 102, 108, 111, 97, 116, 32, 102, 111, 114, 109, 97, 116, 32, 109, 105, 115, 109, 97, 116, 99, 104, 32, 105, 110, 0, 105, 110, 100, 101, 120, 0, 103, 101, 116, 116, 97, 98, 108, 101, 32, 99, 104, 97, 105, 110, 32, 116, 111, 111, 32, 108, 111, 110, 103, 59, 32, 112, 111, 115, 115, 105, 98, 108, 101, 32, 108, 111, 111, 112, 0, 115, 101, 116, 116, 97, 98, 108, 101, 32, 99, 104, 97, 105, 110, 32, 116, 111, 111, 32, 108, 111, 110, 103, 59, 32, 112, 111, 115, 115, 105, 98, 108, 101, 32, 108, 111, 111, 112, 0, 115, 116, 114, 105, 110, 103, 32, 108, 101, 110, 103, 116, 104, 32, 111, 118, 101, 114, 102, 108, 111, 119, 0, 103, 101, 116, 32, 108, 101, 110, 103, 116, 104, 32, 111, 102, 0, 97, 116, 116, 101, 109, 112, 116, 32, 116, 111, 32, 100, 105, 118, 105, 100, 101, 32, 98, 121, 32, 122, 101, 114, 111, 0, 97, 116, 116, 101, 109, 112, 116, 32, 116, 111, 32, 112, 101, 114, 102, 111, 114, 109, 32, 39, 110, 37, 37, 48, 39, 0, 39, 102, 111, 114, 39, 32, 108, 105, 109, 105, 116, 32, 109, 117, 115, 116, 32, 98, 101, 32, 97, 32, 110, 117, 109, 98, 101, 114, 0, 39, 102, 111, 114, 39, 32, 115, 116, 101, 112, 32, 109, 117, 115, 116, 32, 98, 101, 32, 97, 32, 110, 117, 109, 98, 101, 114, 0, 39, 102, 111, 114, 39, 32, 105, 110, 105, 116, 105, 97, 108, 32, 118, 97, 108, 117, 101, 32, 109, 117, 115, 116, 32, 98, 101, 32, 97, 32, 110, 117, 109, 98, 101, 114, 0, 115, 116, 97, 99, 107, 32, 116, 114, 97, 99, 101, 98, 97, 99, 107, 58, 0, 10, 9, 46, 46, 46, 0, 83, 108, 110, 116, 0, 10, 9, 37, 115, 58, 0, 37, 100, 58, 0, 32, 105, 110, 32, 0, 102, 117, 110, 99, 116, 105, 111, 110, 32, 39, 37, 115, 39, 0, 37, 115, 32, 39, 37, 115, 39, 0, 109, 97, 105, 110, 32, 99, 104, 117, 110, 107, 0, 102, 117, 110, 99, 116, 105, 111, 110, 32, 60, 37, 115, 58, 37, 100, 62, 0, 10, 9, 40, 46, 46, 46, 116, 97, 105, 108, 32, 99, 97, 108, 108, 115, 46, 46, 46, 41, 0, 98, 97, 100, 32, 97, 114, 103, 117, 109, 101, 110, 116, 32, 35, 37, 100, 32, 40, 37, 115, 41, 0, 99, 97, 108, 108, 105, 110, 103, 32, 39, 37, 115, 39, 32, 111, 110, 32, 98, 97, 100, 32, 115, 101, 108, 102, 32, 40, 37, 115, 41, 0, 98, 97, 100, 32, 97, 114, 103, 117, 109, 101, 110, 116, 32, 35, 37, 100, 32, 116, 111, 32, 39, 37, 115, 39, 32, 40, 37, 115, 41, 0, 83, 108, 0, 37, 115, 58, 37, 100, 58, 32, 0, 37, 115, 58, 32, 37, 115, 0, 95, 95, 110, 97, 109, 101, 0, 105, 110, 118, 97, 108, 105, 100, 32, 111, 112, 116, 105, 111, 110, 32, 39, 37, 115, 39, 0, 115, 116, 97, 99, 107, 32, 111, 118, 101, 114, 102, 108, 111, 119, 32, 40, 37, 115, 41, 0, 115, 116, 97, 99, 107, 32, 111, 118, 101, 114, 102, 108, 111, 119, 0, 110, 117, 109, 98, 101, 114, 32, 104, 97, 115, 32, 110, 111, 32, 105, 110, 116, 101, 103, 101, 114, 32, 114, 101, 112, 114, 101, 115, 101, 110, 116, 97, 116, 105, 111, 110, 0, 98, 117, 102, 102, 101, 114, 32, 116, 111, 111, 32, 108, 97, 114, 103, 101, 0, 61, 115, 116, 100, 105, 110, 0, 64, 37, 115, 0, 99, 97, 110, 110, 111, 116, 32, 37, 115, 32, 37, 115, 58, 32, 37, 115, 0, 114, 98, 0, 114, 101, 111, 112, 101, 110, 0, 111, 98, 106, 101, 99, 116, 32, 108, 101, 110, 103, 116, 104, 32, 105, 115, 32, 110, 111, 116, 32, 97, 110, 32, 105, 110, 116, 101, 103, 101, 114, 0, 37, 73, 0, 37, 102, 0, 37, 115, 58, 32, 37, 112, 0, 116, 111, 111, 32, 109, 97, 110, 121, 32, 117, 112, 118, 97, 108, 117, 101, 115, 0, 99, 111, 114, 101, 32, 97, 110, 100, 32, 108, 105, 98, 114, 97, 114, 121, 32, 104, 97, 118, 101, 32, 105, 110, 99, 111, 109, 112, 97, 116, 105, 98, 108, 101, 32, 110, 117, 109, 101, 114, 105, 99, 32, 116, 121, 112, 101, 115, 0, 109, 117, 108, 116, 105, 112, 108, 101, 32, 76, 117, 97, 32, 86, 77, 115, 32, 100, 101, 116, 101, 99, 116, 101, 100, 0, 118, 101, 114, 115, 105, 111, 110, 32, 109, 105, 115, 109, 97, 116, 99, 104, 58, 32, 97, 112, 112, 46, 32, 110, 101, 101, 100, 115, 32, 37, 102, 44, 32, 76, 117, 97, 32, 99, 111, 114, 101, 32, 112, 114, 111, 118, 105, 100, 101, 115, 32, 37, 102, 0, 76, 117, 97, 32, 53, 46, 51, 0, 95, 86, 69, 82, 83, 73, 79, 78, 0, 70, 73, 76, 69, 42, 0, 95, 73, 79, 95, 105, 110, 112, 117, 116, 0, 115, 116, 100, 105, 110, 0, 95, 73, 79, 95, 111, 117, 116, 112, 117, 116, 0, 115, 116, 100, 111, 117, 116, 0, 115, 116, 100, 101, 114, 114, 0, 112, 105, 0, 104, 117, 103, 101, 0, 109, 97, 120, 105, 110, 116, 101, 103, 101, 114, 0, 109, 105, 110, 105, 110, 116, 101, 103, 101, 114, 0, 91, 0, 45, 127, 194, 45, 244, 93, 91, 128, 45, 191, 93, 42, 0, 99, 104, 97, 114, 112, 97, 116, 116, 101, 114, 110, 0, 115, 101, 97, 114, 99, 104, 101, 114, 115, 0, 112, 97, 116, 104, 0, 76, 85, 65, 95, 80, 65, 84, 72, 95, 53, 95, 51, 0, 76, 85, 65, 95, 80, 65, 84, 72, 0, 47, 117, 115, 114, 47, 108, 111, 99, 97, 108, 47, 115, 104, 97, 114, 101, 47, 108, 117, 97, 47, 53, 46, 51, 47, 63, 46, 108, 117, 97, 59, 47, 117, 115, 114, 47, 108, 111, 99, 97, 108, 47, 115, 104, 97, 114, 101, 47, 108, 117, 97, 47, 53, 46, 51, 47, 63, 47, 105, 110, 105, 116, 46, 108, 117, 97, 59, 47, 117, 115, 114, 47, 108, 111, 99, 97, 108, 47, 108, 105, 98, 47, 108, 117, 97, 47, 53, 46, 51, 47, 63, 46, 108, 117, 97, 59, 47, 117, 115, 114, 47, 108, 111, 99, 97, 108, 47, 108, 105, 98, 47, 108, 117, 97, 47, 53, 46, 51, 47, 63, 47, 105, 110, 105, 116, 46, 108, 117, 97, 59, 46, 47, 63, 46, 108, 117, 97, 59, 46, 47, 63, 47, 105, 110, 105, 116, 46, 108, 117, 97, 0, 99, 112, 97, 116, 104, 0, 76, 85, 65, 95, 67, 80, 65, 84, 72, 95, 53, 95, 51, 0, 76, 85, 65, 95, 67, 80, 65, 84, 72, 0, 47, 117, 115, 114, 47, 108, 111, 99, 97, 108, 47, 108, 105, 98, 47, 108, 117, 97, 47, 53, 46, 51, 47, 63, 46, 115, 111, 59, 47, 117, 115, 114, 47, 108, 111, 99, 97, 108, 47, 108, 105, 98, 47, 108, 117, 97, 47, 53, 46, 51, 47, 108, 111, 97, 100, 97, 108, 108, 46, 115, 111, 59, 46, 47, 63, 46, 115, 111, 0, 47, 10, 59, 10, 63, 10, 33, 10, 45, 10, 0, 99, 111, 110, 102, 105, 103, 0, 95, 76, 79, 65, 68, 69, 68, 0, 108, 111, 97, 100, 101, 100, 0, 95, 80, 82, 69, 76, 79, 65, 68, 0, 112, 114, 101, 108, 111, 97, 100, 0, 95, 71, 0, 112, 97, 99, 107, 97, 103, 101, 0, 99, 111, 114, 111, 117, 116, 105, 110, 101, 0, 105, 111, 0, 111, 115, 0, 109, 97, 116, 104, 0, 117, 116, 102, 56, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 71, 97, 109, 101, 32, 38, 32, 87, 97, 116, 99, 104, 0, 49, 46, 48, 0, 109, 103, 119, 0, 67, 111, 117, 108, 100, 32, 110, 111, 116, 32, 103, 101, 116, 32, 116, 104, 101, 32, 112, 101, 114, 102, 32, 105, 110, 116, 101, 114, 102, 97, 99, 101, 10, 0, 10, 37, 115, 10, 37, 115, 0, 67, 111, 114, 101, 32, 110, 101, 101, 100, 115, 32, 116, 104, 101, 32, 112, 101, 114, 102, 32, 105, 110, 116, 101, 114, 102, 97, 99, 101, 10, 0, 82, 71, 66, 53, 54, 53, 32, 105, 115, 32, 110, 111, 116, 32, 115, 117, 112, 112, 111, 114, 116, 101, 100, 10, 0, 69, 114, 114, 111, 114, 32, 105, 110, 105, 116, 105, 97, 108, 105, 122, 105, 110, 103, 32, 116, 104, 101, 32, 114, 111, 109, 58, 32, 0, 69, 114, 114, 111, 114, 32, 105, 110, 105, 97, 108, 105, 122, 105, 110, 103, 32, 103, 119, 108, 117, 97, 0, 85, 110, 107, 110, 111, 119, 110, 32, 101, 114, 114, 111, 114, 0, 69, 110, 116, 114, 121, 32, 110, 111, 116, 32, 102, 111, 117, 110, 100, 0, 79, 117, 116, 32, 111, 102, 32, 109, 101, 109, 111, 114, 121, 0, 73, 110, 118, 97, 108, 105, 100, 32, 82, 79, 77, 32, 40, 99, 111, 114, 114, 117, 112, 116, 101, 100, 32, 102, 105, 108, 101, 63, 41, 0, 79, 107, 0, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 5, 119, 119, 119, 3, 2, 1, 0, 8, 4, 65, 61, 57, 53, 49, 45, 41, 37, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 9, 10, 4, 1, 0, 0, 12, 32, 27, 22, 17, 0, 2, 0, 0, 65, 119, 0, 3, 3, 67, 119, 0, 3, 2, 119, 0, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 0, 0, 0, 0, 0, 0, 0, 0, 0, 9, 8, 8, 12, 9, 12, 12, 12, 12, 12, 8, 13, 0, 0, 0, 12, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 11, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 11, 11, 115], "i8", ALLOC_NONE, Runtime.GLOBAL_BASE + 992821);
  allocate([121, 115, 116, 101, 109, 46, 108, 117, 97, 0, 115, 121, 115, 116, 101, 109, 0, 10, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 10, 37, 115, 10, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 10, 0, 10, 32, 32, 32, 32, 91, 37, 100, 58, 32, 104, 117, 102, 102, 43, 109, 116, 102, 32, 0, 114, 116, 43, 114, 108, 100, 0, 10, 10, 98, 122, 105, 112, 50, 47, 108, 105, 98, 98, 122, 105, 112, 50, 58, 32, 105, 110, 116, 101, 114, 110, 97, 108, 32, 101, 114, 114, 111, 114, 32, 110, 117, 109, 98, 101, 114, 32, 37, 100, 46, 10, 84, 104, 105, 115, 32, 105, 115, 32, 97, 32, 98, 117, 103, 32, 105, 110, 32, 98, 122, 105, 112, 50, 47, 108, 105, 98, 98, 122, 105, 112, 50, 44, 32, 37, 115, 46, 10, 80, 108, 101, 97, 115, 101, 32, 114, 101, 112, 111, 114, 116, 32, 105, 116, 32, 116, 111, 32, 109, 101, 32, 97, 116, 58, 32, 106, 115, 101, 119, 97, 114, 100, 64, 98, 122, 105, 112, 46, 111, 114, 103, 46, 32, 32, 73, 102, 32, 116, 104, 105, 115, 32, 104, 97, 112, 112, 101, 110, 101, 100, 10, 119, 104, 101, 110, 32, 121, 111, 117, 32, 119, 101, 114, 101, 32, 117, 115, 105, 110, 103, 32, 115, 111, 109, 101, 32, 112, 114, 111, 103, 114, 97, 109, 32, 119, 104, 105, 99, 104, 32, 117, 115, 101, 115, 32, 108, 105, 98, 98, 122, 105, 112, 50, 32, 97, 115, 32, 97, 10, 99, 111, 109, 112, 111, 110, 101, 110, 116, 44, 32, 121, 111, 117, 32, 115, 104, 111, 117, 108, 100, 32, 97, 108, 115, 111, 32, 114, 101, 112, 111, 114, 116, 32, 116, 104, 105, 115, 32, 98, 117, 103, 32, 116, 111, 32, 116, 104, 101, 32, 97, 117, 116, 104, 111, 114, 40, 115, 41, 10, 111, 102, 32, 116, 104, 97, 116, 32, 112, 114, 111, 103, 114, 97, 109, 46, 32, 32, 80, 108, 101, 97, 115, 101, 32, 109, 97, 107, 101, 32, 97, 110, 32, 101, 102, 102, 111, 114, 116, 32, 116, 111, 32, 114, 101, 112, 111, 114, 116, 32, 116, 104, 105, 115, 32, 98, 117, 103, 59, 10, 116, 105, 109, 101, 108, 121, 32, 97, 110, 100, 32, 97, 99, 99, 117, 114, 97, 116, 101, 32, 98, 117, 103, 32, 114, 101, 112, 111, 114, 116, 115, 32, 101, 118, 101, 110, 116, 117, 97, 108, 108, 121, 32, 108, 101, 97, 100, 32, 116, 111, 32, 104, 105, 103, 104, 101, 114, 10, 113, 117, 97, 108, 105, 116, 121, 32, 115, 111, 102, 116, 119, 97, 114, 101, 46, 32, 32, 84, 104, 97, 110, 107, 115, 46, 32, 32, 74, 117, 108, 105, 97, 110, 32, 83, 101, 119, 97, 114, 100, 44, 32, 49, 48, 32, 68, 101, 99, 101, 109, 98, 101, 114, 32, 50, 48, 48, 55, 46, 10, 10, 0, 49, 46, 48, 46, 54, 44, 32, 54, 45, 83, 101, 112, 116, 45, 50, 48, 49, 48, 0, 10, 42, 42, 42, 32, 65, 32, 115, 112, 101, 99, 105, 97, 108, 32, 110, 111, 116, 101, 32, 97, 98, 111, 117, 116, 32, 105, 110, 116, 101, 114, 110, 97, 108, 32, 101, 114, 114, 111, 114, 32, 110, 117, 109, 98, 101, 114, 32, 49, 48, 48, 55, 32, 42, 42, 42, 10, 10, 69, 120, 112, 101, 114, 105, 101, 110, 99, 101, 32, 115, 117, 103, 103, 101, 115, 116, 115, 32, 116, 104, 97, 116, 32, 97, 32, 99, 111, 109, 109, 111, 110, 32, 99, 97, 117, 115, 101, 32, 111, 102, 32, 105, 46, 101, 46, 32, 49, 48, 48, 55, 10, 105, 115, 32, 117, 110, 114, 101, 108, 105, 97, 98, 108, 101, 32, 109, 101, 109, 111, 114, 121, 32, 111, 114, 32, 111, 116, 104, 101, 114, 32, 104, 97, 114, 100, 119, 97, 114, 101, 46, 32, 32, 84, 104, 101, 32, 49, 48, 48, 55, 32, 97, 115, 115, 101, 114, 116, 105, 111, 110, 10, 106, 117, 115, 116, 32, 104, 97, 112, 112, 101, 110, 115, 32, 116, 111, 32, 99, 114, 111, 115, 115, 45, 99, 104, 101, 99, 107, 32, 116, 104, 101, 32, 114, 101, 115, 117, 108, 116, 115, 32, 111, 102, 32, 104, 117, 103, 101, 32, 110, 117, 109, 98, 101, 114, 115, 32, 111, 102, 10, 109, 101, 109, 111, 114, 121, 32, 114, 101, 97, 100, 115, 47, 119, 114, 105, 116, 101, 115, 44, 32, 97, 110, 100, 32, 115, 111, 32, 97, 99, 116, 115, 32, 40, 117, 110, 105, 110, 116, 101, 110, 100, 101, 100, 108, 121, 41, 32, 97, 115, 32, 97, 32, 115, 116, 114, 101, 115, 115, 10, 116, 101, 115, 116, 32, 111, 102, 32, 121, 111, 117, 114, 32, 109, 101, 109, 111, 114, 121, 32, 115, 121, 115, 116, 101, 109, 46, 10, 10, 73, 32, 115, 117, 103, 103, 101, 115, 116, 32, 116, 104, 101, 32, 102, 111, 108, 108, 111, 119, 105, 110, 103, 58, 32, 116, 114, 121, 32, 99, 111, 109, 112, 114, 101, 115, 115, 105, 110, 103, 32, 116, 104, 101, 32, 102, 105, 108, 101, 32, 97, 103, 97, 105, 110, 44, 10, 112, 111, 115, 115, 105, 98, 108, 121, 32, 109, 111, 110, 105, 116, 111, 114, 105, 110, 103, 32, 112, 114, 111, 103, 114, 101, 115, 115, 32, 105, 110, 32, 100, 101, 116, 97, 105, 108, 32, 119, 105, 116, 104, 32, 116, 104, 101, 32, 45, 118, 118, 32, 102, 108, 97, 103, 46, 10, 10, 42, 32, 73, 102, 32, 116, 104, 101, 32, 101, 114, 114, 111, 114, 32, 99, 97, 110, 110, 111, 116, 32, 98, 101, 32, 114, 101, 112, 114, 111, 100, 117, 99, 101, 100, 44, 32, 97, 110, 100, 47, 111, 114, 32, 104, 97, 112, 112, 101, 110, 115, 32, 97, 116, 32, 100, 105, 102, 102, 101, 114, 101, 110, 116, 10, 32, 32, 112, 111, 105, 110, 116, 115, 32, 105, 110, 32, 99, 111, 109, 112, 114, 101, 115, 115, 105, 111, 110, 44, 32, 121, 111, 117, 32, 109, 97, 121, 32, 104, 97, 118, 101, 32, 97, 32, 102, 108, 97, 107, 121, 32, 109, 101, 109, 111, 114, 121, 32, 115, 121, 115, 116, 101, 109, 46, 10, 32, 32, 84, 114, 121, 32, 97, 32, 109, 101, 109, 111, 114, 121, 45, 116, 101, 115, 116, 32, 112, 114, 111, 103, 114, 97, 109, 46, 32, 32, 73, 32, 104, 97, 118, 101, 32, 117, 115, 101, 100, 32, 77, 101, 109, 116, 101, 115, 116, 56, 54, 10, 32, 32, 40, 119, 119, 119, 46, 109, 101, 109, 116, 101, 115, 116, 56, 54, 46, 99, 111, 109, 41, 46, 32, 32, 65, 116, 32, 116, 104, 101, 32, 116, 105, 109, 101, 32, 111, 102, 32, 119, 114, 105, 116, 105, 110, 103, 32, 105, 116, 32, 105, 115, 32, 102, 114, 101, 101, 32, 40, 71, 80, 76, 100, 41, 46, 10, 32, 32, 77, 101, 109, 116, 101, 115, 116, 56, 54, 32, 116, 101, 115, 116, 115, 32, 109, 101, 109, 111, 114, 121, 32, 109, 117, 99, 104, 32, 109, 111, 114, 101, 32, 116, 104, 111, 114, 111, 117, 103, 108, 121, 32, 116, 104, 97, 110, 32, 121, 111, 117, 114, 32, 66, 73, 79, 83, 115, 10, 32, 32, 112, 111, 119, 101, 114, 45, 111, 110, 32, 116, 101, 115, 116, 44, 32, 97, 110, 100, 32, 109, 97, 121, 32, 102, 105, 110, 100, 32, 102, 97, 105, 108, 117, 114, 101, 115, 32, 116, 104, 97, 116, 32, 116, 104, 101, 32, 66, 73, 79, 83, 32, 100, 111, 101, 115, 110, 39, 116, 46, 10, 10, 42, 32, 73, 102, 32, 116, 104, 101, 32, 101, 114, 114, 111, 114, 32, 99, 97, 110, 32, 98, 101, 32, 114, 101, 112, 101, 97, 116, 97, 98, 108, 121, 32, 114, 101, 112, 114, 111, 100, 117, 99, 101, 100, 44, 32, 116, 104, 105, 115, 32, 105, 115, 32, 97, 32, 98, 117, 103, 32, 105, 110, 10, 32, 32, 98, 122, 105, 112, 50, 44, 32, 97, 110, 100, 32, 73, 32, 119, 111, 117, 108, 100, 32, 118, 101, 114, 121, 32, 109, 117, 99, 104, 32, 108, 105, 107, 101, 32, 116, 111, 32, 104, 101, 97, 114, 32, 97, 98, 111, 117, 116, 32, 105, 116, 46, 32, 32, 80, 108, 101, 97, 115, 101, 10, 32, 32, 108, 101, 116, 32, 109, 101, 32, 107, 110, 111, 119, 44, 32, 97, 110, 100, 44, 32, 105, 100, 101, 97, 108, 108, 121, 44, 32, 115, 97, 118, 101, 32, 97, 32, 99, 111, 112, 121, 32, 111, 102, 32, 116, 104, 101, 32, 102, 105, 108, 101, 32, 99, 97, 117, 115, 105, 110, 103, 32, 116, 104, 101, 10, 32, 32, 112, 114, 111, 98, 108, 101, 109, 32, 45, 45, 32, 119, 105, 116, 104, 111, 117, 116, 32, 119, 104, 105, 99, 104, 32, 73, 32, 119, 105, 108, 108, 32, 98, 101, 32, 117, 110, 97, 98, 108, 101, 32, 116, 111, 32, 105, 110, 118, 101, 115, 116, 105, 103, 97, 116, 101, 32, 105, 116, 46, 10, 10, 0, 32, 123, 48, 120, 37, 48, 56, 120, 44, 32, 48, 120, 37, 48, 56, 120, 125, 0, 10, 32, 32, 32, 32, 99, 111, 109, 98, 105, 110, 101, 100, 32, 67, 82, 67, 115, 58, 32, 115, 116, 111, 114, 101, 100, 32, 61, 32, 48, 120, 37, 48, 56, 120, 44, 32, 99, 111, 109, 112, 117, 116, 101, 100, 32, 61, 32, 48, 120, 37, 48, 56, 120, 0, 98, 111, 111, 108, 101, 97, 110, 0, 117, 115, 101, 114, 100, 97, 116, 97, 0, 110, 117, 109, 98, 101, 114, 0, 116, 97, 98, 108, 101, 0, 116, 104, 114, 101, 97, 100, 0, 112, 114, 111, 116, 111, 0, 43, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 43, 10, 124, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 71, 87, 45, 76, 73, 66, 82, 69, 84, 82, 79, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 124, 10, 124, 32, 32, 32, 32, 95, 95, 95, 95, 32, 32, 32, 32, 95, 32, 32, 32, 95, 32, 32, 32, 95, 95, 95, 32, 32, 32, 95, 32, 32, 32, 32, 32, 32, 95, 95, 95, 95, 32, 32, 32, 32, 32, 124, 10, 124, 32, 32, 32, 124, 32, 95, 95, 32, 41, 32, 32, 124, 32, 124, 32, 124, 32, 124, 32, 124, 95, 32, 95, 124, 32, 124, 32, 124, 32, 32, 32, 32, 124, 32, 32, 95, 32, 92, 32, 32, 32, 32, 124, 10, 124, 32, 32, 32, 124, 32, 32, 95, 32, 92, 32, 32, 124, 32, 124, 32, 124, 32, 124, 32, 32, 124, 32, 124, 32, 32, 124, 32, 124, 32, 32, 32, 32, 124, 32, 124, 32, 124, 32, 124, 32, 32, 32, 124, 10, 124, 32, 32, 32, 124, 32, 124, 95, 41, 32, 124, 32, 124, 32, 124, 95, 124, 32, 124, 32, 32, 124, 32, 124, 32, 32, 124, 32, 124, 95, 95, 32, 32, 124, 32, 124, 95, 124, 32, 124, 32, 32, 32, 124, 10, 124, 32, 32, 32, 124, 95, 95, 95, 95, 47, 32, 32, 32, 92, 95, 95, 95, 47, 32, 32, 124, 95, 95, 95, 124, 32, 124, 95, 95, 95, 95, 124, 32, 124, 95, 95, 95, 95, 47, 32, 32, 32, 32, 124, 10, 124, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 124, 10, 124, 32, 54, 56, 55, 99, 55, 54, 48, 49, 55, 52, 100, 50, 51, 102, 100, 48, 50, 54, 99, 100, 49, 102, 101, 57, 53, 54, 57, 51, 51, 51, 97, 54, 53, 56, 50, 97, 54, 50, 56, 97, 32, 124, 10, 43, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 43, 10, 0, 43, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 43, 10, 124, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 82, 69, 84, 82, 79, 76, 85, 88, 85, 82, 89, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 124, 10, 124, 32, 32, 32, 32, 95, 95, 95, 95, 32, 32, 32, 32, 95, 32, 32, 32, 95, 32, 32, 32, 95, 95, 95, 32, 32, 32, 95, 32, 32, 32, 32, 32, 32, 95, 95, 95, 95, 32, 32, 32, 32, 32, 124, 10, 124, 32, 32, 32, 124, 32, 95, 95, 32, 41, 32, 32, 124, 32, 124, 32, 124, 32, 124, 32, 124, 95, 32, 95, 124, 32, 124, 32, 124, 32, 32, 32, 32, 124, 32, 32, 95, 32, 92, 32, 32, 32, 32, 124, 10, 124, 32, 32, 32, 124, 32, 32, 95, 32, 92, 32, 32, 124, 32, 124, 32, 124, 32, 124, 32, 32, 124, 32, 124, 32, 32, 124, 32, 124, 32, 32, 32, 32, 124, 32, 124, 32, 124, 32, 124, 32, 32, 32, 124, 10, 124, 32, 32, 32, 124, 32, 124, 95, 41, 32, 124, 32, 124, 32, 124, 95, 124, 32, 124, 32, 32, 124, 32, 124, 32, 32, 124, 32, 124, 95, 95, 32, 32, 124, 32, 124, 95, 124, 32, 124, 32, 32, 32, 124, 10, 124, 32, 32, 32, 124, 95, 95, 95, 95, 47, 32, 32, 32, 92, 95, 95, 95, 47, 32, 32, 124, 95, 95, 95, 124, 32, 124, 95, 95, 95, 95, 124, 32, 124, 95, 95, 95, 95, 47, 32, 32, 32, 32, 124, 10, 124, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 124, 10, 124, 32, 98, 50, 100, 52, 49, 97, 99, 55, 102, 48, 53, 56, 97, 102, 57, 55, 53, 56, 100, 56, 53, 54, 100, 98, 51, 56, 98, 98, 51, 51, 57, 48, 56, 54, 49, 102, 48, 52, 53, 50, 32, 124, 10, 43, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 43, 10, 0, 110, 101, 119, 116, 105, 109, 101, 114, 0, 116, 105, 109, 101, 114, 0, 116, 105, 109, 101, 114, 64, 37, 112, 0, 37, 115, 32, 110, 111, 116, 32, 102, 111, 117, 110, 100, 32, 105, 110, 32, 116, 105, 109, 101, 114, 0, 110, 101, 119, 115, 111, 117, 110, 100, 0, 115, 111, 117, 110, 100, 64, 37, 112, 0, 37, 115, 32, 110, 111, 116, 32, 102, 111, 117, 110, 100, 32, 105, 110, 32, 115, 111, 117, 110, 100, 0, 110, 101, 119, 105, 109, 97, 103, 101, 0, 115, 112, 114, 105, 116, 101, 32, 108, 105, 109, 105, 116, 32, 114, 101, 97, 99, 104, 101, 100, 0, 105, 109, 97, 103, 101, 0, 105, 109, 97, 103, 101, 64, 37, 112, 0, 37, 115, 32, 110, 111, 116, 32, 102, 111, 117, 110, 100, 32, 105, 110, 32, 105, 109, 97, 103, 101, 0, 112, 105, 99, 116, 117, 114, 101, 64, 37, 112, 0, 37, 115, 32, 110, 111, 116, 32, 102, 111, 117, 110, 100, 32, 105, 110, 32, 112, 105, 99, 116, 117, 114, 101, 0, 109, 97, 105, 110, 46, 98, 115, 0, 109, 97, 105, 110, 46, 108, 117, 97, 0, 116, 0, 112, 108, 97, 121, 115, 111, 117, 110, 100, 0, 115, 116, 111, 112, 115, 111, 117, 110, 100, 115, 0, 114, 97, 110, 100, 111, 109, 105, 122, 101, 0, 114, 111, 117, 110, 100, 0, 110, 111, 119, 0, 115, 112, 108, 105, 116, 116, 105, 109, 101, 0, 105, 110, 116, 116, 111, 115, 116, 114, 0, 108, 111, 97, 100, 118, 97, 108, 117, 101, 0, 115, 97, 118, 101, 118, 97, 108, 117, 101, 0, 115, 101, 116, 98, 97, 99, 107, 103, 114, 111, 117, 110, 100, 0, 115, 101, 116, 122, 111, 111, 109, 0, 105, 110, 112, 117, 116, 115, 116, 97, 116, 101, 0, 108, 111, 97, 100, 98, 105, 110, 0, 108, 111, 97, 100, 98, 115, 0, 115, 116, 97, 114, 116, 0, 117, 112, 0, 100, 111, 119, 110, 0, 108, 101, 102, 116, 0, 114, 105, 103, 104, 116, 0, 97, 0, 98, 0, 120, 0, 121, 0, 108, 49, 0, 114, 49, 0, 108, 50, 0, 114, 50, 0, 108, 51, 0, 114, 51, 0, 112, 105, 99, 116, 117, 114, 101, 0, 111, 117, 116, 32, 111, 102, 32, 109, 101, 109, 111, 114, 121, 0, 115, 111, 117, 110, 100, 0, 102, 111, 114, 109, 115, 46, 108, 117, 97, 0, 102, 109, 111, 100, 46, 108, 117, 97, 0, 115, 110, 101, 115, 46, 114, 108, 101, 0, 114, 101, 103, 105, 115, 116, 114, 121, 46, 108, 117, 97, 0, 99, 108, 97, 115, 115, 46, 108, 117, 97, 0, 109, 101, 115, 115, 97, 103, 101, 115, 46, 108, 117, 97, 0, 101, 120, 116, 99, 116, 114, 108, 115, 46, 108, 117, 97, 0, 99, 111, 110, 116, 114, 111, 108, 115, 46, 108, 117, 97, 0, 115, 121, 115, 117, 116, 105, 108, 115, 46, 108, 117, 97, 0, 115, 116, 100, 99, 116, 114, 108, 115, 46, 108, 117, 97, 0, 109, 97, 116, 104, 46, 108, 117, 97, 0, 102, 109, 111, 100, 116, 121, 112, 101, 115, 46, 108, 117, 97, 0, 103, 114, 97, 112, 104, 105, 99, 115, 46, 108, 117, 97, 0, 98, 111, 120, 121, 98, 111, 108, 100, 95, 53, 102, 46, 114, 108, 101, 0, 98, 111, 120, 121, 98, 111, 108, 100, 95, 52, 102, 46, 114, 108, 101, 0, 98, 111, 120, 121, 98, 111, 108, 100, 95, 51, 102, 46, 114, 108, 101, 0, 98, 111, 120, 121, 98, 111, 108, 100, 95, 50, 102, 46, 114, 108, 101, 0, 98, 111, 120, 121, 98, 111, 108, 100, 95, 53, 49, 46, 114, 108, 101, 0, 98, 111, 120, 121, 98, 111, 108, 100, 95, 52, 49, 46, 114, 108, 101, 0, 98, 111, 120, 121, 98, 111, 108, 100, 95, 51, 49, 46, 114, 108, 101, 0, 98, 111, 120, 121, 98, 111, 108, 100, 95, 50, 49, 46, 114, 108, 101, 0, 98, 111, 120, 121, 98, 111, 108, 100, 95, 53, 48, 46, 114, 108, 101, 0, 98, 111, 120, 121, 98, 111, 108, 100, 95, 52, 48, 46, 114, 108, 101, 0, 98, 111, 120, 121, 98, 111, 108, 100, 95, 51, 48, 46, 114, 108, 101, 0, 98, 111, 120, 121, 98, 111, 108, 100, 95, 50, 48, 46, 114, 108, 101, 0, 98, 111, 120, 121, 98, 111, 108, 100, 95, 53, 97, 46, 114, 108, 101, 0, 98, 111, 120, 121, 98, 111, 108, 100, 95, 52, 97, 46, 114, 108, 101, 0, 98, 111, 120, 121, 98, 111, 108, 100, 95, 51, 97, 46, 114, 108, 101, 0, 98, 111, 120, 121, 98, 111, 108, 100, 95, 50, 97, 46, 114, 108, 101, 0, 98, 111, 120, 121, 98, 111, 108, 100, 95, 54, 48, 46, 114, 108, 101, 0, 98, 111, 120, 121, 98, 111, 108, 100, 95, 53, 101, 46, 114, 108, 101, 0, 98, 111, 120, 121, 98, 111, 108, 100, 95, 52, 101, 46, 114, 108, 101, 0, 98, 111, 120, 121, 98, 111, 108, 100, 95, 51, 101, 46, 114, 108, 101, 0, 98, 111, 120, 121, 98, 111, 108, 100, 95, 50, 101, 46, 114, 108, 101, 0, 98, 111, 120, 121, 98, 111, 108, 100, 95, 55, 101, 46, 114, 108, 101, 0, 98, 111, 120, 121, 98, 111, 108, 100, 95, 53, 100, 46, 114, 108, 101, 0, 98, 111, 120, 121, 98, 111, 108, 100, 95, 52, 100, 46, 114, 108, 101, 0, 98, 111, 120, 121, 98, 111, 108, 100, 95, 51, 100, 46, 114, 108, 101, 0, 98, 111, 120, 121, 98, 111, 108, 100, 95, 50, 100, 46, 114, 108, 101, 0, 98, 111, 120, 121, 98, 111, 108, 100, 95, 55, 100, 46, 114, 108, 101, 0, 98, 111, 120, 121, 98, 111, 108, 100, 95, 53, 99, 46, 114, 108, 101, 0, 98, 111, 120, 121, 98, 111, 108, 100, 95, 52, 99, 46, 114, 108, 101, 0, 98, 111, 120, 121, 98, 111, 108, 100, 95, 51, 99, 46, 114, 108, 101, 0, 98, 111, 120, 121, 98, 111, 108, 100, 95, 50, 99, 46, 114, 108, 101, 0, 98, 111, 120, 121, 98, 111, 108, 100, 95, 55, 99, 46, 114, 108, 101, 0, 98, 111, 120, 121, 98, 111, 108, 100, 95, 53, 98, 46, 114, 108, 101, 0, 98, 111, 120, 121, 98, 111, 108, 100, 95, 52, 98, 46, 114, 108, 101, 0, 98, 111, 120, 121, 98, 111, 108, 100, 95, 51, 98, 46, 114, 108, 101, 0, 98, 111, 120, 121, 98, 111, 108, 100, 95, 50, 98, 46, 114, 108, 101, 0, 98, 111, 120, 121, 98, 111, 108, 100, 95, 55, 98, 46, 114, 108, 101, 0, 98, 111, 120, 121, 98, 111, 108, 100, 95, 53, 57, 46, 114, 108, 101, 0, 98, 111, 120, 121, 98, 111, 108, 100, 95, 52, 57, 46, 114, 108, 101, 0, 98, 111, 120, 121, 98, 111, 108, 100, 95, 51, 57, 46, 114, 108, 101, 0, 98, 111, 120, 121, 98, 111, 108, 100, 95, 50, 57, 46, 114, 108, 101, 0, 98, 111, 120, 121, 98, 111, 108, 100, 95, 53, 56, 46, 114, 108, 101, 0, 98, 111, 120, 121, 98, 111, 108, 100, 95, 52, 56, 46, 114, 108, 101, 0, 98, 111, 120, 121, 98, 111, 108, 100, 95, 51, 56, 46, 114, 108, 101, 0, 98, 111, 120, 121, 98, 111, 108, 100, 95, 50, 56, 46, 114, 108, 101, 0, 98, 111, 120, 121, 98, 111, 108, 100, 95, 53, 55, 46, 114, 108, 101, 0, 98, 111, 120, 121, 98, 111, 108, 100, 95, 52, 55, 46, 114, 108, 101, 0, 98, 111, 120, 121, 98, 111, 108, 100, 95, 51, 55, 46, 114, 108, 101, 0, 98, 111, 120, 121, 98, 111, 108, 100, 95, 50, 55, 46, 114, 108, 101, 0, 98, 111, 120, 121, 98, 111, 108, 100, 95, 53, 54, 46, 114, 108, 101, 0, 98, 111, 120, 121, 98, 111, 108, 100, 95, 52, 54, 46, 114, 108, 101, 0, 98, 111, 120, 121, 98, 111, 108, 100, 95, 51, 54, 46, 114, 108, 101, 0, 98, 111, 120, 121, 98, 111, 108, 100, 95, 50, 54, 46, 114, 108, 101, 0, 98, 111, 120, 121, 98, 111, 108, 100, 95, 53, 53, 46, 114, 108, 101, 0, 98, 111, 120, 121, 98, 111, 108, 100, 95, 52, 53, 46, 114, 108, 101, 0, 98, 111, 120, 121, 98, 111, 108, 100, 95, 51, 53, 46, 114, 108, 101, 0, 98, 111, 120, 121, 98, 111, 108, 100, 95, 50, 53, 46, 114, 108, 101, 0, 98, 111, 120, 121, 98, 111, 108, 100, 95, 53, 52, 46, 114, 108, 101, 0, 98, 111, 120, 121, 98, 111, 108, 100, 95, 52, 52, 46, 114, 108, 101, 0, 98, 111, 120, 121, 98, 111, 108, 100, 95, 51, 52, 46, 114, 108, 101, 0, 98, 111, 120, 121, 98, 111, 108, 100, 95, 50, 52, 46, 114, 108, 101, 0, 98, 111, 120, 121, 98, 111, 108, 100, 95, 53, 51, 46, 114, 108, 101, 0, 98, 111, 120, 121, 98, 111, 108, 100, 95, 52, 51, 46, 114, 108, 101, 0, 98, 111, 120, 121, 98, 111, 108, 100, 95, 51, 51, 46, 114, 108, 101, 0, 98, 111, 120, 121, 98, 111, 108, 100, 95, 50, 51, 46, 114, 108, 101, 0, 98, 111, 120, 121, 98, 111, 108, 100, 95, 53, 50, 46, 114, 108, 101, 0, 98, 111, 120, 121, 98, 111, 108, 100, 95, 52, 50, 46, 114, 108, 101, 0, 98, 111, 120, 121, 98, 111, 108, 100, 95, 51, 50, 46, 114, 108, 101, 0, 98, 111, 120, 121, 98, 111, 108, 100, 95, 50, 50, 46, 114, 108, 101, 0, 99, 108, 97, 115, 115, 101, 115, 46, 108, 117, 97, 0, 106, 112, 101, 103, 46, 108, 117, 97, 0, 119, 105, 110, 100, 111, 119, 115, 46, 108, 117, 97, 0, 100, 105, 97, 108, 111, 103, 115, 46, 108, 117, 97, 0, 32, 0, 61, 0, 58, 0, 60, 0, 45, 0, 62, 0, 37, 0, 10, 0, 44, 0, 91, 0, 41, 0, 40, 0, 93, 0, 123, 0, 125, 0, 43, 0, 94, 0, 35, 0, 42, 0, 124, 0, 9, 0, 126, 0, 59, 0, 11, 0, 13, 0, 12, 0, 38, 0, 85, 112, 0, 68, 111, 119, 110, 0, 76, 101, 102, 116, 0, 82, 105, 103, 104, 116, 0, 65, 0, 66, 0, 88, 0, 89, 0, 76, 49, 0, 82, 49, 0, 76, 50, 0, 82, 50, 0, 76, 51, 0, 82, 51, 0, 83, 101, 108, 101, 99, 116, 0, 83, 116, 97, 114, 116, 0, 67, 111, 110, 116, 114, 111, 108, 108, 101, 114, 0, 114, 101, 113, 117, 105, 114, 101, 0, 39, 112, 97, 99, 107, 97, 103, 101, 46, 115, 101, 97, 114, 99, 104, 101, 114, 115, 39, 32, 109, 117, 115, 116, 32, 98, 101, 32, 97, 32, 116, 97, 98, 108, 101, 0, 109, 111, 100, 117, 108, 101, 32, 39, 37, 115, 39, 32, 110, 111, 116, 32, 102, 111, 117, 110, 100, 58, 37, 115, 0, 76, 85, 65, 95, 78, 79, 69, 78, 86, 0, 59, 59, 0, 59, 1, 59, 0, 1, 0, 39, 112, 97, 99, 107, 97, 103, 101, 46, 37, 115, 39, 32, 109, 117, 115, 116, 32, 98, 101, 32, 97, 32, 115, 116, 114, 105, 110, 103, 0, 47, 0, 101, 114, 114, 111, 114, 32, 108, 111, 97, 100, 105, 110, 103, 32, 109, 111, 100, 117, 108, 101, 32, 39, 37, 115, 39, 32, 102, 114, 111, 109, 32, 102, 105, 108, 101, 32, 39, 37, 115, 39, 58, 10, 9, 37, 115, 0, 10, 9, 110, 111, 32, 109, 111, 100, 117, 108, 101, 32, 39, 37, 115, 39, 32, 105, 110, 32, 102, 105, 108, 101, 32, 39, 37, 115, 39, 0, 95, 0, 108, 117, 97, 111, 112, 101, 110, 95, 37, 115, 0, 100, 121, 110, 97, 109, 105, 99, 32, 108, 105, 98, 114, 97, 114, 105, 101, 115, 32, 110, 111, 116, 32, 101, 110, 97, 98, 108, 101, 100, 59, 32, 99, 104, 101, 99, 107, 32, 121, 111, 117, 114, 32, 76, 117, 97, 32, 105, 110, 115, 116, 97, 108, 108, 97, 116, 105, 111, 110, 0, 63, 0, 10, 9, 110, 111, 32, 102, 105, 108, 101, 32, 39, 37, 115, 39, 0, 10, 9, 110, 111, 32, 102, 105, 101, 108, 100, 32, 112, 97, 99, 107, 97, 103, 101, 46, 112, 114, 101, 108, 111, 97, 100, 91, 39, 37, 115, 39, 93, 0, 108, 111, 97, 100, 108, 105, 98, 0, 115, 101, 97, 114, 99, 104, 112, 97, 116, 104, 0, 97, 98, 115, 101, 110, 116, 0, 105, 110, 105, 116, 0, 111, 102, 102, 115, 101, 116, 0, 99, 111, 100, 101, 112, 111, 105, 110, 116, 0, 99, 111, 100, 101, 115, 0, 105, 110, 118, 97, 108, 105, 100, 32, 85, 84, 70, 45, 56, 32, 99, 111, 100, 101, 0, 102, 105, 110, 97, 108, 32, 112, 111, 115, 105, 116, 105, 111, 110, 32, 111, 117, 116, 32, 111, 102, 32, 115, 116, 114, 105, 110, 103, 0, 37, 85, 0, 111, 117, 116, 32, 111, 102, 32, 114, 97, 110, 103, 101, 0, 112, 111, 115, 105, 116, 105, 111, 110, 32, 111, 117, 116, 32, 111, 102, 32, 114, 97, 110, 103, 101, 0, 105, 110, 105, 116, 105, 97, 108, 32, 112, 111, 115, 105, 116, 105, 111, 110, 32, 105, 115, 32, 97, 32, 99, 111, 110, 116, 105, 110, 117, 97, 116, 105, 111, 110, 32, 98, 121, 116, 101, 0, 99, 111, 110, 99, 97, 116, 0, 105, 110, 115, 101, 114, 116, 0, 109, 111, 118, 101, 0, 115, 111, 114, 116, 0, 0, 105, 110, 118, 97, 108, 105, 100, 32, 111, 114, 100, 101, 114, 32, 102, 117, 110, 99, 116, 105, 111, 110, 32, 102, 111, 114, 32, 115, 111, 114, 116, 105, 110, 103, 0, 105, 110, 105, 116, 105, 97, 108, 32, 112, 111, 115, 105, 116, 105, 111, 110, 32, 109, 117, 115, 116, 32, 98, 101, 32, 112, 111, 115, 105, 116, 105, 118, 101, 0, 112, 111, 115, 105, 116, 105, 111, 110, 32, 111, 117, 116, 32, 111, 102, 32, 98, 111, 117, 110, 100, 115, 0, 116, 111, 111, 32, 109, 97, 110, 121, 32, 114, 101, 115, 117, 108, 116, 115, 32, 116, 111, 32, 117, 110, 112, 97, 99, 107, 0, 110, 0, 119, 114, 111, 110, 103, 32, 110, 117, 109, 98, 101, 114, 32, 111, 102, 32, 97, 114, 103, 117, 109, 101, 110, 116, 115, 32, 116, 111, 32, 39, 105, 110, 115, 101, 114, 116, 39, 0, 105, 110, 118, 97, 108, 105, 100, 32, 118, 97, 108, 117, 101, 32, 40, 37, 115, 41, 32, 97, 116, 32, 105, 110, 100, 101, 120, 32, 37, 100, 32, 105, 110, 32, 116, 97, 98, 108, 101, 32, 102, 111, 114, 32, 39, 99, 111, 110, 99, 97, 116, 39, 0, 98, 121, 116, 101, 0, 100, 117, 109, 112, 0, 102, 105, 110, 100, 0, 102, 111, 114, 109, 97, 116, 0, 103, 109, 97, 116, 99, 104, 0, 103, 115, 117, 98, 0, 108, 101, 110, 0, 108, 111, 119, 101, 114, 0, 109, 97, 116, 99, 104, 0, 114, 101, 112, 0, 114, 101, 118, 101, 114, 115, 101, 0, 115, 117, 98, 0, 117, 112, 112, 101, 114, 0, 112, 97, 99, 107, 0, 112, 97, 99, 107, 115, 105, 122, 101, 0, 117, 110, 112, 97, 99, 107, 0, 105, 110, 105, 116, 105, 97, 108, 32, 112, 111, 115, 105, 116, 105, 111, 110, 32, 111, 117, 116, 32, 111, 102, 32, 115, 116, 114, 105, 110, 103, 0, 100, 97, 116, 97, 32, 115, 116, 114, 105, 110, 103, 32, 116, 111, 111, 32, 115, 104, 111, 114, 116, 0, 116, 111, 111, 32, 109, 97, 110, 121, 32, 114, 101, 115, 117, 108, 116, 115, 0, 37, 100, 45, 98, 121, 116, 101, 32, 105, 110, 116, 101, 103, 101, 114, 32, 100, 111, 101, 115, 32, 110, 111, 116, 32, 102, 105, 116, 32, 105, 110, 116, 111, 32, 76, 117, 97, 32, 73, 110, 116, 101, 103, 101, 114, 0, 105, 110, 118, 97, 108, 105, 100, 32, 110, 101, 120, 116, 32, 111, 112, 116, 105, 111, 110, 32, 102, 111, 114, 32, 111, 112, 116, 105, 111, 110, 32, 39, 88, 39, 0, 102, 111, 114, 109, 97, 116, 32, 97, 115, 107, 115, 32, 102, 111, 114, 32, 97, 108, 105, 103, 110, 109, 101, 110, 116, 32, 110, 111, 116, 32, 112, 111, 119, 101, 114, 32, 111, 102, 32, 50, 0, 105, 110, 116, 101, 103, 114, 97, 108, 32, 115, 105, 122, 101, 32, 40, 37, 100, 41, 32, 111, 117, 116, 32, 111, 102, 32, 108, 105, 109, 105, 116, 115, 32, 91, 49, 44, 37, 100, 93, 0, 109, 105, 115, 115, 105, 110, 103, 32, 115, 105, 122, 101, 32, 102, 111, 114, 32, 102, 111, 114, 109, 97, 116, 32, 111, 112, 116, 105, 111, 110, 32, 39, 99, 39, 0, 105, 110, 118, 97, 108, 105, 100, 32, 102, 111, 114, 109, 97, 116, 32, 111, 112, 116, 105, 111, 110, 32, 39, 37, 99, 39, 0, 102, 111, 114, 109, 97, 116, 32, 114, 101, 115, 117, 108, 116, 32, 116, 111, 111, 32, 108, 97, 114, 103, 101, 0, 118, 97, 114, 105, 97, 98, 108, 101, 45, 108, 101, 110, 103, 116, 104, 32, 102, 111, 114, 109, 97, 116, 0, 105, 110, 116, 101, 103, 101, 114, 32, 111, 118, 101, 114, 102, 108, 111, 119, 0, 117, 110, 115, 105, 103, 110, 101, 100, 32, 111, 118, 101, 114, 102, 108, 111, 119, 0, 119, 114, 111, 110, 103, 32, 108, 101, 110, 103, 116, 104, 0, 115, 116, 114, 105, 110, 103, 32, 108, 101, 110, 103, 116, 104, 32, 100, 111, 101, 115, 32, 110, 111, 116, 32, 102, 105, 116, 32, 105, 110, 32, 103, 105, 118, 101, 110, 32, 115, 105, 122, 101, 0, 115, 116, 114, 105, 110, 103, 32, 99, 111, 110, 116, 97, 105, 110, 115, 32, 122, 101, 114, 111, 115, 0, 114, 101, 115, 117, 108, 116, 105, 110, 103, 32, 115, 116, 114, 105, 110, 103, 32, 116, 111, 111, 32, 108, 97, 114, 103, 101, 0, 94, 36, 42, 43, 63, 46, 40, 91, 37, 45, 0, 116, 111, 111, 32, 109, 97, 110, 121, 32, 99, 97, 112, 116, 117, 114, 101, 115, 0, 105, 110, 118, 97, 108, 105, 100, 32, 99, 97, 112, 116, 117, 114, 101, 32, 105, 110, 100, 101, 120, 32, 37, 37, 37, 100, 0, 117, 110, 102, 105, 110, 105, 115, 104, 101, 100, 32, 99, 97, 112, 116, 117, 114, 101, 0, 112, 97, 116, 116, 101, 114, 110, 32, 116, 111, 111, 32, 99, 111, 109, 112, 108, 101, 120, 0, 105, 110, 118, 97, 108, 105, 100, 32, 112, 97, 116, 116, 101, 114, 110, 32, 99, 97, 112, 116, 117, 114, 101, 0, 109, 97, 108, 102, 111, 114, 109, 101, 100, 32, 112, 97, 116, 116, 101, 114, 110, 32, 40, 109, 105, 115, 115, 105, 110, 103, 32, 97, 114, 103, 117, 109, 101, 110, 116, 115, 32, 116, 111, 32, 39, 37, 37, 98, 39, 41, 0, 109, 105, 115, 115, 105, 110, 103, 32, 39, 91, 39, 32, 97, 102, 116, 101, 114, 32, 39, 37, 37, 102, 39, 32, 105, 110, 32, 112, 97, 116, 116, 101, 114, 110, 0, 109, 97, 108, 102, 111, 114, 109, 101, 100, 32, 112, 97, 116, 116, 101, 114, 110, 32, 40, 101, 110, 100, 115, 32, 119, 105, 116, 104, 32, 39, 37, 37, 39, 41, 0, 109, 97, 108, 102, 111, 114, 109, 101, 100, 32, 112, 97, 116, 116, 101, 114, 110, 32, 40, 109, 105, 115, 115, 105, 110, 103, 32, 39, 93, 39, 41, 0, 115, 116, 114, 105, 110, 103, 47, 102, 117, 110, 99, 116, 105, 111, 110, 47, 116, 97, 98, 108, 101, 32, 101, 120, 112, 101, 99, 116, 101, 100, 0, 105, 110, 118, 97, 108, 105, 100, 32, 117, 115, 101, 32, 111, 102, 32, 39, 37, 99, 39, 32, 105, 110, 32, 114, 101, 112, 108, 97, 99, 101, 109, 101, 110, 116, 32, 115, 116, 114, 105, 110, 103, 0, 105, 110, 118, 97, 108, 105, 100, 32, 114, 101, 112, 108, 97, 99, 101, 109, 101, 110, 116, 32, 118, 97, 108, 117, 101, 32, 40, 97, 32, 37, 115, 41, 0, 110, 111, 32, 118, 97, 108, 117, 101, 0, 45, 43, 32, 35, 48, 0, 105, 110, 118, 97, 108, 105, 100, 32, 102, 111, 114, 109, 97, 116, 32, 40, 114, 101, 112, 101, 97, 116, 101, 100, 32, 102, 108, 97, 103, 115, 41, 0, 105, 110, 118, 97, 108, 105, 100, 32, 102, 111, 114, 109, 97, 116, 32, 40, 119, 105, 100, 116, 104, 32, 111, 114, 32, 112, 114, 101, 99, 105, 115, 105, 111, 110, 32, 116, 111, 111, 32, 108, 111, 110, 103, 41, 0, 108, 108, 0, 92, 37, 100, 0, 92, 37, 48, 51, 100, 0, 105, 110, 118, 97, 108, 105, 100, 32, 111, 112, 116, 105, 111, 110, 32, 39, 37, 37, 37, 99, 39, 32, 116, 111, 32, 39, 102, 111, 114, 109, 97, 116, 39, 0, 117, 110, 97, 98, 108, 101, 32, 116, 111, 32, 100, 117, 109, 112, 32, 103, 105, 118, 101, 110, 32, 102, 117, 110, 99, 116, 105, 111, 110, 0, 118, 97, 108, 117, 101, 32, 111, 117, 116, 32, 111, 102, 32, 114, 97, 110, 103, 101, 0, 115, 116, 114, 105, 110, 103, 32, 115, 108, 105, 99, 101, 32, 116, 111, 111, 32, 108, 111, 110, 103, 0, 99, 108, 111, 99, 107, 0, 100, 97, 116, 101, 0, 100, 105, 102, 102, 116, 105, 109, 101, 0, 101, 120, 101, 99, 117, 116, 101, 0, 101, 120, 105, 116, 0, 103, 101, 116, 101, 110, 118, 0, 114, 101, 109, 111, 118, 101, 0, 114, 101, 110, 97, 109, 101, 0, 115, 101, 116, 108, 111, 99, 97, 108, 101, 0, 116, 105, 109, 101, 0, 116, 109, 112, 110, 97, 109, 101, 0, 117, 110, 97, 98, 108, 101, 32, 116, 111, 32, 103, 101, 110, 101, 114, 97, 116, 101, 32, 97, 32, 117, 110, 105, 113, 117, 101, 32, 102, 105, 108, 101, 110, 97, 109, 101, 0, 115, 101, 99, 0, 104, 111, 117, 114, 0, 100, 97, 121, 0, 102, 105, 101, 108, 100, 32, 39, 37, 115, 39, 32, 109, 105, 115, 115, 105, 110, 103, 32, 105, 110, 32, 100, 97, 116, 101, 32, 116, 97, 98, 108, 101, 0, 109, 111, 110, 116, 104, 0, 121, 101, 97, 114, 0, 105, 115, 100, 115, 116, 0, 97, 108, 108, 0, 99, 111, 108, 108, 97, 116, 101, 0, 99, 116, 121, 112, 101, 0, 109, 111, 110, 101, 116, 97, 114, 121, 0, 110, 117, 109, 101, 114, 105, 99, 0, 37, 99, 0, 42, 116, 0, 119, 100, 97, 121, 0, 121, 100, 97, 121, 0, 97, 65, 98, 66, 99, 67, 100, 68, 101, 70, 103, 71, 104, 72, 73, 106, 109, 77, 110, 112, 114, 82, 83, 116, 84, 117, 85, 86, 119, 87, 120, 88, 121, 89, 122, 90, 37, 0, 69, 0, 99, 67, 120, 88, 121, 89, 0, 79, 0, 100, 101, 72, 73, 109, 77, 83, 117, 85, 86, 119, 87, 121, 0, 105, 110, 118, 97, 108, 105, 100, 32, 99, 111, 110, 118, 101, 114, 115, 105, 111, 110, 32, 115, 112, 101, 99, 105, 102, 105, 101, 114, 32, 39, 37, 37, 37, 115, 39, 0, 97, 98, 115, 0, 97, 99, 111, 115, 0, 97, 115, 105, 110, 0, 97, 116, 97, 110, 0, 99, 101, 105, 108, 0, 99, 111, 115, 0, 100, 101, 103, 0, 101, 120, 112, 0, 116, 111, 105, 110, 116, 101, 103, 101, 114, 0, 102, 108, 111, 111, 114, 0, 102, 109, 111, 100, 0, 117, 108, 116, 0, 108, 111, 103, 0, 109, 97, 120, 0, 109, 105, 110, 0, 109, 111, 100, 102, 0, 114, 97, 100, 0, 114, 97, 110, 100, 111, 109, 0, 114, 97, 110, 100, 111, 109, 115, 101, 101, 100, 0, 115, 105, 110, 0, 115, 113, 114, 116, 0, 116, 97, 110, 0, 105, 110, 116, 101, 103, 101, 114, 0, 119, 114, 111, 110, 103, 32, 110, 117, 109, 98, 101, 114, 32, 111, 102, 32, 97, 114, 103, 117, 109, 101, 110, 116, 115, 0, 105, 110, 116, 101, 114, 118, 97, 108, 32, 105, 115, 32, 101, 109, 112, 116, 121, 0, 105, 110, 116, 101, 114, 118, 97, 108, 32, 116, 111, 111, 32, 108, 97, 114, 103, 101, 0, 118, 97, 108, 117, 101, 32, 101, 120, 112, 101, 99, 116, 101, 100, 0, 122, 101, 114, 111, 0, 99, 97, 110, 110, 111, 116, 32, 99, 108, 111, 115, 101, 32, 115, 116, 97, 110, 100, 97, 114, 100, 32, 102, 105, 108, 101, 0, 99, 108, 111, 115, 101, 0, 102, 108, 117, 115, 104, 0, 108, 105, 110, 101, 115, 0, 114, 101, 97, 100, 0, 115, 101, 101, 107, 0, 115, 101, 116, 118, 98, 117, 102, 0, 119, 114, 105, 116, 101, 0, 95, 95, 116, 111, 115, 116, 114, 105, 110, 103, 0, 102, 105, 108, 101, 32, 40, 99, 108, 111, 115, 101, 100, 41, 0, 102, 105, 108, 101, 32, 40, 37, 112, 41, 0, 97, 116, 116, 101, 109, 112, 116, 32, 116, 111, 32, 117, 115, 101, 32, 97, 32, 99, 108, 111, 115, 101, 100, 32, 102, 105, 108, 101, 0, 37, 108, 108, 100, 0, 37, 46, 49, 52, 103, 0, 110, 111, 0, 102, 117, 108, 108, 0, 99, 117, 114, 0, 110, 111, 116, 32, 97, 110, 32, 105, 110, 116, 101, 103, 101, 114, 32, 105, 110, 32, 112, 114, 111, 112, 101, 114, 32, 114, 97, 110, 103, 101, 0, 115, 101, 116, 0, 116, 111, 111, 32, 109, 97, 110, 121, 32, 97, 114, 103, 117, 109, 101, 110, 116, 115, 0, 112, 80, 0, 101, 69, 0, 105, 110, 118, 97, 108, 105, 100, 32, 102, 111, 114, 109, 97, 116, 0, 102, 105, 108, 101, 32, 105, 115, 32, 97, 108, 114, 101, 97, 100, 121, 32, 99, 108, 111, 115, 101, 100, 0, 37, 115, 0, 105, 110, 112, 117, 116, 0, 111, 112, 101, 110, 0, 111, 117, 116, 112, 117, 116, 0, 112, 111, 112, 101, 110, 0, 116, 109, 112, 102, 105, 108, 101, 0, 116, 121, 112, 101, 0, 115, 116, 97, 110, 100, 97, 114, 100, 32, 37, 115, 32, 102, 105, 108, 101, 32, 105, 115, 32, 99, 108, 111, 115, 101, 100, 0, 99, 108, 111, 115, 101, 100, 32, 102, 105, 108, 101, 0, 102, 105, 108, 101, 0, 114, 0, 39, 112, 111, 112, 101, 110, 39, 32, 110, 111, 116, 32, 115, 117, 112, 112, 111, 114, 116, 101, 100, 0, 119, 0, 99, 97, 110, 110, 111, 116, 32, 111, 112, 101, 110, 32, 102, 105, 108, 101, 32, 39, 37, 115, 39, 32, 40, 37, 115, 41, 0, 114, 119, 97, 0, 105, 110, 118, 97, 108, 105, 100, 32, 109, 111, 100, 101, 0, 100, 101, 98, 117, 103, 0, 103, 101, 116, 117, 115, 101, 114, 118, 97, 108, 117, 101, 0, 103, 101, 116, 104, 111, 111, 107, 0, 103, 101, 116, 105, 110, 102, 111, 0, 103, 101, 116, 108, 111, 99, 97, 108, 0, 103, 101, 116, 114, 101, 103, 105, 115, 116, 114, 121, 0, 103, 101, 116, 117, 112, 118, 97, 108, 117, 101, 0, 117, 112, 118, 97, 108, 117, 101, 106, 111, 105, 110, 0, 117, 112, 118, 97, 108, 117, 101, 105, 100, 0, 115, 101, 116, 117, 115, 101, 114, 118, 97, 108, 117, 101, 0, 115, 101, 116, 104, 111, 111, 107, 0, 115, 101, 116, 108, 111, 99, 97, 108, 0, 115, 101, 116, 117, 112, 118, 97, 108, 117, 101, 0, 116, 114, 97, 99, 101, 98, 97, 99, 107, 0, 108, 101, 118, 101, 108, 32, 111, 117, 116, 32, 111, 102, 32, 114, 97, 110, 103, 101, 0, 107, 0, 99, 97, 108, 108, 0, 108, 105, 110, 101, 0, 116, 97, 105, 108, 32, 99, 97, 108, 108, 0, 105, 110, 118, 97, 108, 105, 100, 32, 117, 112, 118, 97, 108, 117, 101, 32, 105, 110, 100, 101, 120, 0, 76, 117, 97, 32, 102, 117, 110, 99, 116, 105, 111, 110, 32, 101, 120, 112, 101, 99, 116, 101, 100, 0, 102, 108, 110, 83, 116, 117, 0, 62, 37, 115, 0, 105, 110, 118, 97, 108, 105, 100, 32, 111, 112, 116, 105, 111, 110, 0, 115, 111, 117, 114, 99, 101, 0, 115, 104, 111, 114, 116, 95, 115, 114, 99, 0, 108, 105, 110, 101, 100, 101, 102, 105, 110, 101, 100, 0, 108, 97, 115, 116, 108, 105, 110, 101, 100, 101, 102, 105, 110, 101, 100, 0, 119, 104, 97, 116, 0, 99, 117, 114, 114, 101, 110, 116, 108, 105, 110, 101, 0, 110, 117, 112, 115, 0, 110, 112, 97, 114, 97, 109, 115, 0, 105, 115, 118, 97, 114, 97, 114, 103, 0, 110, 97, 109, 101, 0, 110, 97, 109, 101, 119, 104, 97, 116, 0, 105, 115, 116, 97, 105, 108, 99, 97, 108, 108, 0, 97, 99, 116, 105, 118, 101, 108, 105, 110, 101, 115, 0, 102, 117, 110, 99, 0, 101, 120, 116, 101, 114, 110, 97, 108, 32, 104, 111, 111, 107, 0, 108, 117, 97, 95, 100, 101, 98, 117, 103, 62, 32, 0, 99, 111, 110, 116, 10, 0, 61, 40, 100, 101, 98, 117, 103, 32, 99, 111, 109, 109, 97, 110, 100, 41, 0, 37, 115, 10, 0, 99, 114, 101, 97, 116, 101, 0, 114, 101, 115, 117, 109, 101, 0, 114, 117, 110, 110, 105, 110, 103, 0, 115, 116, 97, 116, 117, 115, 0, 119, 114, 97, 112, 0, 121, 105, 101, 108, 100, 0, 105, 115, 121, 105, 101, 108, 100, 97, 98, 108, 101, 0, 116, 111, 111, 32, 109, 97, 110, 121, 32, 97, 114, 103, 117, 109, 101, 110, 116, 115, 32, 116, 111, 32, 114, 101, 115, 117, 109, 101, 0, 116, 111, 111, 32, 109, 97, 110, 121, 32, 114, 101, 115, 117, 108, 116, 115, 32, 116, 111, 32, 114, 101, 115, 117, 109, 101, 0, 116, 104, 114, 101, 97, 100, 32, 101, 120, 112, 101, 99, 116, 101, 100, 0, 115, 117, 115, 112, 101, 110, 100, 101, 100, 0, 110, 111, 114, 109, 97, 108, 0, 100, 101, 97, 100, 0, 97, 115, 115, 101, 114, 116, 0, 99, 111, 108, 108, 101, 99, 116, 103, 97, 114, 98, 97, 103, 101, 0, 100, 111, 102, 105, 108, 101, 0, 101, 114, 114, 111, 114, 0, 103, 101, 116, 109, 101, 116, 97, 116, 97, 98, 108, 101, 0, 105, 112, 97, 105, 114, 115, 0, 108, 111, 97, 100, 102, 105, 108, 101, 0, 108, 111, 97, 100, 0, 110, 101, 120, 116, 0, 112, 97, 105, 114, 115, 0, 112, 99, 97, 108, 108, 0, 112, 114, 105, 110, 116, 0, 114, 97, 119, 101, 113, 117, 97, 108, 0, 114, 97, 119, 108, 101, 110, 0, 114, 97, 119, 103, 101, 116, 0, 114, 97, 119, 115, 101, 116, 0, 115, 101, 108, 101, 99, 116, 0, 115, 101, 116, 109, 101, 116, 97, 116, 97, 98, 108, 101, 0, 116, 111, 110, 117, 109, 98, 101, 114, 0, 116, 111, 115, 116, 114, 105, 110, 103, 0, 120, 112, 99, 97, 108, 108, 0, 98, 97, 115, 101, 32, 111, 117, 116, 32, 111, 102, 32, 114, 97, 110, 103, 101, 0, 32, 12, 10, 13, 9, 11, 0, 110, 105, 108, 32, 111, 114, 32, 116, 97, 98, 108, 101, 32, 101, 120, 112, 101, 99, 116, 101, 100, 0, 95, 95, 109, 101, 116, 97, 116, 97, 98, 108, 101, 0, 99, 97, 110, 110, 111, 116, 32, 99, 104, 97, 110, 103, 101, 32, 97, 32, 112, 114, 111, 116, 101, 99, 116, 101, 100, 32, 109, 101, 116, 97, 116, 97, 98, 108, 101, 0, 105, 110, 100, 101, 120, 32, 111, 117, 116, 32, 111, 102, 32, 114, 97, 110, 103, 101, 0, 116, 97, 98, 108, 101, 32, 111, 114, 32, 115, 116, 114, 105, 110, 103, 32, 101, 120, 112, 101, 99, 116, 101, 100, 0, 39, 116, 111, 115, 116, 114, 105, 110, 103, 39, 32, 109, 117, 115, 116, 32, 114, 101, 116, 117, 114, 110, 32, 97, 32, 115, 116, 114, 105, 110, 103, 32, 116, 111, 32, 39, 112, 114, 105, 110, 116, 39, 0, 95, 95, 112, 97, 105, 114, 115, 0, 98, 116, 0, 61, 40, 108, 111, 97, 100, 41, 0, 116, 111, 111, 32, 109, 97, 110, 121, 32, 110, 101, 115, 116, 101, 100, 32, 102, 117, 110, 99, 116, 105, 111, 110, 115, 0, 114, 101, 97, 100, 101, 114, 32, 102, 117, 110, 99, 116, 105, 111, 110, 32, 109, 117, 115, 116, 32, 114, 101, 116, 117, 114, 110, 32, 97, 32, 115, 116, 114, 105, 110, 103, 0, 99, 111, 108, 108, 101, 99, 116, 0, 115, 116, 111, 112, 0, 114, 101, 115, 116, 97, 114, 116, 0, 99, 111, 117, 110, 116, 0, 115, 116, 101, 112, 0, 115, 101, 116, 112, 97, 117, 115, 101, 0, 115, 101, 116, 115, 116, 101, 112, 109, 117, 108, 0, 105, 115, 114, 117, 110, 110, 105, 110, 103, 0, 97, 115, 115, 101, 114, 116, 105, 111, 110, 32, 102, 97, 105, 108, 101, 100, 33, 0, 108, 105, 103, 104, 116, 32, 117, 115, 101, 114, 100, 97, 116, 97, 0, 37, 115, 32, 101, 120, 112, 101, 99, 116, 101, 100, 44, 32, 103, 111, 116, 32, 37, 115, 0, 102, 0, 95, 71, 46, 0, 37, 115, 58, 32, 37, 115, 32, 112, 114, 101, 99, 111, 109, 112, 105, 108, 101, 100, 32, 99, 104, 117, 110, 107, 0, 95, 95, 105, 110, 100, 101, 120, 0, 95, 95, 110, 101, 119, 105, 110, 100, 101, 120, 0, 95, 95, 103, 99, 0, 95, 95, 109, 111, 100, 101, 0, 95, 95, 108, 101, 110, 0, 95, 95, 101, 113, 0, 95, 95, 97, 100, 100, 0, 95, 95, 115, 117, 98, 0, 95, 95, 109, 117, 108, 0, 95, 95, 109, 111, 100, 0, 95, 95, 112, 111, 119, 0, 95, 95, 100, 105, 118, 0, 95, 95, 105, 100, 105, 118, 0, 95, 95, 98, 97, 110, 100, 0, 95, 95, 98, 111, 114, 0, 95, 95, 98, 120, 111, 114, 0, 95, 95, 115, 104, 108, 0, 95, 95, 115, 104, 114, 0, 95, 95, 117, 110, 109, 0, 95, 95, 98, 110, 111, 116, 0, 95, 95, 108, 116, 0, 95, 95, 108, 101, 0, 95, 95, 99, 111, 110, 99, 97, 116, 0, 95, 95, 99, 97, 108, 108, 0, 110, 111, 116, 32, 101, 110, 111, 117, 103, 104, 32, 109, 101, 109, 111, 114, 121, 0, 108, 97, 98, 101, 108, 115, 47, 103, 111, 116, 111, 115, 0, 60, 37, 115, 62, 32, 97, 116, 32, 108, 105, 110, 101, 32, 37, 100, 32, 110, 111, 116, 32, 105, 110, 115, 105, 100, 101, 32, 97, 32, 108, 111, 111, 112, 0, 110, 111, 32, 118, 105, 115, 105, 98, 108, 101, 32, 108, 97, 98, 101, 108, 32, 39, 37, 115, 39, 32, 102, 111, 114, 32, 60, 103, 111, 116, 111, 62, 32, 97, 116, 32, 108, 105, 110, 101, 32, 37, 100, 0, 60, 103, 111, 116, 111, 32, 37, 115, 62, 32, 97, 116, 32, 108, 105, 110, 101, 32, 37, 100, 32, 106, 117, 109, 112, 115, 32, 105, 110, 116, 111, 32, 116, 104, 101, 32, 115, 99, 111, 112, 101, 32, 111, 102, 32, 108, 111, 99, 97, 108, 32, 39, 37, 115, 39, 0, 37, 115, 32, 101, 120, 112, 101, 99, 116, 101, 100, 0, 102, 117, 110, 99, 116, 105, 111, 110, 32, 97, 116, 32, 108, 105, 110, 101, 32, 37, 100, 0, 109, 97, 105, 110, 32, 102, 117, 110, 99, 116, 105, 111, 110, 0, 116, 111, 111, 32, 109, 97, 110, 121, 32, 37, 115, 32, 40, 108, 105, 109, 105, 116, 32, 105, 115, 32, 37, 100, 41, 32, 105, 110, 32, 37, 115, 0, 67, 32, 108, 101, 118, 101, 108, 115, 0, 37, 115, 32, 101, 120, 112, 101, 99, 116, 101, 100, 32, 40, 116, 111, 32, 99, 108, 111, 115, 101, 32, 37, 115, 32, 97, 116, 32, 108, 105, 110, 101, 32, 37, 100, 41, 0, 40, 102, 111, 114, 32, 105, 110, 100, 101, 120, 41, 0, 40, 102, 111, 114, 32, 108, 105, 109, 105, 116, 41, 0, 40, 102, 111, 114, 32, 115, 116, 101, 112, 41, 0, 40, 102, 111, 114, 32, 103, 101, 110, 101, 114, 97, 116, 111, 114, 41, 0, 40, 102, 111, 114, 32, 115, 116, 97, 116, 101, 41, 0, 40, 102, 111, 114, 32, 99, 111, 110, 116, 114, 111, 108, 41, 0, 39, 61, 39, 32, 111, 114, 32, 39, 105, 110, 39, 32, 101, 120, 112, 101, 99, 116, 101, 100, 0, 108, 97, 98, 101, 108, 32, 39, 37, 115, 39, 32, 97, 108, 114, 101, 97, 100, 121, 32, 100, 101, 102, 105, 110, 101, 100, 32, 111, 110, 32, 108, 105, 110, 101, 32, 37, 100, 0, 115, 121, 110, 116, 97, 120, 32, 101, 114, 114, 111, 114, 0, 117, 110, 101, 120, 112, 101, 99, 116, 101, 100, 32, 115, 121, 109, 98, 111, 108, 0, 102, 117, 110, 99, 116, 105, 111, 110, 32, 97, 114, 103, 117, 109, 101, 110, 116, 115, 32, 101, 120, 112, 101, 99, 116, 101, 100, 0, 102, 117, 110, 99, 116, 105, 111, 110, 115, 0, 115, 101, 108, 102, 0, 60, 110, 97, 109, 101, 62, 32, 111, 114, 32, 39, 46, 46, 46, 39, 32, 101, 120, 112, 101, 99, 116, 101, 100, 0, 108, 111, 99, 97, 108, 32, 118, 97, 114, 105, 97, 98, 108, 101, 115, 0, 99, 97, 110, 110, 111, 116, 32, 117, 115, 101, 32, 39, 46, 46, 46, 39, 32, 111, 117, 116, 115, 105, 100, 101, 32, 97, 32, 118, 97, 114, 97, 114, 103, 32, 102, 117, 110, 99, 116, 105, 111, 110, 0, 10, 10, 10, 10, 11, 11, 11, 11, 14, 13, 11, 11, 11, 11, 6, 6, 4, 4, 5, 5, 7, 7, 7, 7, 9, 8, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 1, 1, 117, 112, 118, 97, 108, 117, 101, 115, 0, 99, 104, 117, 110, 107, 32, 104, 97, 115, 32, 116, 111, 111, 32, 109, 97, 110, 121, 32, 108, 105, 110, 101, 115, 0, 105, 110, 118, 97, 108, 105, 100, 32, 108, 111, 110, 103, 32, 115, 116, 114, 105, 110, 103, 32, 100, 101, 108, 105, 109, 105, 116, 101, 114, 0, 108, 101, 120, 105, 99, 97, 108, 32, 101, 108, 101, 109, 101, 110, 116, 32, 116, 111, 111, 32, 108, 111, 110, 103, 0, 117, 110, 102, 105, 110, 105, 115, 104, 101, 100, 32, 115, 116, 114, 105, 110, 103, 0, 104, 101, 120, 97, 100, 101, 99, 105, 109, 97, 108, 32, 100, 105, 103, 105, 116, 32, 101, 120, 112, 101, 99, 116, 101, 100, 0, 109, 105, 115, 115, 105, 110, 103, 32, 39, 123, 39, 0, 85, 84, 70, 45, 56, 32, 118, 97, 108, 117, 101, 32, 116, 111, 111, 32, 108, 97, 114, 103, 101, 0, 109, 105, 115, 115, 105, 110, 103, 32, 39, 125, 39, 0, 105, 110, 118, 97, 108, 105, 100, 32, 101, 115, 99, 97, 112, 101, 32, 115, 101, 113, 117, 101, 110, 99, 101, 0, 100, 101, 99, 105, 109, 97, 108, 32, 101, 115, 99, 97, 112, 101, 32, 116, 111, 111, 32, 108, 97, 114, 103, 101, 0, 69, 101, 0, 80, 112, 0, 109, 97, 108, 102, 111, 114, 109, 101, 100, 32, 110, 117, 109, 98, 101, 114, 0, 115, 116, 114, 105, 110, 103, 0, 99, 111, 109, 109, 101, 110, 116, 0, 117, 110, 102, 105, 110, 105, 115, 104, 101, 100, 32, 108, 111, 110, 103, 32, 37, 115, 32, 40, 115, 116, 97, 114, 116, 105, 110, 103, 32, 97, 116, 32, 108, 105, 110, 101, 32, 37, 100, 41, 0, 37, 115, 58, 37, 100, 58, 32, 37, 115, 0, 37, 115, 32, 110, 101, 97, 114, 32, 37, 115, 0, 97, 110, 100, 0, 98, 114, 101, 97, 107, 0, 100, 111, 0, 101, 108, 115, 101, 0, 101, 108, 115, 101, 105, 102, 0, 101, 110, 100, 0, 102, 97, 108, 115, 101, 0, 102, 111, 114, 0, 102, 117, 110, 99, 116, 105, 111, 110, 0, 103, 111, 116, 111, 0, 105, 102, 0, 105, 110, 0, 110, 105, 108, 0, 110, 111, 116, 0, 111, 114, 0, 114, 101, 112, 101, 97, 116, 0, 114, 101, 116, 117, 114, 110, 0, 116, 104, 101, 110, 0, 116, 114, 117, 101, 0, 117, 110, 116, 105, 108, 0, 119, 104, 105, 108, 101, 0, 47, 47, 0, 46, 46, 0, 46, 46, 46, 0, 61, 61, 0, 62, 61, 0, 60, 61, 0, 126, 61, 0, 60, 60, 0, 62, 62, 0, 58, 58, 0, 60, 101, 111, 102, 62, 0, 60, 110, 117, 109, 98, 101, 114, 62, 0, 60, 105, 110, 116, 101, 103, 101, 114, 62, 0, 60, 110, 97, 109, 101, 62, 0, 60, 115, 116, 114, 105, 110, 103, 62, 0, 110, 111, 32, 109, 101, 115, 115, 97, 103, 101, 0, 101, 114, 114, 111, 114, 32, 105, 110, 32, 95, 95, 103, 99, 32, 109, 101, 116, 97, 109, 101, 116, 104, 111, 100, 32, 40, 37, 115, 41, 0, 97, 116, 116, 101, 109, 112, 116, 32, 116, 111, 32, 108, 111, 97, 100, 32, 97, 32, 37, 115, 32, 99, 104, 117, 110, 107, 32, 40, 109, 111, 100, 101, 32, 105, 115, 32, 39, 37, 115, 39, 41, 0, 98, 105, 110, 97, 114, 121, 0, 116, 101, 120, 116, 0, 99, 97, 110, 110, 111, 116, 32, 114, 101, 115, 117, 109, 101, 32, 110, 111, 110, 45, 115, 117, 115, 112, 101, 110, 100, 101, 100, 32, 99, 111, 114, 111, 117, 116, 105, 110, 101, 0, 99, 97, 110, 110, 111, 116, 32, 114, 101, 115, 117, 109, 101, 32, 100, 101, 97, 100, 32, 99, 111, 114, 111, 117, 116, 105, 110, 101, 0, 117, 112, 118, 97, 108, 117, 101, 0, 32, 40, 37, 115, 32, 39, 37, 115, 39, 41, 0, 95, 69, 78, 86, 0, 103, 108, 111, 98, 97, 108, 0, 102, 105, 101, 108, 100, 0, 108, 111, 99, 97, 108, 0, 99, 111, 110, 115, 116, 97, 110, 116, 0, 109, 101, 116, 104, 111, 100, 0, 99, 111, 110, 115, 116, 97, 110, 116, 115, 0, 111, 112, 99, 111, 100, 101, 115, 0, 118, 111, 105, 100, 0, 98, 111, 111, 108, 0, 99, 104, 97, 114, 0, 115, 105, 103, 110, 101, 100, 32, 99, 104, 97, 114, 0, 117, 110, 115, 105, 103, 110, 101, 100, 32, 99, 104, 97, 114, 0, 115, 104, 111, 114, 116, 0, 117, 110, 115, 105, 103, 110, 101, 100, 32, 115, 104, 111, 114, 116, 0, 105, 110, 116, 0, 117, 110, 115, 105, 103, 110, 101, 100, 32, 105, 110, 116, 0, 108, 111, 110, 103, 0, 117, 110, 115, 105, 103, 110, 101, 100, 32, 108, 111, 110, 103, 0, 102, 108, 111, 97, 116, 0, 100, 111, 117, 98, 108, 101, 0, 115, 116, 100, 58, 58, 115, 116, 114, 105, 110, 103, 0, 115, 116, 100, 58, 58, 98, 97, 115, 105, 99, 95, 115, 116, 114, 105, 110, 103, 60, 117, 110, 115, 105, 103, 110, 101, 100, 32, 99, 104, 97, 114, 62, 0, 115, 116, 100, 58, 58, 119, 115, 116, 114, 105, 110, 103, 0, 101, 109, 115, 99, 114, 105, 112, 116, 101, 110, 58, 58, 118, 97, 108, 0, 101, 109, 115, 99, 114, 105, 112, 116, 101, 110, 58, 58, 109, 101, 109, 111, 114, 121, 95, 118, 105, 101, 119, 60, 99, 104, 97, 114, 62, 0, 101, 109, 115, 99, 114, 105, 112, 116, 101, 110, 58, 58, 109, 101, 109, 111, 114, 121, 95, 118, 105, 101, 119, 60, 115, 105, 103, 110, 101], "i8", ALLOC_NONE, Runtime.GLOBAL_BASE + 1003061);
  allocate([100, 32, 99, 104, 97, 114, 62, 0, 101, 109, 115, 99, 114, 105, 112, 116, 101, 110, 58, 58, 109, 101, 109, 111, 114, 121, 95, 118, 105, 101, 119, 60, 117, 110, 115, 105, 103, 110, 101, 100, 32, 99, 104, 97, 114, 62, 0, 101, 109, 115, 99, 114, 105, 112, 116, 101, 110, 58, 58, 109, 101, 109, 111, 114, 121, 95, 118, 105, 101, 119, 60, 115, 104, 111, 114, 116, 62, 0, 101, 109, 115, 99, 114, 105, 112, 116, 101, 110, 58, 58, 109, 101, 109, 111, 114, 121, 95, 118, 105, 101, 119, 60, 117, 110, 115, 105, 103, 110, 101, 100, 32, 115, 104, 111, 114, 116, 62, 0, 101, 109, 115, 99, 114, 105, 112, 116, 101, 110, 58, 58, 109, 101, 109, 111, 114, 121, 95, 118, 105, 101, 119, 60, 105, 110, 116, 62, 0, 101, 109, 115, 99, 114, 105, 112, 116, 101, 110, 58, 58, 109, 101, 109, 111, 114, 121, 95, 118, 105, 101, 119, 60, 117, 110, 115, 105, 103, 110, 101, 100, 32, 105, 110, 116, 62, 0, 101, 109, 115, 99, 114, 105, 112, 116, 101, 110, 58, 58, 109, 101, 109, 111, 114, 121, 95, 118, 105, 101, 119, 60, 108, 111, 110, 103, 62, 0, 101, 109, 115, 99, 114, 105, 112, 116, 101, 110, 58, 58, 109, 101, 109, 111, 114, 121, 95, 118, 105, 101, 119, 60, 117, 110, 115, 105, 103, 110, 101, 100, 32, 108, 111, 110, 103, 62, 0, 101, 109, 115, 99, 114, 105, 112, 116, 101, 110, 58, 58, 109, 101, 109, 111, 114, 121, 95, 118, 105, 101, 119, 60, 105, 110, 116, 56, 95, 116, 62, 0, 101, 109, 115, 99, 114, 105, 112, 116, 101, 110, 58, 58, 109, 101, 109, 111, 114, 121, 95, 118, 105, 101, 119, 60, 117, 105, 110, 116, 56, 95, 116, 62, 0, 101, 109, 115, 99, 114, 105, 112, 116, 101, 110, 58, 58, 109, 101, 109, 111, 114, 121, 95, 118, 105, 101, 119, 60, 105, 110, 116, 49, 54, 95, 116, 62, 0, 101, 109, 115, 99, 114, 105, 112, 116, 101, 110, 58, 58, 109, 101, 109, 111, 114, 121, 95, 118, 105, 101, 119, 60, 117, 105, 110, 116, 49, 54, 95, 116, 62, 0, 101, 109, 115, 99, 114, 105, 112, 116, 101, 110, 58, 58, 109, 101, 109, 111, 114, 121, 95, 118, 105, 101, 119, 60, 105, 110, 116, 51, 50, 95, 116, 62, 0, 101, 109, 115, 99, 114, 105, 112, 116, 101, 110, 58, 58, 109, 101, 109, 111, 114, 121, 95, 118, 105, 101, 119, 60, 117, 105, 110, 116, 51, 50, 95, 116, 62, 0, 101, 109, 115, 99, 114, 105, 112, 116, 101, 110, 58, 58, 109, 101, 109, 111, 114, 121, 95, 118, 105, 101, 119, 60, 102, 108, 111, 97, 116, 62, 0, 101, 109, 115, 99, 114, 105, 112, 116, 101, 110, 58, 58, 109, 101, 109, 111, 114, 121, 95, 118, 105, 101, 119, 60, 100, 111, 117, 98, 108, 101, 62, 0, 101, 109, 115, 99, 114, 105, 112, 116, 101, 110, 58, 58, 109, 101, 109, 111, 114, 121, 95, 118, 105, 101, 119, 60, 108, 111, 110, 103, 32, 100, 111, 117, 98, 108, 101, 62, 0, 78, 49, 48, 101, 109, 115, 99, 114, 105, 112, 116, 101, 110, 49, 49, 109, 101, 109, 111, 114, 121, 95, 118, 105, 101, 119, 73, 101, 69, 69, 0, 78, 49, 48, 101, 109, 115, 99, 114, 105, 112, 116, 101, 110, 49, 49, 109, 101, 109, 111, 114, 121, 95, 118, 105, 101, 119, 73, 100, 69, 69, 0, 78, 49, 48, 101, 109, 115, 99, 114, 105, 112, 116, 101, 110, 49, 49, 109, 101, 109, 111, 114, 121, 95, 118, 105, 101, 119, 73, 102, 69, 69, 0, 78, 49, 48, 101, 109, 115, 99, 114, 105, 112, 116, 101, 110, 49, 49, 109, 101, 109, 111, 114, 121, 95, 118, 105, 101, 119, 73, 109, 69, 69, 0, 78, 49, 48, 101, 109, 115, 99, 114, 105, 112, 116, 101, 110, 49, 49, 109, 101, 109, 111, 114, 121, 95, 118, 105, 101, 119, 73, 108, 69, 69, 0, 78, 49, 48, 101, 109, 115, 99, 114, 105, 112, 116, 101, 110, 49, 49, 109, 101, 109, 111, 114, 121, 95, 118, 105, 101, 119, 73, 106, 69, 69, 0, 78, 49, 48, 101, 109, 115, 99, 114, 105, 112, 116, 101, 110, 49, 49, 109, 101, 109, 111, 114, 121, 95, 118, 105, 101, 119, 73, 105, 69, 69, 0, 78, 49, 48, 101, 109, 115, 99, 114, 105, 112, 116, 101, 110, 49, 49, 109, 101, 109, 111, 114, 121, 95, 118, 105, 101, 119, 73, 116, 69, 69, 0, 78, 49, 48, 101, 109, 115, 99, 114, 105, 112, 116, 101, 110, 49, 49, 109, 101, 109, 111, 114, 121, 95, 118, 105, 101, 119, 73, 115, 69, 69, 0, 78, 49, 48, 101, 109, 115, 99, 114, 105, 112, 116, 101, 110, 49, 49, 109, 101, 109, 111, 114, 121, 95, 118, 105, 101, 119, 73, 104, 69, 69, 0, 78, 49, 48, 101, 109, 115, 99, 114, 105, 112, 116, 101, 110, 49, 49, 109, 101, 109, 111, 114, 121, 95, 118, 105, 101, 119, 73, 97, 69, 69, 0, 78, 49, 48, 101, 109, 115, 99, 114, 105, 112, 116, 101, 110, 49, 49, 109, 101, 109, 111, 114, 121, 95, 118, 105, 101, 119, 73, 99, 69, 69, 0, 78, 49, 48, 101, 109, 115, 99, 114, 105, 112, 116, 101, 110, 51, 118, 97, 108, 69, 0, 78, 83, 116, 51, 95, 95, 49, 49, 50, 98, 97, 115, 105, 99, 95, 115, 116, 114, 105, 110, 103, 73, 119, 78, 83, 95, 49, 49, 99, 104, 97, 114, 95, 116, 114, 97, 105, 116, 115, 73, 119, 69, 69, 78, 83, 95, 57, 97, 108, 108, 111, 99, 97, 116, 111, 114, 73, 119, 69, 69, 69, 69, 0, 78, 83, 116, 51, 95, 95, 49, 50, 49, 95, 95, 98, 97, 115, 105, 99, 95, 115, 116, 114, 105, 110, 103, 95, 99, 111, 109, 109, 111, 110, 73, 76, 98, 49, 69, 69, 69, 0, 78, 83, 116, 51, 95, 95, 49, 49, 50, 98, 97, 115, 105, 99, 95, 115, 116, 114, 105, 110, 103, 73, 104, 78, 83, 95, 49, 49, 99, 104, 97, 114, 95, 116, 114, 97, 105, 116, 115, 73, 104, 69, 69, 78, 83, 95, 57, 97, 108, 108, 111, 99, 97, 116, 111, 114, 73, 104, 69, 69, 69, 69, 0, 78, 83, 116, 51, 95, 95, 49, 49, 50, 98, 97, 115, 105, 99, 95, 115, 116, 114, 105, 110, 103, 73, 99, 78, 83, 95, 49, 49, 99, 104, 97, 114, 95, 116, 114, 97, 105, 116, 115, 73, 99, 69, 69, 78, 83, 95, 57, 97, 108, 108, 111, 99, 97, 116, 111, 114, 73, 99, 69, 69, 69, 69, 0, 83, 116, 57, 116, 121, 112, 101, 95, 105, 110, 102, 111, 0, 78, 49, 48, 95, 95, 99, 120, 120, 97, 98, 105, 118, 49, 49, 54, 95, 95, 115, 104, 105, 109, 95, 116, 121, 112, 101, 95, 105, 110, 102, 111, 69, 0, 78, 49, 48, 95, 95, 99, 120, 120, 97, 98, 105, 118, 49, 49, 55, 95, 95, 99, 108, 97, 115, 115, 95, 116, 121, 112, 101, 95, 105, 110, 102, 111, 69, 0, 78, 49, 48, 95, 95, 99, 120, 120, 97, 98, 105, 118, 49, 49, 57, 95, 95, 112, 111, 105, 110, 116, 101, 114, 95, 116, 121, 112, 101, 95, 105, 110, 102, 111, 69, 0, 78, 49, 48, 95, 95, 99, 120, 120, 97, 98, 105, 118, 49, 49, 55, 95, 95, 112, 98, 97, 115, 101, 95, 116, 121, 112, 101, 95, 105, 110, 102, 111, 69, 0, 78, 49, 48, 95, 95, 99, 120, 120, 97, 98, 105, 118, 49, 50, 51, 95, 95, 102, 117, 110, 100, 97, 109, 101, 110, 116, 97, 108, 95, 116, 121, 112, 101, 95, 105, 110, 102, 111, 69, 0, 118, 0, 80, 118, 0, 68, 110, 0, 99, 0, 104, 0, 115, 0, 105, 0, 106, 0, 108, 0, 109, 0, 100, 0, 78, 49, 48, 95, 95, 99, 120, 120, 97, 98, 105, 118, 49, 49, 54, 95, 95, 101, 110, 117, 109, 95, 116, 121, 112, 101, 95, 105, 110, 102, 111, 69, 0, 78, 49, 48, 95, 95, 99, 120, 120, 97, 98, 105, 118, 49, 50, 48, 95, 95, 115, 105, 95, 99, 108, 97, 115, 115, 95, 116, 121, 112, 101, 95, 105, 110, 102, 111, 69, 0, 78, 49, 48, 95, 95, 99, 120, 120, 97, 98, 105, 118, 49, 50, 49, 95, 95, 118, 109, 105, 95, 99, 108, 97, 115, 115, 95, 116, 121, 112, 101, 95, 105, 110, 102, 111, 69, 0, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 255, 255, 255, 255, 255, 255, 255, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 255, 255, 255, 255, 255, 255, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 0, 1, 2, 4, 7, 3, 6, 5, 0, 105, 110, 102, 105, 110, 105, 116, 121, 0, 17, 0, 10, 0, 17, 17, 17, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 11, 0, 0, 0, 0, 0, 0, 0, 0, 17, 0, 15, 10, 17, 17, 17, 3, 10, 7, 0, 1, 19, 9, 11, 11, 0, 0, 9, 6, 11, 0, 0, 11, 0, 6, 17, 0, 0, 0, 17, 17, 17, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 11, 0, 0, 0, 0, 0, 0, 0, 0, 17, 0, 10, 10, 17, 17, 17, 0, 10, 0, 0, 2, 0, 9, 11, 0, 0, 0, 9, 0, 11, 0, 0, 11, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 12, 0, 0, 0, 0, 12, 0, 0, 0, 0, 9, 12, 0, 0, 0, 0, 0, 12, 0, 0, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 13, 0, 0, 0, 4, 13, 0, 0, 0, 0, 9, 14, 0, 0, 0, 0, 0, 14, 0, 0, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 15, 0, 0, 0, 0, 15, 0, 0, 0, 0, 9, 16, 0, 0, 0, 0, 0, 16, 0, 0, 16, 0, 0, 18, 0, 0, 0, 18, 18, 18, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 18, 0, 0, 0, 18, 18, 18, 0, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 11, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10, 0, 0, 0, 0, 10, 0, 0, 0, 0, 9, 11, 0, 0, 0, 0, 0, 11, 0, 0, 11, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 12, 0, 0, 0, 0, 12, 0, 0, 0, 0, 9, 12, 0, 0, 0, 0, 0, 12, 0, 0, 12, 0, 0, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 65, 66, 67, 68, 69, 70, 45, 43, 32, 32, 32, 48, 88, 48, 120, 0, 40, 110, 117, 108, 108, 41, 0, 45, 48, 88, 43, 48, 88, 32, 48, 88, 45, 48, 120, 43, 48, 120, 32, 48, 120, 0, 105, 110, 102, 0, 73, 78, 70, 0, 110, 97, 110, 0, 78, 65, 78, 0, 46, 0], "i8", ALLOC_NONE, Runtime.GLOBAL_BASE + 1013301);
  var tempDoublePtr = Runtime.alignMemory(allocate(12, "i8", ALLOC_STATIC), 8);
  assert(tempDoublePtr % 8 == 0);
  function copyTempFloat(ptr) {
    HEAP8[tempDoublePtr] = HEAP8[ptr];
    HEAP8[tempDoublePtr + 1] = HEAP8[ptr + 1];
    HEAP8[tempDoublePtr + 2] = HEAP8[ptr + 2];
    HEAP8[tempDoublePtr + 3] = HEAP8[ptr + 3];
  }
  function copyTempDouble(ptr) {
    HEAP8[tempDoublePtr] = HEAP8[ptr];
    HEAP8[tempDoublePtr + 1] = HEAP8[ptr + 1];
    HEAP8[tempDoublePtr + 2] = HEAP8[ptr + 2];
    HEAP8[tempDoublePtr + 3] = HEAP8[ptr + 3];
    HEAP8[tempDoublePtr + 4] = HEAP8[ptr + 4];
    HEAP8[tempDoublePtr + 5] = HEAP8[ptr + 5];
    HEAP8[tempDoublePtr + 6] = HEAP8[ptr + 6];
    HEAP8[tempDoublePtr + 7] = HEAP8[ptr + 7];
  }
  var ERRNO_CODES = {
    EPERM: 1,
    ENOENT: 2,
    ESRCH: 3,
    EINTR: 4,
    EIO: 5,
    ENXIO: 6,
    E2BIG: 7,
    ENOEXEC: 8,
    EBADF: 9,
    ECHILD: 10,
    EAGAIN: 11,
    EWOULDBLOCK: 11,
    ENOMEM: 12,
    EACCES: 13,
    EFAULT: 14,
    ENOTBLK: 15,
    EBUSY: 16,
    EEXIST: 17,
    EXDEV: 18,
    ENODEV: 19,
    ENOTDIR: 20,
    EISDIR: 21,
    EINVAL: 22,
    ENFILE: 23,
    EMFILE: 24,
    ENOTTY: 25,
    ETXTBSY: 26,
    EFBIG: 27,
    ENOSPC: 28,
    ESPIPE: 29,
    EROFS: 30,
    EMLINK: 31,
    EPIPE: 32,
    EDOM: 33,
    ERANGE: 34,
    ENOMSG: 42,
    EIDRM: 43,
    ECHRNG: 44,
    EL2NSYNC: 45,
    EL3HLT: 46,
    EL3RST: 47,
    ELNRNG: 48,
    EUNATCH: 49,
    ENOCSI: 50,
    EL2HLT: 51,
    EDEADLK: 35,
    ENOLCK: 37,
    EBADE: 52,
    EBADR: 53,
    EXFULL: 54,
    ENOANO: 55,
    EBADRQC: 56,
    EBADSLT: 57,
    EDEADLOCK: 35,
    EBFONT: 59,
    ENOSTR: 60,
    ENODATA: 61,
    ETIME: 62,
    ENOSR: 63,
    ENONET: 64,
    ENOPKG: 65,
    EREMOTE: 66,
    ENOLINK: 67,
    EADV: 68,
    ESRMNT: 69,
    ECOMM: 70,
    EPROTO: 71,
    EMULTIHOP: 72,
    EDOTDOT: 73,
    EBADMSG: 74,
    ENOTUNIQ: 76,
    EBADFD: 77,
    EREMCHG: 78,
    ELIBACC: 79,
    ELIBBAD: 80,
    ELIBSCN: 81,
    ELIBMAX: 82,
    ELIBEXEC: 83,
    ENOSYS: 38,
    ENOTEMPTY: 39,
    ENAMETOOLONG: 36,
    ELOOP: 40,
    EOPNOTSUPP: 95,
    EPFNOSUPPORT: 96,
    ECONNRESET: 104,
    ENOBUFS: 105,
    EAFNOSUPPORT: 97,
    EPROTOTYPE: 91,
    ENOTSOCK: 88,
    ENOPROTOOPT: 92,
    ESHUTDOWN: 108,
    ECONNREFUSED: 111,
    EADDRINUSE: 98,
    ECONNABORTED: 103,
    ENETUNREACH: 101,
    ENETDOWN: 100,
    ETIMEDOUT: 110,
    EHOSTDOWN: 112,
    EHOSTUNREACH: 113,
    EINPROGRESS: 115,
    EALREADY: 114,
    EDESTADDRREQ: 89,
    EMSGSIZE: 90,
    EPROTONOSUPPORT: 93,
    ESOCKTNOSUPPORT: 94,
    EADDRNOTAVAIL: 99,
    ENETRESET: 102,
    EISCONN: 106,
    ENOTCONN: 107,
    ETOOMANYREFS: 109,
    EUSERS: 87,
    EDQUOT: 122,
    ESTALE: 116,
    ENOTSUP: 95,
    ENOMEDIUM: 123,
    EILSEQ: 84,
    EOVERFLOW: 75,
    ECANCELED: 125,
    ENOTRECOVERABLE: 131,
    EOWNERDEAD: 130,
    ESTRPIPE: 86
  };
  var ERRNO_MESSAGES = {
    0: "Success",
    1: "Not super-user",
    2: "No such file or directory",
    3: "No such process",
    4: "Interrupted system call",
    5: "I/O error",
    6: "No such device or address",
    7: "Arg list too long",
    8: "Exec format error",
    9: "Bad file number",
    10: "No children",
    11: "No more processes",
    12: "Not enough core",
    13: "Permission denied",
    14: "Bad address",
    15: "Block device required",
    16: "Mount device busy",
    17: "File exists",
    18: "Cross-device link",
    19: "No such device",
    20: "Not a directory",
    21: "Is a directory",
    22: "Invalid argument",
    23: "Too many open files in system",
    24: "Too many open files",
    25: "Not a typewriter",
    26: "Text file busy",
    27: "File too large",
    28: "No space left on device",
    29: "Illegal seek",
    30: "Read only file system",
    31: "Too many links",
    32: "Broken pipe",
    33: "Math arg out of domain of func",
    34: "Math result not representable",
    35: "File locking deadlock error",
    36: "File or path name too long",
    37: "No record locks available",
    38: "Function not implemented",
    39: "Directory not empty",
    40: "Too many symbolic links",
    42: "No message of desired type",
    43: "Identifier removed",
    44: "Channel number out of range",
    45: "Level 2 not synchronized",
    46: "Level 3 halted",
    47: "Level 3 reset",
    48: "Link number out of range",
    49: "Protocol driver not attached",
    50: "No CSI structure available",
    51: "Level 2 halted",
    52: "Invalid exchange",
    53: "Invalid request descriptor",
    54: "Exchange full",
    55: "No anode",
    56: "Invalid request code",
    57: "Invalid slot",
    59: "Bad font file fmt",
    60: "Device not a stream",
    61: "No data (for no delay io)",
    62: "Timer expired",
    63: "Out of streams resources",
    64: "Machine is not on the network",
    65: "Package not installed",
    66: "The object is remote",
    67: "The link has been severed",
    68: "Advertise error",
    69: "Srmount error",
    70: "Communication error on send",
    71: "Protocol error",
    72: "Multihop attempted",
    73: "Cross mount point (not really error)",
    74: "Trying to read unreadable message",
    75: "Value too large for defined data type",
    76: "Given log. name not unique",
    77: "f.d. invalid for this operation",
    78: "Remote address changed",
    79: "Can   access a needed shared lib",
    80: "Accessing a corrupted shared lib",
    81: ".lib section in a.out corrupted",
    82: "Attempting to link in too many libs",
    83: "Attempting to exec a shared library",
    84: "Illegal byte sequence",
    86: "Streams pipe error",
    87: "Too many users",
    88: "Socket operation on non-socket",
    89: "Destination address required",
    90: "Message too long",
    91: "Protocol wrong type for socket",
    92: "Protocol not available",
    93: "Unknown protocol",
    94: "Socket type not supported",
    95: "Not supported",
    96: "Protocol family not supported",
    97: "Address family not supported by protocol family",
    98: "Address already in use",
    99: "Address not available",
    100: "Network interface is not configured",
    101: "Network is unreachable",
    102: "Connection reset by network",
    103: "Connection aborted",
    104: "Connection reset by peer",
    105: "No buffer space available",
    106: "Socket is already connected",
    107: "Socket is not connected",
    108: "Can't send after socket shutdown",
    109: "Too many references",
    110: "Connection timed out",
    111: "Connection refused",
    112: "Host is down",
    113: "Host is unreachable",
    114: "Socket already connected",
    115: "Connection already in progress",
    116: "Stale file handle",
    122: "Quota exceeded",
    123: "No medium (in tape drive)",
    125: "Operation canceled",
    130: "Previous owner died",
    131: "State not recoverable"
  };
  var ___errno_state = 0;
  function ___setErrNo(value) {
    HEAP32[___errno_state >> 2] = value;
    return value;
  }
  var PATH = {
    splitPath: (function(filename) {
      var splitPathRe = /^(\/?|)([\s\S]*?)((?:\.{1,2}|[^\/]+?|)(\.[^.\/]*|))(?:[\/]*)$/;
      return splitPathRe.exec(filename).slice(1);
    }),
    normalizeArray: (function(parts, allowAboveRoot) {
      var up = 0;
      for (var i = parts.length - 1; i >= 0; i--) {
        var last = parts[i];
        if (last === ".") {
          parts.splice(i, 1);
        } else if (last === "..") {
          parts.splice(i, 1);
          up++;
        } else if (up) {
          parts.splice(i, 1);
          up--;
        }
      }
      if (allowAboveRoot) {
        for (; up--; up) {
          parts.unshift("..");
        }
      }
      return parts;
    }),
    normalize: (function(path) {
      var isAbsolute = path.charAt(0) === "/",
          trailingSlash = path.substr(-1) === "/";
      path = PATH.normalizeArray(path.split("/").filter((function(p) {
        return !!p;
      })), !isAbsolute).join("/");
      if (!path && !isAbsolute) {
        path = ".";
      }
      if (path && trailingSlash) {
        path += "/";
      }
      return (isAbsolute ? "/" : "") + path;
    }),
    dirname: (function(path) {
      var result = PATH.splitPath(path),
          root = result[0],
          dir = result[1];
      if (!root && !dir) {
        return ".";
      }
      if (dir) {
        dir = dir.substr(0, dir.length - 1);
      }
      return root + dir;
    }),
    basename: (function(path) {
      if (path === "/")
        return "/";
      var lastSlash = path.lastIndexOf("/");
      if (lastSlash === -1)
        return path;
      return path.substr(lastSlash + 1);
    }),
    extname: (function(path) {
      return PATH.splitPath(path)[3];
    }),
    join: (function() {
      var paths = Array.prototype.slice.call(arguments, 0);
      return PATH.normalize(paths.join("/"));
    }),
    join2: (function(l, r) {
      return PATH.normalize(l + "/" + r);
    }),
    resolve: (function() {
      var resolvedPath = "",
          resolvedAbsolute = false;
      for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {
        var path = i >= 0 ? arguments[i] : FS.cwd();
        if (typeof path !== "string") {
          throw new TypeError("Arguments to path.resolve must be strings");
        } else if (!path) {
          return "";
        }
        resolvedPath = path + "/" + resolvedPath;
        resolvedAbsolute = path.charAt(0) === "/";
      }
      resolvedPath = PATH.normalizeArray(resolvedPath.split("/").filter((function(p) {
        return !!p;
      })), !resolvedAbsolute).join("/");
      return (resolvedAbsolute ? "/" : "") + resolvedPath || ".";
    }),
    relative: (function(from, to) {
      from = PATH.resolve(from).substr(1);
      to = PATH.resolve(to).substr(1);
      function trim(arr) {
        var start = 0;
        for (; start < arr.length; start++) {
          if (arr[start] !== "")
            break;
        }
        var end = arr.length - 1;
        for (; end >= 0; end--) {
          if (arr[end] !== "")
            break;
        }
        if (start > end)
          return [];
        return arr.slice(start, end - start + 1);
      }
      var fromParts = trim(from.split("/"));
      var toParts = trim(to.split("/"));
      var length = Math.min(fromParts.length, toParts.length);
      var samePartsLength = length;
      for (var i = 0; i < length; i++) {
        if (fromParts[i] !== toParts[i]) {
          samePartsLength = i;
          break;
        }
      }
      var outputParts = [];
      for (var i = samePartsLength; i < fromParts.length; i++) {
        outputParts.push("..");
      }
      outputParts = outputParts.concat(toParts.slice(samePartsLength));
      return outputParts.join("/");
    })
  };
  var TTY = {
    ttys: [],
    init: (function() {}),
    shutdown: (function() {}),
    register: (function(dev, ops) {
      TTY.ttys[dev] = {
        input: [],
        output: [],
        ops: ops
      };
      FS.registerDevice(dev, TTY.stream_ops);
    }),
    stream_ops: {
      open: (function(stream) {
        var tty = TTY.ttys[stream.node.rdev];
        if (!tty) {
          throw new FS.ErrnoError(ERRNO_CODES.ENODEV);
        }
        stream.tty = tty;
        stream.seekable = false;
      }),
      close: (function(stream) {
        stream.tty.ops.flush(stream.tty);
      }),
      flush: (function(stream) {
        stream.tty.ops.flush(stream.tty);
      }),
      read: (function(stream, buffer, offset, length, pos) {
        if (!stream.tty || !stream.tty.ops.get_char) {
          throw new FS.ErrnoError(ERRNO_CODES.ENXIO);
        }
        var bytesRead = 0;
        for (var i = 0; i < length; i++) {
          var result;
          try {
            result = stream.tty.ops.get_char(stream.tty);
          } catch (e) {
            throw new FS.ErrnoError(ERRNO_CODES.EIO);
          }
          if (result === undefined && bytesRead === 0) {
            throw new FS.ErrnoError(ERRNO_CODES.EAGAIN);
          }
          if (result === null || result === undefined)
            break;
          bytesRead++;
          buffer[offset + i] = result;
        }
        if (bytesRead) {
          stream.node.timestamp = Date.now();
        }
        return bytesRead;
      }),
      write: (function(stream, buffer, offset, length, pos) {
        if (!stream.tty || !stream.tty.ops.put_char) {
          throw new FS.ErrnoError(ERRNO_CODES.ENXIO);
        }
        for (var i = 0; i < length; i++) {
          try {
            stream.tty.ops.put_char(stream.tty, buffer[offset + i]);
          } catch (e) {
            throw new FS.ErrnoError(ERRNO_CODES.EIO);
          }
        }
        if (length) {
          stream.node.timestamp = Date.now();
        }
        return i;
      })
    },
    default_tty_ops: {
      get_char: (function(tty) {
        if (!tty.input.length) {
          var result = null;
          if (ENVIRONMENT_IS_NODE) {
            var BUFSIZE = 256;
            var buf = new Buffer(BUFSIZE);
            var bytesRead = 0;
            var fd = process.stdin.fd;
            var usingDevice = false;
            try {
              fd = fs.openSync("/dev/stdin", "r");
              usingDevice = true;
            } catch (e) {}
            bytesRead = fs.readSync(fd, buf, 0, BUFSIZE, null);
            if (usingDevice) {
              fs.closeSync(fd);
            }
            if (bytesRead > 0) {
              result = buf.slice(0, bytesRead).toString("utf-8");
            } else {
              result = null;
            }
          } else if (typeof window != "undefined" && typeof window.prompt == "function") {
            result = window.prompt("Input: ");
            if (result !== null) {
              result += "\n";
            }
          } else if (typeof readline == "function") {
            result = readline();
            if (result !== null) {
              result += "\n";
            }
          }
          if (!result) {
            return null;
          }
          tty.input = intArrayFromString(result, true);
        }
        return tty.input.shift();
      }),
      put_char: (function(tty, val) {
        if (val === null || val === 10) {
          Module["print"](UTF8ArrayToString(tty.output, 0));
          tty.output = [];
        } else {
          if (val != 0)
            tty.output.push(val);
        }
      }),
      flush: (function(tty) {
        if (tty.output && tty.output.length > 0) {
          Module["print"](UTF8ArrayToString(tty.output, 0));
          tty.output = [];
        }
      })
    },
    default_tty1_ops: {
      put_char: (function(tty, val) {
        if (val === null || val === 10) {
          Module["printErr"](UTF8ArrayToString(tty.output, 0));
          tty.output = [];
        } else {
          if (val != 0)
            tty.output.push(val);
        }
      }),
      flush: (function(tty) {
        if (tty.output && tty.output.length > 0) {
          Module["printErr"](UTF8ArrayToString(tty.output, 0));
          tty.output = [];
        }
      })
    }
  };
  var MEMFS = {
    ops_table: null,
    mount: (function(mount) {
      return MEMFS.createNode(null, "/", 16384 | 511, 0);
    }),
    createNode: (function(parent, name, mode, dev) {
      if (FS.isBlkdev(mode) || FS.isFIFO(mode)) {
        throw new FS.ErrnoError(ERRNO_CODES.EPERM);
      }
      if (!MEMFS.ops_table) {
        MEMFS.ops_table = {
          dir: {
            node: {
              getattr: MEMFS.node_ops.getattr,
              setattr: MEMFS.node_ops.setattr,
              lookup: MEMFS.node_ops.lookup,
              mknod: MEMFS.node_ops.mknod,
              rename: MEMFS.node_ops.rename,
              unlink: MEMFS.node_ops.unlink,
              rmdir: MEMFS.node_ops.rmdir,
              readdir: MEMFS.node_ops.readdir,
              symlink: MEMFS.node_ops.symlink
            },
            stream: {llseek: MEMFS.stream_ops.llseek}
          },
          file: {
            node: {
              getattr: MEMFS.node_ops.getattr,
              setattr: MEMFS.node_ops.setattr
            },
            stream: {
              llseek: MEMFS.stream_ops.llseek,
              read: MEMFS.stream_ops.read,
              write: MEMFS.stream_ops.write,
              allocate: MEMFS.stream_ops.allocate,
              mmap: MEMFS.stream_ops.mmap,
              msync: MEMFS.stream_ops.msync
            }
          },
          link: {
            node: {
              getattr: MEMFS.node_ops.getattr,
              setattr: MEMFS.node_ops.setattr,
              readlink: MEMFS.node_ops.readlink
            },
            stream: {}
          },
          chrdev: {
            node: {
              getattr: MEMFS.node_ops.getattr,
              setattr: MEMFS.node_ops.setattr
            },
            stream: FS.chrdev_stream_ops
          }
        };
      }
      var node = FS.createNode(parent, name, mode, dev);
      if (FS.isDir(node.mode)) {
        node.node_ops = MEMFS.ops_table.dir.node;
        node.stream_ops = MEMFS.ops_table.dir.stream;
        node.contents = {};
      } else if (FS.isFile(node.mode)) {
        node.node_ops = MEMFS.ops_table.file.node;
        node.stream_ops = MEMFS.ops_table.file.stream;
        node.usedBytes = 0;
        node.contents = null;
      } else if (FS.isLink(node.mode)) {
        node.node_ops = MEMFS.ops_table.link.node;
        node.stream_ops = MEMFS.ops_table.link.stream;
      } else if (FS.isChrdev(node.mode)) {
        node.node_ops = MEMFS.ops_table.chrdev.node;
        node.stream_ops = MEMFS.ops_table.chrdev.stream;
      }
      node.timestamp = Date.now();
      if (parent) {
        parent.contents[name] = node;
      }
      return node;
    }),
    getFileDataAsRegularArray: (function(node) {
      if (node.contents && node.contents.subarray) {
        var arr = [];
        for (var i = 0; i < node.usedBytes; ++i)
          arr.push(node.contents[i]);
        return arr;
      }
      return node.contents;
    }),
    getFileDataAsTypedArray: (function(node) {
      if (!node.contents)
        return new Uint8Array;
      if (node.contents.subarray)
        return node.contents.subarray(0, node.usedBytes);
      return new Uint8Array(node.contents);
    }),
    expandFileStorage: (function(node, newCapacity) {
      if (node.contents && node.contents.subarray && newCapacity > node.contents.length) {
        node.contents = MEMFS.getFileDataAsRegularArray(node);
        node.usedBytes = node.contents.length;
      }
      if (!node.contents || node.contents.subarray) {
        var prevCapacity = node.contents ? node.contents.buffer.byteLength : 0;
        if (prevCapacity >= newCapacity)
          return ;
        var CAPACITY_DOUBLING_MAX = 1024 * 1024;
        newCapacity = Math.max(newCapacity, prevCapacity * (prevCapacity < CAPACITY_DOUBLING_MAX ? 2 : 1.125) | 0);
        if (prevCapacity != 0)
          newCapacity = Math.max(newCapacity, 256);
        var oldContents = node.contents;
        node.contents = new Uint8Array(newCapacity);
        if (node.usedBytes > 0)
          node.contents.set(oldContents.subarray(0, node.usedBytes), 0);
        return ;
      }
      if (!node.contents && newCapacity > 0)
        node.contents = [];
      while (node.contents.length < newCapacity)
        node.contents.push(0);
    }),
    resizeFileStorage: (function(node, newSize) {
      if (node.usedBytes == newSize)
        return ;
      if (newSize == 0) {
        node.contents = null;
        node.usedBytes = 0;
        return ;
      }
      if (!node.contents || node.contents.subarray) {
        var oldContents = node.contents;
        node.contents = new Uint8Array(new ArrayBuffer(newSize));
        if (oldContents) {
          node.contents.set(oldContents.subarray(0, Math.min(newSize, node.usedBytes)));
        }
        node.usedBytes = newSize;
        return ;
      }
      if (!node.contents)
        node.contents = [];
      if (node.contents.length > newSize)
        node.contents.length = newSize;
      else
        while (node.contents.length < newSize)
          node.contents.push(0);
      node.usedBytes = newSize;
    }),
    node_ops: {
      getattr: (function(node) {
        var attr = {};
        attr.dev = FS.isChrdev(node.mode) ? node.id : 1;
        attr.ino = node.id;
        attr.mode = node.mode;
        attr.nlink = 1;
        attr.uid = 0;
        attr.gid = 0;
        attr.rdev = node.rdev;
        if (FS.isDir(node.mode)) {
          attr.size = 4096;
        } else if (FS.isFile(node.mode)) {
          attr.size = node.usedBytes;
        } else if (FS.isLink(node.mode)) {
          attr.size = node.link.length;
        } else {
          attr.size = 0;
        }
        attr.atime = new Date(node.timestamp);
        attr.mtime = new Date(node.timestamp);
        attr.ctime = new Date(node.timestamp);
        attr.blksize = 4096;
        attr.blocks = Math.ceil(attr.size / attr.blksize);
        return attr;
      }),
      setattr: (function(node, attr) {
        if (attr.mode !== undefined) {
          node.mode = attr.mode;
        }
        if (attr.timestamp !== undefined) {
          node.timestamp = attr.timestamp;
        }
        if (attr.size !== undefined) {
          MEMFS.resizeFileStorage(node, attr.size);
        }
      }),
      lookup: (function(parent, name) {
        throw FS.genericErrors[ERRNO_CODES.ENOENT];
      }),
      mknod: (function(parent, name, mode, dev) {
        return MEMFS.createNode(parent, name, mode, dev);
      }),
      rename: (function(old_node, new_dir, new_name) {
        if (FS.isDir(old_node.mode)) {
          var new_node;
          try {
            new_node = FS.lookupNode(new_dir, new_name);
          } catch (e) {}
          if (new_node) {
            for (var i in new_node.contents) {
              throw new FS.ErrnoError(ERRNO_CODES.ENOTEMPTY);
            }
          }
        }
        delete old_node.parent.contents[old_node.name];
        old_node.name = new_name;
        new_dir.contents[new_name] = old_node;
        old_node.parent = new_dir;
      }),
      unlink: (function(parent, name) {
        delete parent.contents[name];
      }),
      rmdir: (function(parent, name) {
        var node = FS.lookupNode(parent, name);
        for (var i in node.contents) {
          throw new FS.ErrnoError(ERRNO_CODES.ENOTEMPTY);
        }
        delete parent.contents[name];
      }),
      readdir: (function(node) {
        var entries = [".", ".."];
        for (var key in node.contents) {
          if (!node.contents.hasOwnProperty(key)) {
            continue;
          }
          entries.push(key);
        }
        return entries;
      }),
      symlink: (function(parent, newname, oldpath) {
        var node = MEMFS.createNode(parent, newname, 511 | 40960, 0);
        node.link = oldpath;
        return node;
      }),
      readlink: (function(node) {
        if (!FS.isLink(node.mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        return node.link;
      })
    },
    stream_ops: {
      read: (function(stream, buffer, offset, length, position) {
        var contents = stream.node.contents;
        if (position >= stream.node.usedBytes)
          return 0;
        var size = Math.min(stream.node.usedBytes - position, length);
        assert(size >= 0);
        if (size > 8 && contents.subarray) {
          buffer.set(contents.subarray(position, position + size), offset);
        } else {
          for (var i = 0; i < size; i++)
            buffer[offset + i] = contents[position + i];
        }
        return size;
      }),
      write: (function(stream, buffer, offset, length, position, canOwn) {
        if (!length)
          return 0;
        var node = stream.node;
        node.timestamp = Date.now();
        if (buffer.subarray && (!node.contents || node.contents.subarray)) {
          if (canOwn) {
            node.contents = buffer.subarray(offset, offset + length);
            node.usedBytes = length;
            return length;
          } else if (node.usedBytes === 0 && position === 0) {
            node.contents = new Uint8Array(buffer.subarray(offset, offset + length));
            node.usedBytes = length;
            return length;
          } else if (position + length <= node.usedBytes) {
            node.contents.set(buffer.subarray(offset, offset + length), position);
            return length;
          }
        }
        MEMFS.expandFileStorage(node, position + length);
        if (node.contents.subarray && buffer.subarray)
          node.contents.set(buffer.subarray(offset, offset + length), position);
        else {
          for (var i = 0; i < length; i++) {
            node.contents[position + i] = buffer[offset + i];
          }
        }
        node.usedBytes = Math.max(node.usedBytes, position + length);
        return length;
      }),
      llseek: (function(stream, offset, whence) {
        var position = offset;
        if (whence === 1) {
          position += stream.position;
        } else if (whence === 2) {
          if (FS.isFile(stream.node.mode)) {
            position += stream.node.usedBytes;
          }
        }
        if (position < 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        return position;
      }),
      allocate: (function(stream, offset, length) {
        MEMFS.expandFileStorage(stream.node, offset + length);
        stream.node.usedBytes = Math.max(stream.node.usedBytes, offset + length);
      }),
      mmap: (function(stream, buffer, offset, length, position, prot, flags) {
        if (!FS.isFile(stream.node.mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.ENODEV);
        }
        var ptr;
        var allocated;
        var contents = stream.node.contents;
        if (!(flags & 2) && (contents.buffer === buffer || contents.buffer === buffer.buffer)) {
          allocated = false;
          ptr = contents.byteOffset;
        } else {
          if (position > 0 || position + length < stream.node.usedBytes) {
            if (contents.subarray) {
              contents = contents.subarray(position, position + length);
            } else {
              contents = Array.prototype.slice.call(contents, position, position + length);
            }
          }
          allocated = true;
          ptr = _malloc(length);
          if (!ptr) {
            throw new FS.ErrnoError(ERRNO_CODES.ENOMEM);
          }
          buffer.set(contents, ptr);
        }
        return {
          ptr: ptr,
          allocated: allocated
        };
      }),
      msync: (function(stream, buffer, offset, length, mmapFlags) {
        if (!FS.isFile(stream.node.mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.ENODEV);
        }
        if (mmapFlags & 2) {
          return 0;
        }
        var bytesWritten = MEMFS.stream_ops.write(stream, buffer, 0, length, offset, false);
        return 0;
      })
    }
  };
  var IDBFS = {
    dbs: {},
    indexedDB: (function() {
      if (typeof indexedDB !== "undefined")
        return indexedDB;
      var ret = null;
      if (typeof window === "object")
        ret = window.indexedDB || window.mozIndexedDB || window.webkitIndexedDB || window.msIndexedDB;
      assert(ret, "IDBFS used, but indexedDB not supported");
      return ret;
    }),
    DB_VERSION: 21,
    DB_STORE_NAME: "FILE_DATA",
    mount: (function(mount) {
      return MEMFS.mount.apply(null, arguments);
    }),
    syncfs: (function(mount, populate, callback) {
      IDBFS.getLocalSet(mount, (function(err, local) {
        if (err)
          return callback(err);
        IDBFS.getRemoteSet(mount, (function(err, remote) {
          if (err)
            return callback(err);
          var src = populate ? remote : local;
          var dst = populate ? local : remote;
          IDBFS.reconcile(src, dst, callback);
        }));
      }));
    }),
    getDB: (function(name, callback) {
      var db = IDBFS.dbs[name];
      if (db) {
        return callback(null, db);
      }
      var req;
      try {
        req = IDBFS.indexedDB().open(name, IDBFS.DB_VERSION);
      } catch (e) {
        return callback(e);
      }
      req.onupgradeneeded = (function(e) {
        var db = e.target.result;
        var transaction = e.target.transaction;
        var fileStore;
        if (db.objectStoreNames.contains(IDBFS.DB_STORE_NAME)) {
          fileStore = transaction.objectStore(IDBFS.DB_STORE_NAME);
        } else {
          fileStore = db.createObjectStore(IDBFS.DB_STORE_NAME);
        }
        if (!fileStore.indexNames.contains("timestamp")) {
          fileStore.createIndex("timestamp", "timestamp", {unique: false});
        }
      });
      req.onsuccess = (function() {
        db = req.result;
        IDBFS.dbs[name] = db;
        callback(null, db);
      });
      req.onerror = (function(e) {
        callback(this.error);
        e.preventDefault();
      });
    }),
    getLocalSet: (function(mount, callback) {
      var entries = {};
      function isRealDir(p) {
        return p !== "." && p !== "..";
      }
      function toAbsolute(root) {
        return (function(p) {
          return PATH.join2(root, p);
        });
      }
      var check = FS.readdir(mount.mountpoint).filter(isRealDir).map(toAbsolute(mount.mountpoint));
      while (check.length) {
        var path = check.pop();
        var stat;
        try {
          stat = FS.stat(path);
        } catch (e) {
          return callback(e);
        }
        if (FS.isDir(stat.mode)) {
          check.push.apply(check, FS.readdir(path).filter(isRealDir).map(toAbsolute(path)));
        }
        entries[path] = {timestamp: stat.mtime};
      }
      return callback(null, {
        type: "local",
        entries: entries
      });
    }),
    getRemoteSet: (function(mount, callback) {
      var entries = {};
      IDBFS.getDB(mount.mountpoint, (function(err, db) {
        if (err)
          return callback(err);
        var transaction = db.transaction([IDBFS.DB_STORE_NAME], "readonly");
        transaction.onerror = (function(e) {
          callback(this.error);
          e.preventDefault();
        });
        var store = transaction.objectStore(IDBFS.DB_STORE_NAME);
        var index = store.index("timestamp");
        index.openKeyCursor().onsuccess = (function(event) {
          var cursor = event.target.result;
          if (!cursor) {
            return callback(null, {
              type: "remote",
              db: db,
              entries: entries
            });
          }
          entries[cursor.primaryKey] = {timestamp: cursor.key};
          cursor.continue();
        });
      }));
    }),
    loadLocalEntry: (function(path, callback) {
      var stat,
          node;
      try {
        var lookup = FS.lookupPath(path);
        node = lookup.node;
        stat = FS.stat(path);
      } catch (e) {
        return callback(e);
      }
      if (FS.isDir(stat.mode)) {
        return callback(null, {
          timestamp: stat.mtime,
          mode: stat.mode
        });
      } else if (FS.isFile(stat.mode)) {
        node.contents = MEMFS.getFileDataAsTypedArray(node);
        return callback(null, {
          timestamp: stat.mtime,
          mode: stat.mode,
          contents: node.contents
        });
      } else {
        return callback(new Error("node type not supported"));
      }
    }),
    storeLocalEntry: (function(path, entry, callback) {
      try {
        if (FS.isDir(entry.mode)) {
          FS.mkdir(path, entry.mode);
        } else if (FS.isFile(entry.mode)) {
          FS.writeFile(path, entry.contents, {
            encoding: "binary",
            canOwn: true
          });
        } else {
          return callback(new Error("node type not supported"));
        }
        FS.chmod(path, entry.mode);
        FS.utime(path, entry.timestamp, entry.timestamp);
      } catch (e) {
        return callback(e);
      }
      callback(null);
    }),
    removeLocalEntry: (function(path, callback) {
      try {
        var lookup = FS.lookupPath(path);
        var stat = FS.stat(path);
        if (FS.isDir(stat.mode)) {
          FS.rmdir(path);
        } else if (FS.isFile(stat.mode)) {
          FS.unlink(path);
        }
      } catch (e) {
        return callback(e);
      }
      callback(null);
    }),
    loadRemoteEntry: (function(store, path, callback) {
      var req = store.get(path);
      req.onsuccess = (function(event) {
        callback(null, event.target.result);
      });
      req.onerror = (function(e) {
        callback(this.error);
        e.preventDefault();
      });
    }),
    storeRemoteEntry: (function(store, path, entry, callback) {
      var req = store.put(entry, path);
      req.onsuccess = (function() {
        callback(null);
      });
      req.onerror = (function(e) {
        callback(this.error);
        e.preventDefault();
      });
    }),
    removeRemoteEntry: (function(store, path, callback) {
      var req = store.delete(path);
      req.onsuccess = (function() {
        callback(null);
      });
      req.onerror = (function(e) {
        callback(this.error);
        e.preventDefault();
      });
    }),
    reconcile: (function(src, dst, callback) {
      var total = 0;
      var create = [];
      Object.keys(src.entries).forEach((function(key) {
        var e = src.entries[key];
        var e2 = dst.entries[key];
        if (!e2 || e.timestamp > e2.timestamp) {
          create.push(key);
          total++;
        }
      }));
      var remove = [];
      Object.keys(dst.entries).forEach((function(key) {
        var e = dst.entries[key];
        var e2 = src.entries[key];
        if (!e2) {
          remove.push(key);
          total++;
        }
      }));
      if (!total) {
        return callback(null);
      }
      var errored = false;
      var completed = 0;
      var db = src.type === "remote" ? src.db : dst.db;
      var transaction = db.transaction([IDBFS.DB_STORE_NAME], "readwrite");
      var store = transaction.objectStore(IDBFS.DB_STORE_NAME);
      function done(err) {
        if (err) {
          if (!done.errored) {
            done.errored = true;
            return callback(err);
          }
          return ;
        }
        if (++completed >= total) {
          return callback(null);
        }
      }
      transaction.onerror = (function(e) {
        done(this.error);
        e.preventDefault();
      });
      create.sort().forEach((function(path) {
        if (dst.type === "local") {
          IDBFS.loadRemoteEntry(store, path, (function(err, entry) {
            if (err)
              return done(err);
            IDBFS.storeLocalEntry(path, entry, done);
          }));
        } else {
          IDBFS.loadLocalEntry(path, (function(err, entry) {
            if (err)
              return done(err);
            IDBFS.storeRemoteEntry(store, path, entry, done);
          }));
        }
      }));
      remove.sort().reverse().forEach((function(path) {
        if (dst.type === "local") {
          IDBFS.removeLocalEntry(path, done);
        } else {
          IDBFS.removeRemoteEntry(store, path, done);
        }
      }));
    })
  };
  var NODEFS = {
    isWindows: false,
    staticInit: (function() {
      NODEFS.isWindows = !!process.platform.match(/^win/);
    }),
    mount: (function(mount) {
      assert(ENVIRONMENT_IS_NODE);
      return NODEFS.createNode(null, "/", NODEFS.getMode(mount.opts.root), 0);
    }),
    createNode: (function(parent, name, mode, dev) {
      if (!FS.isDir(mode) && !FS.isFile(mode) && !FS.isLink(mode)) {
        throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
      }
      var node = FS.createNode(parent, name, mode);
      node.node_ops = NODEFS.node_ops;
      node.stream_ops = NODEFS.stream_ops;
      return node;
    }),
    getMode: (function(path) {
      var stat;
      try {
        stat = fs.lstatSync(path);
        if (NODEFS.isWindows) {
          stat.mode = stat.mode | (stat.mode & 146) >> 1;
        }
      } catch (e) {
        if (!e.code)
          throw e;
        throw new FS.ErrnoError(ERRNO_CODES[e.code]);
      }
      return stat.mode;
    }),
    realPath: (function(node) {
      var parts = [];
      while (node.parent !== node) {
        parts.push(node.name);
        node = node.parent;
      }
      parts.push(node.mount.opts.root);
      parts.reverse();
      return PATH.join.apply(null, parts);
    }),
    flagsToPermissionStringMap: {
      0: "r",
      1: "r+",
      2: "r+",
      64: "r",
      65: "r+",
      66: "r+",
      129: "rx+",
      193: "rx+",
      514: "w+",
      577: "w",
      578: "w+",
      705: "wx",
      706: "wx+",
      1024: "a",
      1025: "a",
      1026: "a+",
      1089: "a",
      1090: "a+",
      1153: "ax",
      1154: "ax+",
      1217: "ax",
      1218: "ax+",
      4096: "rs",
      4098: "rs+"
    },
    flagsToPermissionString: (function(flags) {
      if (flags in NODEFS.flagsToPermissionStringMap) {
        return NODEFS.flagsToPermissionStringMap[flags];
      } else {
        return flags;
      }
    }),
    node_ops: {
      getattr: (function(node) {
        var path = NODEFS.realPath(node);
        var stat;
        try {
          stat = fs.lstatSync(path);
        } catch (e) {
          if (!e.code)
            throw e;
          throw new FS.ErrnoError(ERRNO_CODES[e.code]);
        }
        if (NODEFS.isWindows && !stat.blksize) {
          stat.blksize = 4096;
        }
        if (NODEFS.isWindows && !stat.blocks) {
          stat.blocks = (stat.size + stat.blksize - 1) / stat.blksize | 0;
        }
        return {
          dev: stat.dev,
          ino: stat.ino,
          mode: stat.mode,
          nlink: stat.nlink,
          uid: stat.uid,
          gid: stat.gid,
          rdev: stat.rdev,
          size: stat.size,
          atime: stat.atime,
          mtime: stat.mtime,
          ctime: stat.ctime,
          blksize: stat.blksize,
          blocks: stat.blocks
        };
      }),
      setattr: (function(node, attr) {
        var path = NODEFS.realPath(node);
        try {
          if (attr.mode !== undefined) {
            fs.chmodSync(path, attr.mode);
            node.mode = attr.mode;
          }
          if (attr.timestamp !== undefined) {
            var date = new Date(attr.timestamp);
            fs.utimesSync(path, date, date);
          }
          if (attr.size !== undefined) {
            fs.truncateSync(path, attr.size);
          }
        } catch (e) {
          if (!e.code)
            throw e;
          throw new FS.ErrnoError(ERRNO_CODES[e.code]);
        }
      }),
      lookup: (function(parent, name) {
        var path = PATH.join2(NODEFS.realPath(parent), name);
        var mode = NODEFS.getMode(path);
        return NODEFS.createNode(parent, name, mode);
      }),
      mknod: (function(parent, name, mode, dev) {
        var node = NODEFS.createNode(parent, name, mode, dev);
        var path = NODEFS.realPath(node);
        try {
          if (FS.isDir(node.mode)) {
            fs.mkdirSync(path, node.mode);
          } else {
            fs.writeFileSync(path, "", {mode: node.mode});
          }
        } catch (e) {
          if (!e.code)
            throw e;
          throw new FS.ErrnoError(ERRNO_CODES[e.code]);
        }
        return node;
      }),
      rename: (function(oldNode, newDir, newName) {
        var oldPath = NODEFS.realPath(oldNode);
        var newPath = PATH.join2(NODEFS.realPath(newDir), newName);
        try {
          fs.renameSync(oldPath, newPath);
        } catch (e) {
          if (!e.code)
            throw e;
          throw new FS.ErrnoError(ERRNO_CODES[e.code]);
        }
      }),
      unlink: (function(parent, name) {
        var path = PATH.join2(NODEFS.realPath(parent), name);
        try {
          fs.unlinkSync(path);
        } catch (e) {
          if (!e.code)
            throw e;
          throw new FS.ErrnoError(ERRNO_CODES[e.code]);
        }
      }),
      rmdir: (function(parent, name) {
        var path = PATH.join2(NODEFS.realPath(parent), name);
        try {
          fs.rmdirSync(path);
        } catch (e) {
          if (!e.code)
            throw e;
          throw new FS.ErrnoError(ERRNO_CODES[e.code]);
        }
      }),
      readdir: (function(node) {
        var path = NODEFS.realPath(node);
        try {
          return fs.readdirSync(path);
        } catch (e) {
          if (!e.code)
            throw e;
          throw new FS.ErrnoError(ERRNO_CODES[e.code]);
        }
      }),
      symlink: (function(parent, newName, oldPath) {
        var newPath = PATH.join2(NODEFS.realPath(parent), newName);
        try {
          fs.symlinkSync(oldPath, newPath);
        } catch (e) {
          if (!e.code)
            throw e;
          throw new FS.ErrnoError(ERRNO_CODES[e.code]);
        }
      }),
      readlink: (function(node) {
        var path = NODEFS.realPath(node);
        try {
          path = fs.readlinkSync(path);
          path = NODEJS_PATH.relative(NODEJS_PATH.resolve(node.mount.opts.root), path);
          return path;
        } catch (e) {
          if (!e.code)
            throw e;
          throw new FS.ErrnoError(ERRNO_CODES[e.code]);
        }
      })
    },
    stream_ops: {
      open: (function(stream) {
        var path = NODEFS.realPath(stream.node);
        try {
          if (FS.isFile(stream.node.mode)) {
            stream.nfd = fs.openSync(path, NODEFS.flagsToPermissionString(stream.flags));
          }
        } catch (e) {
          if (!e.code)
            throw e;
          throw new FS.ErrnoError(ERRNO_CODES[e.code]);
        }
      }),
      close: (function(stream) {
        try {
          if (FS.isFile(stream.node.mode) && stream.nfd) {
            fs.closeSync(stream.nfd);
          }
        } catch (e) {
          if (!e.code)
            throw e;
          throw new FS.ErrnoError(ERRNO_CODES[e.code]);
        }
      }),
      read: (function(stream, buffer, offset, length, position) {
        if (length === 0)
          return 0;
        var nbuffer = new Buffer(length);
        var res;
        try {
          res = fs.readSync(stream.nfd, nbuffer, 0, length, position);
        } catch (e) {
          throw new FS.ErrnoError(ERRNO_CODES[e.code]);
        }
        if (res > 0) {
          for (var i = 0; i < res; i++) {
            buffer[offset + i] = nbuffer[i];
          }
        }
        return res;
      }),
      write: (function(stream, buffer, offset, length, position) {
        var nbuffer = new Buffer(buffer.subarray(offset, offset + length));
        var res;
        try {
          res = fs.writeSync(stream.nfd, nbuffer, 0, length, position);
        } catch (e) {
          throw new FS.ErrnoError(ERRNO_CODES[e.code]);
        }
        return res;
      }),
      llseek: (function(stream, offset, whence) {
        var position = offset;
        if (whence === 1) {
          position += stream.position;
        } else if (whence === 2) {
          if (FS.isFile(stream.node.mode)) {
            try {
              var stat = fs.fstatSync(stream.nfd);
              position += stat.size;
            } catch (e) {
              throw new FS.ErrnoError(ERRNO_CODES[e.code]);
            }
          }
        }
        if (position < 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        return position;
      })
    }
  };
  var _stdin = allocate(1, "i32*", ALLOC_STATIC);
  var _stdout = allocate(1, "i32*", ALLOC_STATIC);
  var _stderr = allocate(1, "i32*", ALLOC_STATIC);
  function _fflush(stream) {}
  var FS = {
    root: null,
    mounts: [],
    devices: [null],
    streams: [],
    nextInode: 1,
    nameTable: null,
    currentPath: "/",
    initialized: false,
    ignorePermissions: true,
    trackingDelegate: {},
    tracking: {openFlags: {
        READ: 1,
        WRITE: 2
      }},
    ErrnoError: null,
    genericErrors: {},
    handleFSError: (function(e) {
      if (!(e instanceof FS.ErrnoError))
        throw e + " : " + stackTrace();
      return ___setErrNo(e.errno);
    }),
    lookupPath: (function(path, opts) {
      path = PATH.resolve(FS.cwd(), path);
      opts = opts || {};
      if (!path)
        return {
          path: "",
          node: null
        };
      var defaults = {
        follow_mount: true,
        recurse_count: 0
      };
      for (var key in defaults) {
        if (opts[key] === undefined) {
          opts[key] = defaults[key];
        }
      }
      if (opts.recurse_count > 8) {
        throw new FS.ErrnoError(ERRNO_CODES.ELOOP);
      }
      var parts = PATH.normalizeArray(path.split("/").filter((function(p) {
        return !!p;
      })), false);
      var current = FS.root;
      var current_path = "/";
      for (var i = 0; i < parts.length; i++) {
        var islast = i === parts.length - 1;
        if (islast && opts.parent) {
          break;
        }
        current = FS.lookupNode(current, parts[i]);
        current_path = PATH.join2(current_path, parts[i]);
        if (FS.isMountpoint(current)) {
          if (!islast || islast && opts.follow_mount) {
            current = current.mounted.root;
          }
        }
        if (!islast || opts.follow) {
          var count = 0;
          while (FS.isLink(current.mode)) {
            var link = FS.readlink(current_path);
            current_path = PATH.resolve(PATH.dirname(current_path), link);
            var lookup = FS.lookupPath(current_path, {recurse_count: opts.recurse_count});
            current = lookup.node;
            if (count++ > 40) {
              throw new FS.ErrnoError(ERRNO_CODES.ELOOP);
            }
          }
        }
      }
      return {
        path: current_path,
        node: current
      };
    }),
    getPath: (function(node) {
      var path;
      while (true) {
        if (FS.isRoot(node)) {
          var mount = node.mount.mountpoint;
          if (!path)
            return mount;
          return mount[mount.length - 1] !== "/" ? mount + "/" + path : mount + path;
        }
        path = path ? node.name + "/" + path : node.name;
        node = node.parent;
      }
    }),
    hashName: (function(parentid, name) {
      var hash = 0;
      for (var i = 0; i < name.length; i++) {
        hash = (hash << 5) - hash + name.charCodeAt(i) | 0;
      }
      return (parentid + hash >>> 0) % FS.nameTable.length;
    }),
    hashAddNode: (function(node) {
      var hash = FS.hashName(node.parent.id, node.name);
      node.name_next = FS.nameTable[hash];
      FS.nameTable[hash] = node;
    }),
    hashRemoveNode: (function(node) {
      var hash = FS.hashName(node.parent.id, node.name);
      if (FS.nameTable[hash] === node) {
        FS.nameTable[hash] = node.name_next;
      } else {
        var current = FS.nameTable[hash];
        while (current) {
          if (current.name_next === node) {
            current.name_next = node.name_next;
            break;
          }
          current = current.name_next;
        }
      }
    }),
    lookupNode: (function(parent, name) {
      var err = FS.mayLookup(parent);
      if (err) {
        throw new FS.ErrnoError(err, parent);
      }
      var hash = FS.hashName(parent.id, name);
      for (var node = FS.nameTable[hash]; node; node = node.name_next) {
        var nodeName = node.name;
        if (node.parent.id === parent.id && nodeName === name) {
          return node;
        }
      }
      return FS.lookup(parent, name);
    }),
    createNode: (function(parent, name, mode, rdev) {
      if (!FS.FSNode) {
        FS.FSNode = (function(parent, name, mode, rdev) {
          if (!parent) {
            parent = this;
          }
          this.parent = parent;
          this.mount = parent.mount;
          this.mounted = null;
          this.id = FS.nextInode++;
          this.name = name;
          this.mode = mode;
          this.node_ops = {};
          this.stream_ops = {};
          this.rdev = rdev;
        });
        FS.FSNode.prototype = {};
        var readMode = 292 | 73;
        var writeMode = 146;
        Object.defineProperties(FS.FSNode.prototype, {
          read: {
            get: (function() {
              return (this.mode & readMode) === readMode;
            }),
            set: (function(val) {
              val ? this.mode |= readMode : this.mode &= ~readMode;
            })
          },
          write: {
            get: (function() {
              return (this.mode & writeMode) === writeMode;
            }),
            set: (function(val) {
              val ? this.mode |= writeMode : this.mode &= ~writeMode;
            })
          },
          isFolder: {get: (function() {
              return FS.isDir(this.mode);
            })},
          isDevice: {get: (function() {
              return FS.isChrdev(this.mode);
            })}
        });
      }
      var node = new FS.FSNode(parent, name, mode, rdev);
      FS.hashAddNode(node);
      return node;
    }),
    destroyNode: (function(node) {
      FS.hashRemoveNode(node);
    }),
    isRoot: (function(node) {
      return node === node.parent;
    }),
    isMountpoint: (function(node) {
      return !!node.mounted;
    }),
    isFile: (function(mode) {
      return (mode & 61440) === 32768;
    }),
    isDir: (function(mode) {
      return (mode & 61440) === 16384;
    }),
    isLink: (function(mode) {
      return (mode & 61440) === 40960;
    }),
    isChrdev: (function(mode) {
      return (mode & 61440) === 8192;
    }),
    isBlkdev: (function(mode) {
      return (mode & 61440) === 24576;
    }),
    isFIFO: (function(mode) {
      return (mode & 61440) === 4096;
    }),
    isSocket: (function(mode) {
      return (mode & 49152) === 49152;
    }),
    flagModes: {
      "r": 0,
      "rs": 1052672,
      "r+": 2,
      "w": 577,
      "wx": 705,
      "xw": 705,
      "w+": 578,
      "wx+": 706,
      "xw+": 706,
      "a": 1089,
      "ax": 1217,
      "xa": 1217,
      "a+": 1090,
      "ax+": 1218,
      "xa+": 1218
    },
    modeStringToFlags: (function(str) {
      var flags = FS.flagModes[str];
      if (typeof flags === "undefined") {
        throw new Error("Unknown file open mode: " + str);
      }
      return flags;
    }),
    flagsToPermissionString: (function(flag) {
      var accmode = flag & 2097155;
      var perms = ["r", "w", "rw"][accmode];
      if (flag & 512) {
        perms += "w";
      }
      return perms;
    }),
    nodePermissions: (function(node, perms) {
      if (FS.ignorePermissions) {
        return 0;
      }
      if (perms.indexOf("r") !== -1 && !(node.mode & 292)) {
        return ERRNO_CODES.EACCES;
      } else if (perms.indexOf("w") !== -1 && !(node.mode & 146)) {
        return ERRNO_CODES.EACCES;
      } else if (perms.indexOf("x") !== -1 && !(node.mode & 73)) {
        return ERRNO_CODES.EACCES;
      }
      return 0;
    }),
    mayLookup: (function(dir) {
      var err = FS.nodePermissions(dir, "x");
      if (err)
        return err;
      if (!dir.node_ops.lookup)
        return ERRNO_CODES.EACCES;
      return 0;
    }),
    mayCreate: (function(dir, name) {
      try {
        var node = FS.lookupNode(dir, name);
        return ERRNO_CODES.EEXIST;
      } catch (e) {}
      return FS.nodePermissions(dir, "wx");
    }),
    mayDelete: (function(dir, name, isdir) {
      var node;
      try {
        node = FS.lookupNode(dir, name);
      } catch (e) {
        return e.errno;
      }
      var err = FS.nodePermissions(dir, "wx");
      if (err) {
        return err;
      }
      if (isdir) {
        if (!FS.isDir(node.mode)) {
          return ERRNO_CODES.ENOTDIR;
        }
        if (FS.isRoot(node) || FS.getPath(node) === FS.cwd()) {
          return ERRNO_CODES.EBUSY;
        }
      } else {
        if (FS.isDir(node.mode)) {
          return ERRNO_CODES.EISDIR;
        }
      }
      return 0;
    }),
    mayOpen: (function(node, flags) {
      if (!node) {
        return ERRNO_CODES.ENOENT;
      }
      if (FS.isLink(node.mode)) {
        return ERRNO_CODES.ELOOP;
      } else if (FS.isDir(node.mode)) {
        if ((flags & 2097155) !== 0 || flags & 512) {
          return ERRNO_CODES.EISDIR;
        }
      }
      return FS.nodePermissions(node, FS.flagsToPermissionString(flags));
    }),
    MAX_OPEN_FDS: 4096,
    nextfd: (function(fd_start, fd_end) {
      fd_start = fd_start || 0;
      fd_end = fd_end || FS.MAX_OPEN_FDS;
      for (var fd = fd_start; fd <= fd_end; fd++) {
        if (!FS.streams[fd]) {
          return fd;
        }
      }
      throw new FS.ErrnoError(ERRNO_CODES.EMFILE);
    }),
    getStream: (function(fd) {
      return FS.streams[fd];
    }),
    createStream: (function(stream, fd_start, fd_end) {
      if (!FS.FSStream) {
        FS.FSStream = (function() {});
        FS.FSStream.prototype = {};
        Object.defineProperties(FS.FSStream.prototype, {
          object: {
            get: (function() {
              return this.node;
            }),
            set: (function(val) {
              this.node = val;
            })
          },
          isRead: {get: (function() {
              return (this.flags & 2097155) !== 1;
            })},
          isWrite: {get: (function() {
              return (this.flags & 2097155) !== 0;
            })},
          isAppend: {get: (function() {
              return this.flags & 1024;
            })}
        });
      }
      var newStream = new FS.FSStream;
      for (var p in stream) {
        newStream[p] = stream[p];
      }
      stream = newStream;
      var fd = FS.nextfd(fd_start, fd_end);
      stream.fd = fd;
      FS.streams[fd] = stream;
      return stream;
    }),
    closeStream: (function(fd) {
      FS.streams[fd] = null;
    }),
    getStreamFromPtr: (function(ptr) {
      return FS.streams[ptr - 1];
    }),
    getPtrForStream: (function(stream) {
      return stream ? stream.fd + 1 : 0;
    }),
    chrdev_stream_ops: {
      open: (function(stream) {
        var device = FS.getDevice(stream.node.rdev);
        stream.stream_ops = device.stream_ops;
        if (stream.stream_ops.open) {
          stream.stream_ops.open(stream);
        }
      }),
      llseek: (function() {
        throw new FS.ErrnoError(ERRNO_CODES.ESPIPE);
      })
    },
    major: (function(dev) {
      return dev >> 8;
    }),
    minor: (function(dev) {
      return dev & 255;
    }),
    makedev: (function(ma, mi) {
      return ma << 8 | mi;
    }),
    registerDevice: (function(dev, ops) {
      FS.devices[dev] = {stream_ops: ops};
    }),
    getDevice: (function(dev) {
      return FS.devices[dev];
    }),
    getMounts: (function(mount) {
      var mounts = [];
      var check = [mount];
      while (check.length) {
        var m = check.pop();
        mounts.push(m);
        check.push.apply(check, m.mounts);
      }
      return mounts;
    }),
    syncfs: (function(populate, callback) {
      if (typeof populate === "function") {
        callback = populate;
        populate = false;
      }
      var mounts = FS.getMounts(FS.root.mount);
      var completed = 0;
      function done(err) {
        if (err) {
          if (!done.errored) {
            done.errored = true;
            return callback(err);
          }
          return ;
        }
        if (++completed >= mounts.length) {
          callback(null);
        }
      }
      mounts.forEach((function(mount) {
        if (!mount.type.syncfs) {
          return done(null);
        }
        mount.type.syncfs(mount, populate, done);
      }));
    }),
    mount: (function(type, opts, mountpoint) {
      var root = mountpoint === "/";
      var pseudo = !mountpoint;
      var node;
      if (root && FS.root) {
        throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
      } else if (!root && !pseudo) {
        var lookup = FS.lookupPath(mountpoint, {follow_mount: false});
        mountpoint = lookup.path;
        node = lookup.node;
        if (FS.isMountpoint(node)) {
          throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
        }
        if (!FS.isDir(node.mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.ENOTDIR);
        }
      }
      var mount = {
        type: type,
        opts: opts,
        mountpoint: mountpoint,
        mounts: []
      };
      var mountRoot = type.mount(mount);
      mountRoot.mount = mount;
      mount.root = mountRoot;
      if (root) {
        FS.root = mountRoot;
      } else if (node) {
        node.mounted = mount;
        if (node.mount) {
          node.mount.mounts.push(mount);
        }
      }
      return mountRoot;
    }),
    unmount: (function(mountpoint) {
      var lookup = FS.lookupPath(mountpoint, {follow_mount: false});
      if (!FS.isMountpoint(lookup.node)) {
        throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
      }
      var node = lookup.node;
      var mount = node.mounted;
      var mounts = FS.getMounts(mount);
      Object.keys(FS.nameTable).forEach((function(hash) {
        var current = FS.nameTable[hash];
        while (current) {
          var next = current.name_next;
          if (mounts.indexOf(current.mount) !== -1) {
            FS.destroyNode(current);
          }
          current = next;
        }
      }));
      node.mounted = null;
      var idx = node.mount.mounts.indexOf(mount);
      assert(idx !== -1);
      node.mount.mounts.splice(idx, 1);
    }),
    lookup: (function(parent, name) {
      return parent.node_ops.lookup(parent, name);
    }),
    mknod: (function(path, mode, dev) {
      var lookup = FS.lookupPath(path, {parent: true});
      var parent = lookup.node;
      var name = PATH.basename(path);
      if (!name || name === "." || name === "..") {
        throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
      }
      var err = FS.mayCreate(parent, name);
      if (err) {
        throw new FS.ErrnoError(err);
      }
      if (!parent.node_ops.mknod) {
        throw new FS.ErrnoError(ERRNO_CODES.EPERM);
      }
      return parent.node_ops.mknod(parent, name, mode, dev);
    }),
    create: (function(path, mode) {
      mode = mode !== undefined ? mode : 438;
      mode &= 4095;
      mode |= 32768;
      return FS.mknod(path, mode, 0);
    }),
    mkdir: (function(path, mode) {
      mode = mode !== undefined ? mode : 511;
      mode &= 511 | 512;
      mode |= 16384;
      return FS.mknod(path, mode, 0);
    }),
    mkdev: (function(path, mode, dev) {
      if (typeof dev === "undefined") {
        dev = mode;
        mode = 438;
      }
      mode |= 8192;
      return FS.mknod(path, mode, dev);
    }),
    symlink: (function(oldpath, newpath) {
      if (!PATH.resolve(oldpath)) {
        throw new FS.ErrnoError(ERRNO_CODES.ENOENT);
      }
      var lookup = FS.lookupPath(newpath, {parent: true});
      var parent = lookup.node;
      if (!parent) {
        throw new FS.ErrnoError(ERRNO_CODES.ENOENT);
      }
      var newname = PATH.basename(newpath);
      var err = FS.mayCreate(parent, newname);
      if (err) {
        throw new FS.ErrnoError(err);
      }
      if (!parent.node_ops.symlink) {
        throw new FS.ErrnoError(ERRNO_CODES.EPERM);
      }
      return parent.node_ops.symlink(parent, newname, oldpath);
    }),
    rename: (function(old_path, new_path) {
      var old_dirname = PATH.dirname(old_path);
      var new_dirname = PATH.dirname(new_path);
      var old_name = PATH.basename(old_path);
      var new_name = PATH.basename(new_path);
      var lookup,
          old_dir,
          new_dir;
      try {
        lookup = FS.lookupPath(old_path, {parent: true});
        old_dir = lookup.node;
        lookup = FS.lookupPath(new_path, {parent: true});
        new_dir = lookup.node;
      } catch (e) {
        throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
      }
      if (!old_dir || !new_dir)
        throw new FS.ErrnoError(ERRNO_CODES.ENOENT);
      if (old_dir.mount !== new_dir.mount) {
        throw new FS.ErrnoError(ERRNO_CODES.EXDEV);
      }
      var old_node = FS.lookupNode(old_dir, old_name);
      var relative = PATH.relative(old_path, new_dirname);
      if (relative.charAt(0) !== ".") {
        throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
      }
      relative = PATH.relative(new_path, old_dirname);
      if (relative.charAt(0) !== ".") {
        throw new FS.ErrnoError(ERRNO_CODES.ENOTEMPTY);
      }
      var new_node;
      try {
        new_node = FS.lookupNode(new_dir, new_name);
      } catch (e) {}
      if (old_node === new_node) {
        return ;
      }
      var isdir = FS.isDir(old_node.mode);
      var err = FS.mayDelete(old_dir, old_name, isdir);
      if (err) {
        throw new FS.ErrnoError(err);
      }
      err = new_node ? FS.mayDelete(new_dir, new_name, isdir) : FS.mayCreate(new_dir, new_name);
      if (err) {
        throw new FS.ErrnoError(err);
      }
      if (!old_dir.node_ops.rename) {
        throw new FS.ErrnoError(ERRNO_CODES.EPERM);
      }
      if (FS.isMountpoint(old_node) || new_node && FS.isMountpoint(new_node)) {
        throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
      }
      if (new_dir !== old_dir) {
        err = FS.nodePermissions(old_dir, "w");
        if (err) {
          throw new FS.ErrnoError(err);
        }
      }
      try {
        if (FS.trackingDelegate["willMovePath"]) {
          FS.trackingDelegate["willMovePath"](old_path, new_path);
        }
      } catch (e) {
        console.log("FS.trackingDelegate['willMovePath']('" + old_path + "', '" + new_path + "') threw an exception: " + e.message);
      }
      FS.hashRemoveNode(old_node);
      try {
        old_dir.node_ops.rename(old_node, new_dir, new_name);
      } catch (e) {
        throw e;
      } finally {
        FS.hashAddNode(old_node);
      }
      try {
        if (FS.trackingDelegate["onMovePath"])
          FS.trackingDelegate["onMovePath"](old_path, new_path);
      } catch (e) {
        console.log("FS.trackingDelegate['onMovePath']('" + old_path + "', '" + new_path + "') threw an exception: " + e.message);
      }
    }),
    rmdir: (function(path) {
      var lookup = FS.lookupPath(path, {parent: true});
      var parent = lookup.node;
      var name = PATH.basename(path);
      var node = FS.lookupNode(parent, name);
      var err = FS.mayDelete(parent, name, true);
      if (err) {
        throw new FS.ErrnoError(err);
      }
      if (!parent.node_ops.rmdir) {
        throw new FS.ErrnoError(ERRNO_CODES.EPERM);
      }
      if (FS.isMountpoint(node)) {
        throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
      }
      try {
        if (FS.trackingDelegate["willDeletePath"]) {
          FS.trackingDelegate["willDeletePath"](path);
        }
      } catch (e) {
        console.log("FS.trackingDelegate['willDeletePath']('" + path + "') threw an exception: " + e.message);
      }
      parent.node_ops.rmdir(parent, name);
      FS.destroyNode(node);
      try {
        if (FS.trackingDelegate["onDeletePath"])
          FS.trackingDelegate["onDeletePath"](path);
      } catch (e) {
        console.log("FS.trackingDelegate['onDeletePath']('" + path + "') threw an exception: " + e.message);
      }
    }),
    readdir: (function(path) {
      var lookup = FS.lookupPath(path, {follow: true});
      var node = lookup.node;
      if (!node.node_ops.readdir) {
        throw new FS.ErrnoError(ERRNO_CODES.ENOTDIR);
      }
      return node.node_ops.readdir(node);
    }),
    unlink: (function(path) {
      var lookup = FS.lookupPath(path, {parent: true});
      var parent = lookup.node;
      var name = PATH.basename(path);
      var node = FS.lookupNode(parent, name);
      var err = FS.mayDelete(parent, name, false);
      if (err) {
        if (err === ERRNO_CODES.EISDIR)
          err = ERRNO_CODES.EPERM;
        throw new FS.ErrnoError(err);
      }
      if (!parent.node_ops.unlink) {
        throw new FS.ErrnoError(ERRNO_CODES.EPERM);
      }
      if (FS.isMountpoint(node)) {
        throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
      }
      try {
        if (FS.trackingDelegate["willDeletePath"]) {
          FS.trackingDelegate["willDeletePath"](path);
        }
      } catch (e) {
        console.log("FS.trackingDelegate['willDeletePath']('" + path + "') threw an exception: " + e.message);
      }
      parent.node_ops.unlink(parent, name);
      FS.destroyNode(node);
      try {
        if (FS.trackingDelegate["onDeletePath"])
          FS.trackingDelegate["onDeletePath"](path);
      } catch (e) {
        console.log("FS.trackingDelegate['onDeletePath']('" + path + "') threw an exception: " + e.message);
      }
    }),
    readlink: (function(path) {
      var lookup = FS.lookupPath(path);
      var link = lookup.node;
      if (!link) {
        throw new FS.ErrnoError(ERRNO_CODES.ENOENT);
      }
      if (!link.node_ops.readlink) {
        throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
      }
      return PATH.resolve(FS.getPath(lookup.node.parent), link.node_ops.readlink(link));
    }),
    stat: (function(path, dontFollow) {
      var lookup = FS.lookupPath(path, {follow: !dontFollow});
      var node = lookup.node;
      if (!node) {
        throw new FS.ErrnoError(ERRNO_CODES.ENOENT);
      }
      if (!node.node_ops.getattr) {
        throw new FS.ErrnoError(ERRNO_CODES.EPERM);
      }
      return node.node_ops.getattr(node);
    }),
    lstat: (function(path) {
      return FS.stat(path, true);
    }),
    chmod: (function(path, mode, dontFollow) {
      var node;
      if (typeof path === "string") {
        var lookup = FS.lookupPath(path, {follow: !dontFollow});
        node = lookup.node;
      } else {
        node = path;
      }
      if (!node.node_ops.setattr) {
        throw new FS.ErrnoError(ERRNO_CODES.EPERM);
      }
      node.node_ops.setattr(node, {
        mode: mode & 4095 | node.mode & ~4095,
        timestamp: Date.now()
      });
    }),
    lchmod: (function(path, mode) {
      FS.chmod(path, mode, true);
    }),
    fchmod: (function(fd, mode) {
      var stream = FS.getStream(fd);
      if (!stream) {
        throw new FS.ErrnoError(ERRNO_CODES.EBADF);
      }
      FS.chmod(stream.node, mode);
    }),
    chown: (function(path, uid, gid, dontFollow) {
      var node;
      if (typeof path === "string") {
        var lookup = FS.lookupPath(path, {follow: !dontFollow});
        node = lookup.node;
      } else {
        node = path;
      }
      if (!node.node_ops.setattr) {
        throw new FS.ErrnoError(ERRNO_CODES.EPERM);
      }
      node.node_ops.setattr(node, {timestamp: Date.now()});
    }),
    lchown: (function(path, uid, gid) {
      FS.chown(path, uid, gid, true);
    }),
    fchown: (function(fd, uid, gid) {
      var stream = FS.getStream(fd);
      if (!stream) {
        throw new FS.ErrnoError(ERRNO_CODES.EBADF);
      }
      FS.chown(stream.node, uid, gid);
    }),
    truncate: (function(path, len) {
      if (len < 0) {
        throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
      }
      var node;
      if (typeof path === "string") {
        var lookup = FS.lookupPath(path, {follow: true});
        node = lookup.node;
      } else {
        node = path;
      }
      if (!node.node_ops.setattr) {
        throw new FS.ErrnoError(ERRNO_CODES.EPERM);
      }
      if (FS.isDir(node.mode)) {
        throw new FS.ErrnoError(ERRNO_CODES.EISDIR);
      }
      if (!FS.isFile(node.mode)) {
        throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
      }
      var err = FS.nodePermissions(node, "w");
      if (err) {
        throw new FS.ErrnoError(err);
      }
      node.node_ops.setattr(node, {
        size: len,
        timestamp: Date.now()
      });
    }),
    ftruncate: (function(fd, len) {
      var stream = FS.getStream(fd);
      if (!stream) {
        throw new FS.ErrnoError(ERRNO_CODES.EBADF);
      }
      if ((stream.flags & 2097155) === 0) {
        throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
      }
      FS.truncate(stream.node, len);
    }),
    utime: (function(path, atime, mtime) {
      var lookup = FS.lookupPath(path, {follow: true});
      var node = lookup.node;
      node.node_ops.setattr(node, {timestamp: Math.max(atime, mtime)});
    }),
    open: (function(path, flags, mode, fd_start, fd_end) {
      if (path === "") {
        throw new FS.ErrnoError(ERRNO_CODES.ENOENT);
      }
      flags = typeof flags === "string" ? FS.modeStringToFlags(flags) : flags;
      mode = typeof mode === "undefined" ? 438 : mode;
      if (flags & 64) {
        mode = mode & 4095 | 32768;
      } else {
        mode = 0;
      }
      var node;
      if (typeof path === "object") {
        node = path;
      } else {
        path = PATH.normalize(path);
        try {
          var lookup = FS.lookupPath(path, {follow: !(flags & 131072)});
          node = lookup.node;
        } catch (e) {}
      }
      var created = false;
      if (flags & 64) {
        if (node) {
          if (flags & 128) {
            throw new FS.ErrnoError(ERRNO_CODES.EEXIST);
          }
        } else {
          node = FS.mknod(path, mode, 0);
          created = true;
        }
      }
      if (!node) {
        throw new FS.ErrnoError(ERRNO_CODES.ENOENT);
      }
      if (FS.isChrdev(node.mode)) {
        flags &= ~512;
      }
      if (!created) {
        var err = FS.mayOpen(node, flags);
        if (err) {
          throw new FS.ErrnoError(err);
        }
      }
      if (flags & 512) {
        FS.truncate(node, 0);
      }
      flags &= ~(128 | 512);
      var stream = FS.createStream({
        node: node,
        path: FS.getPath(node),
        flags: flags,
        seekable: true,
        position: 0,
        stream_ops: node.stream_ops,
        ungotten: [],
        error: false
      }, fd_start, fd_end);
      if (stream.stream_ops.open) {
        stream.stream_ops.open(stream);
      }
      if (Module["logReadFiles"] && !(flags & 1)) {
        if (!FS.readFiles)
          FS.readFiles = {};
        if (!(path in FS.readFiles)) {
          FS.readFiles[path] = 1;
          Module["printErr"]("read file: " + path);
        }
      }
      try {
        if (FS.trackingDelegate["onOpenFile"]) {
          var trackingFlags = 0;
          if ((flags & 2097155) !== 1) {
            trackingFlags |= FS.tracking.openFlags.READ;
          }
          if ((flags & 2097155) !== 0) {
            trackingFlags |= FS.tracking.openFlags.WRITE;
          }
          FS.trackingDelegate["onOpenFile"](path, trackingFlags);
        }
      } catch (e) {
        console.log("FS.trackingDelegate['onOpenFile']('" + path + "', flags) threw an exception: " + e.message);
      }
      return stream;
    }),
    close: (function(stream) {
      try {
        if (stream.stream_ops.close) {
          stream.stream_ops.close(stream);
        }
      } catch (e) {
        throw e;
      } finally {
        FS.closeStream(stream.fd);
      }
    }),
    llseek: (function(stream, offset, whence) {
      if (!stream.seekable || !stream.stream_ops.llseek) {
        throw new FS.ErrnoError(ERRNO_CODES.ESPIPE);
      }
      stream.position = stream.stream_ops.llseek(stream, offset, whence);
      stream.ungotten = [];
      return stream.position;
    }),
    read: (function(stream, buffer, offset, length, position) {
      if (length < 0 || position < 0) {
        throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
      }
      if ((stream.flags & 2097155) === 1) {
        throw new FS.ErrnoError(ERRNO_CODES.EBADF);
      }
      if (FS.isDir(stream.node.mode)) {
        throw new FS.ErrnoError(ERRNO_CODES.EISDIR);
      }
      if (!stream.stream_ops.read) {
        throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
      }
      var seeking = true;
      if (typeof position === "undefined") {
        position = stream.position;
        seeking = false;
      } else if (!stream.seekable) {
        throw new FS.ErrnoError(ERRNO_CODES.ESPIPE);
      }
      var bytesRead = stream.stream_ops.read(stream, buffer, offset, length, position);
      if (!seeking)
        stream.position += bytesRead;
      return bytesRead;
    }),
    write: (function(stream, buffer, offset, length, position, canOwn) {
      if (length < 0 || position < 0) {
        throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
      }
      if ((stream.flags & 2097155) === 0) {
        throw new FS.ErrnoError(ERRNO_CODES.EBADF);
      }
      if (FS.isDir(stream.node.mode)) {
        throw new FS.ErrnoError(ERRNO_CODES.EISDIR);
      }
      if (!stream.stream_ops.write) {
        throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
      }
      if (stream.flags & 1024) {
        FS.llseek(stream, 0, 2);
      }
      var seeking = true;
      if (typeof position === "undefined") {
        position = stream.position;
        seeking = false;
      } else if (!stream.seekable) {
        throw new FS.ErrnoError(ERRNO_CODES.ESPIPE);
      }
      var bytesWritten = stream.stream_ops.write(stream, buffer, offset, length, position, canOwn);
      if (!seeking)
        stream.position += bytesWritten;
      try {
        if (stream.path && FS.trackingDelegate["onWriteToFile"])
          FS.trackingDelegate["onWriteToFile"](stream.path);
      } catch (e) {
        console.log("FS.trackingDelegate['onWriteToFile']('" + path + "') threw an exception: " + e.message);
      }
      return bytesWritten;
    }),
    allocate: (function(stream, offset, length) {
      if (offset < 0 || length <= 0) {
        throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
      }
      if ((stream.flags & 2097155) === 0) {
        throw new FS.ErrnoError(ERRNO_CODES.EBADF);
      }
      if (!FS.isFile(stream.node.mode) && !FS.isDir(node.mode)) {
        throw new FS.ErrnoError(ERRNO_CODES.ENODEV);
      }
      if (!stream.stream_ops.allocate) {
        throw new FS.ErrnoError(ERRNO_CODES.EOPNOTSUPP);
      }
      stream.stream_ops.allocate(stream, offset, length);
    }),
    mmap: (function(stream, buffer, offset, length, position, prot, flags) {
      if ((stream.flags & 2097155) === 1) {
        throw new FS.ErrnoError(ERRNO_CODES.EACCES);
      }
      if (!stream.stream_ops.mmap) {
        throw new FS.ErrnoError(ERRNO_CODES.ENODEV);
      }
      return stream.stream_ops.mmap(stream, buffer, offset, length, position, prot, flags);
    }),
    msync: (function(stream, buffer, offset, length, mmapFlags) {
      if (!stream || !stream.stream_ops.msync) {
        return 0;
      }
      return stream.stream_ops.msync(stream, buffer, offset, length, mmapFlags);
    }),
    munmap: (function(stream) {
      return 0;
    }),
    ioctl: (function(stream, cmd, arg) {
      if (!stream.stream_ops.ioctl) {
        throw new FS.ErrnoError(ERRNO_CODES.ENOTTY);
      }
      return stream.stream_ops.ioctl(stream, cmd, arg);
    }),
    readFile: (function(path, opts) {
      opts = opts || {};
      opts.flags = opts.flags || "r";
      opts.encoding = opts.encoding || "binary";
      if (opts.encoding !== "utf8" && opts.encoding !== "binary") {
        throw new Error('Invalid encoding type "' + opts.encoding + '"');
      }
      var ret;
      var stream = FS.open(path, opts.flags);
      var stat = FS.stat(path);
      var length = stat.size;
      var buf = new Uint8Array(length);
      FS.read(stream, buf, 0, length, 0);
      if (opts.encoding === "utf8") {
        ret = UTF8ArrayToString(buf, 0);
      } else if (opts.encoding === "binary") {
        ret = buf;
      }
      FS.close(stream);
      return ret;
    }),
    writeFile: (function(path, data, opts) {
      opts = opts || {};
      opts.flags = opts.flags || "w";
      opts.encoding = opts.encoding || "utf8";
      if (opts.encoding !== "utf8" && opts.encoding !== "binary") {
        throw new Error('Invalid encoding type "' + opts.encoding + '"');
      }
      var stream = FS.open(path, opts.flags, opts.mode);
      if (opts.encoding === "utf8") {
        var buf = new Uint8Array(lengthBytesUTF8(data) + 1);
        var actualNumBytes = stringToUTF8Array(data, buf, 0, buf.length);
        FS.write(stream, buf, 0, actualNumBytes, 0, opts.canOwn);
      } else if (opts.encoding === "binary") {
        FS.write(stream, data, 0, data.length, 0, opts.canOwn);
      }
      FS.close(stream);
    }),
    cwd: (function() {
      return FS.currentPath;
    }),
    chdir: (function(path) {
      var lookup = FS.lookupPath(path, {follow: true});
      if (!FS.isDir(lookup.node.mode)) {
        throw new FS.ErrnoError(ERRNO_CODES.ENOTDIR);
      }
      var err = FS.nodePermissions(lookup.node, "x");
      if (err) {
        throw new FS.ErrnoError(err);
      }
      FS.currentPath = lookup.path;
    }),
    createDefaultDirectories: (function() {
      FS.mkdir("/tmp");
      FS.mkdir("/home");
      FS.mkdir("/home/web_user");
    }),
    createDefaultDevices: (function() {
      FS.mkdir("/dev");
      FS.registerDevice(FS.makedev(1, 3), {
        read: (function() {
          return 0;
        }),
        write: (function(stream, buffer, offset, length, pos) {
          return length;
        })
      });
      FS.mkdev("/dev/null", FS.makedev(1, 3));
      TTY.register(FS.makedev(5, 0), TTY.default_tty_ops);
      TTY.register(FS.makedev(6, 0), TTY.default_tty1_ops);
      FS.mkdev("/dev/tty", FS.makedev(5, 0));
      FS.mkdev("/dev/tty1", FS.makedev(6, 0));
      var random_device;
      if (typeof crypto !== "undefined") {
        var randomBuffer = new Uint8Array(1);
        random_device = (function() {
          crypto.getRandomValues(randomBuffer);
          return randomBuffer[0];
        });
      } else if (ENVIRONMENT_IS_NODE) {
        random_device = (function() {
          return require("crypto").randomBytes(1)[0];
        });
      } else {
        random_device = (function() {
          return Math.random() * 256 | 0;
        });
      }
      FS.createDevice("/dev", "random", random_device);
      FS.createDevice("/dev", "urandom", random_device);
      FS.mkdir("/dev/shm");
      FS.mkdir("/dev/shm/tmp");
    }),
    createStandardStreams: (function() {
      if (Module["stdin"]) {
        FS.createDevice("/dev", "stdin", Module["stdin"]);
      } else {
        FS.symlink("/dev/tty", "/dev/stdin");
      }
      if (Module["stdout"]) {
        FS.createDevice("/dev", "stdout", null, Module["stdout"]);
      } else {
        FS.symlink("/dev/tty", "/dev/stdout");
      }
      if (Module["stderr"]) {
        FS.createDevice("/dev", "stderr", null, Module["stderr"]);
      } else {
        FS.symlink("/dev/tty1", "/dev/stderr");
      }
      var stdin = FS.open("/dev/stdin", "r");
      HEAP32[_stdin >> 2] = FS.getPtrForStream(stdin);
      assert(stdin.fd === 0, "invalid handle for stdin (" + stdin.fd + ")");
      var stdout = FS.open("/dev/stdout", "w");
      HEAP32[_stdout >> 2] = FS.getPtrForStream(stdout);
      assert(stdout.fd === 1, "invalid handle for stdout (" + stdout.fd + ")");
      var stderr = FS.open("/dev/stderr", "w");
      HEAP32[_stderr >> 2] = FS.getPtrForStream(stderr);
      assert(stderr.fd === 2, "invalid handle for stderr (" + stderr.fd + ")");
    }),
    ensureErrnoError: (function() {
      if (FS.ErrnoError)
        return ;
      FS.ErrnoError = function ErrnoError(errno, node) {
        this.node = node;
        this.setErrno = (function(errno) {
          this.errno = errno;
          for (var key in ERRNO_CODES) {
            if (ERRNO_CODES[key] === errno) {
              this.code = key;
              break;
            }
          }
        });
        this.setErrno(errno);
        this.message = ERRNO_MESSAGES[errno];
      };
      FS.ErrnoError.prototype = new Error;
      FS.ErrnoError.prototype.constructor = FS.ErrnoError;
      [ERRNO_CODES.ENOENT].forEach((function(code) {
        FS.genericErrors[code] = new FS.ErrnoError(code);
        FS.genericErrors[code].stack = "<generic error, no stack>";
      }));
    }),
    staticInit: (function() {
      FS.ensureErrnoError();
      FS.nameTable = new Array(4096);
      FS.mount(MEMFS, {}, "/");
      FS.createDefaultDirectories();
      FS.createDefaultDevices();
    }),
    init: (function(input, output, error) {
      assert(!FS.init.initialized, "FS.init was previously called. If you want to initialize later with custom parameters, remove any earlier calls (note that one is automatically added to the generated code)");
      FS.init.initialized = true;
      FS.ensureErrnoError();
      Module["stdin"] = input || Module["stdin"];
      Module["stdout"] = output || Module["stdout"];
      Module["stderr"] = error || Module["stderr"];
      FS.createStandardStreams();
    }),
    quit: (function() {
      FS.init.initialized = false;
      for (var i = 0; i < FS.streams.length; i++) {
        var stream = FS.streams[i];
        if (!stream) {
          continue;
        }
        FS.close(stream);
      }
    }),
    getMode: (function(canRead, canWrite) {
      var mode = 0;
      if (canRead)
        mode |= 292 | 73;
      if (canWrite)
        mode |= 146;
      return mode;
    }),
    joinPath: (function(parts, forceRelative) {
      var path = PATH.join.apply(null, parts);
      if (forceRelative && path[0] == "/")
        path = path.substr(1);
      return path;
    }),
    absolutePath: (function(relative, base) {
      return PATH.resolve(base, relative);
    }),
    standardizePath: (function(path) {
      return PATH.normalize(path);
    }),
    findObject: (function(path, dontResolveLastLink) {
      var ret = FS.analyzePath(path, dontResolveLastLink);
      if (ret.exists) {
        return ret.object;
      } else {
        ___setErrNo(ret.error);
        return null;
      }
    }),
    analyzePath: (function(path, dontResolveLastLink) {
      try {
        var lookup = FS.lookupPath(path, {follow: !dontResolveLastLink});
        path = lookup.path;
      } catch (e) {}
      var ret = {
        isRoot: false,
        exists: false,
        error: 0,
        name: null,
        path: null,
        object: null,
        parentExists: false,
        parentPath: null,
        parentObject: null
      };
      try {
        var lookup = FS.lookupPath(path, {parent: true});
        ret.parentExists = true;
        ret.parentPath = lookup.path;
        ret.parentObject = lookup.node;
        ret.name = PATH.basename(path);
        lookup = FS.lookupPath(path, {follow: !dontResolveLastLink});
        ret.exists = true;
        ret.path = lookup.path;
        ret.object = lookup.node;
        ret.name = lookup.node.name;
        ret.isRoot = lookup.path === "/";
      } catch (e) {
        ret.error = e.errno;
      }
      return ret;
    }),
    createFolder: (function(parent, name, canRead, canWrite) {
      var path = PATH.join2(typeof parent === "string" ? parent : FS.getPath(parent), name);
      var mode = FS.getMode(canRead, canWrite);
      return FS.mkdir(path, mode);
    }),
    createPath: (function(parent, path, canRead, canWrite) {
      parent = typeof parent === "string" ? parent : FS.getPath(parent);
      var parts = path.split("/").reverse();
      while (parts.length) {
        var part = parts.pop();
        if (!part)
          continue;
        var current = PATH.join2(parent, part);
        try {
          FS.mkdir(current);
        } catch (e) {}
        parent = current;
      }
      return current;
    }),
    createFile: (function(parent, name, properties, canRead, canWrite) {
      var path = PATH.join2(typeof parent === "string" ? parent : FS.getPath(parent), name);
      var mode = FS.getMode(canRead, canWrite);
      return FS.create(path, mode);
    }),
    createDataFile: (function(parent, name, data, canRead, canWrite, canOwn) {
      var path = name ? PATH.join2(typeof parent === "string" ? parent : FS.getPath(parent), name) : parent;
      var mode = FS.getMode(canRead, canWrite);
      var node = FS.create(path, mode);
      if (data) {
        if (typeof data === "string") {
          var arr = new Array(data.length);
          for (var i = 0,
              len = data.length; i < len; ++i)
            arr[i] = data.charCodeAt(i);
          data = arr;
        }
        FS.chmod(node, mode | 146);
        var stream = FS.open(node, "w");
        FS.write(stream, data, 0, data.length, 0, canOwn);
        FS.close(stream);
        FS.chmod(node, mode);
      }
      return node;
    }),
    createDevice: (function(parent, name, input, output) {
      var path = PATH.join2(typeof parent === "string" ? parent : FS.getPath(parent), name);
      var mode = FS.getMode(!!input, !!output);
      if (!FS.createDevice.major)
        FS.createDevice.major = 64;
      var dev = FS.makedev(FS.createDevice.major++, 0);
      FS.registerDevice(dev, {
        open: (function(stream) {
          stream.seekable = false;
        }),
        close: (function(stream) {
          if (output && output.buffer && output.buffer.length) {
            output(10);
          }
        }),
        read: (function(stream, buffer, offset, length, pos) {
          var bytesRead = 0;
          for (var i = 0; i < length; i++) {
            var result;
            try {
              result = input();
            } catch (e) {
              throw new FS.ErrnoError(ERRNO_CODES.EIO);
            }
            if (result === undefined && bytesRead === 0) {
              throw new FS.ErrnoError(ERRNO_CODES.EAGAIN);
            }
            if (result === null || result === undefined)
              break;
            bytesRead++;
            buffer[offset + i] = result;
          }
          if (bytesRead) {
            stream.node.timestamp = Date.now();
          }
          return bytesRead;
        }),
        write: (function(stream, buffer, offset, length, pos) {
          for (var i = 0; i < length; i++) {
            try {
              output(buffer[offset + i]);
            } catch (e) {
              throw new FS.ErrnoError(ERRNO_CODES.EIO);
            }
          }
          if (length) {
            stream.node.timestamp = Date.now();
          }
          return i;
        })
      });
      return FS.mkdev(path, mode, dev);
    }),
    createLink: (function(parent, name, target, canRead, canWrite) {
      var path = PATH.join2(typeof parent === "string" ? parent : FS.getPath(parent), name);
      return FS.symlink(target, path);
    }),
    forceLoadFile: (function(obj) {
      if (obj.isDevice || obj.isFolder || obj.link || obj.contents)
        return true;
      var success = true;
      if (typeof XMLHttpRequest !== "undefined") {
        throw new Error("Lazy loading should have been performed (contents set) in createLazyFile, but it was not. Lazy loading only works in web workers. Use --embed-file or --preload-file in emcc on the main thread.");
      } else if (Module["read"]) {
        try {
          obj.contents = intArrayFromString(Module["read"](obj.url), true);
          obj.usedBytes = obj.contents.length;
        } catch (e) {
          success = false;
        }
      } else {
        throw new Error("Cannot load without read() or XMLHttpRequest.");
      }
      if (!success)
        ___setErrNo(ERRNO_CODES.EIO);
      return success;
    }),
    createLazyFile: (function(parent, name, url, canRead, canWrite) {
      function LazyUint8Array() {
        this.lengthKnown = false;
        this.chunks = [];
      }
      LazyUint8Array.prototype.get = function LazyUint8Array_get(idx) {
        if (idx > this.length - 1 || idx < 0) {
          return undefined;
        }
        var chunkOffset = idx % this.chunkSize;
        var chunkNum = idx / this.chunkSize | 0;
        return this.getter(chunkNum)[chunkOffset];
      };
      LazyUint8Array.prototype.setDataGetter = function LazyUint8Array_setDataGetter(getter) {
        this.getter = getter;
      };
      LazyUint8Array.prototype.cacheLength = function LazyUint8Array_cacheLength() {
        var xhr = new XMLHttpRequest;
        xhr.open("HEAD", url, false);
        xhr.send(null);
        if (!(xhr.status >= 200 && xhr.status < 300 || xhr.status === 304))
          throw new Error("Couldn't load " + url + ". Status: " + xhr.status);
        var datalength = Number(xhr.getResponseHeader("Content-length"));
        var header;
        var hasByteServing = (header = xhr.getResponseHeader("Accept-Ranges")) && header === "bytes";
        var chunkSize = 1024 * 1024;
        if (!hasByteServing)
          chunkSize = datalength;
        var doXHR = (function(from, to) {
          if (from > to)
            throw new Error("invalid range (" + from + ", " + to + ") or no bytes requested!");
          if (to > datalength - 1)
            throw new Error("only " + datalength + " bytes available! programmer error!");
          var xhr = new XMLHttpRequest;
          xhr.open("GET", url, false);
          if (datalength !== chunkSize)
            xhr.setRequestHeader("Range", "bytes=" + from + "-" + to);
          if (typeof Uint8Array != "undefined")
            xhr.responseType = "arraybuffer";
          if (xhr.overrideMimeType) {
            xhr.overrideMimeType("text/plain; charset=x-user-defined");
          }
          xhr.send(null);
          if (!(xhr.status >= 200 && xhr.status < 300 || xhr.status === 304))
            throw new Error("Couldn't load " + url + ". Status: " + xhr.status);
          if (xhr.response !== undefined) {
            return new Uint8Array(xhr.response || []);
          } else {
            return intArrayFromString(xhr.responseText || "", true);
          }
        });
        var lazyArray = this;
        lazyArray.setDataGetter((function(chunkNum) {
          var start = chunkNum * chunkSize;
          var end = (chunkNum + 1) * chunkSize - 1;
          end = Math.min(end, datalength - 1);
          if (typeof lazyArray.chunks[chunkNum] === "undefined") {
            lazyArray.chunks[chunkNum] = doXHR(start, end);
          }
          if (typeof lazyArray.chunks[chunkNum] === "undefined")
            throw new Error("doXHR failed!");
          return lazyArray.chunks[chunkNum];
        }));
        this._length = datalength;
        this._chunkSize = chunkSize;
        this.lengthKnown = true;
      };
      if (typeof XMLHttpRequest !== "undefined") {
        if (!ENVIRONMENT_IS_WORKER)
          throw "Cannot do synchronous binary XHRs outside webworkers in modern browsers. Use --embed-file or --preload-file in emcc";
        var lazyArray = new LazyUint8Array;
        Object.defineProperty(lazyArray, "length", {get: (function() {
            if (!this.lengthKnown) {
              this.cacheLength();
            }
            return this._length;
          })});
        Object.defineProperty(lazyArray, "chunkSize", {get: (function() {
            if (!this.lengthKnown) {
              this.cacheLength();
            }
            return this._chunkSize;
          })});
        var properties = {
          isDevice: false,
          contents: lazyArray
        };
      } else {
        var properties = {
          isDevice: false,
          url: url
        };
      }
      var node = FS.createFile(parent, name, properties, canRead, canWrite);
      if (properties.contents) {
        node.contents = properties.contents;
      } else if (properties.url) {
        node.contents = null;
        node.url = properties.url;
      }
      Object.defineProperty(node, "usedBytes", {get: (function() {
          return this.contents.length;
        })});
      var stream_ops = {};
      var keys = Object.keys(node.stream_ops);
      keys.forEach((function(key) {
        var fn = node.stream_ops[key];
        stream_ops[key] = function forceLoadLazyFile() {
          if (!FS.forceLoadFile(node)) {
            throw new FS.ErrnoError(ERRNO_CODES.EIO);
          }
          return fn.apply(null, arguments);
        };
      }));
      stream_ops.read = function stream_ops_read(stream, buffer, offset, length, position) {
        if (!FS.forceLoadFile(node)) {
          throw new FS.ErrnoError(ERRNO_CODES.EIO);
        }
        var contents = stream.node.contents;
        if (position >= contents.length)
          return 0;
        var size = Math.min(contents.length - position, length);
        assert(size >= 0);
        if (contents.slice) {
          for (var i = 0; i < size; i++) {
            buffer[offset + i] = contents[position + i];
          }
        } else {
          for (var i = 0; i < size; i++) {
            buffer[offset + i] = contents.get(position + i);
          }
        }
        return size;
      };
      node.stream_ops = stream_ops;
      return node;
    }),
    createPreloadedFile: (function(parent, name, url, canRead, canWrite, onload, onerror, dontCreateFile, canOwn, preFinish) {
      Browser.init();
      var fullname = name ? PATH.resolve(PATH.join2(parent, name)) : parent;
      var dep = getUniqueRunDependency("cp " + fullname);
      function processData(byteArray) {
        function finish(byteArray) {
          if (preFinish)
            preFinish();
          if (!dontCreateFile) {
            FS.createDataFile(parent, name, byteArray, canRead, canWrite, canOwn);
          }
          if (onload)
            onload();
          removeRunDependency(dep);
        }
        var handled = false;
        Module["preloadPlugins"].forEach((function(plugin) {
          if (handled)
            return ;
          if (plugin["canHandle"](fullname)) {
            plugin["handle"](byteArray, fullname, finish, (function() {
              if (onerror)
                onerror();
              removeRunDependency(dep);
            }));
            handled = true;
          }
        }));
        if (!handled)
          finish(byteArray);
      }
      addRunDependency(dep);
      if (typeof url == "string") {
        Browser.asyncLoad(url, (function(byteArray) {
          processData(byteArray);
        }), onerror);
      } else {
        processData(url);
      }
    }),
    indexedDB: (function() {
      return window.indexedDB || window.mozIndexedDB || window.webkitIndexedDB || window.msIndexedDB;
    }),
    DB_NAME: (function() {
      return "EM_FS_" + window.location.pathname;
    }),
    DB_VERSION: 20,
    DB_STORE_NAME: "FILE_DATA",
    saveFilesToDB: (function(paths, onload, onerror) {
      onload = onload || (function() {});
      onerror = onerror || (function() {});
      var indexedDB = FS.indexedDB();
      try {
        var openRequest = indexedDB.open(FS.DB_NAME(), FS.DB_VERSION);
      } catch (e) {
        return onerror(e);
      }
      openRequest.onupgradeneeded = function openRequest_onupgradeneeded() {
        console.log("creating db");
        var db = openRequest.result;
        db.createObjectStore(FS.DB_STORE_NAME);
      };
      openRequest.onsuccess = function openRequest_onsuccess() {
        var db = openRequest.result;
        var transaction = db.transaction([FS.DB_STORE_NAME], "readwrite");
        var files = transaction.objectStore(FS.DB_STORE_NAME);
        var ok = 0,
            fail = 0,
            total = paths.length;
        function finish() {
          if (fail == 0)
            onload();
          else
            onerror();
        }
        paths.forEach((function(path) {
          var putRequest = files.put(FS.analyzePath(path).object.contents, path);
          putRequest.onsuccess = function putRequest_onsuccess() {
            ok++;
            if (ok + fail == total)
              finish();
          };
          putRequest.onerror = function putRequest_onerror() {
            fail++;
            if (ok + fail == total)
              finish();
          };
        }));
        transaction.onerror = onerror;
      };
      openRequest.onerror = onerror;
    }),
    loadFilesFromDB: (function(paths, onload, onerror) {
      onload = onload || (function() {});
      onerror = onerror || (function() {});
      var indexedDB = FS.indexedDB();
      try {
        var openRequest = indexedDB.open(FS.DB_NAME(), FS.DB_VERSION);
      } catch (e) {
        return onerror(e);
      }
      openRequest.onupgradeneeded = onerror;
      openRequest.onsuccess = function openRequest_onsuccess() {
        var db = openRequest.result;
        try {
          var transaction = db.transaction([FS.DB_STORE_NAME], "readonly");
        } catch (e) {
          onerror(e);
          return ;
        }
        var files = transaction.objectStore(FS.DB_STORE_NAME);
        var ok = 0,
            fail = 0,
            total = paths.length;
        function finish() {
          if (fail == 0)
            onload();
          else
            onerror();
        }
        paths.forEach((function(path) {
          var getRequest = files.get(path);
          getRequest.onsuccess = function getRequest_onsuccess() {
            if (FS.analyzePath(path).exists) {
              FS.unlink(path);
            }
            FS.createDataFile(PATH.dirname(path), PATH.basename(path), getRequest.result, true, true, true);
            ok++;
            if (ok + fail == total)
              finish();
          };
          getRequest.onerror = function getRequest_onerror() {
            fail++;
            if (ok + fail == total)
              finish();
          };
        }));
        transaction.onerror = onerror;
      };
      openRequest.onerror = onerror;
    })
  };
  function _lseek(fildes, offset, whence) {
    var stream = FS.getStream(fildes);
    if (!stream) {
      ___setErrNo(ERRNO_CODES.EBADF);
      return -1;
    }
    try {
      return FS.llseek(stream, offset, whence);
    } catch (e) {
      FS.handleFSError(e);
      return -1;
    }
  }
  function _fileno(stream) {
    stream = FS.getStreamFromPtr(stream);
    if (!stream)
      return -1;
    return stream.fd;
  }
  function _fseek(stream, offset, whence) {
    var fd = _fileno(stream);
    var ret = _lseek(fd, offset, whence);
    if (ret == -1) {
      return -1;
    }
    stream = FS.getStreamFromPtr(stream);
    stream.eof = false;
    return 0;
  }
  Module["_i64Subtract"] = _i64Subtract;
  var _DtoILow = true;
  Module["_i64Add"] = _i64Add;
  var LOCALE = {
    curr: 0,
    check: (function(locale) {
      if (locale)
        locale = Pointer_stringify(locale);
      return locale === "C" || locale === "POSIX" || !locale;
    })
  };
  function _setlocale(category, locale) {
    if (LOCALE.check(locale)) {
      if (!_setlocale.ret)
        _setlocale.ret = allocate(intArrayFromString("C"), "i8", ALLOC_NORMAL);
      return _setlocale.ret;
    }
    return 0;
  }
  function _close(fildes) {
    var stream = FS.getStream(fildes);
    if (!stream) {
      ___setErrNo(ERRNO_CODES.EBADF);
      return -1;
    }
    try {
      FS.close(stream);
      return 0;
    } catch (e) {
      FS.handleFSError(e);
      return -1;
    }
  }
  function _fclose(stream) {
    var fd = _fileno(stream);
    return _close(fd);
  }
  function getShiftFromSize(size) {
    switch (size) {
      case 1:
        return 0;
      case 2:
        return 1;
      case 4:
        return 2;
      case 8:
        return 3;
      default:
        throw new TypeError("Unknown type size: " + size);
    }
  }
  function embind_init_charCodes() {
    var codes = new Array(256);
    for (var i = 0; i < 256; ++i) {
      codes[i] = String.fromCharCode(i);
    }
    embind_charCodes = codes;
  }
  var embind_charCodes = undefined;
  function readLatin1String(ptr) {
    var ret = "";
    var c = ptr;
    while (HEAPU8[c]) {
      ret += embind_charCodes[HEAPU8[c++]];
    }
    return ret;
  }
  var awaitingDependencies = {};
  var registeredTypes = {};
  var typeDependencies = {};
  var char_0 = 48;
  var char_9 = 57;
  function makeLegalFunctionName(name) {
    if (undefined === name) {
      return "_unknown";
    }
    name = name.replace(/[^a-zA-Z0-9_]/g, "$");
    var f = name.charCodeAt(0);
    if (f >= char_0 && f <= char_9) {
      return "_" + name;
    } else {
      return name;
    }
  }
  function createNamedFunction(name, body) {
    name = makeLegalFunctionName(name);
    return (new Function("body", "return function " + name + "() {\n" + '    "use strict";' + "    return body.apply(this, arguments);\n" + "};\n"))(body);
  }
  function extendError(baseErrorType, errorName) {
    var errorClass = createNamedFunction(errorName, (function(message) {
      this.name = errorName;
      this.message = message;
      var stack = (new Error(message)).stack;
      if (stack !== undefined) {
        this.stack = this.toString() + "\n" + stack.replace(/^Error(:[^\n]*)?\n/, "");
      }
    }));
    errorClass.prototype = Object.create(baseErrorType.prototype);
    errorClass.prototype.constructor = errorClass;
    errorClass.prototype.toString = (function() {
      if (this.message === undefined) {
        return this.name;
      } else {
        return this.name + ": " + this.message;
      }
    });
    return errorClass;
  }
  var BindingError = undefined;
  function throwBindingError(message) {
    throw new BindingError(message);
  }
  var InternalError = undefined;
  function throwInternalError(message) {
    throw new InternalError(message);
  }
  function whenDependentTypesAreResolved(myTypes, dependentTypes, getTypeConverters) {
    myTypes.forEach((function(type) {
      typeDependencies[type] = dependentTypes;
    }));
    function onComplete(typeConverters) {
      var myTypeConverters = getTypeConverters(typeConverters);
      if (myTypeConverters.length !== myTypes.length) {
        throwInternalError("Mismatched type converter count");
      }
      for (var i = 0; i < myTypes.length; ++i) {
        registerType(myTypes[i], myTypeConverters[i]);
      }
    }
    var typeConverters = new Array(dependentTypes.length);
    var unregisteredTypes = [];
    var registered = 0;
    dependentTypes.forEach((function(dt, i) {
      if (registeredTypes.hasOwnProperty(dt)) {
        typeConverters[i] = registeredTypes[dt];
      } else {
        unregisteredTypes.push(dt);
        if (!awaitingDependencies.hasOwnProperty(dt)) {
          awaitingDependencies[dt] = [];
        }
        awaitingDependencies[dt].push((function() {
          typeConverters[i] = registeredTypes[dt];
          ++registered;
          if (registered === unregisteredTypes.length) {
            onComplete(typeConverters);
          }
        }));
      }
    }));
    if (0 === unregisteredTypes.length) {
      onComplete(typeConverters);
    }
  }
  function registerType(rawType, registeredInstance, options) {
    options = options || {};
    if (!("argPackAdvance" in registeredInstance)) {
      throw new TypeError("registerType registeredInstance requires argPackAdvance");
    }
    var name = registeredInstance.name;
    if (!rawType) {
      throwBindingError('type "' + name + '" must have a positive integer typeid pointer');
    }
    if (registeredTypes.hasOwnProperty(rawType)) {
      if (options.ignoreDuplicateRegistrations) {
        return ;
      } else {
        throwBindingError("Cannot register type '" + name + "' twice");
      }
    }
    registeredTypes[rawType] = registeredInstance;
    delete typeDependencies[rawType];
    if (awaitingDependencies.hasOwnProperty(rawType)) {
      var callbacks = awaitingDependencies[rawType];
      delete awaitingDependencies[rawType];
      callbacks.forEach((function(cb) {
        cb();
      }));
    }
  }
  function __embind_register_bool(rawType, name, size, trueValue, falseValue) {
    var shift = getShiftFromSize(size);
    name = readLatin1String(name);
    registerType(rawType, {
      name: name,
      "fromWireType": (function(wt) {
        return !!wt;
      }),
      "toWireType": (function(destructors, o) {
        return o ? trueValue : falseValue;
      }),
      "argPackAdvance": 8,
      "readValueFromPointer": (function(pointer) {
        var heap;
        if (size === 1) {
          heap = HEAP8;
        } else if (size === 2) {
          heap = HEAP16;
        } else if (size === 4) {
          heap = HEAP32;
        } else {
          throw new TypeError("Unknown boolean type size: " + name);
        }
        return this["fromWireType"](heap[pointer >> shift]);
      }),
      destructorFunction: null
    });
  }
  function _audio_sample_batch(_data, frames) {
    var left = new Float32Array(frames);
    var right = new Float32Array(frames);
    var data = new Int16Array(Module.HEAP8.buffer, _data, frames * 4);
    for (var i = 0; i < frames; i++) {
      left[i] = data[i * 2] / 32768;
      right[i] = data[i * 2 + 1] / 32768;
    }
    return Module.audio_sample_batch(left, right, frames);
  }
  function _free() {}
  Module["_free"] = _free;
  function _malloc(bytes) {
    var ptr = Runtime.dynamicAlloc(bytes + 8);
    return ptr + 8 & 4294967288;
  }
  Module["_malloc"] = _malloc;
  function simpleReadValueFromPointer(pointer) {
    return this["fromWireType"](HEAPU32[pointer >> 2]);
  }
  function __embind_register_std_string(rawType, name) {
    name = readLatin1String(name);
    registerType(rawType, {
      name: name,
      "fromWireType": (function(value) {
        var length = HEAPU32[value >> 2];
        var a = new Array(length);
        for (var i = 0; i < length; ++i) {
          a[i] = String.fromCharCode(HEAPU8[value + 4 + i]);
        }
        _free(value);
        return a.join("");
      }),
      "toWireType": (function(destructors, value) {
        if (value instanceof ArrayBuffer) {
          value = new Uint8Array(value);
        }
        function getTAElement(ta, index) {
          return ta[index];
        }
        function getStringElement(string, index) {
          return string.charCodeAt(index);
        }
        var getElement;
        if (value instanceof Uint8Array) {
          getElement = getTAElement;
        } else if (value instanceof Int8Array) {
          getElement = getTAElement;
        } else if (typeof value === "string") {
          getElement = getStringElement;
        } else {
          throwBindingError("Cannot pass non-string to std::string");
        }
        var length = value.length;
        var ptr = _malloc(4 + length);
        HEAPU32[ptr >> 2] = length;
        for (var i = 0; i < length; ++i) {
          var charCode = getElement(value, i);
          if (charCode > 255) {
            _free(ptr);
            throwBindingError("String has UTF-16 code units that do not fit in 8 bits");
          }
          HEAPU8[ptr + 4 + i] = charCode;
        }
        if (destructors !== null) {
          destructors.push(_free, ptr);
        }
        return ptr;
      }),
      "argPackAdvance": 8,
      "readValueFromPointer": simpleReadValueFromPointer,
      destructorFunction: (function(ptr) {
        _free(ptr);
      })
    });
  }
  function __embind_register_std_wstring(rawType, charSize, name) {
    name = readLatin1String(name);
    var getHeap,
        shift;
    if (charSize === 2) {
      getHeap = (function() {
        return HEAPU16;
      });
      shift = 1;
    } else if (charSize === 4) {
      getHeap = (function() {
        return HEAPU32;
      });
      shift = 2;
    }
    registerType(rawType, {
      name: name,
      "fromWireType": (function(value) {
        var HEAP = getHeap();
        var length = HEAPU32[value >> 2];
        var a = new Array(length);
        var start = value + 4 >> shift;
        for (var i = 0; i < length; ++i) {
          a[i] = String.fromCharCode(HEAP[start + i]);
        }
        _free(value);
        return a.join("");
      }),
      "toWireType": (function(destructors, value) {
        var HEAP = getHeap();
        var length = value.length;
        var ptr = _malloc(4 + length * charSize);
        HEAPU32[ptr >> 2] = length;
        var start = ptr + 4 >> shift;
        for (var i = 0; i < length; ++i) {
          HEAP[start + i] = value.charCodeAt(i);
        }
        if (destructors !== null) {
          destructors.push(_free, ptr);
        }
        return ptr;
      }),
      "argPackAdvance": 8,
      "readValueFromPointer": simpleReadValueFromPointer,
      destructorFunction: (function(ptr) {
        _free(ptr);
      })
    });
  }
  function _open(path, oflag, varargs) {
    var mode = HEAP32[varargs >> 2];
    path = Pointer_stringify(path);
    try {
      var stream = FS.open(path, oflag, mode);
      return stream.fd;
    } catch (e) {
      FS.handleFSError(e);
      return -1;
    }
  }
  function _fopen(filename, mode) {
    var flags;
    mode = Pointer_stringify(mode);
    if (mode[0] == "r") {
      if (mode.indexOf("+") != -1) {
        flags = 2;
      } else {
        flags = 0;
      }
    } else if (mode[0] == "w") {
      if (mode.indexOf("+") != -1) {
        flags = 2;
      } else {
        flags = 1;
      }
      flags |= 64;
      flags |= 512;
    } else if (mode[0] == "a") {
      if (mode.indexOf("+") != -1) {
        flags = 2;
      } else {
        flags = 1;
      }
      flags |= 64;
      flags |= 1024;
    } else {
      ___setErrNo(ERRNO_CODES.EINVAL);
      return 0;
    }
    var fd = _open(filename, flags, allocate([511, 0, 0, 0], "i32", ALLOC_STACK));
    return fd === -1 ? 0 : FS.getPtrForStream(FS.getStream(fd));
  }
  var _emscripten_check_longjmp = true;
  Module["_strncpy"] = _strncpy;
  function _mkport() {
    throw "TODO";
  }
  var SOCKFS = {
    mount: (function(mount) {
      Module["websocket"] = Module["websocket"] && "object" === typeof Module["websocket"] ? Module["websocket"] : {};
      Module["websocket"]._callbacks = {};
      Module["websocket"]["on"] = (function(event, callback) {
        if ("function" === typeof callback) {
          this._callbacks[event] = callback;
        }
        return this;
      });
      Module["websocket"].emit = (function(event, param) {
        if ("function" === typeof this._callbacks[event]) {
          this._callbacks[event].call(this, param);
        }
      });
      return FS.createNode(null, "/", 16384 | 511, 0);
    }),
    createSocket: (function(family, type, protocol) {
      var streaming = type == 1;
      if (protocol) {
        assert(streaming == (protocol == 6));
      }
      var sock = {
        family: family,
        type: type,
        protocol: protocol,
        server: null,
        error: null,
        peers: {},
        pending: [],
        recv_queue: [],
        sock_ops: SOCKFS.websocket_sock_ops
      };
      var name = SOCKFS.nextname();
      var node = FS.createNode(SOCKFS.root, name, 49152, 0);
      node.sock = sock;
      var stream = FS.createStream({
        path: name,
        node: node,
        flags: FS.modeStringToFlags("r+"),
        seekable: false,
        stream_ops: SOCKFS.stream_ops
      });
      sock.stream = stream;
      return sock;
    }),
    getSocket: (function(fd) {
      var stream = FS.getStream(fd);
      if (!stream || !FS.isSocket(stream.node.mode)) {
        return null;
      }
      return stream.node.sock;
    }),
    stream_ops: {
      poll: (function(stream) {
        var sock = stream.node.sock;
        return sock.sock_ops.poll(sock);
      }),
      ioctl: (function(stream, request, varargs) {
        var sock = stream.node.sock;
        return sock.sock_ops.ioctl(sock, request, varargs);
      }),
      read: (function(stream, buffer, offset, length, position) {
        var sock = stream.node.sock;
        var msg = sock.sock_ops.recvmsg(sock, length);
        if (!msg) {
          return 0;
        }
        buffer.set(msg.buffer, offset);
        return msg.buffer.length;
      }),
      write: (function(stream, buffer, offset, length, position) {
        var sock = stream.node.sock;
        return sock.sock_ops.sendmsg(sock, buffer, offset, length);
      }),
      close: (function(stream) {
        var sock = stream.node.sock;
        sock.sock_ops.close(sock);
      })
    },
    nextname: (function() {
      if (!SOCKFS.nextname.current) {
        SOCKFS.nextname.current = 0;
      }
      return "socket[" + SOCKFS.nextname.current++ + "]";
    }),
    websocket_sock_ops: {
      createPeer: (function(sock, addr, port) {
        var ws;
        if (typeof addr === "object") {
          ws = addr;
          addr = null;
          port = null;
        }
        if (ws) {
          if (ws._socket) {
            addr = ws._socket.remoteAddress;
            port = ws._socket.remotePort;
          } else {
            var result = /ws[s]?:\/\/([^:]+):(\d+)/.exec(ws.url);
            if (!result) {
              throw new Error("WebSocket URL must be in the format ws(s)://address:port");
            }
            addr = result[1];
            port = parseInt(result[2], 10);
          }
        } else {
          try {
            var runtimeConfig = Module["websocket"] && "object" === typeof Module["websocket"];
            var url = "ws:#".replace("#", "//");
            if (runtimeConfig) {
              if ("string" === typeof Module["websocket"]["url"]) {
                url = Module["websocket"]["url"];
              }
            }
            if (url === "ws://" || url === "wss://") {
              var parts = addr.split("/");
              url = url + parts[0] + ":" + port + "/" + parts.slice(1).join("/");
            }
            var subProtocols = "binary";
            if (runtimeConfig) {
              if ("string" === typeof Module["websocket"]["subprotocol"]) {
                subProtocols = Module["websocket"]["subprotocol"];
              }
            }
            subProtocols = subProtocols.replace(/^ +| +$/g, "").split(/ *, */);
            var opts = ENVIRONMENT_IS_NODE ? {"protocol": subProtocols.toString()} : subProtocols;
            var WebSocket = ENVIRONMENT_IS_NODE ? require("ws") : window["WebSocket"];
            ws = new WebSocket(url, opts);
            ws.binaryType = "arraybuffer";
          } catch (e) {
            throw new FS.ErrnoError(ERRNO_CODES.EHOSTUNREACH);
          }
        }
        var peer = {
          addr: addr,
          port: port,
          socket: ws,
          dgram_send_queue: []
        };
        SOCKFS.websocket_sock_ops.addPeer(sock, peer);
        SOCKFS.websocket_sock_ops.handlePeerEvents(sock, peer);
        if (sock.type === 2 && typeof sock.sport !== "undefined") {
          peer.dgram_send_queue.push(new Uint8Array([255, 255, 255, 255, "p".charCodeAt(0), "o".charCodeAt(0), "r".charCodeAt(0), "t".charCodeAt(0), (sock.sport & 65280) >> 8, sock.sport & 255]));
        }
        return peer;
      }),
      getPeer: (function(sock, addr, port) {
        return sock.peers[addr + ":" + port];
      }),
      addPeer: (function(sock, peer) {
        sock.peers[peer.addr + ":" + peer.port] = peer;
      }),
      removePeer: (function(sock, peer) {
        delete sock.peers[peer.addr + ":" + peer.port];
      }),
      handlePeerEvents: (function(sock, peer) {
        var first = true;
        var handleOpen = (function() {
          Module["websocket"].emit("open", sock.stream.fd);
          try {
            var queued = peer.dgram_send_queue.shift();
            while (queued) {
              peer.socket.send(queued);
              queued = peer.dgram_send_queue.shift();
            }
          } catch (e) {
            peer.socket.close();
          }
        });
        function handleMessage(data) {
          assert(typeof data !== "string" && data.byteLength !== undefined);
          data = new Uint8Array(data);
          var wasfirst = first;
          first = false;
          if (wasfirst && data.length === 10 && data[0] === 255 && data[1] === 255 && data[2] === 255 && data[3] === 255 && data[4] === "p".charCodeAt(0) && data[5] === "o".charCodeAt(0) && data[6] === "r".charCodeAt(0) && data[7] === "t".charCodeAt(0)) {
            var newport = data[8] << 8 | data[9];
            SOCKFS.websocket_sock_ops.removePeer(sock, peer);
            peer.port = newport;
            SOCKFS.websocket_sock_ops.addPeer(sock, peer);
            return ;
          }
          sock.recv_queue.push({
            addr: peer.addr,
            port: peer.port,
            data: data
          });
          Module["websocket"].emit("message", sock.stream.fd);
        }
        if (ENVIRONMENT_IS_NODE) {
          peer.socket.on("open", handleOpen);
          peer.socket.on("message", (function(data, flags) {
            if (!flags.binary) {
              return ;
            }
            handleMessage((new Uint8Array(data)).buffer);
          }));
          peer.socket.on("close", (function() {
            Module["websocket"].emit("close", sock.stream.fd);
          }));
          peer.socket.on("error", (function(error) {
            sock.error = ERRNO_CODES.ECONNREFUSED;
            Module["websocket"].emit("error", [sock.stream.fd, sock.error, "ECONNREFUSED: Connection refused"]);
          }));
        } else {
          peer.socket.onopen = handleOpen;
          peer.socket.onclose = (function() {
            Module["websocket"].emit("close", sock.stream.fd);
          });
          peer.socket.onmessage = function peer_socket_onmessage(event) {
            handleMessage(event.data);
          };
          peer.socket.onerror = (function(error) {
            sock.error = ERRNO_CODES.ECONNREFUSED;
            Module["websocket"].emit("error", [sock.stream.fd, sock.error, "ECONNREFUSED: Connection refused"]);
          });
        }
      }),
      poll: (function(sock) {
        if (sock.type === 1 && sock.server) {
          return sock.pending.length ? 64 | 1 : 0;
        }
        var mask = 0;
        var dest = sock.type === 1 ? SOCKFS.websocket_sock_ops.getPeer(sock, sock.daddr, sock.dport) : null;
        if (sock.recv_queue.length || !dest || dest && dest.socket.readyState === dest.socket.CLOSING || dest && dest.socket.readyState === dest.socket.CLOSED) {
          mask |= 64 | 1;
        }
        if (!dest || dest && dest.socket.readyState === dest.socket.OPEN) {
          mask |= 4;
        }
        if (dest && dest.socket.readyState === dest.socket.CLOSING || dest && dest.socket.readyState === dest.socket.CLOSED) {
          mask |= 16;
        }
        return mask;
      }),
      ioctl: (function(sock, request, arg) {
        switch (request) {
          case 21531:
            var bytes = 0;
            if (sock.recv_queue.length) {
              bytes = sock.recv_queue[0].data.length;
            }
            HEAP32[arg >> 2] = bytes;
            return 0;
          default:
            return ERRNO_CODES.EINVAL;
        }
      }),
      close: (function(sock) {
        if (sock.server) {
          try {
            sock.server.close();
          } catch (e) {}
          sock.server = null;
        }
        var peers = Object.keys(sock.peers);
        for (var i = 0; i < peers.length; i++) {
          var peer = sock.peers[peers[i]];
          try {
            peer.socket.close();
          } catch (e) {}
          SOCKFS.websocket_sock_ops.removePeer(sock, peer);
        }
        return 0;
      }),
      bind: (function(sock, addr, port) {
        if (typeof sock.saddr !== "undefined" || typeof sock.sport !== "undefined") {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        sock.saddr = addr;
        sock.sport = port || _mkport();
        if (sock.type === 2) {
          if (sock.server) {
            sock.server.close();
            sock.server = null;
          }
          try {
            sock.sock_ops.listen(sock, 0);
          } catch (e) {
            if (!(e instanceof FS.ErrnoError))
              throw e;
            if (e.errno !== ERRNO_CODES.EOPNOTSUPP)
              throw e;
          }
        }
      }),
      connect: (function(sock, addr, port) {
        if (sock.server) {
          throw new FS.ErrnoError(ERRNO_CODES.EOPNOTSUPP);
        }
        if (typeof sock.daddr !== "undefined" && typeof sock.dport !== "undefined") {
          var dest = SOCKFS.websocket_sock_ops.getPeer(sock, sock.daddr, sock.dport);
          if (dest) {
            if (dest.socket.readyState === dest.socket.CONNECTING) {
              throw new FS.ErrnoError(ERRNO_CODES.EALREADY);
            } else {
              throw new FS.ErrnoError(ERRNO_CODES.EISCONN);
            }
          }
        }
        var peer = SOCKFS.websocket_sock_ops.createPeer(sock, addr, port);
        sock.daddr = peer.addr;
        sock.dport = peer.port;
        throw new FS.ErrnoError(ERRNO_CODES.EINPROGRESS);
      }),
      listen: (function(sock, backlog) {
        if (!ENVIRONMENT_IS_NODE) {
          throw new FS.ErrnoError(ERRNO_CODES.EOPNOTSUPP);
        }
        if (sock.server) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        var WebSocketServer = require("ws").Server;
        var host = sock.saddr;
        sock.server = new WebSocketServer({
          host: host,
          port: sock.sport
        });
        Module["websocket"].emit("listen", sock.stream.fd);
        sock.server.on("connection", (function(ws) {
          if (sock.type === 1) {
            var newsock = SOCKFS.createSocket(sock.family, sock.type, sock.protocol);
            var peer = SOCKFS.websocket_sock_ops.createPeer(newsock, ws);
            newsock.daddr = peer.addr;
            newsock.dport = peer.port;
            sock.pending.push(newsock);
            Module["websocket"].emit("connection", newsock.stream.fd);
          } else {
            SOCKFS.websocket_sock_ops.createPeer(sock, ws);
            Module["websocket"].emit("connection", sock.stream.fd);
          }
        }));
        sock.server.on("closed", (function() {
          Module["websocket"].emit("close", sock.stream.fd);
          sock.server = null;
        }));
        sock.server.on("error", (function(error) {
          sock.error = ERRNO_CODES.EHOSTUNREACH;
          Module["websocket"].emit("error", [sock.stream.fd, sock.error, "EHOSTUNREACH: Host is unreachable"]);
        }));
      }),
      accept: (function(listensock) {
        if (!listensock.server) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        var newsock = listensock.pending.shift();
        newsock.stream.flags = listensock.stream.flags;
        return newsock;
      }),
      getname: (function(sock, peer) {
        var addr,
            port;
        if (peer) {
          if (sock.daddr === undefined || sock.dport === undefined) {
            throw new FS.ErrnoError(ERRNO_CODES.ENOTCONN);
          }
          addr = sock.daddr;
          port = sock.dport;
        } else {
          addr = sock.saddr || 0;
          port = sock.sport || 0;
        }
        return {
          addr: addr,
          port: port
        };
      }),
      sendmsg: (function(sock, buffer, offset, length, addr, port) {
        if (sock.type === 2) {
          if (addr === undefined || port === undefined) {
            addr = sock.daddr;
            port = sock.dport;
          }
          if (addr === undefined || port === undefined) {
            throw new FS.ErrnoError(ERRNO_CODES.EDESTADDRREQ);
          }
        } else {
          addr = sock.daddr;
          port = sock.dport;
        }
        var dest = SOCKFS.websocket_sock_ops.getPeer(sock, addr, port);
        if (sock.type === 1) {
          if (!dest || dest.socket.readyState === dest.socket.CLOSING || dest.socket.readyState === dest.socket.CLOSED) {
            throw new FS.ErrnoError(ERRNO_CODES.ENOTCONN);
          } else if (dest.socket.readyState === dest.socket.CONNECTING) {
            throw new FS.ErrnoError(ERRNO_CODES.EAGAIN);
          }
        }
        var data;
        if (buffer instanceof Array || buffer instanceof ArrayBuffer) {
          data = buffer.slice(offset, offset + length);
        } else {
          data = buffer.buffer.slice(buffer.byteOffset + offset, buffer.byteOffset + offset + length);
        }
        if (sock.type === 2) {
          if (!dest || dest.socket.readyState !== dest.socket.OPEN) {
            if (!dest || dest.socket.readyState === dest.socket.CLOSING || dest.socket.readyState === dest.socket.CLOSED) {
              dest = SOCKFS.websocket_sock_ops.createPeer(sock, addr, port);
            }
            dest.dgram_send_queue.push(data);
            return length;
          }
        }
        try {
          dest.socket.send(data);
          return length;
        } catch (e) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
      }),
      recvmsg: (function(sock, length) {
        if (sock.type === 1 && sock.server) {
          throw new FS.ErrnoError(ERRNO_CODES.ENOTCONN);
        }
        var queued = sock.recv_queue.shift();
        if (!queued) {
          if (sock.type === 1) {
            var dest = SOCKFS.websocket_sock_ops.getPeer(sock, sock.daddr, sock.dport);
            if (!dest) {
              throw new FS.ErrnoError(ERRNO_CODES.ENOTCONN);
            } else if (dest.socket.readyState === dest.socket.CLOSING || dest.socket.readyState === dest.socket.CLOSED) {
              return null;
            } else {
              throw new FS.ErrnoError(ERRNO_CODES.EAGAIN);
            }
          } else {
            throw new FS.ErrnoError(ERRNO_CODES.EAGAIN);
          }
        }
        var queuedLength = queued.data.byteLength || queued.data.length;
        var queuedOffset = queued.data.byteOffset || 0;
        var queuedBuffer = queued.data.buffer || queued.data;
        var bytesRead = Math.min(length, queuedLength);
        var res = {
          buffer: new Uint8Array(queuedBuffer, queuedOffset, bytesRead),
          addr: queued.addr,
          port: queued.port
        };
        if (sock.type === 1 && bytesRead < queuedLength) {
          var bytesRemaining = queuedLength - bytesRead;
          queued.data = new Uint8Array(queuedBuffer, queuedOffset + bytesRead, bytesRemaining);
          sock.recv_queue.unshift(queued);
        }
        return res;
      })
    }
  };
  function _send(fd, buf, len, flags) {
    var sock = SOCKFS.getSocket(fd);
    if (!sock) {
      ___setErrNo(ERRNO_CODES.EBADF);
      return -1;
    }
    return _write(fd, buf, len);
  }
  function _pwrite(fildes, buf, nbyte, offset) {
    var stream = FS.getStream(fildes);
    if (!stream) {
      ___setErrNo(ERRNO_CODES.EBADF);
      return -1;
    }
    try {
      var slab = HEAP8;
      return FS.write(stream, slab, buf, nbyte, offset);
    } catch (e) {
      FS.handleFSError(e);
      return -1;
    }
  }
  function _write(fildes, buf, nbyte) {
    var stream = FS.getStream(fildes);
    if (!stream) {
      ___setErrNo(ERRNO_CODES.EBADF);
      return -1;
    }
    try {
      var slab = HEAP8;
      return FS.write(stream, slab, buf, nbyte);
    } catch (e) {
      FS.handleFSError(e);
      return -1;
    }
  }
  function _fputc(c, stream) {
    var chr = unSign(c & 255);
    HEAP8[_fputc.ret >> 0] = chr;
    var fd = _fileno(stream);
    var ret = _write(fd, _fputc.ret, 1);
    if (ret == -1) {
      var streamObj = FS.getStreamFromPtr(stream);
      if (streamObj)
        streamObj.error = true;
      return -1;
    } else {
      return chr;
    }
  }
  var _log = Math_log;
  var _emscripten_postinvoke = true;
  function _emscripten_memcpy_big(dest, src, num) {
    HEAPU8.set(HEAPU8.subarray(src, src + num), dest);
    return dest;
  }
  Module["_memcpy"] = _memcpy;
  function _realloc(ptr, size) {
    if (!size) {
      if (ptr)
        _free(ptr);
      return 0;
    }
    var ret = _malloc(size);
    if (ptr) {
      _memcpy(ret, ptr, size);
      _free(ptr);
    }
    return ret;
  }
  Module["_saveSetjmp"] = _saveSetjmp;
  function _fwrite(ptr, size, nitems, stream) {
    var bytesToWrite = nitems * size;
    if (bytesToWrite == 0)
      return 0;
    var fd = _fileno(stream);
    var bytesWritten = _write(fd, ptr, bytesToWrite);
    if (bytesWritten == -1) {
      var streamObj = FS.getStreamFromPtr(stream);
      if (streamObj)
        streamObj.error = true;
      return 0;
    } else {
      return bytesWritten / size | 0;
    }
  }
  function _system(command) {
    ___setErrNo(ERRNO_CODES.EAGAIN);
    return -1;
  }
  function _input_poll() {
    Module.input_poll();
  }
  function _environment(cmd, _data) {
    var str,
        buffer;
    switch (cmd) {
      case Module.ENVIRONMENT_SET_ROTATION:
        return Module.environment(cmd, Module.getValue(_data, "i32"));
      case Module.ENVIRONMENT_GET_OVERSCAN:
        Module.setValue(_data, Module.environment(cmd), "i32");
        return true;
      case Module.ENVIRONMENT_GET_CAN_DUPE:
        Module.setValue(_data, Module.environment(cmd), "i8");
        return true;
      case Module.ENVIRONMENT_SHUTDOWN:
        return Module.environment(cmd);
      case Module.ENVIRONMENT_SET_PERFORMANCE_LEVEL:
        return Module.environment(cmd, Module.getValue(_data, "i32"));
      case Module.ENVIRONMENT_GET_SYSTEM_DIRECTORY:
        str = Module.environment(cmd);
        buffer = Module._malloc(str.length + 1);
        Module.writeStringToMemory(str, buffer);
        Module.setValue(_data, buffer, "*");
        return true;
      case Module.ENVIRONMENT_SET_PIXEL_FORMAT:
        return Module.environment(cmd, Module.getValue(_data, "i32"));
      case Module.ENVIRONMENT_GET_VARIABLE_UPDATE:
        Module.setValue(_data, Module.environment(cmd), "i8");
        return true;
      case Module.ENVIRONMENT_SET_SUPPORT_NO_GAME:
        return Module.environment(cmd, Module.getValue(_data, "i8"));
      case Module.ENVIRONMENT_GET_LIBPATH:
        str = Module.environment(cmd);
        buffer = Module._malloc(str.length + 1);
        Module.writeStringToMemory(str, buffer);
        Module.setValue(_data, buffer, "*");
        return true;
      case Module.ENVIRONMENT_GET_INPUT_DEVICE_CAPABILITIES:
        Module.setValue(_data, Module.environment(cmd), "i64");
        return true;
      case Module.ENVIRONMENT_GET_LOG_INTERFACE:
        Module.setValue(_data, Runtime.addFunction(Module.environment(cmd)), "*");
        return true;
      case Module.ENVIRONMENT_GET_CORE_ASSETS_DIRECTORY:
        str = Module.environment(cmd);
        buffer = Module._malloc(str.length + 1);
        Module.writeStringToMemory(str, buffer);
        Module.setValue(_data, buffer, "*");
        return true;
      case Module.ENVIRONMENT_GET_SAVE_DIRECTORY:
        str = Module.environment(cmd);
        buffer = Module._malloc(str.length + 1);
        Module.writeStringToMemory(str, buffer);
        Module.setValue(_data, buffer, "*");
        return true;
      case Module.ENVIRONMENT_SET_GEOMETRY:
        return Module.environment(cmd, {
          base_width: Module.getValue(_data, "i32"),
          base_height: Module.getValue(_data + 4, "i32"),
          max_width: Module.getValue(_data + 8, "i32"),
          max_height: Module.getValue(_data + 12, "i32"),
          aspect_ratio: Module.getValue(_data + 16, "float")
        });
      case Module.ENVIRONMENT_GET_USERNAME:
        str = Module.environment(cmd);
        buffer = Module._malloc(str.length + 1);
        Module.writeStringToMemory(str, buffer);
        Module.setValue(_data, buffer, "*");
        return true;
      case Module.ENVIRONMENT_GET_LANGUAGE:
        Module.setValue(_data, Module.environment(cmd), "i32");
        return true;
      default:
        return Module.environment(cmd, _data);
    }
  }
  var _tzname = allocate(8, "i32*", ALLOC_STATIC);
  var _daylight = allocate(1, "i32*", ALLOC_STATIC);
  var _timezone = allocate(1, "i32*", ALLOC_STATIC);
  function _tzset() {
    if (_tzset.called)
      return ;
    _tzset.called = true;
    HEAP32[_timezone >> 2] = -(new Date).getTimezoneOffset() * 60;
    var winter = new Date(2e3, 0, 1);
    var summer = new Date(2e3, 6, 1);
    HEAP32[_daylight >> 2] = Number(winter.getTimezoneOffset() != summer.getTimezoneOffset());
    function extractZone(date) {
      var match = date.toTimeString().match(/\(([A-Za-z ]+)\)$/);
      return match ? match[1] : "GMT";
    }
    var winterName = extractZone(winter);
    var summerName = extractZone(summer);
    var winterNamePtr = allocate(intArrayFromString(winterName), "i8", ALLOC_NORMAL);
    var summerNamePtr = allocate(intArrayFromString(summerName), "i8", ALLOC_NORMAL);
    if (summer.getTimezoneOffset() < winter.getTimezoneOffset()) {
      HEAP32[_tzname >> 2] = winterNamePtr;
      HEAP32[_tzname + 4 >> 2] = summerNamePtr;
    } else {
      HEAP32[_tzname >> 2] = summerNamePtr;
      HEAP32[_tzname + 4 >> 2] = winterNamePtr;
    }
  }
  function _mktime(tmPtr) {
    _tzset();
    var date = new Date(HEAP32[tmPtr + 20 >> 2] + 1900, HEAP32[tmPtr + 16 >> 2], HEAP32[tmPtr + 12 >> 2], HEAP32[tmPtr + 8 >> 2], HEAP32[tmPtr + 4 >> 2], HEAP32[tmPtr >> 2], 0);
    var dst = HEAP32[tmPtr + 32 >> 2];
    var guessedOffset = date.getTimezoneOffset();
    var start = new Date(date.getFullYear(), 0, 1);
    var summerOffset = (new Date(2e3, 6, 1)).getTimezoneOffset();
    var winterOffset = start.getTimezoneOffset();
    var dstOffset = Math.min(winterOffset, summerOffset);
    if (dst < 0) {
      HEAP32[tmPtr + 32 >> 2] = Number(winterOffset != guessedOffset);
    } else if (dst > 0 != (winterOffset != guessedOffset)) {
      var summerOffset = (new Date(date.getFullYear(), 6, 1)).getTimezoneOffset();
      var trueOffset = dst > 0 ? summerOffset : winterOffset;
      date.setTime(date.getTime() + (trueOffset - guessedOffset) * 6e4);
    }
    HEAP32[tmPtr + 24 >> 2] = date.getDay();
    var yday = (date.getTime() - start.getTime()) / (1e3 * 60 * 60 * 24) | 0;
    HEAP32[tmPtr + 28 >> 2] = yday;
    return date.getTime() / 1e3 | 0;
  }
  function _tmpnam(s, dir, prefix) {
    dir = dir || "/tmp";
    var folder = FS.findObject(dir);
    if (!folder || !folder.isFolder) {
      dir = "/tmp";
      folder = FS.findObject(dir);
      if (!folder || !folder.isFolder)
        return 0;
    }
    var name = prefix || "file";
    do {
      name += String.fromCharCode(65 + Math.random() * 25 | 0);
    } while (name in folder.contents);
    var result = dir + "/" + name;
    if (!_tmpnam.buffer)
      _tmpnam.buffer = _malloc(256);
    if (!s)
      s = _tmpnam.buffer;
    assert(result.length <= 255);
    writeAsciiToMemory(result, s);
    return s;
  }
  function _emscripten_set_main_loop_timing(mode, value) {
    Browser.mainLoop.timingMode = mode;
    Browser.mainLoop.timingValue = value;
    if (!Browser.mainLoop.func) {
      return 1;
    }
    if (mode == 0) {
      Browser.mainLoop.scheduler = function Browser_mainLoop_scheduler() {
        setTimeout(Browser.mainLoop.runner, value);
      };
      Browser.mainLoop.method = "timeout";
    } else if (mode == 1) {
      Browser.mainLoop.scheduler = function Browser_mainLoop_scheduler() {
        Browser.requestAnimationFrame(Browser.mainLoop.runner);
      };
      Browser.mainLoop.method = "rAF";
    }
    return 0;
  }
  function _emscripten_set_main_loop(func, fps, simulateInfiniteLoop, arg, noSetTiming) {
    Module["noExitRuntime"] = true;
    assert(!Browser.mainLoop.func, "emscripten_set_main_loop: there can only be one main loop function at once: call emscripten_cancel_main_loop to cancel the previous one before setting a new one with different parameters.");
    Browser.mainLoop.func = func;
    Browser.mainLoop.arg = arg;
    var thisMainLoopId = Browser.mainLoop.currentlyRunningMainloop;
    Browser.mainLoop.runner = function Browser_mainLoop_runner() {
      if (ABORT)
        return ;
      if (Browser.mainLoop.queue.length > 0) {
        var start = Date.now();
        var blocker = Browser.mainLoop.queue.shift();
        blocker.func(blocker.arg);
        if (Browser.mainLoop.remainingBlockers) {
          var remaining = Browser.mainLoop.remainingBlockers;
          var next = remaining % 1 == 0 ? remaining - 1 : Math.floor(remaining);
          if (blocker.counted) {
            Browser.mainLoop.remainingBlockers = next;
          } else {
            next = next + .5;
            Browser.mainLoop.remainingBlockers = (8 * remaining + next) / 9;
          }
        }
        console.log('main loop blocker "' + blocker.name + '" took ' + (Date.now() - start) + " ms");
        Browser.mainLoop.updateStatus();
        setTimeout(Browser.mainLoop.runner, 0);
        return ;
      }
      if (thisMainLoopId < Browser.mainLoop.currentlyRunningMainloop)
        return ;
      Browser.mainLoop.currentFrameNumber = Browser.mainLoop.currentFrameNumber + 1 | 0;
      if (Browser.mainLoop.timingMode == 1 && Browser.mainLoop.timingValue > 1 && Browser.mainLoop.currentFrameNumber % Browser.mainLoop.timingValue != 0) {
        Browser.mainLoop.scheduler();
        return ;
      }
      if (Browser.mainLoop.method === "timeout" && Module.ctx) {
        Module.printErr("Looks like you are rendering without using requestAnimationFrame for the main loop. You should use 0 for the frame rate in emscripten_set_main_loop in order to use requestAnimationFrame, as that can greatly improve your frame rates!");
        Browser.mainLoop.method = "";
      }
      Browser.mainLoop.runIter((function() {
        if (typeof arg !== "undefined") {
          Runtime.dynCall("vi", func, [arg]);
        } else {
          Runtime.dynCall("v", func);
        }
      }));
      if (thisMainLoopId < Browser.mainLoop.currentlyRunningMainloop)
        return ;
      if (typeof SDL === "object" && SDL.audio && SDL.audio.queueNewAudioData)
        SDL.audio.queueNewAudioData();
      Browser.mainLoop.scheduler();
    };
    if (!noSetTiming) {
      if (fps && fps > 0)
        _emscripten_set_main_loop_timing(0, 1e3 / fps);
      else
        _emscripten_set_main_loop_timing(1, 1);
      Browser.mainLoop.scheduler();
    }
    if (simulateInfiniteLoop) {
      throw "SimulateInfiniteLoop";
    }
  }
  var Browser = {
    mainLoop: {
      scheduler: null,
      method: "",
      currentlyRunningMainloop: 0,
      func: null,
      arg: 0,
      timingMode: 0,
      timingValue: 0,
      currentFrameNumber: 0,
      queue: [],
      pause: (function() {
        Browser.mainLoop.scheduler = null;
        Browser.mainLoop.currentlyRunningMainloop++;
      }),
      resume: (function() {
        Browser.mainLoop.currentlyRunningMainloop++;
        var timingMode = Browser.mainLoop.timingMode;
        var timingValue = Browser.mainLoop.timingValue;
        var func = Browser.mainLoop.func;
        Browser.mainLoop.func = null;
        _emscripten_set_main_loop(func, 0, false, Browser.mainLoop.arg, true);
        _emscripten_set_main_loop_timing(timingMode, timingValue);
        Browser.mainLoop.scheduler();
      }),
      updateStatus: (function() {
        if (Module["setStatus"]) {
          var message = Module["statusMessage"] || "Please wait...";
          var remaining = Browser.mainLoop.remainingBlockers;
          var expected = Browser.mainLoop.expectedBlockers;
          if (remaining) {
            if (remaining < expected) {
              Module["setStatus"](message + " (" + (expected - remaining) + "/" + expected + ")");
            } else {
              Module["setStatus"](message);
            }
          } else {
            Module["setStatus"]("");
          }
        }
      }),
      runIter: (function(func) {
        if (ABORT)
          return ;
        if (Module["preMainLoop"]) {
          var preRet = Module["preMainLoop"]();
          if (preRet === false) {
            return ;
          }
        }
        try {
          func();
        } catch (e) {
          if (e instanceof ExitStatus) {
            return ;
          } else {
            if (e && typeof e === "object" && e.stack)
              Module.printErr("exception thrown: " + [e, e.stack]);
            throw e;
          }
        }
        if (Module["postMainLoop"])
          Module["postMainLoop"]();
      })
    },
    isFullScreen: false,
    pointerLock: false,
    moduleContextCreatedCallbacks: [],
    workers: [],
    init: (function() {
      if (!Module["preloadPlugins"])
        Module["preloadPlugins"] = [];
      if (Browser.initted)
        return ;
      Browser.initted = true;
      try {
        new Blob;
        Browser.hasBlobConstructor = true;
      } catch (e) {
        Browser.hasBlobConstructor = false;
        console.log("warning: no blob constructor, cannot create blobs with mimetypes");
      }
      Browser.BlobBuilder = typeof MozBlobBuilder != "undefined" ? MozBlobBuilder : typeof WebKitBlobBuilder != "undefined" ? WebKitBlobBuilder : !Browser.hasBlobConstructor ? console.log("warning: no BlobBuilder") : null;
      Browser.URLObject = typeof window != "undefined" ? window.URL ? window.URL : window.webkitURL : undefined;
      if (!Module.noImageDecoding && typeof Browser.URLObject === "undefined") {
        console.log("warning: Browser does not support creating object URLs. Built-in browser image decoding will not be available.");
        Module.noImageDecoding = true;
      }
      var imagePlugin = {};
      imagePlugin["canHandle"] = function imagePlugin_canHandle(name) {
        return !Module.noImageDecoding && /\.(jpg|jpeg|png|bmp)$/i.test(name);
      };
      imagePlugin["handle"] = function imagePlugin_handle(byteArray, name, onload, onerror) {
        var b = null;
        if (Browser.hasBlobConstructor) {
          try {
            b = new Blob([byteArray], {type: Browser.getMimetype(name)});
            if (b.size !== byteArray.length) {
              b = new Blob([(new Uint8Array(byteArray)).buffer], {type: Browser.getMimetype(name)});
            }
          } catch (e) {
            Runtime.warnOnce("Blob constructor present but fails: " + e + "; falling back to blob builder");
          }
        }
        if (!b) {
          var bb = new Browser.BlobBuilder;
          bb.append((new Uint8Array(byteArray)).buffer);
          b = bb.getBlob();
        }
        var url = Browser.URLObject.createObjectURL(b);
        var img = new Image;
        img.onload = function img_onload() {
          assert(img.complete, "Image " + name + " could not be decoded");
          var canvas = document.createElement("canvas");
          canvas.width = img.width;
          canvas.height = img.height;
          var ctx = canvas.getContext("2d");
          ctx.drawImage(img, 0, 0);
          Module["preloadedImages"][name] = canvas;
          Browser.URLObject.revokeObjectURL(url);
          if (onload)
            onload(byteArray);
        };
        img.onerror = function img_onerror(event) {
          console.log("Image " + url + " could not be decoded");
          if (onerror)
            onerror();
        };
        img.src = url;
      };
      Module["preloadPlugins"].push(imagePlugin);
      var audioPlugin = {};
      audioPlugin["canHandle"] = function audioPlugin_canHandle(name) {
        return !Module.noAudioDecoding && name.substr(-4) in {
          ".ogg": 1,
          ".wav": 1,
          ".mp3": 1
        };
      };
      audioPlugin["handle"] = function audioPlugin_handle(byteArray, name, onload, onerror) {
        var done = false;
        function finish(audio) {
          if (done)
            return ;
          done = true;
          Module["preloadedAudios"][name] = audio;
          if (onload)
            onload(byteArray);
        }
        function fail() {
          if (done)
            return ;
          done = true;
          Module["preloadedAudios"][name] = new Audio;
          if (onerror)
            onerror();
        }
        if (Browser.hasBlobConstructor) {
          try {
            var b = new Blob([byteArray], {type: Browser.getMimetype(name)});
          } catch (e) {
            return fail();
          }
          var url = Browser.URLObject.createObjectURL(b);
          var audio = new Audio;
          audio.addEventListener("canplaythrough", (function() {
            finish(audio);
          }), false);
          audio.onerror = function audio_onerror(event) {
            if (done)
              return ;
            console.log("warning: browser could not fully decode audio " + name + ", trying slower base64 approach");
            function encode64(data) {
              var BASE = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";
              var PAD = "=";
              var ret = "";
              var leftchar = 0;
              var leftbits = 0;
              for (var i = 0; i < data.length; i++) {
                leftchar = leftchar << 8 | data[i];
                leftbits += 8;
                while (leftbits >= 6) {
                  var curr = leftchar >> leftbits - 6 & 63;
                  leftbits -= 6;
                  ret += BASE[curr];
                }
              }
              if (leftbits == 2) {
                ret += BASE[(leftchar & 3) << 4];
                ret += PAD + PAD;
              } else if (leftbits == 4) {
                ret += BASE[(leftchar & 15) << 2];
                ret += PAD;
              }
              return ret;
            }
            audio.src = "data:audio/x-" + name.substr(-3) + ";base64," + encode64(byteArray);
            finish(audio);
          };
          audio.src = url;
          Browser.safeSetTimeout((function() {
            finish(audio);
          }), 1e4);
        } else {
          return fail();
        }
      };
      Module["preloadPlugins"].push(audioPlugin);
      var canvas = Module["canvas"];
      function pointerLockChange() {
        Browser.pointerLock = document["pointerLockElement"] === canvas || document["mozPointerLockElement"] === canvas || document["webkitPointerLockElement"] === canvas || document["msPointerLockElement"] === canvas;
      }
      if (canvas) {
        canvas.requestPointerLock = canvas["requestPointerLock"] || canvas["mozRequestPointerLock"] || canvas["webkitRequestPointerLock"] || canvas["msRequestPointerLock"] || (function() {});
        canvas.exitPointerLock = document["exitPointerLock"] || document["mozExitPointerLock"] || document["webkitExitPointerLock"] || document["msExitPointerLock"] || (function() {});
        canvas.exitPointerLock = canvas.exitPointerLock.bind(document);
        document.addEventListener("pointerlockchange", pointerLockChange, false);
        document.addEventListener("mozpointerlockchange", pointerLockChange, false);
        document.addEventListener("webkitpointerlockchange", pointerLockChange, false);
        document.addEventListener("mspointerlockchange", pointerLockChange, false);
        if (Module["elementPointerLock"]) {
          canvas.addEventListener("click", (function(ev) {
            if (!Browser.pointerLock && canvas.requestPointerLock) {
              canvas.requestPointerLock();
              ev.preventDefault();
            }
          }), false);
        }
      }
    }),
    createContext: (function(canvas, useWebGL, setInModule, webGLContextAttributes) {
      if (useWebGL && Module.ctx && canvas == Module.canvas)
        return Module.ctx;
      var ctx;
      var contextHandle;
      if (useWebGL) {
        var contextAttributes = {
          antialias: false,
          alpha: false
        };
        if (webGLContextAttributes) {
          for (var attribute in webGLContextAttributes) {
            contextAttributes[attribute] = webGLContextAttributes[attribute];
          }
        }
        contextHandle = GL.createContext(canvas, contextAttributes);
        if (contextHandle) {
          ctx = GL.getContext(contextHandle).GLctx;
        }
        canvas.style.backgroundColor = "black";
      } else {
        ctx = canvas.getContext("2d");
      }
      if (!ctx)
        return null;
      if (setInModule) {
        if (!useWebGL)
          assert(typeof GLctx === "undefined", "cannot set in module if GLctx is used, but we are a non-GL context that would replace it");
        Module.ctx = ctx;
        if (useWebGL)
          GL.makeContextCurrent(contextHandle);
        Module.useWebGL = useWebGL;
        Browser.moduleContextCreatedCallbacks.forEach((function(callback) {
          callback();
        }));
        Browser.init();
      }
      return ctx;
    }),
    destroyContext: (function(canvas, useWebGL, setInModule) {}),
    fullScreenHandlersInstalled: false,
    lockPointer: undefined,
    resizeCanvas: undefined,
    requestFullScreen: (function(lockPointer, resizeCanvas, vrDevice) {
      Browser.lockPointer = lockPointer;
      Browser.resizeCanvas = resizeCanvas;
      Browser.vrDevice = vrDevice;
      if (typeof Browser.lockPointer === "undefined")
        Browser.lockPointer = true;
      if (typeof Browser.resizeCanvas === "undefined")
        Browser.resizeCanvas = false;
      if (typeof Browser.vrDevice === "undefined")
        Browser.vrDevice = null;
      var canvas = Module["canvas"];
      function fullScreenChange() {
        Browser.isFullScreen = false;
        var canvasContainer = canvas.parentNode;
        if ((document["webkitFullScreenElement"] || document["webkitFullscreenElement"] || document["mozFullScreenElement"] || document["mozFullscreenElement"] || document["fullScreenElement"] || document["fullscreenElement"] || document["msFullScreenElement"] || document["msFullscreenElement"] || document["webkitCurrentFullScreenElement"]) === canvasContainer) {
          canvas.cancelFullScreen = document["cancelFullScreen"] || document["mozCancelFullScreen"] || document["webkitCancelFullScreen"] || document["msExitFullscreen"] || document["exitFullscreen"] || (function() {});
          canvas.cancelFullScreen = canvas.cancelFullScreen.bind(document);
          if (Browser.lockPointer)
            canvas.requestPointerLock();
          Browser.isFullScreen = true;
          if (Browser.resizeCanvas)
            Browser.setFullScreenCanvasSize();
        } else {
          canvasContainer.parentNode.insertBefore(canvas, canvasContainer);
          canvasContainer.parentNode.removeChild(canvasContainer);
          if (Browser.resizeCanvas)
            Browser.setWindowedCanvasSize();
        }
        if (Module["onFullScreen"])
          Module["onFullScreen"](Browser.isFullScreen);
        Browser.updateCanvasDimensions(canvas);
      }
      if (!Browser.fullScreenHandlersInstalled) {
        Browser.fullScreenHandlersInstalled = true;
        document.addEventListener("fullscreenchange", fullScreenChange, false);
        document.addEventListener("mozfullscreenchange", fullScreenChange, false);
        document.addEventListener("webkitfullscreenchange", fullScreenChange, false);
        document.addEventListener("MSFullscreenChange", fullScreenChange, false);
      }
      var canvasContainer = document.createElement("div");
      canvas.parentNode.insertBefore(canvasContainer, canvas);
      canvasContainer.appendChild(canvas);
      canvasContainer.requestFullScreen = canvasContainer["requestFullScreen"] || canvasContainer["mozRequestFullScreen"] || canvasContainer["msRequestFullscreen"] || (canvasContainer["webkitRequestFullScreen"] ? (function() {
        canvasContainer["webkitRequestFullScreen"](Element["ALLOW_KEYBOARD_INPUT"]);
      }) : null);
      if (vrDevice) {
        canvasContainer.requestFullScreen({vrDisplay: vrDevice});
      } else {
        canvasContainer.requestFullScreen();
      }
    }),
    nextRAF: 0,
    fakeRequestAnimationFrame: (function(func) {
      var now = Date.now();
      if (Browser.nextRAF === 0) {
        Browser.nextRAF = now + 1e3 / 60;
      } else {
        while (now + 2 >= Browser.nextRAF) {
          Browser.nextRAF += 1e3 / 60;
        }
      }
      var delay = Math.max(Browser.nextRAF - now, 0);
      setTimeout(func, delay);
    }),
    requestAnimationFrame: function requestAnimationFrame(func) {
      if (typeof window === "undefined") {
        Browser.fakeRequestAnimationFrame(func);
      } else {
        if (!window.requestAnimationFrame) {
          window.requestAnimationFrame = window["requestAnimationFrame"] || window["mozRequestAnimationFrame"] || window["webkitRequestAnimationFrame"] || window["msRequestAnimationFrame"] || window["oRequestAnimationFrame"] || Browser.fakeRequestAnimationFrame;
        }
        window.requestAnimationFrame(func);
      }
    },
    safeCallback: (function(func) {
      return (function() {
        if (!ABORT)
          return func.apply(null, arguments);
      });
    }),
    allowAsyncCallbacks: true,
    queuedAsyncCallbacks: [],
    pauseAsyncCallbacks: (function() {
      Browser.allowAsyncCallbacks = false;
    }),
    resumeAsyncCallbacks: (function() {
      Browser.allowAsyncCallbacks = true;
      if (Browser.queuedAsyncCallbacks.length > 0) {
        var callbacks = Browser.queuedAsyncCallbacks;
        Browser.queuedAsyncCallbacks = [];
        callbacks.forEach((function(func) {
          func();
        }));
      }
    }),
    safeRequestAnimationFrame: (function(func) {
      return Browser.requestAnimationFrame((function() {
        if (ABORT)
          return ;
        if (Browser.allowAsyncCallbacks) {
          func();
        } else {
          Browser.queuedAsyncCallbacks.push(func);
        }
      }));
    }),
    safeSetTimeout: (function(func, timeout) {
      Module["noExitRuntime"] = true;
      return setTimeout((function() {
        if (ABORT)
          return ;
        if (Browser.allowAsyncCallbacks) {
          func();
        } else {
          Browser.queuedAsyncCallbacks.push(func);
        }
      }), timeout);
    }),
    safeSetInterval: (function(func, timeout) {
      Module["noExitRuntime"] = true;
      return setInterval((function() {
        if (ABORT)
          return ;
        if (Browser.allowAsyncCallbacks) {
          func();
        }
      }), timeout);
    }),
    getMimetype: (function(name) {
      return {
        "jpg": "image/jpeg",
        "jpeg": "image/jpeg",
        "png": "image/png",
        "bmp": "image/bmp",
        "ogg": "audio/ogg",
        "wav": "audio/wav",
        "mp3": "audio/mpeg"
      }[name.substr(name.lastIndexOf(".") + 1)];
    }),
    getUserMedia: (function(func) {
      if (!window.getUserMedia) {
        window.getUserMedia = navigator["getUserMedia"] || navigator["mozGetUserMedia"];
      }
      window.getUserMedia(func);
    }),
    getMovementX: (function(event) {
      return event["movementX"] || event["mozMovementX"] || event["webkitMovementX"] || 0;
    }),
    getMovementY: (function(event) {
      return event["movementY"] || event["mozMovementY"] || event["webkitMovementY"] || 0;
    }),
    getMouseWheelDelta: (function(event) {
      var delta = 0;
      switch (event.type) {
        case "DOMMouseScroll":
          delta = event.detail;
          break;
        case "mousewheel":
          delta = event.wheelDelta;
          break;
        case "wheel":
          delta = event["deltaY"];
          break;
        default:
          throw "unrecognized mouse wheel event: " + event.type;
      }
      return delta;
    }),
    mouseX: 0,
    mouseY: 0,
    mouseMovementX: 0,
    mouseMovementY: 0,
    touches: {},
    lastTouches: {},
    calculateMouseEvent: (function(event) {
      if (Browser.pointerLock) {
        if (event.type != "mousemove" && "mozMovementX" in event) {
          Browser.mouseMovementX = Browser.mouseMovementY = 0;
        } else {
          Browser.mouseMovementX = Browser.getMovementX(event);
          Browser.mouseMovementY = Browser.getMovementY(event);
        }
        if (typeof SDL != "undefined") {
          Browser.mouseX = SDL.mouseX + Browser.mouseMovementX;
          Browser.mouseY = SDL.mouseY + Browser.mouseMovementY;
        } else {
          Browser.mouseX += Browser.mouseMovementX;
          Browser.mouseY += Browser.mouseMovementY;
        }
      } else {
        var rect = Module["canvas"].getBoundingClientRect();
        var cw = Module["canvas"].width;
        var ch = Module["canvas"].height;
        var scrollX = typeof window.scrollX !== "undefined" ? window.scrollX : window.pageXOffset;
        var scrollY = typeof window.scrollY !== "undefined" ? window.scrollY : window.pageYOffset;
        if (event.type === "touchstart" || event.type === "touchend" || event.type === "touchmove") {
          var touch = event.touch;
          if (touch === undefined) {
            return ;
          }
          var adjustedX = touch.pageX - (scrollX + rect.left);
          var adjustedY = touch.pageY - (scrollY + rect.top);
          adjustedX = adjustedX * (cw / rect.width);
          adjustedY = adjustedY * (ch / rect.height);
          var coords = {
            x: adjustedX,
            y: adjustedY
          };
          if (event.type === "touchstart") {
            Browser.lastTouches[touch.identifier] = coords;
            Browser.touches[touch.identifier] = coords;
          } else if (event.type === "touchend" || event.type === "touchmove") {
            var last = Browser.touches[touch.identifier];
            if (!last)
              last = coords;
            Browser.lastTouches[touch.identifier] = last;
            Browser.touches[touch.identifier] = coords;
          }
          return ;
        }
        var x = event.pageX - (scrollX + rect.left);
        var y = event.pageY - (scrollY + rect.top);
        x = x * (cw / rect.width);
        y = y * (ch / rect.height);
        Browser.mouseMovementX = x - Browser.mouseX;
        Browser.mouseMovementY = y - Browser.mouseY;
        Browser.mouseX = x;
        Browser.mouseY = y;
      }
    }),
    xhrLoad: (function(url, onload, onerror) {
      var xhr = new XMLHttpRequest;
      xhr.open("GET", url, true);
      xhr.responseType = "arraybuffer";
      xhr.onload = function xhr_onload() {
        if (xhr.status == 200 || xhr.status == 0 && xhr.response) {
          onload(xhr.response);
        } else {
          onerror();
        }
      };
      xhr.onerror = onerror;
      xhr.send(null);
    }),
    asyncLoad: (function(url, onload, onerror, noRunDep) {
      Browser.xhrLoad(url, (function(arrayBuffer) {
        assert(arrayBuffer, 'Loading data file "' + url + '" failed (no arrayBuffer).');
        onload(new Uint8Array(arrayBuffer));
        if (!noRunDep)
          removeRunDependency("al " + url);
      }), (function(event) {
        if (onerror) {
          onerror();
        } else {
          throw 'Loading data file "' + url + '" failed.';
        }
      }));
      if (!noRunDep)
        addRunDependency("al " + url);
    }),
    resizeListeners: [],
    updateResizeListeners: (function() {
      var canvas = Module["canvas"];
      Browser.resizeListeners.forEach((function(listener) {
        listener(canvas.width, canvas.height);
      }));
    }),
    setCanvasSize: (function(width, height, noUpdates) {
      var canvas = Module["canvas"];
      Browser.updateCanvasDimensions(canvas, width, height);
      if (!noUpdates)
        Browser.updateResizeListeners();
    }),
    windowedWidth: 0,
    windowedHeight: 0,
    setFullScreenCanvasSize: (function() {
      if (typeof SDL != "undefined") {
        var flags = HEAPU32[SDL.screen + Runtime.QUANTUM_SIZE * 0 >> 2];
        flags = flags | 8388608;
        HEAP32[SDL.screen + Runtime.QUANTUM_SIZE * 0 >> 2] = flags;
      }
      Browser.updateResizeListeners();
    }),
    setWindowedCanvasSize: (function() {
      if (typeof SDL != "undefined") {
        var flags = HEAPU32[SDL.screen + Runtime.QUANTUM_SIZE * 0 >> 2];
        flags = flags & ~8388608;
        HEAP32[SDL.screen + Runtime.QUANTUM_SIZE * 0 >> 2] = flags;
      }
      Browser.updateResizeListeners();
    }),
    updateCanvasDimensions: (function(canvas, wNative, hNative) {
      if (wNative && hNative) {
        canvas.widthNative = wNative;
        canvas.heightNative = hNative;
      } else {
        wNative = canvas.widthNative;
        hNative = canvas.heightNative;
      }
      var w = wNative;
      var h = hNative;
      if (Module["forcedAspectRatio"] && Module["forcedAspectRatio"] > 0) {
        if (w / h < Module["forcedAspectRatio"]) {
          w = Math.round(h * Module["forcedAspectRatio"]);
        } else {
          h = Math.round(w / Module["forcedAspectRatio"]);
        }
      }
      if ((document["webkitFullScreenElement"] || document["webkitFullscreenElement"] || document["mozFullScreenElement"] || document["mozFullscreenElement"] || document["fullScreenElement"] || document["fullscreenElement"] || document["msFullScreenElement"] || document["msFullscreenElement"] || document["webkitCurrentFullScreenElement"]) === canvas.parentNode && typeof screen != "undefined") {
        var factor = Math.min(screen.width / w, screen.height / h);
        w = Math.round(w * factor);
        h = Math.round(h * factor);
      }
      if (Browser.resizeCanvas) {
        if (canvas.width != w)
          canvas.width = w;
        if (canvas.height != h)
          canvas.height = h;
        if (typeof canvas.style != "undefined") {
          canvas.style.removeProperty("width");
          canvas.style.removeProperty("height");
        }
      } else {
        if (canvas.width != wNative)
          canvas.width = wNative;
        if (canvas.height != hNative)
          canvas.height = hNative;
        if (typeof canvas.style != "undefined") {
          if (w != wNative || h != hNative) {
            canvas.style.setProperty("width", w + "px", "important");
            canvas.style.setProperty("height", h + "px", "important");
          } else {
            canvas.style.removeProperty("width");
            canvas.style.removeProperty("height");
          }
        }
      }
    }),
    wgetRequests: {},
    nextWgetRequestHandle: 0,
    getNextWgetRequestHandle: (function() {
      var handle = Browser.nextWgetRequestHandle;
      Browser.nextWgetRequestHandle++;
      return handle;
    })
  };
  var ___tm_current = allocate(44, "i8", ALLOC_STATIC);
  var ___tm_timezone = allocate(intArrayFromString("GMT"), "i8", ALLOC_STATIC);
  function _localtime_r(time, tmPtr) {
    _tzset();
    var date = new Date(HEAP32[time >> 2] * 1e3);
    HEAP32[tmPtr >> 2] = date.getSeconds();
    HEAP32[tmPtr + 4 >> 2] = date.getMinutes();
    HEAP32[tmPtr + 8 >> 2] = date.getHours();
    HEAP32[tmPtr + 12 >> 2] = date.getDate();
    HEAP32[tmPtr + 16 >> 2] = date.getMonth();
    HEAP32[tmPtr + 20 >> 2] = date.getFullYear() - 1900;
    HEAP32[tmPtr + 24 >> 2] = date.getDay();
    var start = new Date(date.getFullYear(), 0, 1);
    var yday = (date.getTime() - start.getTime()) / (1e3 * 60 * 60 * 24) | 0;
    HEAP32[tmPtr + 28 >> 2] = yday;
    HEAP32[tmPtr + 36 >> 2] = -(date.getTimezoneOffset() * 60);
    var summerOffset = (new Date(2e3, 6, 1)).getTimezoneOffset();
    var winterOffset = start.getTimezoneOffset();
    var dst = date.getTimezoneOffset() == Math.min(winterOffset, summerOffset) | 0;
    HEAP32[tmPtr + 32 >> 2] = dst;
    var zonePtr = HEAP32[_tzname + (dst ? Runtime.QUANTUM_SIZE : 0) >> 2];
    HEAP32[tmPtr + 40 >> 2] = zonePtr;
    return tmPtr;
  }
  function _localtime(time) {
    return _localtime_r(time, ___tm_current);
  }
  function _sysconf(name) {
    switch (name) {
      case 30:
        return PAGE_SIZE;
      case 85:
        return totalMemory / PAGE_SIZE;
      case 132:
      case 133:
      case 12:
      case 137:
      case 138:
      case 15:
      case 235:
      case 16:
      case 17:
      case 18:
      case 19:
      case 20:
      case 149:
      case 13:
      case 10:
      case 236:
      case 153:
      case 9:
      case 21:
      case 22:
      case 159:
      case 154:
      case 14:
      case 77:
      case 78:
      case 139:
      case 80:
      case 81:
      case 82:
      case 68:
      case 67:
      case 164:
      case 11:
      case 29:
      case 47:
      case 48:
      case 95:
      case 52:
      case 51:
      case 46:
        return 200809;
      case 79:
        return 0;
      case 27:
      case 246:
      case 127:
      case 128:
      case 23:
      case 24:
      case 160:
      case 161:
      case 181:
      case 182:
      case 242:
      case 183:
      case 184:
      case 243:
      case 244:
      case 245:
      case 165:
      case 178:
      case 179:
      case 49:
      case 50:
      case 168:
      case 169:
      case 175:
      case 170:
      case 171:
      case 172:
      case 97:
      case 76:
      case 32:
      case 173:
      case 35:
        return -1;
      case 176:
      case 177:
      case 7:
      case 155:
      case 8:
      case 157:
      case 125:
      case 126:
      case 92:
      case 93:
      case 129:
      case 130:
      case 131:
      case 94:
      case 91:
        return 1;
      case 74:
      case 60:
      case 69:
      case 70:
      case 4:
        return 1024;
      case 31:
      case 42:
      case 72:
        return 32;
      case 87:
      case 26:
      case 33:
        return 2147483647;
      case 34:
      case 1:
        return 47839;
      case 38:
      case 36:
        return 99;
      case 43:
      case 37:
        return 2048;
      case 0:
        return 2097152;
      case 3:
        return 65536;
      case 28:
        return 32768;
      case 44:
        return 32767;
      case 75:
        return 16384;
      case 39:
        return 1e3;
      case 89:
        return 700;
      case 71:
        return 256;
      case 40:
        return 255;
      case 2:
        return 100;
      case 180:
        return 64;
      case 25:
        return 20;
      case 5:
        return 16;
      case 6:
        return 6;
      case 73:
        return 4;
      case 84:
        {
          if (typeof navigator === "object")
            return navigator["hardwareConcurrency"] || 1;
          return 1;
        }
    }
    ___setErrNo(ERRNO_CODES.EINVAL);
    return -1;
  }
  Module["_bitshift64Lshr"] = _bitshift64Lshr;
  function _recv(fd, buf, len, flags) {
    var sock = SOCKFS.getSocket(fd);
    if (!sock) {
      ___setErrNo(ERRNO_CODES.EBADF);
      return -1;
    }
    return _read(fd, buf, len);
  }
  function _pread(fildes, buf, nbyte, offset) {
    var stream = FS.getStream(fildes);
    if (!stream) {
      ___setErrNo(ERRNO_CODES.EBADF);
      return -1;
    }
    try {
      var slab = HEAP8;
      return FS.read(stream, slab, buf, nbyte, offset);
    } catch (e) {
      FS.handleFSError(e);
      return -1;
    }
  }
  function _read(fildes, buf, nbyte) {
    var stream = FS.getStream(fildes);
    if (!stream) {
      ___setErrNo(ERRNO_CODES.EBADF);
      return -1;
    }
    try {
      var slab = HEAP8;
      return FS.read(stream, slab, buf, nbyte);
    } catch (e) {
      FS.handleFSError(e);
      return -1;
    }
  }
  function _fread(ptr, size, nitems, stream) {
    var bytesToRead = nitems * size;
    if (bytesToRead == 0) {
      return 0;
    }
    var bytesRead = 0;
    var streamObj = FS.getStreamFromPtr(stream);
    if (!streamObj) {
      ___setErrNo(ERRNO_CODES.EBADF);
      return 0;
    }
    while (streamObj.ungotten.length && bytesToRead > 0) {
      HEAP8[ptr++ >> 0] = streamObj.ungotten.pop();
      bytesToRead--;
      bytesRead++;
    }
    var err = _read(streamObj.fd, ptr, bytesToRead);
    if (err == -1) {
      if (streamObj)
        streamObj.error = true;
      return 0;
    }
    bytesRead += err;
    if (bytesRead < bytesToRead)
      streamObj.eof = true;
    return bytesRead / size | 0;
  }
  var _emscripten_prep_setjmp = true;
  var _BDtoIHigh = true;
  Module["_testSetjmp"] = _testSetjmp;
  function _longjmp(env, value) {
    asm["setThrew"](env, value || 1);
    throw "longjmp";
  }
  function _emscripten_longjmp(env, value) {
    _longjmp(env, value);
  }
  var _ceil = Math_ceil;
  var _llvm_pow_f64 = Math_pow;
  function getTypeName(type) {
    var ptr = ___getTypeName(type);
    var rv = readLatin1String(ptr);
    _free(ptr);
    return rv;
  }
  function requireRegisteredType(rawType, humanName) {
    var impl = registeredTypes[rawType];
    if (undefined === impl) {
      throwBindingError(humanName + " has unknown type " + getTypeName(rawType));
    }
    return impl;
  }
  function __embind_register_enum_value(rawEnumType, name, enumValue) {
    var enumType = requireRegisteredType(rawEnumType, "enum");
    name = readLatin1String(name);
    var Enum = enumType.constructor;
    var Value = Object.create(enumType.constructor.prototype, {
      value: {value: enumValue},
      constructor: {value: createNamedFunction(enumType.name + "_" + name, (function() {}))}
    });
    Enum.values[enumValue] = Value;
    Enum[name] = Value;
  }
  function _sbrk(bytes) {
    var self = _sbrk;
    if (!self.called) {
      DYNAMICTOP = alignMemoryPage(DYNAMICTOP);
      self.called = true;
      assert(Runtime.dynamicAlloc);
      self.alloc = Runtime.dynamicAlloc;
      Runtime.dynamicAlloc = (function() {
        abort("cannot dynamically allocate, sbrk now has control");
      });
    }
    var ret = DYNAMICTOP;
    if (bytes != 0) {
      var success = self.alloc(bytes);
      if (!success)
        return -1 >>> 0;
    }
    return ret;
  }
  function _localeconv() {
    var me = _localeconv;
    if (!me.ret) {
      me.ret = allocate([allocate(intArrayFromString("."), "i8", ALLOC_NORMAL), 0, 0, 0, allocate(intArrayFromString(""), "i8", ALLOC_NORMAL), 0, 0, 0, allocate(intArrayFromString(""), "i8", ALLOC_NORMAL), 0, 0, 0, allocate(intArrayFromString(""), "i8", ALLOC_NORMAL), 0, 0, 0, allocate(intArrayFromString(""), "i8", ALLOC_NORMAL), 0, 0, 0, allocate(intArrayFromString(""), "i8", ALLOC_NORMAL), 0, 0, 0, allocate(intArrayFromString(""), "i8", ALLOC_NORMAL), 0, 0, 0, allocate(intArrayFromString(""), "i8", ALLOC_NORMAL), 0, 0, 0, allocate(intArrayFromString(""), "i8", ALLOC_NORMAL), 0, 0, 0, allocate(intArrayFromString(""), "i8", ALLOC_NORMAL), 0, 0, 0], "i8*", ALLOC_NORMAL);
    }
    return me.ret;
  }
  var _emscripten_preinvoke = true;
  var _BItoD = true;
  function _unlink(path) {
    path = Pointer_stringify(path);
    try {
      FS.unlink(path);
      return 0;
    } catch (e) {
      FS.handleFSError(e);
      return -1;
    }
  }
  function _rmdir(path) {
    path = Pointer_stringify(path);
    try {
      FS.rmdir(path);
      return 0;
    } catch (e) {
      FS.handleFSError(e);
      return -1;
    }
  }
  function _remove(path) {
    var ret = _unlink(path);
    if (ret == -1)
      ret = _rmdir(path);
    return ret;
  }
  Module["_llvm_bswap_i32"] = _llvm_bswap_i32;
  function __embind_register_memory_view(rawType, dataTypeIndex, name) {
    var typeMapping = [Int8Array, Uint8Array, Int16Array, Uint16Array, Int32Array, Uint32Array, Float32Array, Float64Array];
    var TA = typeMapping[dataTypeIndex];
    function decodeMemoryView(handle) {
      handle = handle >> 2;
      var heap = HEAPU32;
      var size = heap[handle];
      var data = heap[handle + 1];
      return new TA(heap["buffer"], data, size);
    }
    name = readLatin1String(name);
    registerType(rawType, {
      name: name,
      "fromWireType": decodeMemoryView,
      "argPackAdvance": 8,
      "readValueFromPointer": decodeMemoryView
    }, {ignoreDuplicateRegistrations: true});
  }
  function _video_refresh(_data, width, height, pitch) {
    var data = new Uint8Array(Module.HEAP8.buffer, _data, height * pitch);
    Module.video_refresh(data, width, height, pitch);
  }
  function ensureOverloadTable(proto, methodName, humanName) {
    if (undefined === proto[methodName].overloadTable) {
      var prevFunc = proto[methodName];
      proto[methodName] = (function() {
        if (!proto[methodName].overloadTable.hasOwnProperty(arguments.length)) {
          throwBindingError("Function '" + humanName + "' called with an invalid number of arguments (" + arguments.length + ") - expects one of (" + proto[methodName].overloadTable + ")!");
        }
        return proto[methodName].overloadTable[arguments.length].apply(this, arguments);
      });
      proto[methodName].overloadTable = [];
      proto[methodName].overloadTable[prevFunc.argCount] = prevFunc;
    }
  }
  function exposePublicSymbol(name, value, numArguments) {
    if (Module.hasOwnProperty(name)) {
      if (undefined === numArguments || undefined !== Module[name].overloadTable && undefined !== Module[name].overloadTable[numArguments]) {
        throwBindingError("Cannot register public name '" + name + "' twice");
      }
      ensureOverloadTable(Module, name, name);
      if (Module.hasOwnProperty(numArguments)) {
        throwBindingError("Cannot register multiple overloads of a function with the same number of arguments (" + numArguments + ")!");
      }
      Module[name].overloadTable[numArguments] = value;
    } else {
      Module[name] = value;
      if (undefined !== numArguments) {
        Module[name].numArguments = numArguments;
      }
    }
  }
  function enumReadValueFromPointer(name, shift, signed) {
    switch (shift) {
      case 0:
        return (function(pointer) {
          var heap = signed ? HEAP8 : HEAPU8;
          return this["fromWireType"](heap[pointer]);
        });
      case 1:
        return (function(pointer) {
          var heap = signed ? HEAP16 : HEAPU16;
          return this["fromWireType"](heap[pointer >> 1]);
        });
      case 2:
        return (function(pointer) {
          var heap = signed ? HEAP32 : HEAPU32;
          return this["fromWireType"](heap[pointer >> 2]);
        });
      default:
        throw new TypeError("Unknown integer type: " + name);
    }
  }
  function __embind_register_enum(rawType, name, size, isSigned) {
    var shift = getShiftFromSize(size);
    name = readLatin1String(name);
    function constructor() {}
    constructor.values = {};
    registerType(rawType, {
      name: name,
      constructor: constructor,
      "fromWireType": (function(c) {
        return this.constructor.values[c];
      }),
      "toWireType": (function(destructors, c) {
        return c.value;
      }),
      "argPackAdvance": 8,
      "readValueFromPointer": enumReadValueFromPointer(name, shift, isSigned),
      destructorFunction: null
    });
    exposePublicSymbol(name, constructor);
  }
  function _rename(old_path, new_path) {
    old_path = Pointer_stringify(old_path);
    new_path = Pointer_stringify(new_path);
    try {
      FS.rename(old_path, new_path);
      return 0;
    } catch (e) {
      FS.handleFSError(e);
      return -1;
    }
  }
  function _tmpfile() {
    if (!_tmpfile.mode) {
      _tmpfile.mode = allocate(intArrayFromString("w+"), "i8", ALLOC_NORMAL);
    }
    return _fopen(_tmpnam(0), _tmpfile.mode);
  }
  var _emscripten_cleanup_setjmp = true;
  function __embind_register_void(rawType, name) {
    name = readLatin1String(name);
    registerType(rawType, {
      isVoid: true,
      name: name,
      "argPackAdvance": 0,
      "fromWireType": (function() {
        return undefined;
      }),
      "toWireType": (function(destructors, o) {
        return undefined;
      })
    });
  }
  function ___errno_location() {
    return ___errno_state;
  }
  Module["_memset"] = _memset;
  var _BDtoILow = true;
  function _strerror_r(errnum, strerrbuf, buflen) {
    if (errnum in ERRNO_MESSAGES) {
      if (ERRNO_MESSAGES[errnum].length > buflen - 1) {
        return ___setErrNo(ERRNO_CODES.ERANGE);
      } else {
        var msg = ERRNO_MESSAGES[errnum];
        writeAsciiToMemory(msg, strerrbuf);
        return 0;
      }
    } else {
      return ___setErrNo(ERRNO_CODES.EINVAL);
    }
  }
  function _strerror(errnum) {
    if (!_strerror.buffer)
      _strerror.buffer = _malloc(256);
    _strerror_r(errnum, _strerror.buffer, 256);
    return _strerror.buffer;
  }
  var _DtoIHigh = true;
  Module["_bitshift64Shl"] = _bitshift64Shl;
  function _abort() {
    Module["abort"]();
  }
  Module["_strlen"] = _strlen;
  function __reallyNegative(x) {
    return x < 0 || x === 0 && 1 / x === -Infinity;
  }
  function __formatString(format, varargs) {
    assert((varargs & 3) === 0);
    var textIndex = format;
    var argIndex = 0;
    function getNextArg(type) {
      var ret;
      argIndex = Runtime.prepVararg(argIndex, type);
      if (type === "double") {
        ret = (HEAP32[tempDoublePtr >> 2] = HEAP32[varargs + argIndex >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[varargs + (argIndex + 4) >> 2], +HEAPF64[tempDoublePtr >> 3]);
        argIndex += 8;
      } else if (type == "i64") {
        ret = [HEAP32[varargs + argIndex >> 2], HEAP32[varargs + (argIndex + 4) >> 2]];
        argIndex += 8;
      } else {
        assert((argIndex & 3) === 0);
        type = "i32";
        ret = HEAP32[varargs + argIndex >> 2];
        argIndex += 4;
      }
      return ret;
    }
    var ret = [];
    var curr,
        next,
        currArg;
    while (1) {
      var startTextIndex = textIndex;
      curr = HEAP8[textIndex >> 0];
      if (curr === 0)
        break;
      next = HEAP8[textIndex + 1 >> 0];
      if (curr == 37) {
        var flagAlwaysSigned = false;
        var flagLeftAlign = false;
        var flagAlternative = false;
        var flagZeroPad = false;
        var flagPadSign = false;
        flagsLoop: while (1) {
          switch (next) {
            case 43:
              flagAlwaysSigned = true;
              break;
            case 45:
              flagLeftAlign = true;
              break;
            case 35:
              flagAlternative = true;
              break;
            case 48:
              if (flagZeroPad) {
                break flagsLoop;
              } else {
                flagZeroPad = true;
                break;
              }
              ;
            case 32:
              flagPadSign = true;
              break;
            default:
              break flagsLoop;
          }
          textIndex++;
          next = HEAP8[textIndex + 1 >> 0];
        }
        var width = 0;
        if (next == 42) {
          width = getNextArg("i32");
          textIndex++;
          next = HEAP8[textIndex + 1 >> 0];
        } else {
          while (next >= 48 && next <= 57) {
            width = width * 10 + (next - 48);
            textIndex++;
            next = HEAP8[textIndex + 1 >> 0];
          }
        }
        var precisionSet = false,
            precision = -1;
        if (next == 46) {
          precision = 0;
          precisionSet = true;
          textIndex++;
          next = HEAP8[textIndex + 1 >> 0];
          if (next == 42) {
            precision = getNextArg("i32");
            textIndex++;
          } else {
            while (1) {
              var precisionChr = HEAP8[textIndex + 1 >> 0];
              if (precisionChr < 48 || precisionChr > 57)
                break;
              precision = precision * 10 + (precisionChr - 48);
              textIndex++;
            }
          }
          next = HEAP8[textIndex + 1 >> 0];
        }
        if (precision < 0) {
          precision = 6;
          precisionSet = false;
        }
        var argSize;
        switch (String.fromCharCode(next)) {
          case "h":
            var nextNext = HEAP8[textIndex + 2 >> 0];
            if (nextNext == 104) {
              textIndex++;
              argSize = 1;
            } else {
              argSize = 2;
            }
            break;
          case "l":
            var nextNext = HEAP8[textIndex + 2 >> 0];
            if (nextNext == 108) {
              textIndex++;
              argSize = 8;
            } else {
              argSize = 4;
            }
            break;
          case "L":
          case "q":
          case "j":
            argSize = 8;
            break;
          case "z":
          case "t":
          case "I":
            argSize = 4;
            break;
          default:
            argSize = null;
        }
        if (argSize)
          textIndex++;
        next = HEAP8[textIndex + 1 >> 0];
        switch (String.fromCharCode(next)) {
          case "d":
          case "i":
          case "u":
          case "o":
          case "x":
          case "X":
          case "p":
            {
              var signed = next == 100 || next == 105;
              argSize = argSize || 4;
              var currArg = getNextArg("i" + argSize * 8);
              var origArg = currArg;
              var argText;
              if (argSize == 8) {
                currArg = Runtime.makeBigInt(currArg[0], currArg[1], next == 117);
              }
              if (argSize <= 4) {
                var limit = Math.pow(256, argSize) - 1;
                currArg = (signed ? reSign : unSign)(currArg & limit, argSize * 8);
              }
              var currAbsArg = Math.abs(currArg);
              var prefix = "";
              if (next == 100 || next == 105) {
                if (argSize == 8 && i64Math)
                  argText = i64Math.stringify(origArg[0], origArg[1], null);
                else
                  argText = reSign(currArg, 8 * argSize, 1).toString(10);
              } else if (next == 117) {
                if (argSize == 8 && i64Math)
                  argText = i64Math.stringify(origArg[0], origArg[1], true);
                else
                  argText = unSign(currArg, 8 * argSize, 1).toString(10);
                currArg = Math.abs(currArg);
              } else if (next == 111) {
                argText = (flagAlternative ? "0" : "") + currAbsArg.toString(8);
              } else if (next == 120 || next == 88) {
                prefix = flagAlternative && currArg != 0 ? "0x" : "";
                if (argSize == 8 && i64Math) {
                  if (origArg[1]) {
                    argText = (origArg[1] >>> 0).toString(16);
                    var lower = (origArg[0] >>> 0).toString(16);
                    while (lower.length < 8)
                      lower = "0" + lower;
                    argText += lower;
                  } else {
                    argText = (origArg[0] >>> 0).toString(16);
                  }
                } else if (currArg < 0) {
                  currArg = -currArg;
                  argText = (currAbsArg - 1).toString(16);
                  var buffer = [];
                  for (var i = 0; i < argText.length; i++) {
                    buffer.push((15 - parseInt(argText[i], 16)).toString(16));
                  }
                  argText = buffer.join("");
                  while (argText.length < argSize * 2)
                    argText = "f" + argText;
                } else {
                  argText = currAbsArg.toString(16);
                }
                if (next == 88) {
                  prefix = prefix.toUpperCase();
                  argText = argText.toUpperCase();
                }
              } else if (next == 112) {
                if (currAbsArg === 0) {
                  argText = "(nil)";
                } else {
                  prefix = "0x";
                  argText = currAbsArg.toString(16);
                }
              }
              if (precisionSet) {
                while (argText.length < precision) {
                  argText = "0" + argText;
                }
              }
              if (currArg >= 0) {
                if (flagAlwaysSigned) {
                  prefix = "+" + prefix;
                } else if (flagPadSign) {
                  prefix = " " + prefix;
                }
              }
              if (argText.charAt(0) == "-") {
                prefix = "-" + prefix;
                argText = argText.substr(1);
              }
              while (prefix.length + argText.length < width) {
                if (flagLeftAlign) {
                  argText += " ";
                } else {
                  if (flagZeroPad) {
                    argText = "0" + argText;
                  } else {
                    prefix = " " + prefix;
                  }
                }
              }
              argText = prefix + argText;
              argText.split("").forEach((function(chr) {
                ret.push(chr.charCodeAt(0));
              }));
              break;
            }
            ;
          case "f":
          case "F":
          case "e":
          case "E":
          case "g":
          case "G":
            {
              var currArg = getNextArg("double");
              var argText;
              if (isNaN(currArg)) {
                argText = "nan";
                flagZeroPad = false;
              } else if (!isFinite(currArg)) {
                argText = (currArg < 0 ? "-" : "") + "inf";
                flagZeroPad = false;
              } else {
                var isGeneral = false;
                var effectivePrecision = Math.min(precision, 20);
                if (next == 103 || next == 71) {
                  isGeneral = true;
                  precision = precision || 1;
                  var exponent = parseInt(currArg.toExponential(effectivePrecision).split("e")[1], 10);
                  if (precision > exponent && exponent >= -4) {
                    next = (next == 103 ? "f" : "F").charCodeAt(0);
                    precision -= exponent + 1;
                  } else {
                    next = (next == 103 ? "e" : "E").charCodeAt(0);
                    precision--;
                  }
                  effectivePrecision = Math.min(precision, 20);
                }
                if (next == 101 || next == 69) {
                  argText = currArg.toExponential(effectivePrecision);
                  if (/[eE][-+]\d$/.test(argText)) {
                    argText = argText.slice(0, -1) + "0" + argText.slice(-1);
                  }
                } else if (next == 102 || next == 70) {
                  argText = currArg.toFixed(effectivePrecision);
                  if (currArg === 0 && __reallyNegative(currArg)) {
                    argText = "-" + argText;
                  }
                }
                var parts = argText.split("e");
                if (isGeneral && !flagAlternative) {
                  while (parts[0].length > 1 && parts[0].indexOf(".") != -1 && (parts[0].slice(-1) == "0" || parts[0].slice(-1) == ".")) {
                    parts[0] = parts[0].slice(0, -1);
                  }
                } else {
                  if (flagAlternative && argText.indexOf(".") == -1)
                    parts[0] += ".";
                  while (precision > effectivePrecision++)
                    parts[0] += "0";
                }
                argText = parts[0] + (parts.length > 1 ? "e" + parts[1] : "");
                if (next == 69)
                  argText = argText.toUpperCase();
                if (currArg >= 0) {
                  if (flagAlwaysSigned) {
                    argText = "+" + argText;
                  } else if (flagPadSign) {
                    argText = " " + argText;
                  }
                }
              }
              while (argText.length < width) {
                if (flagLeftAlign) {
                  argText += " ";
                } else {
                  if (flagZeroPad && (argText[0] == "-" || argText[0] == "+")) {
                    argText = argText[0] + "0" + argText.slice(1);
                  } else {
                    argText = (flagZeroPad ? "0" : " ") + argText;
                  }
                }
              }
              if (next < 97)
                argText = argText.toUpperCase();
              argText.split("").forEach((function(chr) {
                ret.push(chr.charCodeAt(0));
              }));
              break;
            }
            ;
          case "s":
            {
              var arg = getNextArg("i8*");
              var argLength = arg ? _strlen(arg) : "(null)".length;
              if (precisionSet)
                argLength = Math.min(argLength, precision);
              if (!flagLeftAlign) {
                while (argLength < width--) {
                  ret.push(32);
                }
              }
              if (arg) {
                for (var i = 0; i < argLength; i++) {
                  ret.push(HEAPU8[arg++ >> 0]);
                }
              } else {
                ret = ret.concat(intArrayFromString("(null)".substr(0, argLength), true));
              }
              if (flagLeftAlign) {
                while (argLength < width--) {
                  ret.push(32);
                }
              }
              break;
            }
            ;
          case "c":
            {
              if (flagLeftAlign)
                ret.push(getNextArg("i8"));
              while (--width > 0) {
                ret.push(32);
              }
              if (!flagLeftAlign)
                ret.push(getNextArg("i8"));
              break;
            }
            ;
          case "n":
            {
              var ptr = getNextArg("i32*");
              HEAP32[ptr >> 2] = ret.length;
              break;
            }
            ;
          case "%":
            {
              ret.push(curr);
              break;
            }
            ;
          default:
            {
              for (var i = startTextIndex; i < textIndex + 2; i++) {
                ret.push(HEAP8[i >> 0]);
              }
            }
        }
        textIndex += 2;
      } else {
        ret.push(curr);
        textIndex += 1;
      }
    }
    return ret;
  }
  function _fprintf(stream, format, varargs) {
    var result = __formatString(format, varargs);
    var stack = Runtime.stackSave();
    var ret = _fwrite(allocate(result, "i8", ALLOC_STACK), 1, result.length, stream);
    Runtime.stackRestore(stack);
    return ret;
  }
  function _fgetc(stream) {
    var streamObj = FS.getStreamFromPtr(stream);
    if (!streamObj)
      return -1;
    if (streamObj.eof || streamObj.error)
      return -1;
    var ret = _fread(_fgetc.ret, 1, 1, stream);
    if (ret == 0) {
      return -1;
    } else if (ret == -1) {
      streamObj.error = true;
      return -1;
    } else {
      return HEAPU8[_fgetc.ret >> 0];
    }
  }
  function _fgets(s, n, stream) {
    var streamObj = FS.getStreamFromPtr(stream);
    if (!streamObj)
      return 0;
    if (streamObj.error || streamObj.eof)
      return 0;
    var byte_;
    for (var i = 0; i < n - 1 && byte_ != 10; i++) {
      byte_ = _fgetc(stream);
      if (byte_ == -1) {
        if (streamObj.error || streamObj.eof && i == 0)
          return 0;
        else if (streamObj.eof)
          break;
      }
      HEAP8[s + i >> 0] = byte_;
    }
    HEAP8[s + i >> 0] = 0;
    return s;
  }
  var _tan = Math_tan;
  var _asin = Math_asin;
  function _clearerr(stream) {
    stream = FS.getStreamFromPtr(stream);
    if (!stream) {
      return ;
    }
    stream.eof = false;
    stream.error = false;
  }
  var _fabs = Math_abs;
  function _clock() {
    if (_clock.start === undefined)
      _clock.start = Date.now();
    return (Date.now() - _clock.start) * (1e6 / 1e3) | 0;
  }
  function _feof(stream) {
    stream = FS.getStreamFromPtr(stream);
    return Number(stream && stream.eof);
  }
  function _getc() {
    return _fgetc.apply(null, arguments);
  }
  var _sqrt = Math_sqrt;
  function _embind_repr(v) {
    if (v === null) {
      return "null";
    }
    var t = typeof v;
    if (t === "object" || t === "array" || t === "function") {
      return v.toString();
    } else {
      return "" + v;
    }
  }
  function integerReadValueFromPointer(name, shift, signed) {
    switch (shift) {
      case 0:
        return signed ? function readS8FromPointer(pointer) {
          return HEAP8[pointer];
        } : function readU8FromPointer(pointer) {
          return HEAPU8[pointer];
        };
      case 1:
        return signed ? function readS16FromPointer(pointer) {
          return HEAP16[pointer >> 1];
        } : function readU16FromPointer(pointer) {
          return HEAPU16[pointer >> 1];
        };
      case 2:
        return signed ? function readS32FromPointer(pointer) {
          return HEAP32[pointer >> 2];
        } : function readU32FromPointer(pointer) {
          return HEAPU32[pointer >> 2];
        };
      default:
        throw new TypeError("Unknown integer type: " + name);
    }
  }
  function __embind_register_integer(primitiveType, name, size, minRange, maxRange) {
    name = readLatin1String(name);
    if (maxRange === -1) {
      maxRange = 4294967295;
    }
    var shift = getShiftFromSize(size);
    var fromWireType = (function(value) {
      return value;
    });
    if (minRange === 0) {
      var bitshift = 32 - 8 * size;
      fromWireType = (function(value) {
        return value << bitshift >>> bitshift;
      });
    }
    registerType(primitiveType, {
      name: name,
      "fromWireType": fromWireType,
      "toWireType": (function(destructors, value) {
        if (typeof value !== "number" && typeof value !== "boolean") {
          throw new TypeError('Cannot convert "' + _embind_repr(value) + '" to ' + this.name);
        }
        if (value < minRange || value > maxRange) {
          throw new TypeError('Passing a number "' + _embind_repr(value) + '" from JS side to C/C++ side to an argument of type "' + name + '", which is outside the valid range [' + minRange + ", " + maxRange + "]!");
        }
        return value | 0;
      }),
      "argPackAdvance": 8,
      "readValueFromPointer": integerReadValueFromPointer(name, shift, minRange !== 0),
      destructorFunction: null
    });
  }
  function _ftell(stream) {
    stream = FS.getStreamFromPtr(stream);
    if (!stream) {
      ___setErrNo(ERRNO_CODES.EBADF);
      return -1;
    }
    if (FS.isChrdev(stream.node.mode)) {
      ___setErrNo(ERRNO_CODES.ESPIPE);
      return -1;
    } else {
      return stream.position;
    }
  }
  function __exit(status) {
    Module["exit"](status);
  }
  function _exit(status) {
    __exit(status);
  }
  var _emscripten_get_longjmp_result = true;
  var _sin = Math_sin;
  var emval_free_list = [];
  var emval_handle_array = [{}, {value: undefined}, {value: null}, {value: true}, {value: false}];
  function __emval_decref(handle) {
    if (handle > 4 && 0 === --emval_handle_array[handle].refcount) {
      emval_handle_array[handle] = undefined;
      emval_free_list.push(handle);
    }
  }
  function count_emval_handles() {
    var count = 0;
    for (var i = 5; i < emval_handle_array.length; ++i) {
      if (emval_handle_array[i] !== undefined) {
        ++count;
      }
    }
    return count;
  }
  function get_first_emval() {
    for (var i = 5; i < emval_handle_array.length; ++i) {
      if (emval_handle_array[i] !== undefined) {
        return emval_handle_array[i];
      }
    }
    return null;
  }
  function init_emval() {
    Module["count_emval_handles"] = count_emval_handles;
    Module["get_first_emval"] = get_first_emval;
  }
  function __emval_register(value) {
    switch (value) {
      case undefined:
        {
          return 1;
        }
        ;
      case null:
        {
          return 2;
        }
        ;
      case true:
        {
          return 3;
        }
        ;
      case false:
        {
          return 4;
        }
        ;
      default:
        {
          var handle = emval_free_list.length ? emval_free_list.pop() : emval_handle_array.length;
          emval_handle_array[handle] = {
            refcount: 1,
            value: value
          };
          return handle;
        }
    }
  }
  function __embind_register_emval(rawType, name) {
    name = readLatin1String(name);
    registerType(rawType, {
      name: name,
      "fromWireType": (function(handle) {
        var rv = emval_handle_array[handle].value;
        __emval_decref(handle);
        return rv;
      }),
      "toWireType": (function(destructors, value) {
        return __emval_register(value);
      }),
      "argPackAdvance": 8,
      "readValueFromPointer": simpleReadValueFromPointer,
      destructorFunction: null
    });
  }
  function _freopen(filename, mode, stream) {
    if (!filename) {
      var streamObj = FS.getStreamFromPtr(stream);
      if (!streamObj) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return 0;
      }
      if (_freopen.buffer)
        _free(_freopen.buffer);
      filename = intArrayFromString(streamObj.path);
      filename = allocate(filename, "i8", ALLOC_NORMAL);
    }
    _fclose(stream);
    return _fopen(filename, mode);
  }
  function floatReadValueFromPointer(name, shift) {
    switch (shift) {
      case 2:
        return (function(pointer) {
          return this["fromWireType"](HEAPF32[pointer >> 2]);
        });
      case 3:
        return (function(pointer) {
          return this["fromWireType"](HEAPF64[pointer >> 3]);
        });
      default:
        throw new TypeError("Unknown float type: " + name);
    }
  }
  function __embind_register_float(rawType, name, size) {
    var shift = getShiftFromSize(size);
    name = readLatin1String(name);
    registerType(rawType, {
      name: name,
      "fromWireType": (function(value) {
        return value;
      }),
      "toWireType": (function(destructors, value) {
        if (typeof value !== "number" && typeof value !== "boolean") {
          throw new TypeError('Cannot convert "' + _embind_repr(value) + '" to ' + this.name);
        }
        return value;
      }),
      "argPackAdvance": 8,
      "readValueFromPointer": floatReadValueFromPointer(name, shift),
      destructorFunction: null
    });
  }
  function _ferror(stream) {
    stream = FS.getStreamFromPtr(stream);
    return Number(stream && stream.error);
  }
  function _gmtime_r(time, tmPtr) {
    var date = new Date(HEAP32[time >> 2] * 1e3);
    HEAP32[tmPtr >> 2] = date.getUTCSeconds();
    HEAP32[tmPtr + 4 >> 2] = date.getUTCMinutes();
    HEAP32[tmPtr + 8 >> 2] = date.getUTCHours();
    HEAP32[tmPtr + 12 >> 2] = date.getUTCDate();
    HEAP32[tmPtr + 16 >> 2] = date.getUTCMonth();
    HEAP32[tmPtr + 20 >> 2] = date.getUTCFullYear() - 1900;
    HEAP32[tmPtr + 24 >> 2] = date.getUTCDay();
    HEAP32[tmPtr + 36 >> 2] = 0;
    HEAP32[tmPtr + 32 >> 2] = 0;
    var start = Date.UTC(date.getUTCFullYear(), 0, 1, 0, 0, 0, 0);
    var yday = (date.getTime() - start) / (1e3 * 60 * 60 * 24) | 0;
    HEAP32[tmPtr + 28 >> 2] = yday;
    HEAP32[tmPtr + 40 >> 2] = ___tm_timezone;
    return tmPtr;
  }
  function _gmtime(time) {
    return _gmtime_r(time, ___tm_current);
  }
  function _input_state(port, device, index, id) {
    return Module.input_state(port, device, index, id);
  }
  function _ungetc(c, stream) {
    stream = FS.getStreamFromPtr(stream);
    if (!stream) {
      return -1;
    }
    if (c === -1) {
      return c;
    }
    c = unSign(c & 255);
    stream.ungotten.push(c);
    stream.eof = false;
    return c;
  }
  function new_(constructor, argumentList) {
    if (!(constructor instanceof Function)) {
      throw new TypeError("new_ called with constructor type " + typeof constructor + " which is not a function");
    }
    var dummy = createNamedFunction(constructor.name || "unknownFunctionName", (function() {}));
    dummy.prototype = constructor.prototype;
    var obj = new dummy;
    var r = constructor.apply(obj, argumentList);
    return r instanceof Object ? r : obj;
  }
  function runDestructors(destructors) {
    while (destructors.length) {
      var ptr = destructors.pop();
      var del = destructors.pop();
      del(ptr);
    }
  }
  function craftInvokerFunction(humanName, argTypes, classType, cppInvokerFunc, cppTargetFunc) {
    var argCount = argTypes.length;
    if (argCount < 2) {
      throwBindingError("argTypes array size mismatch! Must at least get return value and 'this' types!");
    }
    var isClassMethodFunc = argTypes[1] !== null && classType !== null;
    var argsList = "";
    var argsListWired = "";
    for (var i = 0; i < argCount - 2; ++i) {
      argsList += (i !== 0 ? ", " : "") + "arg" + i;
      argsListWired += (i !== 0 ? ", " : "") + "arg" + i + "Wired";
    }
    var invokerFnBody = "return function " + makeLegalFunctionName(humanName) + "(" + argsList + ") {\n" + "if (arguments.length !== " + (argCount - 2) + ") {\n" + "throwBindingError('function " + humanName + " called with ' + arguments.length + ' arguments, expected " + (argCount - 2) + " args!');\n" + "}\n";
    var needsDestructorStack = false;
    for (var i = 1; i < argTypes.length; ++i) {
      if (argTypes[i] !== null && argTypes[i].destructorFunction === undefined) {
        needsDestructorStack = true;
        break;
      }
    }
    if (needsDestructorStack) {
      invokerFnBody += "var destructors = [];\n";
    }
    var dtorStack = needsDestructorStack ? "destructors" : "null";
    var args1 = ["throwBindingError", "invoker", "fn", "runDestructors", "retType", "classParam"];
    var args2 = [throwBindingError, cppInvokerFunc, cppTargetFunc, runDestructors, argTypes[0], argTypes[1]];
    if (isClassMethodFunc) {
      invokerFnBody += "var thisWired = classParam.toWireType(" + dtorStack + ", this);\n";
    }
    for (var i = 0; i < argCount - 2; ++i) {
      invokerFnBody += "var arg" + i + "Wired = argType" + i + ".toWireType(" + dtorStack + ", arg" + i + "); // " + argTypes[i + 2].name + "\n";
      args1.push("argType" + i);
      args2.push(argTypes[i + 2]);
    }
    if (isClassMethodFunc) {
      argsListWired = "thisWired" + (argsListWired.length > 0 ? ", " : "") + argsListWired;
    }
    var returns = argTypes[0].name !== "void";
    invokerFnBody += (returns ? "var rv = " : "") + "invoker(fn" + (argsListWired.length > 0 ? ", " : "") + argsListWired + ");\n";
    if (needsDestructorStack) {
      invokerFnBody += "runDestructors(destructors);\n";
    } else {
      for (var i = isClassMethodFunc ? 1 : 2; i < argTypes.length; ++i) {
        var paramName = i === 1 ? "thisWired" : "arg" + (i - 2) + "Wired";
        if (argTypes[i].destructorFunction !== null) {
          invokerFnBody += paramName + "_dtor(" + paramName + "); // " + argTypes[i].name + "\n";
          args1.push(paramName + "_dtor");
          args2.push(argTypes[i].destructorFunction);
        }
      }
    }
    if (returns) {
      invokerFnBody += "var ret = retType.fromWireType(rv);\n" + "return ret;\n";
    } else {}
    invokerFnBody += "}\n";
    args1.push(invokerFnBody);
    var invokerFunction = new_(Function, args1).apply(null, args2);
    return invokerFunction;
  }
  function heap32VectorToArray(count, firstElement) {
    var array = [];
    for (var i = 0; i < count; i++) {
      array.push(HEAP32[(firstElement >> 2) + i]);
    }
    return array;
  }
  function replacePublicSymbol(name, value, numArguments) {
    if (!Module.hasOwnProperty(name)) {
      throwInternalError("Replacing nonexistant public symbol");
    }
    if (undefined !== Module[name].overloadTable && undefined !== numArguments) {
      Module[name].overloadTable[numArguments] = value;
    } else {
      Module[name] = value;
    }
  }
  function requireFunction(signature, rawFunction) {
    signature = readLatin1String(signature);
    function makeDynCaller(dynCall) {
      var args = [];
      for (var i = 1; i < signature.length; ++i) {
        args.push("a" + i);
      }
      var name = "dynCall_" + signature + "_" + rawFunction;
      var body = "return function " + name + "(" + args.join(", ") + ") {\n";
      body += "    return dynCall(rawFunction" + (args.length ? ", " : "") + args.join(", ") + ");\n";
      body += "};\n";
      return (new Function("dynCall", "rawFunction", body))(dynCall, rawFunction);
    }
    var fp;
    if (Module["FUNCTION_TABLE_" + signature] !== undefined) {
      fp = Module["FUNCTION_TABLE_" + signature][rawFunction];
    } else if (typeof FUNCTION_TABLE !== "undefined") {
      fp = FUNCTION_TABLE[rawFunction];
    } else {
      var dc = asm["dynCall_" + signature];
      if (dc === undefined) {
        dc = asm["dynCall_" + signature.replace(/f/g, "d")];
        if (dc === undefined) {
          throwBindingError("No dynCall invoker for signature: " + signature);
        }
      }
      fp = makeDynCaller(dc);
    }
    if (typeof fp !== "function") {
      throwBindingError("unknown function pointer with signature " + signature + ": " + rawFunction);
    }
    return fp;
  }
  var UnboundTypeError = undefined;
  function throwUnboundTypeError(message, types) {
    var unboundTypes = [];
    var seen = {};
    function visit(type) {
      if (seen[type]) {
        return ;
      }
      if (registeredTypes[type]) {
        return ;
      }
      if (typeDependencies[type]) {
        typeDependencies[type].forEach(visit);
        return ;
      }
      unboundTypes.push(type);
      seen[type] = true;
    }
    types.forEach(visit);
    throw new UnboundTypeError(message + ": " + unboundTypes.map(getTypeName).join([", "]));
  }
  function __embind_register_function(name, argCount, rawArgTypesAddr, signature, rawInvoker, fn) {
    var argTypes = heap32VectorToArray(argCount, rawArgTypesAddr);
    name = readLatin1String(name);
    rawInvoker = requireFunction(signature, rawInvoker);
    exposePublicSymbol(name, (function() {
      throwUnboundTypeError("Cannot call " + name + " due to unbound types", argTypes);
    }), argCount - 1);
    whenDependentTypesAreResolved([], argTypes, (function(argTypes) {
      var invokerArgsArray = [argTypes[0], null].concat(argTypes.slice(1));
      replacePublicSymbol(name, craftInvokerFunction(name, invokerArgsArray, null, rawInvoker, fn), argCount - 1);
      return [];
    }));
  }
  function __embind_register_constant(name, type, value) {
    name = readLatin1String(name);
    whenDependentTypesAreResolved([], [type], (function(type) {
      type = type[0];
      Module[name] = type["fromWireType"](value);
      return [];
    }));
  }
  var _environ = allocate(1, "i32*", ALLOC_STATIC);
  var ___environ = _environ;
  function ___buildEnvironment(env) {
    var MAX_ENV_VALUES = 64;
    var TOTAL_ENV_SIZE = 1024;
    var poolPtr;
    var envPtr;
    if (!___buildEnvironment.called) {
      ___buildEnvironment.called = true;
      ENV["USER"] = "web_user";
      ENV["PATH"] = "/";
      ENV["PWD"] = "/";
      ENV["HOME"] = "/home/web_user";
      ENV["LANG"] = "C";
      ENV["_"] = Module["thisProgram"];
      poolPtr = allocate(TOTAL_ENV_SIZE, "i8", ALLOC_STATIC);
      envPtr = allocate(MAX_ENV_VALUES * 4, "i8*", ALLOC_STATIC);
      HEAP32[envPtr >> 2] = poolPtr;
      HEAP32[_environ >> 2] = envPtr;
    } else {
      envPtr = HEAP32[_environ >> 2];
      poolPtr = HEAP32[envPtr >> 2];
    }
    var strings = [];
    var totalSize = 0;
    for (var key in env) {
      if (typeof env[key] === "string") {
        var line = key + "=" + env[key];
        strings.push(line);
        totalSize += line.length;
      }
    }
    if (totalSize > TOTAL_ENV_SIZE) {
      throw new Error("Environment size exceeded TOTAL_ENV_SIZE!");
    }
    var ptrSize = 4;
    for (var i = 0; i < strings.length; i++) {
      var line = strings[i];
      writeAsciiToMemory(line, poolPtr);
      HEAP32[envPtr + i * ptrSize >> 2] = poolPtr;
      poolPtr += line.length + 1;
    }
    HEAP32[envPtr + strings.length * ptrSize >> 2] = 0;
  }
  var ENV = {};
  function _getenv(name) {
    if (name === 0)
      return 0;
    name = Pointer_stringify(name);
    if (!ENV.hasOwnProperty(name))
      return 0;
    if (_getenv.ret)
      _free(_getenv.ret);
    _getenv.ret = allocate(intArrayFromString(ENV[name]), "i8", ALLOC_NORMAL);
    return _getenv.ret;
  }
  var _SItoD = true;
  var _emscripten_setjmp = true;
  var _cos = Math_cos;
  function _difftime(time1, time0) {
    return time1 - time0;
  }
  var _floor = Math_floor;
  var _atan2 = Math_atan2;
  function _setvbuf(stream, buf, type, size) {
    return 0;
  }
  var _exp = Math_exp;
  function _time(ptr) {
    var ret = Date.now() / 1e3 | 0;
    if (ptr) {
      HEAP32[ptr >> 2] = ret;
    }
    return ret;
  }
  var _acos = Math_acos;
  function __isLeapYear(year) {
    return year % 4 === 0 && (year % 100 !== 0 || year % 400 === 0);
  }
  function __arraySum(array, index) {
    var sum = 0;
    for (var i = 0; i <= index; sum += array[i++])
      ;
    return sum;
  }
  var __MONTH_DAYS_LEAP = [31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];
  var __MONTH_DAYS_REGULAR = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];
  function __addDays(date, days) {
    var newDate = new Date(date.getTime());
    while (days > 0) {
      var leap = __isLeapYear(newDate.getFullYear());
      var currentMonth = newDate.getMonth();
      var daysInCurrentMonth = (leap ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR)[currentMonth];
      if (days > daysInCurrentMonth - newDate.getDate()) {
        days -= daysInCurrentMonth - newDate.getDate() + 1;
        newDate.setDate(1);
        if (currentMonth < 11) {
          newDate.setMonth(currentMonth + 1);
        } else {
          newDate.setMonth(0);
          newDate.setFullYear(newDate.getFullYear() + 1);
        }
      } else {
        newDate.setDate(newDate.getDate() + days);
        return newDate;
      }
    }
    return newDate;
  }
  function _strftime(s, maxsize, format, tm) {
    var tm_zone = HEAP32[tm + 40 >> 2];
    var date = {
      tm_sec: HEAP32[tm >> 2],
      tm_min: HEAP32[tm + 4 >> 2],
      tm_hour: HEAP32[tm + 8 >> 2],
      tm_mday: HEAP32[tm + 12 >> 2],
      tm_mon: HEAP32[tm + 16 >> 2],
      tm_year: HEAP32[tm + 20 >> 2],
      tm_wday: HEAP32[tm + 24 >> 2],
      tm_yday: HEAP32[tm + 28 >> 2],
      tm_isdst: HEAP32[tm + 32 >> 2],
      tm_gmtoff: HEAP32[tm + 36 >> 2],
      tm_zone: tm_zone ? Pointer_stringify(tm_zone) : ""
    };
    var pattern = Pointer_stringify(format);
    var EXPANSION_RULES_1 = {
      "%c": "%a %b %d %H:%M:%S %Y",
      "%D": "%m/%d/%y",
      "%F": "%Y-%m-%d",
      "%h": "%b",
      "%r": "%I:%M:%S %p",
      "%R": "%H:%M",
      "%T": "%H:%M:%S",
      "%x": "%m/%d/%y",
      "%X": "%H:%M:%S"
    };
    for (var rule in EXPANSION_RULES_1) {
      pattern = pattern.replace(new RegExp(rule, "g"), EXPANSION_RULES_1[rule]);
    }
    var WEEKDAYS = ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"];
    var MONTHS = ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"];
    function leadingSomething(value, digits, character) {
      var str = typeof value === "number" ? value.toString() : value || "";
      while (str.length < digits) {
        str = character[0] + str;
      }
      return str;
    }
    function leadingNulls(value, digits) {
      return leadingSomething(value, digits, "0");
    }
    function compareByDay(date1, date2) {
      function sgn(value) {
        return value < 0 ? -1 : value > 0 ? 1 : 0;
      }
      var compare;
      if ((compare = sgn(date1.getFullYear() - date2.getFullYear())) === 0) {
        if ((compare = sgn(date1.getMonth() - date2.getMonth())) === 0) {
          compare = sgn(date1.getDate() - date2.getDate());
        }
      }
      return compare;
    }
    function getFirstWeekStartDate(janFourth) {
      switch (janFourth.getDay()) {
        case 0:
          return new Date(janFourth.getFullYear() - 1, 11, 29);
        case 1:
          return janFourth;
        case 2:
          return new Date(janFourth.getFullYear(), 0, 3);
        case 3:
          return new Date(janFourth.getFullYear(), 0, 2);
        case 4:
          return new Date(janFourth.getFullYear(), 0, 1);
        case 5:
          return new Date(janFourth.getFullYear() - 1, 11, 31);
        case 6:
          return new Date(janFourth.getFullYear() - 1, 11, 30);
      }
    }
    function getWeekBasedYear(date) {
      var thisDate = __addDays(new Date(date.tm_year + 1900, 0, 1), date.tm_yday);
      var janFourthThisYear = new Date(thisDate.getFullYear(), 0, 4);
      var janFourthNextYear = new Date(thisDate.getFullYear() + 1, 0, 4);
      var firstWeekStartThisYear = getFirstWeekStartDate(janFourthThisYear);
      var firstWeekStartNextYear = getFirstWeekStartDate(janFourthNextYear);
      if (compareByDay(firstWeekStartThisYear, thisDate) <= 0) {
        if (compareByDay(firstWeekStartNextYear, thisDate) <= 0) {
          return thisDate.getFullYear() + 1;
        } else {
          return thisDate.getFullYear();
        }
      } else {
        return thisDate.getFullYear() - 1;
      }
    }
    var EXPANSION_RULES_2 = {
      "%a": (function(date) {
        return WEEKDAYS[date.tm_wday].substring(0, 3);
      }),
      "%A": (function(date) {
        return WEEKDAYS[date.tm_wday];
      }),
      "%b": (function(date) {
        return MONTHS[date.tm_mon].substring(0, 3);
      }),
      "%B": (function(date) {
        return MONTHS[date.tm_mon];
      }),
      "%C": (function(date) {
        var year = date.tm_year + 1900;
        return leadingNulls(year / 100 | 0, 2);
      }),
      "%d": (function(date) {
        return leadingNulls(date.tm_mday, 2);
      }),
      "%e": (function(date) {
        return leadingSomething(date.tm_mday, 2, " ");
      }),
      "%g": (function(date) {
        return getWeekBasedYear(date).toString().substring(2);
      }),
      "%G": (function(date) {
        return getWeekBasedYear(date);
      }),
      "%H": (function(date) {
        return leadingNulls(date.tm_hour, 2);
      }),
      "%I": (function(date) {
        return leadingNulls(date.tm_hour < 13 ? date.tm_hour : date.tm_hour - 12, 2);
      }),
      "%j": (function(date) {
        return leadingNulls(date.tm_mday + __arraySum(__isLeapYear(date.tm_year + 1900) ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR, date.tm_mon - 1), 3);
      }),
      "%m": (function(date) {
        return leadingNulls(date.tm_mon + 1, 2);
      }),
      "%M": (function(date) {
        return leadingNulls(date.tm_min, 2);
      }),
      "%n": (function() {
        return "\n";
      }),
      "%p": (function(date) {
        if (date.tm_hour > 0 && date.tm_hour < 13) {
          return "AM";
        } else {
          return "PM";
        }
      }),
      "%S": (function(date) {
        return leadingNulls(date.tm_sec, 2);
      }),
      "%t": (function() {
        return "\t";
      }),
      "%u": (function(date) {
        var day = new Date(date.tm_year + 1900, date.tm_mon + 1, date.tm_mday, 0, 0, 0, 0);
        return day.getDay() || 7;
      }),
      "%U": (function(date) {
        var janFirst = new Date(date.tm_year + 1900, 0, 1);
        var firstSunday = janFirst.getDay() === 0 ? janFirst : __addDays(janFirst, 7 - janFirst.getDay());
        var endDate = new Date(date.tm_year + 1900, date.tm_mon, date.tm_mday);
        if (compareByDay(firstSunday, endDate) < 0) {
          var februaryFirstUntilEndMonth = __arraySum(__isLeapYear(endDate.getFullYear()) ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR, endDate.getMonth() - 1) - 31;
          var firstSundayUntilEndJanuary = 31 - firstSunday.getDate();
          var days = firstSundayUntilEndJanuary + februaryFirstUntilEndMonth + endDate.getDate();
          return leadingNulls(Math.ceil(days / 7), 2);
        }
        return compareByDay(firstSunday, janFirst) === 0 ? "01" : "00";
      }),
      "%V": (function(date) {
        var janFourthThisYear = new Date(date.tm_year + 1900, 0, 4);
        var janFourthNextYear = new Date(date.tm_year + 1901, 0, 4);
        var firstWeekStartThisYear = getFirstWeekStartDate(janFourthThisYear);
        var firstWeekStartNextYear = getFirstWeekStartDate(janFourthNextYear);
        var endDate = __addDays(new Date(date.tm_year + 1900, 0, 1), date.tm_yday);
        if (compareByDay(endDate, firstWeekStartThisYear) < 0) {
          return "53";
        }
        if (compareByDay(firstWeekStartNextYear, endDate) <= 0) {
          return "01";
        }
        var daysDifference;
        if (firstWeekStartThisYear.getFullYear() < date.tm_year + 1900) {
          daysDifference = date.tm_yday + 32 - firstWeekStartThisYear.getDate();
        } else {
          daysDifference = date.tm_yday + 1 - firstWeekStartThisYear.getDate();
        }
        return leadingNulls(Math.ceil(daysDifference / 7), 2);
      }),
      "%w": (function(date) {
        var day = new Date(date.tm_year + 1900, date.tm_mon + 1, date.tm_mday, 0, 0, 0, 0);
        return day.getDay();
      }),
      "%W": (function(date) {
        var janFirst = new Date(date.tm_year, 0, 1);
        var firstMonday = janFirst.getDay() === 1 ? janFirst : __addDays(janFirst, janFirst.getDay() === 0 ? 1 : 7 - janFirst.getDay() + 1);
        var endDate = new Date(date.tm_year + 1900, date.tm_mon, date.tm_mday);
        if (compareByDay(firstMonday, endDate) < 0) {
          var februaryFirstUntilEndMonth = __arraySum(__isLeapYear(endDate.getFullYear()) ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR, endDate.getMonth() - 1) - 31;
          var firstMondayUntilEndJanuary = 31 - firstMonday.getDate();
          var days = firstMondayUntilEndJanuary + februaryFirstUntilEndMonth + endDate.getDate();
          return leadingNulls(Math.ceil(days / 7), 2);
        }
        return compareByDay(firstMonday, janFirst) === 0 ? "01" : "00";
      }),
      "%y": (function(date) {
        return (date.tm_year + 1900).toString().substring(2);
      }),
      "%Y": (function(date) {
        return date.tm_year + 1900;
      }),
      "%z": (function(date) {
        var off = date.tm_gmtoff;
        var ahead = off >= 0;
        off = Math.abs(off) / 60;
        off = off / 60 * 100 + off % 60;
        return (ahead ? "+" : "-") + String("0000" + off).slice(-4);
      }),
      "%Z": (function(date) {
        return date.tm_zone;
      }),
      "%%": (function() {
        return "%";
      })
    };
    for (var rule in EXPANSION_RULES_2) {
      if (pattern.indexOf(rule) >= 0) {
        pattern = pattern.replace(new RegExp(rule, "g"), EXPANSION_RULES_2[rule](date));
      }
    }
    var bytes = intArrayFromString(pattern, false);
    if (bytes.length > maxsize) {
      return 0;
    }
    writeArrayToMemory(bytes, s);
    return bytes.length - 1;
  }
  FS.staticInit();
  __ATINIT__.unshift((function() {
    if (!Module["noFSInit"] && !FS.init.initialized)
      FS.init();
  }));
  __ATMAIN__.push((function() {
    FS.ignorePermissions = false;
  }));
  __ATEXIT__.push((function() {
    FS.quit();
  }));
  Module["FS_createFolder"] = FS.createFolder;
  Module["FS_createPath"] = FS.createPath;
  Module["FS_createDataFile"] = FS.createDataFile;
  Module["FS_createPreloadedFile"] = FS.createPreloadedFile;
  Module["FS_createLazyFile"] = FS.createLazyFile;
  Module["FS_createLink"] = FS.createLink;
  Module["FS_createDevice"] = FS.createDevice;
  ___errno_state = Runtime.staticAlloc(4);
  HEAP32[___errno_state >> 2] = 0;
  __ATINIT__.unshift((function() {
    TTY.init();
  }));
  __ATEXIT__.push((function() {
    TTY.shutdown();
  }));
  if (ENVIRONMENT_IS_NODE) {
    var fs = require("fs");
    var NODEJS_PATH = require("path");
    NODEFS.staticInit();
  }
  embind_init_charCodes();
  BindingError = Module["BindingError"] = extendError(Error, "BindingError");
  InternalError = Module["InternalError"] = extendError(Error, "InternalError");
  _fputc.ret = allocate([0], "i8", ALLOC_STATIC);
  __ATINIT__.push((function() {
    SOCKFS.root = FS.mount(SOCKFS, {}, null);
  }));
  Module["requestFullScreen"] = function Module_requestFullScreen(lockPointer, resizeCanvas, vrDevice) {
    Browser.requestFullScreen(lockPointer, resizeCanvas, vrDevice);
  };
  Module["requestAnimationFrame"] = function Module_requestAnimationFrame(func) {
    Browser.requestAnimationFrame(func);
  };
  Module["setCanvasSize"] = function Module_setCanvasSize(width, height, noUpdates) {
    Browser.setCanvasSize(width, height, noUpdates);
  };
  Module["pauseMainLoop"] = function Module_pauseMainLoop() {
    Browser.mainLoop.pause();
  };
  Module["resumeMainLoop"] = function Module_resumeMainLoop() {
    Browser.mainLoop.resume();
  };
  Module["getUserMedia"] = function Module_getUserMedia() {
    Browser.getUserMedia();
  };
  Module["createContext"] = function Module_createContext(canvas, useWebGL, setInModule, webGLContextAttributes) {
    return Browser.createContext(canvas, useWebGL, setInModule, webGLContextAttributes);
  };
  _fgetc.ret = allocate([0], "i8", ALLOC_STATIC);
  init_emval();
  UnboundTypeError = Module["UnboundTypeError"] = extendError(Error, "UnboundTypeError");
  ___buildEnvironment(ENV);
  STACK_BASE = STACKTOP = Runtime.alignMemory(STATICTOP);
  staticSealed = true;
  STACK_MAX = STACK_BASE + TOTAL_STACK;
  DYNAMIC_BASE = DYNAMICTOP = Runtime.alignMemory(STACK_MAX);
  assert(DYNAMIC_BASE < TOTAL_MEMORY, "TOTAL_MEMORY not big enough for stack");
  var cttz_i8 = allocate([8, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0, 4, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0, 5, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0, 4, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0, 6, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0, 4, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0, 5, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0, 4, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0, 7, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0, 4, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0, 5, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0, 4, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0, 6, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0, 4, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0, 5, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0, 4, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0], "i8", ALLOC_DYNAMIC);
  function invoke_iiii(index, a1, a2, a3) {
    try {
      return Module["dynCall_iiii"](index, a1, a2, a3);
    } catch (e) {
      if (typeof e !== "number" && e !== "longjmp")
        throw e;
      asm["setThrew"](1, 0);
    }
  }
  function jsCall_iiii(index, a1, a2, a3) {
    return Runtime.functionPointers[index](a1, a2, a3);
  }
  function invoke_viiiii(index, a1, a2, a3, a4, a5) {
    try {
      Module["dynCall_viiiii"](index, a1, a2, a3, a4, a5);
    } catch (e) {
      if (typeof e !== "number" && e !== "longjmp")
        throw e;
      asm["setThrew"](1, 0);
    }
  }
  function jsCall_viiiii(index, a1, a2, a3, a4, a5) {
    Runtime.functionPointers[index](a1, a2, a3, a4, a5);
  }
  function invoke_i(index) {
    try {
      return Module["dynCall_i"](index);
    } catch (e) {
      if (typeof e !== "number" && e !== "longjmp")
        throw e;
      asm["setThrew"](1, 0);
    }
  }
  function jsCall_i(index) {
    return Runtime.functionPointers[index]();
  }
  function invoke_vi(index, a1) {
    try {
      Module["dynCall_vi"](index, a1);
    } catch (e) {
      if (typeof e !== "number" && e !== "longjmp")
        throw e;
      asm["setThrew"](1, 0);
    }
  }
  function jsCall_vi(index, a1) {
    Runtime.functionPointers[index](a1);
  }
  function invoke_vii(index, a1, a2) {
    try {
      Module["dynCall_vii"](index, a1, a2);
    } catch (e) {
      if (typeof e !== "number" && e !== "longjmp")
        throw e;
      asm["setThrew"](1, 0);
    }
  }
  function jsCall_vii(index, a1, a2) {
    Runtime.functionPointers[index](a1, a2);
  }
  function invoke_ii(index, a1) {
    try {
      return Module["dynCall_ii"](index, a1);
    } catch (e) {
      if (typeof e !== "number" && e !== "longjmp")
        throw e;
      asm["setThrew"](1, 0);
    }
  }
  function jsCall_ii(index, a1) {
    return Runtime.functionPointers[index](a1);
  }
  function invoke_viii(index, a1, a2, a3) {
    try {
      Module["dynCall_viii"](index, a1, a2, a3);
    } catch (e) {
      if (typeof e !== "number" && e !== "longjmp")
        throw e;
      asm["setThrew"](1, 0);
    }
  }
  function jsCall_viii(index, a1, a2, a3) {
    Runtime.functionPointers[index](a1, a2, a3);
  }
  function invoke_v(index) {
    try {
      Module["dynCall_v"](index);
    } catch (e) {
      if (typeof e !== "number" && e !== "longjmp")
        throw e;
      asm["setThrew"](1, 0);
    }
  }
  function jsCall_v(index) {
    Runtime.functionPointers[index]();
  }
  function invoke_iiiii(index, a1, a2, a3, a4) {
    try {
      return Module["dynCall_iiiii"](index, a1, a2, a3, a4);
    } catch (e) {
      if (typeof e !== "number" && e !== "longjmp")
        throw e;
      asm["setThrew"](1, 0);
    }
  }
  function jsCall_iiiii(index, a1, a2, a3, a4) {
    return Runtime.functionPointers[index](a1, a2, a3, a4);
  }
  function invoke_viiiiii(index, a1, a2, a3, a4, a5, a6) {
    try {
      Module["dynCall_viiiiii"](index, a1, a2, a3, a4, a5, a6);
    } catch (e) {
      if (typeof e !== "number" && e !== "longjmp")
        throw e;
      asm["setThrew"](1, 0);
    }
  }
  function jsCall_viiiiii(index, a1, a2, a3, a4, a5, a6) {
    Runtime.functionPointers[index](a1, a2, a3, a4, a5, a6);
  }
  function invoke_iii(index, a1, a2) {
    try {
      return Module["dynCall_iii"](index, a1, a2);
    } catch (e) {
      if (typeof e !== "number" && e !== "longjmp")
        throw e;
      asm["setThrew"](1, 0);
    }
  }
  function jsCall_iii(index, a1, a2) {
    return Runtime.functionPointers[index](a1, a2);
  }
  function invoke_viiii(index, a1, a2, a3, a4) {
    try {
      Module["dynCall_viiii"](index, a1, a2, a3, a4);
    } catch (e) {
      if (typeof e !== "number" && e !== "longjmp")
        throw e;
      asm["setThrew"](1, 0);
    }
  }
  function jsCall_viiii(index, a1, a2, a3, a4) {
    Runtime.functionPointers[index](a1, a2, a3, a4);
  }
  Module.asmGlobalArg = {
    "Math": Math,
    "Int8Array": Int8Array,
    "Int16Array": Int16Array,
    "Int32Array": Int32Array,
    "Uint8Array": Uint8Array,
    "Uint16Array": Uint16Array,
    "Uint32Array": Uint32Array,
    "Float32Array": Float32Array,
    "Float64Array": Float64Array,
    "NaN": NaN,
    "Infinity": Infinity,
    "byteLength": byteLength
  };
  Module.asmLibraryArg = {
    "abort": abort,
    "assert": assert,
    "invoke_iiii": invoke_iiii,
    "jsCall_iiii": jsCall_iiii,
    "invoke_viiiii": invoke_viiiii,
    "jsCall_viiiii": jsCall_viiiii,
    "invoke_i": invoke_i,
    "jsCall_i": jsCall_i,
    "invoke_vi": invoke_vi,
    "jsCall_vi": jsCall_vi,
    "invoke_vii": invoke_vii,
    "jsCall_vii": jsCall_vii,
    "invoke_ii": invoke_ii,
    "jsCall_ii": jsCall_ii,
    "invoke_viii": invoke_viii,
    "jsCall_viii": jsCall_viii,
    "invoke_v": invoke_v,
    "jsCall_v": jsCall_v,
    "invoke_iiiii": invoke_iiiii,
    "jsCall_iiiii": jsCall_iiiii,
    "invoke_viiiiii": invoke_viiiiii,
    "jsCall_viiiiii": jsCall_viiiiii,
    "invoke_iii": invoke_iii,
    "jsCall_iii": jsCall_iii,
    "invoke_viiii": invoke_viiii,
    "jsCall_viiii": jsCall_viiii,
    "_fabs": _fabs,
    "_exp": _exp,
    "floatReadValueFromPointer": floatReadValueFromPointer,
    "simpleReadValueFromPointer": simpleReadValueFromPointer,
    "throwInternalError": throwInternalError,
    "get_first_emval": get_first_emval,
    "_audio_sample_batch": _audio_sample_batch,
    "_fread": _fread,
    "_longjmp": _longjmp,
    "getShiftFromSize": getShiftFromSize,
    "__addDays": __addDays,
    "_emscripten_set_main_loop_timing": _emscripten_set_main_loop_timing,
    "_sbrk": _sbrk,
    "_emscripten_memcpy_big": _emscripten_memcpy_big,
    "_sysconf": _sysconf,
    "_video_refresh": _video_refresh,
    "_close": _close,
    "_ferror": _ferror,
    "_clock": _clock,
    "_cos": _cos,
    "__embind_register_enum_value": __embind_register_enum_value,
    "whenDependentTypesAreResolved": whenDependentTypesAreResolved,
    "_write": _write,
    "__isLeapYear": __isLeapYear,
    "_ftell": _ftell,
    "_gmtime_r": _gmtime_r,
    "__embind_register_constant": __embind_register_constant,
    "_tmpnam": _tmpnam,
    "_tmpfile": _tmpfile,
    "_send": _send,
    "_setvbuf": _setvbuf,
    "_atan2": _atan2,
    "_setlocale": _setlocale,
    "__embind_register_emval": __embind_register_emval,
    "_strerror_r": _strerror_r,
    "___setErrNo": ___setErrNo,
    "__embind_register_bool": __embind_register_bool,
    "_unlink": _unlink,
    "_mktime": _mktime,
    "createNamedFunction": createNamedFunction,
    "embind_init_charCodes": embind_init_charCodes,
    "_gmtime": _gmtime,
    "__emval_decref": __emval_decref,
    "_localeconv": _localeconv,
    "_localtime": _localtime,
    "heap32VectorToArray": heap32VectorToArray,
    "_read": _read,
    "ensureOverloadTable": ensureOverloadTable,
    "_time": _time,
    "_fprintf": _fprintf,
    "new_": new_,
    "_exit": _exit,
    "replacePublicSymbol": replacePublicSymbol,
    "_input_state": _input_state,
    "_freopen": _freopen,
    "_llvm_pow_f64": _llvm_pow_f64,
    "_lseek": _lseek,
    "_rename": _rename,
    "__embind_register_integer": __embind_register_integer,
    "_rmdir": _rmdir,
    "_asin": _asin,
    "___buildEnvironment": ___buildEnvironment,
    "_input_poll": _input_poll,
    "_pwrite": _pwrite,
    "_localtime_r": _localtime_r,
    "_tzset": _tzset,
    "_open": _open,
    "_remove": _remove,
    "enumReadValueFromPointer": enumReadValueFromPointer,
    "_embind_repr": _embind_repr,
    "_strftime": _strftime,
    "_fseek": _fseek,
    "throwUnboundTypeError": throwUnboundTypeError,
    "craftInvokerFunction": craftInvokerFunction,
    "_getenv": _getenv,
    "_fclose": _fclose,
    "runDestructors": runDestructors,
    "requireRegisteredType": requireRegisteredType,
    "makeLegalFunctionName": makeLegalFunctionName,
    "_log": _log,
    "init_emval": init_emval,
    "_recv": _recv,
    "_tan": _tan,
    "_fgetc": _fgetc,
    "_environment": _environment,
    "registerType": registerType,
    "_abort": _abort,
    "throwBindingError": throwBindingError,
    "getTypeName": getTypeName,
    "_fopen": _fopen,
    "__embind_register_std_string": __embind_register_std_string,
    "_floor": _floor,
    "_sin": _sin,
    "_acos": _acos,
    "__embind_register_memory_view": __embind_register_memory_view,
    "_ceil": _ceil,
    "_difftime": _difftime,
    "extendError": extendError,
    "_ungetc": _ungetc,
    "_fwrite": _fwrite,
    "__embind_register_void": __embind_register_void,
    "_system": _system,
    "__embind_register_function": __embind_register_function,
    "__reallyNegative": __reallyNegative,
    "__emval_register": __emval_register,
    "__embind_register_std_wstring": __embind_register_std_wstring,
    "_fileno": _fileno,
    "__exit": __exit,
    "__arraySum": __arraySum,
    "__formatString": __formatString,
    "readLatin1String": readLatin1String,
    "_pread": _pread,
    "_mkport": _mkport,
    "__embind_register_float": __embind_register_float,
    "integerReadValueFromPointer": integerReadValueFromPointer,
    "_getc": _getc,
    "_feof": _feof,
    "_fflush": _fflush,
    "_emscripten_set_main_loop": _emscripten_set_main_loop,
    "___errno_location": ___errno_location,
    "_clearerr": _clearerr,
    "_fputc": _fputc,
    "__embind_register_enum": __embind_register_enum,
    "count_emval_handles": count_emval_handles,
    "requireFunction": requireFunction,
    "_strerror": _strerror,
    "_emscripten_longjmp": _emscripten_longjmp,
    "_fgets": _fgets,
    "_sqrt": _sqrt,
    "exposePublicSymbol": exposePublicSymbol,
    "STACKTOP": STACKTOP,
    "STACK_MAX": STACK_MAX,
    "tempDoublePtr": tempDoublePtr,
    "ABORT": ABORT,
    "cttz_i8": cttz_i8,
    "_stderr": _stderr,
    "_stdin": _stdin,
    "_stdout": _stdout
  };
  var asm = (function(global, env, buffer) {
    "use asm";
    var a = global.Int8Array;
    var b = global.Int16Array;
    var c = global.Int32Array;
    var d = global.Uint8Array;
    var e = global.Uint16Array;
    var f = global.Uint32Array;
    var g = global.Float32Array;
    var h = global.Float64Array;
    var i = new a(buffer);
    var j = new b(buffer);
    var k = new c(buffer);
    var l = new d(buffer);
    var m = new e(buffer);
    var n = new f(buffer);
    var o = new g(buffer);
    var p = new h(buffer);
    var q = global.byteLength;
    var r = env.STACKTOP | 0;
    var s = env.STACK_MAX | 0;
    var t = env.tempDoublePtr | 0;
    var u = env.ABORT | 0;
    var v = env.cttz_i8 | 0;
    var w = env._stderr | 0;
    var x = env._stdin | 0;
    var y = env._stdout | 0;
    var z = 0;
    var A = 0;
    var B = 0;
    var C = 0;
    var D = global.NaN,
        E = global.Infinity;
    var F = 0,
        G = 0,
        H = 0,
        I = 0,
        J = 0.0,
        K = 0,
        L = 0,
        M = 0,
        N = 0.0;
    var O = 0;
    var P = 0;
    var Q = 0;
    var R = 0;
    var S = 0;
    var T = 0;
    var U = 0;
    var V = 0;
    var W = 0;
    var X = 0;
    var Y = global.Math.floor;
    var Z = global.Math.abs;
    var _ = global.Math.sqrt;
    var $ = global.Math.pow;
    var aa = global.Math.cos;
    var ba = global.Math.sin;
    var ca = global.Math.tan;
    var da = global.Math.acos;
    var ea = global.Math.asin;
    var fa = global.Math.atan;
    var ga = global.Math.atan2;
    var ha = global.Math.exp;
    var ia = global.Math.log;
    var ja = global.Math.ceil;
    var ka = global.Math.imul;
    var la = global.Math.min;
    var ma = global.Math.clz32;
    var na = env.abort;
    var oa = env.assert;
    var pa = env.invoke_iiii;
    var qa = env.jsCall_iiii;
    var ra = env.invoke_viiiii;
    var sa = env.jsCall_viiiii;
    var ta = env.invoke_i;
    var ua = env.jsCall_i;
    var va = env.invoke_vi;
    var wa = env.jsCall_vi;
    var xa = env.invoke_vii;
    var ya = env.jsCall_vii;
    var za = env.invoke_ii;
    var Aa = env.jsCall_ii;
    var Ba = env.invoke_viii;
    var Ca = env.jsCall_viii;
    var Da = env.invoke_v;
    var Ea = env.jsCall_v;
    var Fa = env.invoke_iiiii;
    var Ga = env.jsCall_iiiii;
    var Ha = env.invoke_viiiiii;
    var Ia = env.jsCall_viiiiii;
    var Ja = env.invoke_iii;
    var Ka = env.jsCall_iii;
    var La = env.invoke_viiii;
    var Ma = env.jsCall_viiii;
    var Na = env._fabs;
    var Oa = env._exp;
    var Pa = env.floatReadValueFromPointer;
    var Qa = env.simpleReadValueFromPointer;
    var Ra = env.throwInternalError;
    var Sa = env.get_first_emval;
    var Ta = env._audio_sample_batch;
    var Ua = env._fread;
    var Va = env._longjmp;
    var Wa = env.getShiftFromSize;
    var Xa = env.__addDays;
    var Ya = env._emscripten_set_main_loop_timing;
    var Za = env._sbrk;
    var _a = env._emscripten_memcpy_big;
    var $a = env._sysconf;
    var ab = env._video_refresh;
    var bb = env._close;
    var cb = env._ferror;
    var db = env._clock;
    var eb = env._cos;
    var fb = env.__embind_register_enum_value;
    var gb = env.whenDependentTypesAreResolved;
    var hb = env._write;
    var ib = env.__isLeapYear;
    var jb = env._ftell;
    var kb = env._gmtime_r;
    var lb = env.__embind_register_constant;
    var mb = env._tmpnam;
    var nb = env._tmpfile;
    var ob = env._send;
    var pb = env._setvbuf;
    var qb = env._atan2;
    var rb = env._setlocale;
    var sb = env.__embind_register_emval;
    var tb = env._strerror_r;
    var ub = env.___setErrNo;
    var vb = env.__embind_register_bool;
    var wb = env._unlink;
    var xb = env._mktime;
    var yb = env.createNamedFunction;
    var zb = env.embind_init_charCodes;
    var Ab = env._gmtime;
    var Bb = env.__emval_decref;
    var Cb = env._localeconv;
    var Db = env._localtime;
    var Eb = env.heap32VectorToArray;
    var Fb = env._read;
    var Gb = env.ensureOverloadTable;
    var Hb = env._time;
    var Ib = env._fprintf;
    var Jb = env.new_;
    var Kb = env._exit;
    var Lb = env.replacePublicSymbol;
    var Mb = env._input_state;
    var Nb = env._freopen;
    var Ob = env._llvm_pow_f64;
    var Pb = env._lseek;
    var Qb = env._rename;
    var Rb = env.__embind_register_integer;
    var Sb = env._rmdir;
    var Tb = env._asin;
    var Ub = env.___buildEnvironment;
    var Vb = env._input_poll;
    var Wb = env._pwrite;
    var Xb = env._localtime_r;
    var Yb = env._tzset;
    var Zb = env._open;
    var _b = env._remove;
    var $b = env.enumReadValueFromPointer;
    var ac = env._embind_repr;
    var bc = env._strftime;
    var cc = env._fseek;
    var dc = env.throwUnboundTypeError;
    var ec = env.craftInvokerFunction;
    var fc = env._getenv;
    var gc = env._fclose;
    var hc = env.runDestructors;
    var ic = env.requireRegisteredType;
    var jc = env.makeLegalFunctionName;
    var kc = env._log;
    var lc = env.init_emval;
    var mc = env._recv;
    var nc = env._tan;
    var oc = env._fgetc;
    var pc = env._environment;
    var qc = env.registerType;
    var rc = env._abort;
    var sc = env.throwBindingError;
    var tc = env.getTypeName;
    var uc = env._fopen;
    var vc = env.__embind_register_std_string;
    var wc = env._floor;
    var xc = env._sin;
    var yc = env._acos;
    var zc = env.__embind_register_memory_view;
    var Ac = env._ceil;
    var Bc = env._difftime;
    var Cc = env.extendError;
    var Dc = env._ungetc;
    var Ec = env._fwrite;
    var Fc = env.__embind_register_void;
    var Gc = env._system;
    var Hc = env.__embind_register_function;
    var Ic = env.__reallyNegative;
    var Jc = env.__emval_register;
    var Kc = env.__embind_register_std_wstring;
    var Lc = env._fileno;
    var Mc = env.__exit;
    var Nc = env.__arraySum;
    var Oc = env.__formatString;
    var Pc = env.readLatin1String;
    var Qc = env._pread;
    var Rc = env._mkport;
    var Sc = env.__embind_register_float;
    var Tc = env.integerReadValueFromPointer;
    var Uc = env._getc;
    var Vc = env._feof;
    var Wc = env._fflush;
    var Xc = env._emscripten_set_main_loop;
    var Yc = env.___errno_location;
    var Zc = env._clearerr;
    var _c = env._fputc;
    var $c = env.__embind_register_enum;
    var ad = env.count_emval_handles;
    var bd = env.requireFunction;
    var cd = env._strerror;
    var dd = env._emscripten_longjmp;
    var ed = env._fgets;
    var fd = env._sqrt;
    var gd = env.exposePublicSymbol;
    var hd = 0.0;
    function _emscripten_replace_memory(newBuffer) {
      if (q(newBuffer) & 16777215 || q(newBuffer) <= 16777215 || q(newBuffer) > 2147483648)
        return false;
      i = new a(newBuffer);
      j = new b(newBuffer);
      k = new c(newBuffer);
      l = new d(newBuffer);
      m = new e(newBuffer);
      n = new f(newBuffer);
      o = new g(newBuffer);
      p = new h(newBuffer);
      buffer = newBuffer;
      return true;
    }
    function ud(a) {
      a = a | 0;
      var b = 0;
      b = r;
      r = r + a | 0;
      r = r + 15 & -16;
      return b | 0;
    }
    function vd() {
      return r | 0;
    }
    function wd(a) {
      a = a | 0;
      r = a;
    }
    function xd(a, b) {
      a = a | 0;
      b = b | 0;
      r = a;
      s = b;
    }
    function yd(a, b) {
      a = a | 0;
      b = b | 0;
      if (!z) {
        z = a;
        A = b;
      }
    }
    function zd(a) {
      a = a | 0;
      i[t >> 0] = i[a >> 0];
      i[t + 1 >> 0] = i[a + 1 >> 0];
      i[t + 2 >> 0] = i[a + 2 >> 0];
      i[t + 3 >> 0] = i[a + 3 >> 0];
    }
    function Ad(a) {
      a = a | 0;
      i[t >> 0] = i[a >> 0];
      i[t + 1 >> 0] = i[a + 1 >> 0];
      i[t + 2 >> 0] = i[a + 2 >> 0];
      i[t + 3 >> 0] = i[a + 3 >> 0];
      i[t + 4 >> 0] = i[a + 4 >> 0];
      i[t + 5 >> 0] = i[a + 5 >> 0];
      i[t + 6 >> 0] = i[a + 6 >> 0];
      i[t + 7 >> 0] = i[a + 7 >> 0];
    }
    function Bd(a) {
      a = a | 0;
      O = a;
    }
    function Cd() {
      return O | 0;
    }
    function Dd() {
      _i(44);
      aj();
      ej(45);
      gj(45);
      ij(42);
      hj(44);
      return ;
    }
    function Ed(a) {
      a = a | 0;
      lb(808508, 552, 1);
      lb(808520, 552, 8);
      lb(808538, 552, 255);
      lb(808550, 552, 0);
      lb(808562, 552, 1);
      lb(808576, 552, 2);
      lb(808589, 552, 3);
      lb(808605, 552, 4);
      lb(808621, 552, 5);
      lb(808635, 552, 6);
      lb(808650, 552, 0);
      lb(808669, 552, 1);
      lb(808688, 552, 2);
      lb(808712, 552, 3);
      lb(808735, 552, 4);
      lb(808755, 552, 5);
      lb(808777, 552, 6);
      lb(808799, 552, 7);
      lb(808822, 552, 8);
      lb(808841, 552, 9);
      lb(808860, 552, 10);
      lb(808879, 552, 11);
      lb(808898, 552, 12);
      lb(808918, 552, 13);
      lb(808938, 552, 14);
      lb(808958, 552, 15);
      lb(808978, 552, 0);
      lb(809003, 552, 1);
      lb(809029, 552, 0);
      lb(809048, 552, 1);
      lb(809067, 552, 0);
      lb(809085, 552, 1);
      lb(809103, 552, 2);
      lb(809124, 552, 3);
      lb(809146, 552, 4);
      lb(809170, 552, 5);
      lb(809196, 552, 6);
      lb(809219, 552, 7);
      lb(809249, 552, 8);
      lb(809281, 552, 0);
      lb(809302, 552, 1);
      lb(809323, 552, 2);
      lb(809350, 552, 3);
      lb(809376, 552, 4);
      lb(809401, 552, 5);
      lb(809426, 552, 6);
      lb(809451, 552, 0);
      lb(809471, 552, 1);
      lb(809491, 552, 2);
      lb(809517, 552, 0);
      lb(809529, 552, 1);
      lb(809540, 552, 255);
      lb(809552, 552, 0);
      lb(809568, 552, 1);
      lb(809579, 552, 2);
      lb(809597, 552, 3);
      lb(809614, 552, 65536);
      lb(809639, 552, 131072);
      lb(809659, 552, 1);
      lb(809684, 552, 2);
      lb(809709, 552, 3);
      lb(809734, 552, 6);
      lb(809758, 552, 7);
      lb(809779, 552, 8);
      lb(809813, 552, 9);
      lb(809846, 552, 10);
      lb(809875, 552, 11);
      lb(809909, 552, 12);
      lb(809943, 552, 13);
      lb(809982, 552, 14);
      lb(810008, 552, 15);
      lb(810033, 552, 16);
      lb(810059, 552, 17);
      lb(810091, 552, 18);
      lb(810123, 552, 19);
      lb(810153, 552, 22);
      lb(810184, 552, 21);
      lb(810220, 552, 23);
      lb(810253, 552, 24);
      lb(810295, 552, 65561);
      lb(810328, 552, 65562);
      lb(810361, 552, 27);
      lb(810391, 552, 28);
      lb(810422, 552, 29);
      lb(810457, 552, 30);
      lb(810495, 552, 31);
      lb(810526, 552, 32);
      lb(810557, 552, 33);
      lb(810595, 552, 34);
      lb(810626, 552, 35);
      lb(810658, 552, 65572);
      lb(810686, 552, 37);
      lb(810711, 552, 38);
      lb(810736, 552, 39);
      lb(810761, 552, 1);
      lb(810775, 552, 2);
      lb(810793, 552, 65536);
      lb(810809, 552, 131072);
      lb(810825, 552, 196608);
      lb(810841, 552, 16777216);
      lb(810859, 552, 33554432);
      lb(810877, 552, 50331648);
      lb(810895, 552, 1);
      lb(810904, 552, 2);
      lb(810914, 552, 4);
      lb(810923, 552, 8);
      lb(810935, 552, 16);
      lb(810944, 552, 32);
      lb(810954, 552, 64);
      lb(810964, 552, 128);
      lb(810975, 552, 256);
      lb(810984, 552, 512);
      lb(810996, 552, 1024);
      lb(811006, 552, 2048);
      lb(811017, 552, 4096);
      lb(811027, 552, 8192);
      lb(811037, 552, 16384);
      lb(811045, 552, 32768);
      lb(811054, 552, 0);
      lb(811077, 552, 1);
      lb(811100, 552, 2);
      lb(811123, 480, -1);
      $c(8, 811145, 4, 0);
      fb(8, 811154, 2147483647);
      fb(8, 811169, 12);
      fb(8, 811183, 11);
      fb(8, 811211, 10);
      fb(8, 811240, 9);
      fb(8, 811256, 8);
      fb(8, 811273, 7);
      fb(8, 811293, 6);
      fb(8, 811308, 5);
      fb(8, 811325, 4);
      fb(8, 811341, 3);
      fb(8, 811358, 2);
      fb(8, 811374, 1);
      fb(8, 811392, 0);
      $c(16, 811409, 4, 0);
      fb(16, 811413, 2147483647);
      fb(16, 811421, 323);
      fb(16, 811428, 322);
      fb(16, 811435, 321);
      fb(16, 811442, 320);
      fb(16, 811450, 319);
      fb(16, 811457, 318);
      fb(16, 811465, 317);
      fb(16, 811474, 316);
      fb(16, 811482, 315);
      fb(16, 811489, 314);
      fb(16, 811499, 313);
      fb(16, 811506, 312);
      fb(16, 811515, 311);
      fb(16, 811524, 310);
      fb(16, 811532, 309);
      fb(16, 811540, 308);
      fb(16, 811547, 307);
      fb(16, 811554, 306);
      fb(16, 811562, 305);
      fb(16, 811570, 304);
      fb(16, 811579, 303);
      fb(16, 811588, 302);
      fb(16, 811600, 301);
      fb(16, 811611, 300);
      fb(16, 811621, 296);
      fb(16, 811627, 295);
      fb(16, 811633, 294);
      fb(16, 811639, 293);
      fb(16, 811645, 292);
      fb(16, 811651, 291);
      fb(16, 811657, 290);
      fb(16, 811662, 289);
      fb(16, 811667, 288);
      fb(16, 811672, 287);
      fb(16, 811677, 286);
      fb(16, 811682, 285);
      fb(16, 811687, 284);
      fb(16, 811692, 283);
      fb(16, 811697, 282);
      fb(16, 811702, 281);
      fb(16, 811713, 280);
      fb(16, 811722, 279);
      fb(16, 811728, 278);
      fb(16, 811735, 277);
      fb(16, 811744, 276);
      fb(16, 811751, 275);
      fb(16, 811759, 274);
      fb(16, 811766, 273);
      fb(16, 811771, 272);
      fb(16, 811783, 271);
      fb(16, 811794, 270);
      fb(16, 811804, 269);
      fb(16, 811815, 268);
      fb(16, 811829, 267);
      fb(16, 811841, 266);
      fb(16, 811853, 265);
      fb(16, 811859, 264);
      fb(16, 811865, 263);
      fb(16, 811871, 262);
      fb(16, 811877, 261);
      fb(16, 811883, 260);
      fb(16, 811889, 259);
      fb(16, 811895, 258);
      fb(16, 811901, 257);
      fb(16, 811907, 256);
      fb(16, 811913, 127);
      fb(16, 811922, 122);
      fb(16, 811926, 121);
      fb(16, 811930, 120);
      fb(16, 811934, 119);
      fb(16, 811938, 118);
      fb(16, 811942, 117);
      fb(16, 811946, 116);
      fb(16, 811950, 115);
      fb(16, 811954, 114);
      fb(16, 811958, 113);
      fb(16, 811962, 112);
      fb(16, 811966, 111);
      fb(16, 811970, 110);
      fb(16, 811974, 109);
      fb(16, 811978, 108);
      fb(16, 811982, 107);
      fb(16, 811986, 106);
      fb(16, 811990, 105);
      fb(16, 811994, 104);
      fb(16, 811998, 103);
      fb(16, 812002, 102);
      fb(16, 812006, 101);
      fb(16, 812010, 100);
      fb(16, 812014, 99);
      fb(16, 812018, 98);
      fb(16, 812022, 97);
      fb(16, 812026, 96);
      fb(16, 812038, 95);
      fb(16, 812051, 94);
      fb(16, 812059, 93);
      fb(16, 812074, 92);
      fb(16, 812086, 91);
      fb(16, 812100, 64);
      fb(16, 812105, 63);
      fb(16, 812116, 62);
      fb(16, 812126, 61);
      fb(16, 812135, 60);
      fb(16, 812142, 59);
      fb(16, 812154, 58);
      fb(16, 812162, 57);
      fb(16, 812166, 56);
      fb(16, 812170, 55);
      fb(16, 812174, 54);
      fb(16, 812178, 53);
      fb(16, 812182, 52);
      fb(16, 812186, 51);
      fb(16, 812190, 50);
      fb(16, 812194, 49);
      fb(16, 812198, 48);
      fb(16, 812202, 47);
      fb(16, 812210, 46);
      fb(16, 812219, 45);
      fb(16, 812227, 44);
      fb(16, 812235, 43);
      fb(16, 812242, 42);
      fb(16, 812253, 41);
      fb(16, 812266, 40);
      fb(16, 812278, 39);
      fb(16, 812286, 38);
      fb(16, 812298, 36);
      fb(16, 812307, 35);
      fb(16, 812314, 34);
      fb(16, 812325, 33);
      fb(16, 812335, 32);
      fb(16, 812343, 27);
      fb(16, 812352, 19);
      fb(16, 812360, 13);
      fb(16, 812369, 12);
      fb(16, 812377, 9);
      fb(16, 812383, 8);
      fb(16, 812395, 0);
      fb(16, 812403, 0);
      $c(24, 812413, 4, 0);
      fb(24, 812417, 2147483647);
      fb(24, 812427, 64);
      fb(24, 812441, 32);
      fb(24, 812454, 16);
      fb(24, 812466, 8);
      fb(24, 812475, 4);
      fb(24, 812483, 2);
      fb(24, 812492, 1);
      fb(24, 812502, 0);
      $c(32, 812511, 4, 0);
      fb(32, 812521, 2147483647);
      fb(32, 812531, 3);
      fb(32, 812541, 2);
      fb(32, 812550, 1);
      fb(32, 812559, 0);
      $c(40, 812569, 4, 0);
      fb(40, 812583, 2147483647);
      fb(40, 812596, 1);
      fb(40, 812625, 0);
      $c(48, 812653, 4, 0);
      fb(48, 812667, 2147483647);
      fb(48, 812687, 1);
      fb(48, 812717, 0);
      $c(56, 812746, 4, 0);
      fb(56, 812760, 2147483647);
      fb(56, 812773, 1);
      fb(56, 812785, 0);
      $c(64, 812799, 4, 0);
      fb(64, 812815, 2147483647);
      fb(64, 812832, 5);
      fb(64, 812860, 4);
      fb(64, 812881, 3);
      fb(64, 812904, 2);
      fb(64, 812925, 1);
      fb(64, 812943, 0);
      $c(72, 812959, 4, 0);
      fb(72, 812972, 2147483647);
      fb(72, 812993, 2);
      fb(72, 813013, 1);
      fb(72, 813035, 0);
      Hc(1007899, 1, 656, 813057, 51, 43);
      Hc(813060, 1, 656, 813057, 51, 44);
      Hc(813067, 1, 660, 813079, 204, 42);
      Hc(813082, 1, 656, 813057, 51, 45);
      Hc(813088, 1, 656, 813057, 51, 46);
      Hc(813092, 1, 656, 813057, 51, 47);
      Hc(813104, 1, 660, 813079, 204, 43);
      Hc(813115, 1, 656, 813057, 51, 48);
      Hc(813127, 2, 664, 813143, 46, 205);
      Hc(813147, 1, 660, 813079, 204, 44);
      Hc(813162, 3, 672, 813189, 43, 42);
      return ;
    }
    function Fd(a) {
      a = a | 0;
      pd[a & 63]();
      return ;
    }
    function Gd(a) {
      a = a | 0;
      return kd[a & 63]() | 0;
    }
    function Hd(a, b) {
      a = a | 0;
      b = b | 0;
      return nd[a & 255](b) | 0;
    }
    function Id(a, b, c) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      md[a & 63](b, c);
      return ;
    }
    function Jd() {
      Ed(0);
      return ;
    }
    function Kd(a, b) {
      a = a | 0;
      b = b | 0;
      var c = 0,
          d = 0,
          e = 0,
          f = 0,
          g = 0,
          h = 0;
      h = r;
      r = r + 16 | 0;
      f = h;
      k[f >> 2] = b;
      g = k[a + 16 >> 2] | 0;
      c = a + 8 | 0;
      d = k[c >> 2] | 0;
      e = d;
      do
        if (((k[a + 24 >> 2] | 0) - e >> 4 | 0) <= (b | 0)) {
          if (((e - (k[a + 28 >> 2] | 0) >> 4) + 5 | 0) > (1e6 - b | 0)) {
            g = 0;
            r = h;
            return g | 0;
          }
          if (!(Xf(a, 43, f) | 0)) {
            d = k[c >> 2] | 0;
            b = k[f >> 2] | 0;
            break;
          } else {
            g = 0;
            r = h;
            return g | 0;
          }
        }
 while (0);
      c = g + 4 | 0;
      b = d + (b << 4) | 0;
      if ((k[c >> 2] | 0) >>> 0 >= b >>> 0) {
        g = 1;
        r = h;
        return g | 0;
      }
      k[c >> 2] = b;
      g = 1;
      r = h;
      return g | 0;
    }
    function Ld(a, b, c) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      var d = 0,
          e = 0,
          f = 0;
      if ((a | 0) == (b | 0))
        return ;
      d = a + 8 | 0;
      k[d >> 2] = (k[d >> 2] | 0) + (0 - c << 4);
      if ((c | 0) <= 0)
        return ;
      a = b + 8 | 0;
      b = 0;
      do {
        e = k[a >> 2] | 0;
        k[a >> 2] = e + 16;
        f = (k[d >> 2] | 0) + (b << 4) | 0;
        k[e >> 2] = k[f >> 2];
        k[e + 4 >> 2] = k[f + 4 >> 2];
        k[e + 8 >> 2] = k[f + 8 >> 2];
        k[e + 12 >> 2] = k[f + 12 >> 2];
        b = b + 1 | 0;
      } while ((b | 0) != (c | 0));
      return ;
    }
    function Md(a) {
      a = a | 0;
      if (!a) {
        a = 96;
        return a | 0;
      }
      a = k[(k[a + 12 >> 2] | 0) + 140 >> 2] | 0;
      return a | 0;
    }
    function Nd(a, b) {
      a = a | 0;
      b = b | 0;
      if ((b + 1000999 | 0) >>> 0 > 1000999)
        return b | 0;
      b = ((k[a + 8 >> 2] | 0) - (k[k[a + 16 >> 2] >> 2] | 0) >> 4) + b | 0;
      return b | 0;
    }
    function Od(a) {
      a = a | 0;
      return (k[a + 8 >> 2] | 0) - ((k[k[a + 16 >> 2] >> 2] | 0) + 16) >> 4 | 0;
    }
    function Pd(a, b) {
      a = a | 0;
      b = b | 0;
      var c = 0,
          d = 0,
          e = 0,
          f = 0;
      if ((b | 0) <= -1) {
        f = a + 8 | 0;
        k[f >> 2] = (k[f >> 2] | 0) + (b + 1 << 4);
        return ;
      }
      c = k[k[a + 16 >> 2] >> 2] | 0;
      d = a + 8 | 0;
      e = k[d >> 2] | 0;
      f = c + (b + 1 << 4) | 0;
      if (e >>> 0 < f >>> 0) {
        a = ((c + (b << 4) + 8 + 4 + (3 - e) | 0) >>> 4) + 1 | 0;
        c = e;
        do {
          k[c + 8 >> 2] = 0;
          c = c + 16 | 0;
        } while (c >>> 0 < f >>> 0);
        k[d >> 2] = e + (a << 4);
      }
      k[d >> 2] = f;
      return ;
    }
    function Qd(a, b, c) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      var d = 0,
          e = 0,
          f = 0,
          g = 0,
          h = 0,
          i = 0;
      i = r;
      r = r + 16 | 0;
      h = i;
      g = k[a + 8 >> 2] | 0;
      e = g + -16 | 0;
      f = k[a + 16 >> 2] | 0;
      do
        if ((b | 0) <= 0) {
          if ((b | 0) >= -1000999) {
            d = g + (b << 4) | 0;
            break;
          }
          if ((b | 0) == -1001e3) {
            d = (k[a + 12 >> 2] | 0) + 40 | 0;
            break;
          }
          b = -1001e3 - b | 0;
          a = k[f >> 2] | 0;
          if ((k[a + 8 >> 2] | 0) == 22)
            d = 80;
          else {
            d = k[a >> 2] | 0;
            d = (b | 0) > (l[d + 6 >> 0] | 0 | 0) ? 80 : d + 16 + (b + -1 << 4) | 0;
          }
        } else {
          d = (k[f >> 2] | 0) + (b << 4) | 0;
          d = d >>> 0 < g >>> 0 ? d : 80;
        }
 while (0);
      f = (c | 0) > -1 ? g : d;
      a = f + (~c << 4) | 0;
      if (d >>> 0 < a >>> 0) {
        b = d;
        do {
          k[h >> 2] = k[b >> 2];
          k[h + 4 >> 2] = k[b + 4 >> 2];
          k[h + 8 >> 2] = k[b + 8 >> 2];
          k[h + 12 >> 2] = k[b + 12 >> 2];
          k[b >> 2] = k[a >> 2];
          k[b + 4 >> 2] = k[a + 4 >> 2];
          k[b + 8 >> 2] = k[a + 8 >> 2];
          k[b + 12 >> 2] = k[a + 12 >> 2];
          k[a >> 2] = k[h >> 2];
          k[a + 4 >> 2] = k[h + 4 >> 2];
          k[a + 8 >> 2] = k[h + 8 >> 2];
          k[a + 12 >> 2] = k[h + 12 >> 2];
          b = b + 16 | 0;
          a = a + -16 | 0;
        } while (b >>> 0 < a >>> 0);
      }
      b = f + (0 - c << 4) | 0;
      if (b >>> 0 < e >>> 0) {
        a = e;
        do {
          k[h >> 2] = k[b >> 2];
          k[h + 4 >> 2] = k[b + 4 >> 2];
          k[h + 8 >> 2] = k[b + 8 >> 2];
          k[h + 12 >> 2] = k[b + 12 >> 2];
          k[b >> 2] = k[a >> 2];
          k[b + 4 >> 2] = k[a + 4 >> 2];
          k[b + 8 >> 2] = k[a + 8 >> 2];
          k[b + 12 >> 2] = k[a + 12 >> 2];
          k[a >> 2] = k[h >> 2];
          k[a + 4 >> 2] = k[h + 4 >> 2];
          k[a + 8 >> 2] = k[h + 8 >> 2];
          k[a + 12 >> 2] = k[h + 12 >> 2];
          b = b + 16 | 0;
          a = a + -16 | 0;
        } while (b >>> 0 < a >>> 0);
      }
      if (d >>> 0 >= e >>> 0) {
        r = i;
        return ;
      }
      do {
        k[h >> 2] = k[d >> 2];
        k[h + 4 >> 2] = k[d + 4 >> 2];
        k[h + 8 >> 2] = k[d + 8 >> 2];
        k[h + 12 >> 2] = k[d + 12 >> 2];
        k[d >> 2] = k[e >> 2];
        k[d + 4 >> 2] = k[e + 4 >> 2];
        k[d + 8 >> 2] = k[e + 8 >> 2];
        k[d + 12 >> 2] = k[e + 12 >> 2];
        k[e >> 2] = k[h >> 2];
        k[e + 4 >> 2] = k[h + 4 >> 2];
        k[e + 8 >> 2] = k[h + 8 >> 2];
        k[e + 12 >> 2] = k[h + 12 >> 2];
        d = d + 16 | 0;
        e = e + -16 | 0;
      } while (d >>> 0 < e >>> 0);
      r = i;
      return ;
    }
    function Rd(a, b, c) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      var d = 0,
          e = 0,
          f = 0,
          g = 0;
      g = a + 16 | 0;
      e = k[g >> 2] | 0;
      do
        if ((b | 0) <= 0) {
          if ((b | 0) >= -1000999) {
            f = (k[a + 8 >> 2] | 0) + (b << 4) | 0;
            break;
          }
          if ((b | 0) == -1001e3) {
            f = (k[a + 12 >> 2] | 0) + 40 | 0;
            break;
          }
          b = -1001e3 - b | 0;
          d = k[e >> 2] | 0;
          if ((k[d + 8 >> 2] | 0) == 22)
            f = 80;
          else {
            f = k[d >> 2] | 0;
            f = (b | 0) > (l[f + 6 >> 0] | 0 | 0) ? 80 : f + 16 + (b + -1 << 4) | 0;
          }
        } else {
          f = (k[e >> 2] | 0) + (b << 4) | 0;
          f = f >>> 0 < (k[a + 8 >> 2] | 0) >>> 0 ? f : 80;
        }
 while (0);
      do
        if ((c | 0) > 0) {
          d = (k[e >> 2] | 0) + (c << 4) | 0;
          d = d >>> 0 < (k[a + 8 >> 2] | 0) >>> 0 ? d : 80;
        } else {
          if ((c | 0) >= -1000999) {
            d = (k[a + 8 >> 2] | 0) + (c << 4) | 0;
            break;
          }
          if ((c | 0) == -1001e3) {
            d = (k[a + 12 >> 2] | 0) + 40 | 0;
            break;
          }
          d = -1001e3 - c | 0;
          b = k[e >> 2] | 0;
          if ((k[b + 8 >> 2] | 0) == 22)
            d = 80;
          else {
            e = k[b >> 2] | 0;
            d = (d | 0) > (l[e + 6 >> 0] | 0 | 0) ? 80 : e + 16 + (d + -1 << 4) | 0;
          }
          ;
          k[d >> 2] = k[f >> 2];
          k[d + 4 >> 2] = k[f + 4 >> 2];
          k[d + 8 >> 2] = k[f + 8 >> 2];
          k[d + 12 >> 2] = k[f + 12 >> 2];
          if (!(k[f + 8 >> 2] & 64))
            return ;
          b = k[k[k[g >> 2] >> 2] >> 2] | 0;
          if (!(i[b + 5 >> 0] & 4))
            return ;
          d = k[f >> 2] | 0;
          if (!(i[d + 5 >> 0] & 3))
            return ;
          rg(a, b, d);
          return ;
        }
 while (0);
      k[d >> 2] = k[f >> 2];
      k[d + 4 >> 2] = k[f + 4 >> 2];
      k[d + 8 >> 2] = k[f + 8 >> 2];
      k[d + 12 >> 2] = k[f + 12 >> 2];
      return ;
    }
    function Sd(a, b) {
      a = a | 0;
      b = b | 0;
      var c = 0,
          d = 0,
          e = 0;
      d = a + 8 | 0;
      e = k[d >> 2] | 0;
      c = k[a + 16 >> 2] | 0;
      do
        if ((b | 0) <= 0) {
          if ((b | 0) >= -1000999) {
            b = e + (b << 4) | 0;
            break;
          }
          if ((b | 0) == -1001e3) {
            b = (k[a + 12 >> 2] | 0) + 40 | 0;
            break;
          }
          a = -1001e3 - b | 0;
          b = k[c >> 2] | 0;
          if ((k[b + 8 >> 2] | 0) == 22)
            b = 80;
          else {
            b = k[b >> 2] | 0;
            b = (a | 0) > (l[b + 6 >> 0] | 0 | 0) ? 80 : b + 16 + (a + -1 << 4) | 0;
          }
        } else {
          b = (k[c >> 2] | 0) + (b << 4) | 0;
          b = b >>> 0 < e >>> 0 ? b : 80;
        }
 while (0);
      k[e >> 2] = k[b >> 2];
      k[e + 4 >> 2] = k[b + 4 >> 2];
      k[e + 8 >> 2] = k[b + 8 >> 2];
      k[e + 12 >> 2] = k[b + 12 >> 2];
      k[d >> 2] = (k[d >> 2] | 0) + 16;
      return ;
    }
    function Td(a, b) {
      a = a | 0;
      b = b | 0;
      var c = 0;
      c = k[a + 16 >> 2] | 0;
      do
        if ((b | 0) > 0) {
          b = (k[c >> 2] | 0) + (b << 4) | 0;
          if (b >>> 0 >= (k[a + 8 >> 2] | 0) >>> 0) {
            a = -1;
            return a | 0;
          }
        } else {
          if ((b | 0) >= -1000999) {
            b = (k[a + 8 >> 2] | 0) + (b << 4) | 0;
            break;
          }
          if ((b | 0) == -1001e3) {
            b = (k[a + 12 >> 2] | 0) + 40 | 0;
            break;
          }
          a = -1001e3 - b | 0;
          b = k[c >> 2] | 0;
          if ((k[b + 8 >> 2] | 0) == 22) {
            a = -1;
            return a | 0;
          }
          b = k[b >> 2] | 0;
          if ((a | 0) > (l[b + 6 >> 0] | 0 | 0)) {
            a = -1;
            return a | 0;
          } else
            b = b + 16 + (a + -1 << 4) | 0;
        }
 while (0);
      if ((b | 0) == 80) {
        a = -1;
        return a | 0;
      }
      a = k[b + 8 >> 2] & 15;
      return a | 0;
    }
    function Ud(a, b) {
      a = a | 0;
      b = b | 0;
      return k[684 + (b + 1 << 2) >> 2] | 0;
    }
    function Vd(a, b) {
      a = a | 0;
      b = b | 0;
      var c = 0;
      c = k[a + 16 >> 2] | 0;
      do
        if ((b | 0) <= 0) {
          if ((b | 0) >= -1000999) {
            b = (k[a + 8 >> 2] | 0) + (b << 4) | 0;
            break;
          }
          if ((b | 0) == -1001e3) {
            b = (k[a + 12 >> 2] | 0) + 40 | 0;
            break;
          }
          a = -1001e3 - b | 0;
          b = k[c >> 2] | 0;
          if ((k[b + 8 >> 2] | 0) == 22)
            b = 80;
          else {
            b = k[b >> 2] | 0;
            b = (a | 0) > (l[b + 6 >> 0] | 0 | 0) ? 80 : b + 16 + (a + -1 << 4) | 0;
          }
        } else {
          b = (k[c >> 2] | 0) + (b << 4) | 0;
          b = b >>> 0 < (k[a + 8 >> 2] | 0) >>> 0 ? b : 80;
        }
 while (0);
      c = k[b + 8 >> 2] | 0;
      return ((c | 0) == 22 | (c | 0) == 102) & 1 | 0;
    }
    function Wd(a, b) {
      a = a | 0;
      b = b | 0;
      var c = 0;
      c = k[a + 16 >> 2] | 0;
      do
        if ((b | 0) <= 0) {
          if ((b | 0) >= -1000999) {
            b = (k[a + 8 >> 2] | 0) + (b << 4) | 0;
            break;
          }
          if ((b | 0) == -1001e3) {
            b = (k[a + 12 >> 2] | 0) + 40 | 0;
            break;
          }
          a = -1001e3 - b | 0;
          b = k[c >> 2] | 0;
          if ((k[b + 8 >> 2] | 0) == 22)
            b = 80;
          else {
            b = k[b >> 2] | 0;
            b = (a | 0) > (l[b + 6 >> 0] | 0 | 0) ? 80 : b + 16 + (a + -1 << 4) | 0;
          }
        } else {
          b = (k[c >> 2] | 0) + (b << 4) | 0;
          b = b >>> 0 < (k[a + 8 >> 2] | 0) >>> 0 ? b : 80;
        }
 while (0);
      return (k[b + 8 >> 2] | 0) == 19 | 0;
    }
    function Xd(a, b) {
      a = a | 0;
      b = b | 0;
      var c = 0,
          d = 0,
          e = 0;
      e = r;
      r = r + 16 | 0;
      d = e;
      c = k[a + 16 >> 2] | 0;
      do
        if ((b | 0) <= 0) {
          if ((b | 0) >= -1000999) {
            b = (k[a + 8 >> 2] | 0) + (b << 4) | 0;
            break;
          }
          if ((b | 0) == -1001e3) {
            b = (k[a + 12 >> 2] | 0) + 40 | 0;
            break;
          }
          a = -1001e3 - b | 0;
          b = k[c >> 2] | 0;
          if ((k[b + 8 >> 2] | 0) == 22)
            b = 80;
          else {
            b = k[b >> 2] | 0;
            b = (a | 0) > (l[b + 6 >> 0] | 0 | 0) ? 80 : b + 16 + (a + -1 << 4) | 0;
          }
        } else {
          b = (k[c >> 2] | 0) + (b << 4) | 0;
          b = b >>> 0 < (k[a + 8 >> 2] | 0) >>> 0 ? b : 80;
        }
 while (0);
      if ((k[b + 8 >> 2] | 0) == 3) {
        p[d >> 3] = +p[b >> 3];
        d = 1;
        r = e;
        return d | 0;
      } else {
        d = Eh(b, d) | 0;
        r = e;
        return d | 0;
      }
      return 0;
    }
    function Yd(a, b) {
      a = a | 0;
      b = b | 0;
      var c = 0;
      c = k[a + 16 >> 2] | 0;
      do
        if ((b | 0) <= 0) {
          if ((b | 0) >= -1000999) {
            b = (k[a + 8 >> 2] | 0) + (b << 4) | 0;
            break;
          }
          if ((b | 0) == -1001e3) {
            b = (k[a + 12 >> 2] | 0) + 40 | 0;
            break;
          }
          a = -1001e3 - b | 0;
          b = k[c >> 2] | 0;
          if ((k[b + 8 >> 2] | 0) == 22)
            b = 80;
          else {
            b = k[b >> 2] | 0;
            b = (a | 0) > (l[b + 6 >> 0] | 0 | 0) ? 80 : b + 16 + (a + -1 << 4) | 0;
          }
        } else {
          b = (k[c >> 2] | 0) + (b << 4) | 0;
          b = b >>> 0 < (k[a + 8 >> 2] | 0) >>> 0 ? b : 80;
        }
 while (0);
      return ((k[b + 8 >> 2] & 15) + -3 | 0) >>> 0 < 2 | 0;
    }
    function Zd(a, b, c) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      var d = 0,
          e = 0,
          f = 0;
      f = k[a + 16 >> 2] | 0;
      do
        if ((b | 0) <= 0) {
          if ((b | 0) >= -1000999) {
            e = (k[a + 8 >> 2] | 0) + (b << 4) | 0;
            break;
          }
          if ((b | 0) == -1001e3) {
            e = (k[a + 12 >> 2] | 0) + 40 | 0;
            break;
          }
          b = -1001e3 - b | 0;
          d = k[f >> 2] | 0;
          if ((k[d + 8 >> 2] | 0) == 22)
            e = 80;
          else {
            e = k[d >> 2] | 0;
            e = (b | 0) > (l[e + 6 >> 0] | 0 | 0) ? 80 : e + 16 + (b + -1 << 4) | 0;
          }
        } else {
          e = (k[f >> 2] | 0) + (b << 4) | 0;
          e = e >>> 0 < (k[a + 8 >> 2] | 0) >>> 0 ? e : 80;
        }
 while (0);
      do
        if ((c | 0) <= 0) {
          if ((c | 0) >= -1000999) {
            d = (k[a + 8 >> 2] | 0) + (c << 4) | 0;
            break;
          }
          if ((c | 0) == -1001e3) {
            d = (k[a + 12 >> 2] | 0) + 40 | 0;
            break;
          }
          b = -1001e3 - c | 0;
          d = k[f >> 2] | 0;
          if ((k[d + 8 >> 2] | 0) == 22) {
            f = 0;
            return f | 0;
          } else {
            d = k[d >> 2] | 0;
            d = (b | 0) > (l[d + 6 >> 0] | 0 | 0) ? 80 : d + 16 + (b + -1 << 4) | 0;
            break;
          }
        } else {
          d = (k[f >> 2] | 0) + (c << 4) | 0;
          d = d >>> 0 < (k[a + 8 >> 2] | 0) >>> 0 ? d : 80;
        }
 while (0);
      if (!((e | 0) != 80 & (d | 0) != 80)) {
        f = 0;
        return f | 0;
      }
      f = Kh(0, e, d) | 0;
      return f | 0;
    }
    function _d(a, b, c, d) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      d = d | 0;
      var e = 0,
          f = 0,
          g = 0;
      g = k[a + 16 >> 2] | 0;
      do
        if ((b | 0) <= 0) {
          if ((b | 0) >= -1000999) {
            f = (k[a + 8 >> 2] | 0) + (b << 4) | 0;
            break;
          }
          if ((b | 0) == -1001e3) {
            f = (k[a + 12 >> 2] | 0) + 40 | 0;
            break;
          }
          b = -1001e3 - b | 0;
          e = k[g >> 2] | 0;
          if ((k[e + 8 >> 2] | 0) == 22)
            f = 80;
          else {
            f = k[e >> 2] | 0;
            f = (b | 0) > (l[f + 6 >> 0] | 0 | 0) ? 80 : f + 16 + (b + -1 << 4) | 0;
          }
        } else {
          f = (k[g >> 2] | 0) + (b << 4) | 0;
          f = f >>> 0 < (k[a + 8 >> 2] | 0) >>> 0 ? f : 80;
        }
 while (0);
      do
        if ((c | 0) <= 0) {
          if ((c | 0) >= -1000999) {
            b = (k[a + 8 >> 2] | 0) + (c << 4) | 0;
            break;
          }
          if ((c | 0) == -1001e3) {
            b = (k[a + 12 >> 2] | 0) + 40 | 0;
            break;
          }
          e = -1001e3 - c | 0;
          b = k[g >> 2] | 0;
          if ((k[b + 8 >> 2] | 0) == 22) {
            d = 0;
            return d | 0;
          } else {
            b = k[b >> 2] | 0;
            b = (e | 0) > (l[b + 6 >> 0] | 0 | 0) ? 80 : b + 16 + (e + -1 << 4) | 0;
            break;
          }
        } else {
          b = (k[g >> 2] | 0) + (c << 4) | 0;
          b = b >>> 0 < (k[a + 8 >> 2] | 0) >>> 0 ? b : 80;
        }
 while (0);
      if (!((f | 0) != 80 & (b | 0) != 80)) {
        d = 0;
        return d | 0;
      }
      switch (d | 0) {
        case 0:
          {
            d = Kh(a, f, b) | 0;
            return d | 0;
          }
        case 1:
          {
            d = Ih(a, f, b) | 0;
            return d | 0;
          }
        case 2:
          {
            d = Jh(a, f, b) | 0;
            return d | 0;
          }
        default:
          {
            d = 0;
            return d | 0;
          }
      }
      return 0;
    }
    function $d(a, b) {
      a = a | 0;
      b = b | 0;
      var c = 0;
      c = a + 8 | 0;
      a = Qg(b, k[c >> 2] | 0) | 0;
      if (!a)
        return a | 0;
      k[c >> 2] = (k[c >> 2] | 0) + 16;
      return a | 0;
    }
    function ae(a, b, c) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      var d = 0,
          e = 0,
          f = 0,
          g = 0.0;
      f = r;
      r = r + 16 | 0;
      e = f;
      d = k[a + 16 >> 2] | 0;
      do
        if ((b | 0) <= 0) {
          if ((b | 0) >= -1000999) {
            b = (k[a + 8 >> 2] | 0) + (b << 4) | 0;
            break;
          }
          if ((b | 0) == -1001e3) {
            b = (k[a + 12 >> 2] | 0) + 40 | 0;
            break;
          }
          a = -1001e3 - b | 0;
          b = k[d >> 2] | 0;
          if ((k[b + 8 >> 2] | 0) == 22)
            b = 80;
          else {
            b = k[b >> 2] | 0;
            b = (a | 0) > (l[b + 6 >> 0] | 0 | 0) ? 80 : b + 16 + (a + -1 << 4) | 0;
          }
        } else {
          b = (k[d >> 2] | 0) + (b << 4) | 0;
          b = b >>> 0 < (k[a + 8 >> 2] | 0) >>> 0 ? b : 80;
        }
 while (0);
      if ((k[b + 8 >> 2] | 0) != 3) {
        b = Eh(b, e) | 0;
        if (!b) {
          p[e >> 3] = 0.0;
          b = 0;
        }
      } else {
        p[e >> 3] = +p[b >> 3];
        b = 1;
      }
      if (!c) {
        g = +p[e >> 3];
        r = f;
        return +g;
      }
      k[c >> 2] = b;
      g = +p[e >> 3];
      r = f;
      return +g;
    }
    function be(a, b, c) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      var d = 0,
          e = 0,
          f = 0;
      f = r;
      r = r + 16 | 0;
      e = f;
      d = k[a + 16 >> 2] | 0;
      do
        if ((b | 0) <= 0) {
          if ((b | 0) >= -1000999) {
            b = (k[a + 8 >> 2] | 0) + (b << 4) | 0;
            break;
          }
          if ((b | 0) == -1001e3) {
            b = (k[a + 12 >> 2] | 0) + 40 | 0;
            break;
          }
          a = -1001e3 - b | 0;
          b = k[d >> 2] | 0;
          if ((k[b + 8 >> 2] | 0) == 22)
            b = 80;
          else {
            b = k[b >> 2] | 0;
            b = (a | 0) > (l[b + 6 >> 0] | 0 | 0) ? 80 : b + 16 + (a + -1 << 4) | 0;
          }
        } else {
          b = (k[d >> 2] | 0) + (b << 4) | 0;
          b = b >>> 0 < (k[a + 8 >> 2] | 0) >>> 0 ? b : 80;
        }
 while (0);
      if ((k[b + 8 >> 2] | 0) != 19) {
        b = Fh(b, e) | 0;
        if (!b) {
          b = e;
          k[b >> 2] = 0;
          k[b + 4 >> 2] = 0;
          b = 0;
        }
      } else {
        a = b;
        d = k[a + 4 >> 2] | 0;
        b = e;
        k[b >> 2] = k[a >> 2];
        k[b + 4 >> 2] = d;
        b = 1;
      }
      if (!c) {
        c = e;
        e = c;
        e = k[e >> 2] | 0;
        c = c + 4 | 0;
        c = k[c >> 2] | 0;
        O = c;
        r = f;
        return e | 0;
      }
      k[c >> 2] = b;
      c = e;
      e = c;
      e = k[e >> 2] | 0;
      c = c + 4 | 0;
      c = k[c >> 2] | 0;
      O = c;
      r = f;
      return e | 0;
    }
    function ce(a, b) {
      a = a | 0;
      b = b | 0;
      var c = 0;
      c = k[a + 16 >> 2] | 0;
      do
        if ((b | 0) <= 0) {
          if ((b | 0) >= -1000999) {
            b = (k[a + 8 >> 2] | 0) + (b << 4) | 0;
            break;
          }
          if ((b | 0) == -1001e3) {
            b = (k[a + 12 >> 2] | 0) + 40 | 0;
            break;
          }
          a = -1001e3 - b | 0;
          b = k[c >> 2] | 0;
          if ((k[b + 8 >> 2] | 0) == 22)
            b = 80;
          else {
            b = k[b >> 2] | 0;
            b = (a | 0) > (l[b + 6 >> 0] | 0 | 0) ? 80 : b + 16 + (a + -1 << 4) | 0;
          }
        } else {
          b = (k[c >> 2] | 0) + (b << 4) | 0;
          b = b >>> 0 < (k[a + 8 >> 2] | 0) >>> 0 ? b : 80;
        }
 while (0);
      a = k[b + 8 >> 2] | 0;
      if (!a) {
        c = 0;
        c = c & 1;
        return c | 0;
      }
      if ((a | 0) != 1) {
        c = 1;
        c = c & 1;
        return c | 0;
      }
      c = (k[b >> 2] | 0) != 0;
      c = c & 1;
      return c | 0;
    }
    function de(a, b, c) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      var d = 0,
          e = 0,
          f = 0,
          g = 0,
          h = 0,
          i = 0;
      f = a + 16 | 0;
      g = k[f >> 2] | 0;
      i = (b | 0) > 0;
      do
        if (!i) {
          if ((b | 0) >= -1000999) {
            d = (k[a + 8 >> 2] | 0) + (b << 4) | 0;
            break;
          }
          if ((b | 0) == -1001e3) {
            d = (k[a + 12 >> 2] | 0) + 40 | 0;
            break;
          }
          e = -1001e3 - b | 0;
          d = k[g >> 2] | 0;
          if ((k[d + 8 >> 2] | 0) == 22)
            d = 80;
          else {
            d = k[d >> 2] | 0;
            d = (e | 0) > (l[d + 6 >> 0] | 0 | 0) ? 80 : d + 16 + (e + -1 << 4) | 0;
          }
        } else {
          d = (k[g >> 2] | 0) + (b << 4) | 0;
          d = d >>> 0 < (k[a + 8 >> 2] | 0) >>> 0 ? d : 80;
        }
 while (0);
      switch (k[d + 8 >> 2] & 15 | 0) {
        case 3:
          {
            h = 12;
            break;
          }
        case 4:
          break;
        default:
          {
            if (!c) {
              c = 0;
              return c | 0;
            }
            k[c >> 2] = 0;
            c = 0;
            return c | 0;
          }
      }
      if ((h | 0) == 12) {
        e = a + 12 | 0;
        if ((k[(k[e >> 2] | 0) + 12 >> 2] | 0) > 0) {
          zg(a);
          d = k[f >> 2] | 0;
        } else
          d = g;
        do
          if (!i) {
            if ((b | 0) >= -1000999) {
              d = (k[a + 8 >> 2] | 0) + (b << 4) | 0;
              break;
            }
            if ((b | 0) == -1001e3) {
              d = (k[e >> 2] | 0) + 40 | 0;
              break;
            }
            e = -1001e3 - b | 0;
            d = k[d >> 2] | 0;
            if ((k[d + 8 >> 2] | 0) == 22)
              d = 80;
            else {
              d = k[d >> 2] | 0;
              d = (e | 0) > (l[d + 6 >> 0] | 0 | 0) ? 80 : d + 16 + (e + -1 << 4) | 0;
            }
          } else {
            d = (k[d >> 2] | 0) + (b << 4) | 0;
            d = d >>> 0 < (k[a + 8 >> 2] | 0) >>> 0 ? d : 80;
          }
 while (0);
        Sg(a, d);
      }
      if (!c)
        d = k[d >> 2] | 0;
      else {
        d = k[d >> 2] | 0;
        k[c >> 2] = k[d + 12 >> 2];
      }
      c = d + 24 | 0;
      return c | 0;
    }
    function ee(a, b) {
      a = a | 0;
      b = b | 0;
      var c = 0;
      c = k[a + 16 >> 2] | 0;
      do
        if ((b | 0) <= 0) {
          if ((b | 0) >= -1000999) {
            b = (k[a + 8 >> 2] | 0) + (b << 4) | 0;
            break;
          }
          if ((b | 0) == -1001e3) {
            b = (k[a + 12 >> 2] | 0) + 40 | 0;
            break;
          }
          a = -1001e3 - b | 0;
          b = k[c >> 2] | 0;
          if ((k[b + 8 >> 2] | 0) == 22)
            b = 80;
          else {
            b = k[b >> 2] | 0;
            b = (a | 0) > (l[b + 6 >> 0] | 0 | 0) ? 80 : b + 16 + (a + -1 << 4) | 0;
          }
        } else {
          b = (k[c >> 2] | 0) + (b << 4) | 0;
          b = b >>> 0 < (k[a + 8 >> 2] | 0) >>> 0 ? b : 80;
        }
 while (0);
      switch (k[b + 8 >> 2] & 15 | 0) {
        case 5:
          {
            c = vh(k[b >> 2] | 0) | 0;
            return c | 0;
          }
        case 4:
          {
            c = k[(k[b >> 2] | 0) + 12 >> 2] | 0;
            return c | 0;
          }
        case 7:
          {
            c = k[(k[b >> 2] | 0) + 12 >> 2] | 0;
            return c | 0;
          }
        default:
          {
            c = 0;
            return c | 0;
          }
      }
      return 0;
    }
    function fe(a, b) {
      a = a | 0;
      b = b | 0;
      var c = 0;
      c = k[a + 16 >> 2] | 0;
      do
        if ((b | 0) <= 0) {
          if ((b | 0) >= -1000999) {
            b = (k[a + 8 >> 2] | 0) + (b << 4) | 0;
            break;
          }
          if ((b | 0) == -1001e3) {
            b = (k[a + 12 >> 2] | 0) + 40 | 0;
            break;
          }
          a = -1001e3 - b | 0;
          b = k[c >> 2] | 0;
          if ((k[b + 8 >> 2] | 0) == 22)
            b = 80;
          else {
            b = k[b >> 2] | 0;
            b = (a | 0) > (l[b + 6 >> 0] | 0 | 0) ? 80 : b + 16 + (a + -1 << 4) | 0;
          }
        } else {
          b = (k[c >> 2] | 0) + (b << 4) | 0;
          b = b >>> 0 < (k[a + 8 >> 2] | 0) >>> 0 ? b : 80;
        }
 while (0);
      switch (k[b + 8 >> 2] & 15 | 0) {
        case 2:
          {
            c = k[b >> 2] | 0;
            return c | 0;
          }
        case 7:
          {
            c = (k[b >> 2] | 0) + 24 | 0;
            return c | 0;
          }
        default:
          {
            c = 0;
            return c | 0;
          }
      }
      return 0;
    }
    function ge(a, b) {
      a = a | 0;
      b = b | 0;
      var c = 0;
      c = k[a + 16 >> 2] | 0;
      do
        if ((b | 0) <= 0) {
          if ((b | 0) >= -1000999) {
            b = (k[a + 8 >> 2] | 0) + (b << 4) | 0;
            break;
          }
          if ((b | 0) == -1001e3) {
            b = (k[a + 12 >> 2] | 0) + 40 | 0;
            break;
          }
          a = -1001e3 - b | 0;
          b = k[c >> 2] | 0;
          if ((k[b + 8 >> 2] | 0) == 22)
            b = 80;
          else {
            b = k[b >> 2] | 0;
            b = (a | 0) > (l[b + 6 >> 0] | 0 | 0) ? 80 : b + 16 + (a + -1 << 4) | 0;
          }
        } else {
          b = (k[c >> 2] | 0) + (b << 4) | 0;
          b = b >>> 0 < (k[a + 8 >> 2] | 0) >>> 0 ? b : 80;
        }
 while (0);
      if ((k[b + 8 >> 2] | 0) != 72) {
        c = 0;
        return c | 0;
      }
      c = k[b >> 2] | 0;
      return c | 0;
    }
    function he(a, b) {
      a = a | 0;
      b = b | 0;
      var c = 0,
          d = 0,
          e = 0,
          f = 0;
      f = k[a + 16 >> 2] | 0;
      e = (b | 0) > 0;
      do
        if (!e) {
          if ((b | 0) >= -1000999) {
            d = (k[a + 8 >> 2] | 0) + (b << 4) | 0;
            break;
          }
          if ((b | 0) == -1001e3) {
            d = (k[a + 12 >> 2] | 0) + 40 | 0;
            break;
          }
          d = -1001e3 - b | 0;
          c = k[f >> 2] | 0;
          if ((k[c + 8 >> 2] | 0) == 22)
            d = 80;
          else {
            c = k[c >> 2] | 0;
            d = (d | 0) > (l[c + 6 >> 0] | 0 | 0) ? 80 : c + 16 + (d + -1 << 4) | 0;
          }
        } else {
          d = (k[f >> 2] | 0) + (b << 4) | 0;
          d = d >>> 0 < (k[a + 8 >> 2] | 0) >>> 0 ? d : 80;
        }
 while (0);
      switch (k[d + 8 >> 2] & 63 | 0) {
        case 8:
          {
            f = k[d >> 2] | 0;
            return f | 0;
          }
        case 5:
          {
            f = k[d >> 2] | 0;
            return f | 0;
          }
        case 6:
          {
            f = k[d >> 2] | 0;
            return f | 0;
          }
        case 2:
        case 7:
          {
            do
              if (!e) {
                if ((b | 0) >= -1000999) {
                  c = (k[a + 8 >> 2] | 0) + (b << 4) | 0;
                  break;
                }
                if ((b | 0) == -1001e3) {
                  c = (k[a + 12 >> 2] | 0) + 40 | 0;
                  break;
                }
                d = -1001e3 - b | 0;
                c = k[f >> 2] | 0;
                if ((k[c + 8 >> 2] | 0) == 22)
                  c = 80;
                else {
                  c = k[c >> 2] | 0;
                  c = (d | 0) > (l[c + 6 >> 0] | 0 | 0) ? 80 : c + 16 + (d + -1 << 4) | 0;
                }
              } else {
                c = (k[f >> 2] | 0) + (b << 4) | 0;
                c = c >>> 0 < (k[a + 8 >> 2] | 0) >>> 0 ? c : 80;
              }
 while (0);
            switch (k[c + 8 >> 2] & 15 | 0) {
              case 7:
                {
                  f = (k[c >> 2] | 0) + 24 | 0;
                  return f | 0;
                }
              case 2:
                {
                  f = k[c >> 2] | 0;
                  return f | 0;
                }
              default:
                {
                  f = 0;
                  return f | 0;
                }
            }
          }
        case 22:
          {
            f = k[d >> 2] | 0;
            return f | 0;
          }
        case 38:
          {
            f = k[d >> 2] | 0;
            return f | 0;
          }
        default:
          {
            f = 0;
            return f | 0;
          }
      }
      return 0;
    }
    function ie(a) {
      a = a | 0;
      var b = 0;
      a = a + 8 | 0;
      b = k[a >> 2] | 0;
      k[b + 8 >> 2] = 0;
      k[a >> 2] = b + 16;
      return ;
    }
    function je(a, b) {
      a = a | 0;
      b = +b;
      var c = 0;
      a = a + 8 | 0;
      c = k[a >> 2] | 0;
      p[c >> 3] = b;
      k[c + 8 >> 2] = 3;
      k[a >> 2] = c + 16;
      return ;
    }
    function ke(a, b, c) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      var d = 0,
          e = 0;
      a = a + 8 | 0;
      d = k[a >> 2] | 0;
      e = d;
      k[e >> 2] = b;
      k[e + 4 >> 2] = c;
      k[d + 8 >> 2] = 19;
      k[a >> 2] = d + 16;
      return ;
    }
    function le(a, b, c) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      if ((k[(k[a + 12 >> 2] | 0) + 12 >> 2] | 0) > 0)
        zg(a);
      b = hh(a, b, c) | 0;
      c = a + 8 | 0;
      a = k[c >> 2] | 0;
      k[a >> 2] = b;
      k[a + 8 >> 2] = l[b + 4 >> 0] | 0 | 64;
      k[c >> 2] = (k[c >> 2] | 0) + 16;
      return b + 24 | 0;
    }
    function me(a, b) {
      a = a | 0;
      b = b | 0;
      var c = 0;
      if (!b) {
        b = a + 8 | 0;
        a = k[b >> 2] | 0;
        k[a + 8 >> 2] = 0;
        k[b >> 2] = a + 16;
        b = 0;
        return b | 0;
      }
      if ((k[(k[a + 12 >> 2] | 0) + 12 >> 2] | 0) > 0)
        zg(a);
      b = ih(a, b) | 0;
      a = a + 8 | 0;
      c = k[a >> 2] | 0;
      k[c >> 2] = b;
      k[c + 8 >> 2] = l[b + 4 >> 0] | 0 | 64;
      k[a >> 2] = (k[a >> 2] | 0) + 16;
      b = b + 24 | 0;
      return b | 0;
    }
    function ne(a, b, c) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      if ((k[(k[a + 12 >> 2] | 0) + 12 >> 2] | 0) > 0)
        zg(a);
      return Tg(a, b, c) | 0;
    }
    function oe(a, b, c) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      var d = 0,
          e = 0;
      e = r;
      r = r + 16 | 0;
      d = e;
      if ((k[(k[a + 12 >> 2] | 0) + 12 >> 2] | 0) > 0)
        zg(a);
      k[d >> 2] = c;
      c = Tg(a, b, d) | 0;
      r = e;
      return c | 0;
    }
    function pe(a, b, c) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      var d = 0,
          e = 0;
      if (!c) {
        e = a + 8 | 0;
        d = k[e >> 2] | 0;
        k[d >> 2] = b;
        k[d + 8 >> 2] = 22;
        d = k[e >> 2] | 0;
        d = d + 16 | 0;
        k[e >> 2] = d;
        return ;
      }
      if ((k[(k[a + 12 >> 2] | 0) + 12 >> 2] | 0) > 0)
        zg(a);
      e = jg(a, c) | 0;
      k[e + 12 >> 2] = b;
      d = a + 8 | 0;
      a = (k[d >> 2] | 0) + (0 - c << 4) | 0;
      k[d >> 2] = a;
      b = c;
      do {
        b = b + -1 | 0;
        c = e + 16 + (b << 4) | 0;
        a = a + (b << 4) | 0;
        k[c >> 2] = k[a >> 2];
        k[c + 4 >> 2] = k[a + 4 >> 2];
        k[c + 8 >> 2] = k[a + 8 >> 2];
        k[c + 12 >> 2] = k[a + 12 >> 2];
        a = k[d >> 2] | 0;
      } while ((b | 0) != 0);
      k[a >> 2] = e;
      k[a + 8 >> 2] = 102;
      e = d;
      d = k[e >> 2] | 0;
      d = d + 16 | 0;
      k[e >> 2] = d;
      return ;
    }
    function qe(a, b) {
      a = a | 0;
      b = b | 0;
      var c = 0;
      a = a + 8 | 0;
      c = k[a >> 2] | 0;
      k[c >> 2] = (b | 0) != 0 & 1;
      k[c + 8 >> 2] = 1;
      k[a >> 2] = c + 16;
      return ;
    }
    function re(a, b) {
      a = a | 0;
      b = b | 0;
      var c = 0;
      a = a + 8 | 0;
      c = k[a >> 2] | 0;
      k[c >> 2] = b;
      k[c + 8 >> 2] = 2;
      k[a >> 2] = (k[a >> 2] | 0) + 16;
      return ;
    }
    function se(a) {
      a = a | 0;
      var b = 0,
          c = 0;
      b = a + 8 | 0;
      c = k[b >> 2] | 0;
      k[c >> 2] = a;
      k[c + 8 >> 2] = 72;
      k[b >> 2] = (k[b >> 2] | 0) + 16;
      return (k[(k[a + 12 >> 2] | 0) + 136 >> 2] | 0) == (a | 0) | 0;
    }
    function te(a, b) {
      a = a | 0;
      b = b | 0;
      var c = 0,
          d = 0,
          e = 0;
      d = sh(k[(k[a + 12 >> 2] | 0) + 40 >> 2] | 0, 2, 0) | 0;
      c = a + 8 | 0;
      e = k[c >> 2] | 0;
      k[c >> 2] = e + 16;
      b = ih(a, b) | 0;
      k[e >> 2] = b;
      k[e + 8 >> 2] = l[b + 4 >> 0] | 0 | 64;
      b = (k[c >> 2] | 0) + -16 | 0;
      Gh(a, d, b, b);
      return k[(k[c >> 2] | 0) + -8 >> 2] & 15 | 0;
    }
    function ue(a, b) {
      a = a | 0;
      b = b | 0;
      var c = 0,
          d = 0;
      c = k[a + 16 >> 2] | 0;
      do
        if ((b | 0) <= 0) {
          if ((b | 0) >= -1000999) {
            b = (k[a + 8 >> 2] | 0) + (b << 4) | 0;
            break;
          }
          if ((b | 0) == -1001e3) {
            b = (k[a + 12 >> 2] | 0) + 40 | 0;
            break;
          }
          d = -1001e3 - b | 0;
          b = k[c >> 2] | 0;
          if ((k[b + 8 >> 2] | 0) == 22)
            b = 80;
          else {
            b = k[b >> 2] | 0;
            b = (d | 0) > (l[b + 6 >> 0] | 0 | 0) ? 80 : b + 16 + (d + -1 << 4) | 0;
          }
        } else {
          b = (k[c >> 2] | 0) + (b << 4) | 0;
          b = b >>> 0 < (k[a + 8 >> 2] | 0) >>> 0 ? b : 80;
        }
 while (0);
      d = a + 8 | 0;
      c = (k[d >> 2] | 0) + -16 | 0;
      Gh(a, b, c, c);
      return k[(k[d >> 2] | 0) + -8 >> 2] & 15 | 0;
    }
    function ve(a, b, c) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      var d = 0,
          e = 0;
      d = k[a + 16 >> 2] | 0;
      do
        if ((b | 0) <= 0) {
          if ((b | 0) >= -1000999) {
            b = (k[a + 8 >> 2] | 0) + (b << 4) | 0;
            break;
          }
          if ((b | 0) == -1001e3) {
            b = (k[a + 12 >> 2] | 0) + 40 | 0;
            break;
          }
          e = -1001e3 - b | 0;
          b = k[d >> 2] | 0;
          if ((k[b + 8 >> 2] | 0) == 22)
            b = 80;
          else {
            b = k[b >> 2] | 0;
            b = (e | 0) > (l[b + 6 >> 0] | 0 | 0) ? 80 : b + 16 + (e + -1 << 4) | 0;
          }
        } else {
          b = (k[d >> 2] | 0) + (b << 4) | 0;
          b = b >>> 0 < (k[a + 8 >> 2] | 0) >>> 0 ? b : 80;
        }
 while (0);
      e = a + 8 | 0;
      d = k[e >> 2] | 0;
      c = ih(a, c) | 0;
      k[d >> 2] = c;
      k[d + 8 >> 2] = l[c + 4 >> 0] | 0 | 64;
      c = k[e >> 2] | 0;
      k[e >> 2] = c + 16;
      Gh(a, b, c, c);
      return k[(k[e >> 2] | 0) + -8 >> 2] & 15 | 0;
    }
    function we(a, b, c, d) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      d = d | 0;
      var e = 0,
          f = 0,
          g = 0;
      f = k[a + 16 >> 2] | 0;
      do
        if ((b | 0) <= 0) {
          if ((b | 0) >= -1000999) {
            b = (k[a + 8 >> 2] | 0) + (b << 4) | 0;
            break;
          }
          if ((b | 0) == -1001e3) {
            b = (k[a + 12 >> 2] | 0) + 40 | 0;
            break;
          }
          e = -1001e3 - b | 0;
          b = k[f >> 2] | 0;
          if ((k[b + 8 >> 2] | 0) == 22)
            b = 80;
          else {
            b = k[b >> 2] | 0;
            b = (e | 0) > (l[b + 6 >> 0] | 0 | 0) ? 80 : b + 16 + (e + -1 << 4) | 0;
          }
        } else {
          b = (k[f >> 2] | 0) + (b << 4) | 0;
          b = b >>> 0 < (k[a + 8 >> 2] | 0) >>> 0 ? b : 80;
        }
 while (0);
      f = a + 8 | 0;
      e = k[f >> 2] | 0;
      g = e;
      k[g >> 2] = c;
      k[g + 4 >> 2] = d;
      k[e + 8 >> 2] = 19;
      k[f >> 2] = e + 16;
      Gh(a, b, e, e);
      return k[(k[f >> 2] | 0) + -8 >> 2] & 15 | 0;
    }
    function xe(a, b) {
      a = a | 0;
      b = b | 0;
      var c = 0,
          d = 0;
      c = k[a + 16 >> 2] | 0;
      do
        if ((b | 0) <= 0) {
          if ((b | 0) >= -1000999) {
            b = (k[a + 8 >> 2] | 0) + (b << 4) | 0;
            break;
          }
          if ((b | 0) == -1001e3) {
            b = (k[a + 12 >> 2] | 0) + 40 | 0;
            break;
          }
          d = -1001e3 - b | 0;
          b = k[c >> 2] | 0;
          if ((k[b + 8 >> 2] | 0) == 22)
            b = 80;
          else {
            b = k[b >> 2] | 0;
            b = (d | 0) > (l[b + 6 >> 0] | 0 | 0) ? 80 : b + 16 + (d + -1 << 4) | 0;
          }
        } else {
          b = (k[c >> 2] | 0) + (b << 4) | 0;
          b = b >>> 0 < (k[a + 8 >> 2] | 0) >>> 0 ? b : 80;
        }
 while (0);
      a = a + 8 | 0;
      d = (k[a >> 2] | 0) + -16 | 0;
      c = uh(k[b >> 2] | 0, d) | 0;
      k[d >> 2] = k[c >> 2];
      k[d + 4 >> 2] = k[c + 4 >> 2];
      k[d + 8 >> 2] = k[c + 8 >> 2];
      k[d + 12 >> 2] = k[c + 12 >> 2];
      return k[(k[a >> 2] | 0) + -8 >> 2] & 15 | 0;
    }
    function ye(a, b, c, d) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      d = d | 0;
      var e = 0,
          f = 0;
      f = k[a + 16 >> 2] | 0;
      do
        if ((b | 0) <= 0) {
          if ((b | 0) >= -1000999) {
            b = (k[a + 8 >> 2] | 0) + (b << 4) | 0;
            break;
          }
          if ((b | 0) == -1001e3) {
            b = (k[a + 12 >> 2] | 0) + 40 | 0;
            break;
          }
          e = -1001e3 - b | 0;
          b = k[f >> 2] | 0;
          if ((k[b + 8 >> 2] | 0) == 22)
            b = 80;
          else {
            b = k[b >> 2] | 0;
            b = (e | 0) > (l[b + 6 >> 0] | 0 | 0) ? 80 : b + 16 + (e + -1 << 4) | 0;
          }
        } else {
          b = (k[f >> 2] | 0) + (b << 4) | 0;
          b = b >>> 0 < (k[a + 8 >> 2] | 0) >>> 0 ? b : 80;
        }
 while (0);
      f = a + 8 | 0;
      a = k[f >> 2] | 0;
      d = sh(k[b >> 2] | 0, c, d) | 0;
      k[a >> 2] = k[d >> 2];
      k[a + 4 >> 2] = k[d + 4 >> 2];
      k[a + 8 >> 2] = k[d + 8 >> 2];
      k[a + 12 >> 2] = k[d + 12 >> 2];
      a = k[f >> 2] | 0;
      k[f >> 2] = a + 16;
      return k[a + 8 >> 2] & 15 | 0;
    }
    function ze(a, b, c) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      var d = 0,
          e = 0,
          f = 0,
          g = 0;
      g = r;
      r = r + 16 | 0;
      f = g;
      d = k[a + 16 >> 2] | 0;
      do
        if ((b | 0) <= 0) {
          if ((b | 0) >= -1000999) {
            b = (k[a + 8 >> 2] | 0) + (b << 4) | 0;
            break;
          }
          if ((b | 0) == -1001e3) {
            b = (k[a + 12 >> 2] | 0) + 40 | 0;
            break;
          }
          e = -1001e3 - b | 0;
          b = k[d >> 2] | 0;
          if ((k[b + 8 >> 2] | 0) == 22)
            b = 80;
          else {
            b = k[b >> 2] | 0;
            b = (e | 0) > (l[b + 6 >> 0] | 0 | 0) ? 80 : b + 16 + (e + -1 << 4) | 0;
          }
        } else {
          b = (k[d >> 2] | 0) + (b << 4) | 0;
          b = b >>> 0 < (k[a + 8 >> 2] | 0) >>> 0 ? b : 80;
        }
 while (0);
      k[f >> 2] = c;
      k[f + 8 >> 2] = 2;
      a = a + 8 | 0;
      c = k[a >> 2] | 0;
      f = uh(k[b >> 2] | 0, f) | 0;
      k[c >> 2] = k[f >> 2];
      k[c + 4 >> 2] = k[f + 4 >> 2];
      k[c + 8 >> 2] = k[f + 8 >> 2];
      k[c + 12 >> 2] = k[f + 12 >> 2];
      c = k[a >> 2] | 0;
      k[a >> 2] = c + 16;
      r = g;
      return k[c + 8 >> 2] & 15 | 0;
    }
    function Ae(a, b, c) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      var d = 0,
          e = 0,
          f = 0;
      if ((k[(k[a + 12 >> 2] | 0) + 12 >> 2] | 0) > 0)
        zg(a);
      d = ph(a) | 0;
      e = a + 8 | 0;
      f = k[e >> 2] | 0;
      k[f >> 2] = d;
      k[f + 8 >> 2] = 69;
      k[e >> 2] = (k[e >> 2] | 0) + 16;
      if (!((b | 0) > 0 | (c | 0) > 0))
        return ;
      lh(a, d, b, c);
      return ;
    }
    function Be(a, b) {
      a = a | 0;
      b = b | 0;
      var c = 0;
      c = k[a + 16 >> 2] | 0;
      do
        if ((b | 0) <= 0) {
          if ((b | 0) >= -1000999) {
            c = (k[a + 8 >> 2] | 0) + (b << 4) | 0;
            break;
          }
          if ((b | 0) == -1001e3) {
            c = (k[a + 12 >> 2] | 0) + 40 | 0;
            break;
          }
          b = -1001e3 - b | 0;
          c = k[c >> 2] | 0;
          if ((k[c + 8 >> 2] | 0) == 22)
            c = 80;
          else {
            c = k[c >> 2] | 0;
            c = (b | 0) > (l[c + 6 >> 0] | 0 | 0) ? 80 : c + 16 + (b + -1 << 4) | 0;
          }
        } else {
          c = (k[c >> 2] | 0) + (b << 4) | 0;
          c = c >>> 0 < (k[a + 8 >> 2] | 0) >>> 0 ? c : 80;
        }
 while (0);
      b = k[c + 8 >> 2] & 15;
      switch (b | 0) {
        case 5:
          {
            c = (k[c >> 2] | 0) + 24 | 0;
            break;
          }
        case 7:
          {
            c = (k[c >> 2] | 0) + 8 | 0;
            break;
          }
        default:
          c = (k[a + 12 >> 2] | 0) + 244 + (b << 2) | 0;
      }
      c = k[c >> 2] | 0;
      if (!c) {
        a = 0;
        return a | 0;
      }
      a = a + 8 | 0;
      b = k[a >> 2] | 0;
      k[b >> 2] = c;
      k[b + 8 >> 2] = 69;
      k[a >> 2] = (k[a >> 2] | 0) + 16;
      a = 1;
      return a | 0;
    }
    function Ce(a, b) {
      a = a | 0;
      b = b | 0;
      var c = 0,
          d = 0,
          e = 0,
          f = 0;
      c = k[a + 16 >> 2] | 0;
      do
        if ((b | 0) <= 0) {
          if ((b | 0) >= -1000999) {
            b = (k[a + 8 >> 2] | 0) + (b << 4) | 0;
            break;
          }
          if ((b | 0) == -1001e3) {
            b = (k[a + 12 >> 2] | 0) + 40 | 0;
            break;
          }
          d = -1001e3 - b | 0;
          b = k[c >> 2] | 0;
          if ((k[b + 8 >> 2] | 0) == 22)
            b = 80;
          else {
            b = k[b >> 2] | 0;
            b = (d | 0) > (l[b + 6 >> 0] | 0 | 0) ? 80 : b + 16 + (d + -1 << 4) | 0;
          }
        } else {
          b = (k[c >> 2] | 0) + (b << 4) | 0;
          b = b >>> 0 < (k[a + 8 >> 2] | 0) >>> 0 ? b : 80;
        }
 while (0);
      d = a + 8 | 0;
      a = k[d >> 2] | 0;
      c = k[b >> 2] | 0;
      f = c + 16 | 0;
      e = k[f + 4 >> 2] | 0;
      b = a;
      k[b >> 2] = k[f >> 2];
      k[b + 4 >> 2] = e;
      k[a + 8 >> 2] = l[c + 6 >> 0];
      a = k[d >> 2] | 0;
      k[d >> 2] = a + 16;
      return k[a + 8 >> 2] & 15 | 0;
    }
    function De(a, b) {
      a = a | 0;
      b = b | 0;
      var c = 0,
          d = 0,
          e = 0;
      d = sh(k[(k[a + 12 >> 2] | 0) + 40 >> 2] | 0, 2, 0) | 0;
      c = a + 8 | 0;
      e = k[c >> 2] | 0;
      k[c >> 2] = e + 16;
      b = ih(a, b) | 0;
      k[e >> 2] = b;
      k[e + 8 >> 2] = l[b + 4 >> 0] | 0 | 64;
      b = k[c >> 2] | 0;
      Hh(a, d, b + -16 | 0, b + -32 | 0);
      k[c >> 2] = (k[c >> 2] | 0) + -32;
      return ;
    }
    function Ee(a, b, c) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      var d = 0,
          e = 0;
      d = k[a + 16 >> 2] | 0;
      do
        if ((b | 0) <= 0) {
          if ((b | 0) >= -1000999) {
            b = (k[a + 8 >> 2] | 0) + (b << 4) | 0;
            break;
          }
          if ((b | 0) == -1001e3) {
            b = (k[a + 12 >> 2] | 0) + 40 | 0;
            break;
          }
          e = -1001e3 - b | 0;
          b = k[d >> 2] | 0;
          if ((k[b + 8 >> 2] | 0) == 22)
            b = 80;
          else {
            b = k[b >> 2] | 0;
            b = (e | 0) > (l[b + 6 >> 0] | 0 | 0) ? 80 : b + 16 + (e + -1 << 4) | 0;
          }
        } else {
          b = (k[d >> 2] | 0) + (b << 4) | 0;
          b = b >>> 0 < (k[a + 8 >> 2] | 0) >>> 0 ? b : 80;
        }
 while (0);
      e = a + 8 | 0;
      d = k[e >> 2] | 0;
      k[e >> 2] = d + 16;
      c = ih(a, c) | 0;
      k[d >> 2] = c;
      k[d + 8 >> 2] = l[c + 4 >> 0] | 0 | 64;
      c = k[e >> 2] | 0;
      Hh(a, b, c + -16 | 0, c + -32 | 0);
      k[e >> 2] = (k[e >> 2] | 0) + -32;
      return ;
    }
    function Fe(a, b, c, d) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      d = d | 0;
      var e = 0,
          f = 0,
          g = 0;
      f = k[a + 16 >> 2] | 0;
      do
        if ((b | 0) <= 0) {
          if ((b | 0) >= -1000999) {
            b = (k[a + 8 >> 2] | 0) + (b << 4) | 0;
            break;
          }
          if ((b | 0) == -1001e3) {
            b = (k[a + 12 >> 2] | 0) + 40 | 0;
            break;
          }
          e = -1001e3 - b | 0;
          b = k[f >> 2] | 0;
          if ((k[b + 8 >> 2] | 0) == 22)
            b = 80;
          else {
            b = k[b >> 2] | 0;
            b = (e | 0) > (l[b + 6 >> 0] | 0 | 0) ? 80 : b + 16 + (e + -1 << 4) | 0;
          }
        } else {
          b = (k[f >> 2] | 0) + (b << 4) | 0;
          b = b >>> 0 < (k[a + 8 >> 2] | 0) >>> 0 ? b : 80;
        }
 while (0);
      f = a + 8 | 0;
      e = k[f >> 2] | 0;
      k[f >> 2] = e + 16;
      g = e;
      k[g >> 2] = c;
      k[g + 4 >> 2] = d;
      k[e + 8 >> 2] = 19;
      Hh(a, b, e, e + -16 | 0);
      k[f >> 2] = (k[f >> 2] | 0) + -32;
      return ;
    }
    function Ge(a, b) {
      a = a | 0;
      b = b | 0;
      var c = 0,
          d = 0,
          e = 0;
      c = k[a + 16 >> 2] | 0;
      do
        if ((b | 0) <= 0) {
          if ((b | 0) >= -1000999) {
            b = (k[a + 8 >> 2] | 0) + (b << 4) | 0;
            break;
          }
          if ((b | 0) == -1001e3) {
            b = (k[a + 12 >> 2] | 0) + 40 | 0;
            break;
          }
          d = -1001e3 - b | 0;
          b = k[c >> 2] | 0;
          if ((k[b + 8 >> 2] | 0) == 22)
            b = 80;
          else {
            b = k[b >> 2] | 0;
            b = (d | 0) > (l[b + 6 >> 0] | 0 | 0) ? 80 : b + 16 + (d + -1 << 4) | 0;
          }
        } else {
          b = (k[c >> 2] | 0) + (b << 4) | 0;
          b = b >>> 0 < (k[a + 8 >> 2] | 0) >>> 0 ? b : 80;
        }
 while (0);
      d = k[b >> 2] | 0;
      c = a + 8 | 0;
      b = nh(a, d, (k[c >> 2] | 0) + -32 | 0) | 0;
      e = (k[c >> 2] | 0) + -16 | 0;
      k[b >> 2] = k[e >> 2];
      k[b + 4 >> 2] = k[e + 4 >> 2];
      k[b + 8 >> 2] = k[e + 8 >> 2];
      k[b + 12 >> 2] = k[e + 12 >> 2];
      i[d + 6 >> 0] = 0;
      b = k[c >> 2] | 0;
      if (!(k[b + -8 >> 2] & 64)) {
        e = b;
        e = e + -32 | 0;
        k[c >> 2] = e;
        return ;
      }
      if (!(i[d + 5 >> 0] & 4)) {
        e = b;
        e = e + -32 | 0;
        k[c >> 2] = e;
        return ;
      }
      if (!(i[(k[b + -16 >> 2] | 0) + 5 >> 0] & 3)) {
        e = b;
        e = e + -32 | 0;
        k[c >> 2] = e;
        return ;
      }
      sg(a, d);
      e = k[c >> 2] | 0;
      e = e + -32 | 0;
      k[c >> 2] = e;
      return ;
    }
    function He(a, b, c, d) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      d = d | 0;
      var e = 0,
          f = 0;
      f = k[a + 16 >> 2] | 0;
      do
        if ((b | 0) <= 0) {
          if ((b | 0) >= -1000999) {
            b = (k[a + 8 >> 2] | 0) + (b << 4) | 0;
            break;
          }
          if ((b | 0) == -1001e3) {
            b = (k[a + 12 >> 2] | 0) + 40 | 0;
            break;
          }
          e = -1001e3 - b | 0;
          b = k[f >> 2] | 0;
          if ((k[b + 8 >> 2] | 0) == 22)
            b = 80;
          else {
            b = k[b >> 2] | 0;
            b = (e | 0) > (l[b + 6 >> 0] | 0 | 0) ? 80 : b + 16 + (e + -1 << 4) | 0;
          }
        } else {
          b = (k[f >> 2] | 0) + (b << 4) | 0;
          b = b >>> 0 < (k[a + 8 >> 2] | 0) >>> 0 ? b : 80;
        }
 while (0);
      f = k[b >> 2] | 0;
      e = a + 8 | 0;
      mh(a, f, c, d, (k[e >> 2] | 0) + -16 | 0);
      b = k[e >> 2] | 0;
      if (!(k[b + -8 >> 2] & 64)) {
        a = b;
        a = a + -16 | 0;
        k[e >> 2] = a;
        return ;
      }
      if (!(i[f + 5 >> 0] & 4)) {
        a = b;
        a = a + -16 | 0;
        k[e >> 2] = a;
        return ;
      }
      if (!(i[(k[b + -16 >> 2] | 0) + 5 >> 0] & 3)) {
        a = b;
        a = a + -16 | 0;
        k[e >> 2] = a;
        return ;
      }
      sg(a, f);
      a = k[e >> 2] | 0;
      a = a + -16 | 0;
      k[e >> 2] = a;
      return ;
    }
    function Ie(a, b, c) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      var d = 0,
          e = 0,
          f = 0,
          g = 0;
      g = r;
      r = r + 16 | 0;
      f = g;
      d = k[a + 16 >> 2] | 0;
      do
        if ((b | 0) <= 0) {
          if ((b | 0) >= -1000999) {
            d = (k[a + 8 >> 2] | 0) + (b << 4) | 0;
            break;
          }
          if ((b | 0) == -1001e3) {
            d = (k[a + 12 >> 2] | 0) + 40 | 0;
            break;
          }
          e = -1001e3 - b | 0;
          b = k[d >> 2] | 0;
          if ((k[b + 8 >> 2] | 0) == 22)
            d = 80;
          else {
            d = k[b >> 2] | 0;
            d = (e | 0) > (l[d + 6 >> 0] | 0 | 0) ? 80 : d + 16 + (e + -1 << 4) | 0;
          }
        } else {
          d = (k[d >> 2] | 0) + (b << 4) | 0;
          d = d >>> 0 < (k[a + 8 >> 2] | 0) >>> 0 ? d : 80;
        }
 while (0);
      e = k[d >> 2] | 0;
      k[f >> 2] = c;
      k[f + 8 >> 2] = 2;
      b = nh(a, e, f) | 0;
      d = a + 8 | 0;
      c = (k[d >> 2] | 0) + -16 | 0;
      k[b >> 2] = k[c >> 2];
      k[b + 4 >> 2] = k[c + 4 >> 2];
      k[b + 8 >> 2] = k[c + 8 >> 2];
      k[b + 12 >> 2] = k[c + 12 >> 2];
      b = k[d >> 2] | 0;
      if (!(k[b + -8 >> 2] & 64)) {
        a = b;
        a = a + -16 | 0;
        k[d >> 2] = a;
        r = g;
        return ;
      }
      if (!(i[e + 5 >> 0] & 4)) {
        a = b;
        a = a + -16 | 0;
        k[d >> 2] = a;
        r = g;
        return ;
      }
      if (!(i[(k[b + -16 >> 2] | 0) + 5 >> 0] & 3)) {
        a = b;
        a = a + -16 | 0;
        k[d >> 2] = a;
        r = g;
        return ;
      }
      sg(a, e);
      a = k[d >> 2] | 0;
      a = a + -16 | 0;
      k[d >> 2] = a;
      r = g;
      return ;
    }
    function Je(a, b) {
      a = a | 0;
      b = b | 0;
      var c = 0,
          d = 0,
          e = 0;
      c = k[a + 16 >> 2] | 0;
      do
        if ((b | 0) <= 0) {
          if ((b | 0) >= -1000999) {
            c = (k[a + 8 >> 2] | 0) + (b << 4) | 0;
            break;
          }
          if ((b | 0) == -1001e3) {
            c = (k[a + 12 >> 2] | 0) + 40 | 0;
            break;
          }
          d = -1001e3 - b | 0;
          b = k[c >> 2] | 0;
          if ((k[b + 8 >> 2] | 0) == 22)
            c = 80;
          else {
            c = k[b >> 2] | 0;
            c = (d | 0) > (l[c + 6 >> 0] | 0 | 0) ? 80 : c + 16 + (d + -1 << 4) | 0;
          }
        } else {
          c = (k[c >> 2] | 0) + (b << 4) | 0;
          c = c >>> 0 < (k[a + 8 >> 2] | 0) >>> 0 ? c : 80;
        }
 while (0);
      e = a + 8 | 0;
      d = k[e >> 2] | 0;
      if (!(k[d + -8 >> 2] | 0))
        b = 0;
      else
        b = k[d + -16 >> 2] | 0;
      d = k[c + 8 >> 2] & 15;
      switch (d | 0) {
        case 7:
          {
            k[(k[c >> 2] | 0) + 8 >> 2] = b;
            if (!b) {
              a = k[e >> 2] | 0;
              a = a + -16 | 0;
              k[e >> 2] = a;
              return 1;
            }
            d = k[c >> 2] | 0;
            if ((i[d + 5 >> 0] & 4) != 0 ? (i[b + 5 >> 0] & 3) != 0 : 0) {
              rg(a, d, b);
              d = k[c >> 2] | 0;
            }
            xg(a, d, b);
            a = k[e >> 2] | 0;
            a = a + -16 | 0;
            k[e >> 2] = a;
            return 1;
          }
        case 5:
          {
            k[(k[c >> 2] | 0) + 24 >> 2] = b;
            if (!b) {
              a = k[e >> 2] | 0;
              a = a + -16 | 0;
              k[e >> 2] = a;
              return 1;
            }
            d = k[c >> 2] | 0;
            if ((i[d + 5 >> 0] & 4) != 0 ? (i[b + 5 >> 0] & 3) != 0 : 0) {
              rg(a, d, b);
              d = k[c >> 2] | 0;
            }
            xg(a, d, b);
            a = k[e >> 2] | 0;
            a = a + -16 | 0;
            k[e >> 2] = a;
            return 1;
          }
        default:
          {
            k[(k[a + 12 >> 2] | 0) + 244 + (d << 2) >> 2] = b;
            a = k[e >> 2] | 0;
            a = a + -16 | 0;
            k[e >> 2] = a;
            return 1;
          }
      }
      return 0;
    }
    function Ke(a, b) {
      a = a | 0;
      b = b | 0;
      var c = 0,
          d = 0,
          e = 0,
          f = 0,
          g = 0,
          h = 0;
      c = k[a + 16 >> 2] | 0;
      do
        if ((b | 0) <= 0) {
          if ((b | 0) >= -1000999) {
            b = (k[a + 8 >> 2] | 0) + (b << 4) | 0;
            break;
          }
          if ((b | 0) == -1001e3) {
            b = (k[a + 12 >> 2] | 0) + 40 | 0;
            break;
          }
          d = -1001e3 - b | 0;
          b = k[c >> 2] | 0;
          if ((k[b + 8 >> 2] | 0) == 22)
            b = 80;
          else {
            b = k[b >> 2] | 0;
            b = (d | 0) > (l[b + 6 >> 0] | 0 | 0) ? 80 : b + 16 + (d + -1 << 4) | 0;
          }
        } else {
          b = (k[c >> 2] | 0) + (b << 4) | 0;
          b = b >>> 0 < (k[a + 8 >> 2] | 0) >>> 0 ? b : 80;
        }
 while (0);
      e = a + 8 | 0;
      d = k[e >> 2] | 0;
      f = k[b >> 2] | 0;
      h = d + -16 | 0;
      g = k[h + 4 >> 2] | 0;
      c = f + 16 | 0;
      k[c >> 2] = k[h >> 2];
      k[c + 4 >> 2] = g;
      i[f + 6 >> 0] = k[d + -8 >> 2];
      f = k[e >> 2] | 0;
      if (!(k[f + -8 >> 2] & 64)) {
        h = f;
        h = h + -16 | 0;
        k[e >> 2] = h;
        return ;
      }
      d = k[b >> 2] | 0;
      if (!(i[d + 5 >> 0] & 4)) {
        h = f;
        h = h + -16 | 0;
        k[e >> 2] = h;
        return ;
      }
      c = k[f + -16 >> 2] | 0;
      if (!(i[c + 5 >> 0] & 3)) {
        h = f;
        h = h + -16 | 0;
        k[e >> 2] = h;
        return ;
      }
      rg(a, d, c);
      h = k[e >> 2] | 0;
      h = h + -16 | 0;
      k[e >> 2] = h;
      return ;
    }
    function Le(a, b, c, d, e) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      d = d | 0;
      e = e | 0;
      var f = 0,
          g = 0;
      f = a + 8 | 0;
      b = (k[f >> 2] | 0) + (~b << 4) | 0;
      if ((e | 0) != 0 ? (j[a + 104 >> 1] | 0) == 0 : 0) {
        g = k[a + 16 >> 2] | 0;
        k[g + 16 >> 2] = e;
        k[g + 24 >> 2] = d;
        cg(a, b, c, 1);
      } else
        cg(a, b, c, 0);
      if ((c | 0) != -1)
        return ;
      b = (k[a + 16 >> 2] | 0) + 4 | 0;
      a = k[f >> 2] | 0;
      if ((k[b >> 2] | 0) >>> 0 >= a >>> 0)
        return ;
      k[b >> 2] = a;
      return ;
    }
    function Me(a, b, c, d, e, f) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      d = d | 0;
      e = e | 0;
      f = f | 0;
      var g = 0,
          h = 0,
          m = 0,
          n = 0;
      n = r;
      r = r + 16 | 0;
      m = n;
      if (!d)
        h = 0;
      else {
        g = k[a + 16 >> 2] | 0;
        do
          if ((d | 0) <= 0) {
            if ((d | 0) >= -1000999) {
              d = (k[a + 8 >> 2] | 0) + (d << 4) | 0;
              break;
            }
            if ((d | 0) == -1001e3) {
              d = (k[a + 12 >> 2] | 0) + 40 | 0;
              break;
            }
            h = -1001e3 - d | 0;
            d = k[g >> 2] | 0;
            if ((k[d + 8 >> 2] | 0) == 22)
              d = 80;
            else {
              d = k[d >> 2] | 0;
              d = (h | 0) > (l[d + 6 >> 0] | 0) ? 80 : d + 16 + (h + -1 << 4) | 0;
            }
          } else {
            d = (k[g >> 2] | 0) + (d << 4) | 0;
            d = d >>> 0 < (k[a + 8 >> 2] | 0) >>> 0 ? d : 80;
          }
 while (0);
        h = d - (k[a + 28 >> 2] | 0) | 0;
      }
      g = a + 8 | 0;
      d = (k[g >> 2] | 0) + (~b << 4) | 0;
      k[m >> 2] = d;
      if ((f | 0) != 0 ? (j[a + 104 >> 1] | 0) == 0 : 0) {
        m = k[a + 16 >> 2] | 0;
        k[m + 16 >> 2] = f;
        k[m + 24 >> 2] = e;
        k[m + 28 >> 2] = d - (k[a + 28 >> 2] | 0);
        f = a + 88 | 0;
        e = m + 20 | 0;
        k[e >> 2] = k[f >> 2];
        k[f >> 2] = h;
        m = m + 34 | 0;
        i[m >> 0] = l[a + 109 >> 0] | l[m >> 0] & 238 | 16;
        cg(a, d, c, 1);
        i[m >> 0] = l[m >> 0] & 239;
        k[f >> 2] = k[e >> 2];
        d = 0;
      } else {
        k[m + 4 >> 2] = c;
        d = gg(a, 44, m, d - (k[a + 28 >> 2] | 0) | 0, h) | 0;
      }
      if ((c | 0) != -1) {
        r = n;
        return d | 0;
      }
      h = (k[a + 16 >> 2] | 0) + 4 | 0;
      g = k[g >> 2] | 0;
      if ((k[h >> 2] | 0) >>> 0 >= g >>> 0) {
        r = n;
        return d | 0;
      }
      k[h >> 2] = g;
      r = n;
      return d | 0;
    }
    function Ne(a, b, c, d, e) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      d = d | 0;
      e = e | 0;
      var f = 0,
          g = 0;
      f = r;
      r = r + 32 | 0;
      g = f;
      Th(a, g, b, c);
      d = hg(a, g, (d | 0) == 0 ? 1007823 : d, e) | 0;
      if (d) {
        r = f;
        return d | 0;
      }
      c = k[(k[a + 8 >> 2] | 0) + -16 >> 2] | 0;
      if (!(i[c + 6 >> 0] | 0)) {
        r = f;
        return d | 0;
      }
      b = sh(k[(k[a + 12 >> 2] | 0) + 40 >> 2] | 0, 2, 0) | 0;
      c = c + 16 | 0;
      g = k[k[c >> 2] >> 2] | 0;
      k[g >> 2] = k[b >> 2];
      k[g + 4 >> 2] = k[b + 4 >> 2];
      k[g + 8 >> 2] = k[b + 8 >> 2];
      k[g + 12 >> 2] = k[b + 12 >> 2];
      c = k[c >> 2] | 0;
      g = k[c >> 2] | 0;
      if (!((g | 0) == (c + 8 | 0) ? (k[g + 8 >> 2] & 64 | 0) != 0 : 0)) {
        r = f;
        return d | 0;
      }
      tg(a, c);
      r = f;
      return d | 0;
    }
    function Oe(a, b, c, d) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      d = d | 0;
      var e = 0;
      e = k[a + 8 >> 2] | 0;
      if ((k[e + -8 >> 2] | 0) != 70) {
        b = 1;
        return b | 0;
      }
      b = ig(a, k[(k[e + -16 >> 2] | 0) + 12 >> 2] | 0, b, c, d) | 0;
      return b | 0;
    }
    function Pe(a) {
      a = a | 0;
      return l[a + 6 >> 0] | 0 | 0;
    }
    function Qe(a, b, c) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      var d = 0,
          e = 0,
          f = 0,
          g = 0;
      f = a + 12 | 0;
      g = k[f >> 2] | 0;
      do
        switch (b | 0) {
          case 4:
            {
              a = (k[g + 12 >> 2] | 0) + (k[g + 8 >> 2] | 0) & 1023;
              return a | 0;
            }
          case 7:
            {
              g = g + 128 | 0;
              a = k[g >> 2] | 0;
              k[g >> 2] = (c | 0) < 40 ? 40 : c;
              return a | 0;
            }
          case 2:
            {
              Ag(a, 0);
              a = 0;
              return a | 0;
            }
          case 1:
            {
              Xg(g, 0);
              i[g + 63 >> 0] = 1;
              a = 0;
              return a | 0;
            }
          case 5:
            {
              d = g + 63 | 0;
              e = i[d >> 0] | 0;
              i[d >> 0] = 1;
              if (!c) {
                Xg(g, -2e3);
                zg(a);
                i[d >> 0] = e;
                a = g + 61 | 0;
                a = i[a >> 0] | 0;
                a = a << 24 >> 24 == 7;
                a = a & 1;
                return a | 0;
              }
              b = (k[g + 12 >> 2] | 0) + (c << 10) | 0;
              Xg(g, b);
              if ((k[(k[f >> 2] | 0) + 12 >> 2] | 0) > 0)
                zg(a);
              i[d >> 0] = e;
              if ((b | 0) > 0) {
                a = g + 61 | 0;
                a = i[a >> 0] | 0;
                a = a << 24 >> 24 == 7;
                a = a & 1;
                return a | 0;
              } else {
                a = 0;
                return a | 0;
              }
            }
          case 3:
            {
              a = ((k[g + 12 >> 2] | 0) + (k[g + 8 >> 2] | 0) | 0) >>> 10;
              return a | 0;
            }
          case 9:
            {
              a = l[g + 63 >> 0] | 0;
              return a | 0;
            }
          case 6:
            {
              g = g + 124 | 0;
              a = k[g >> 2] | 0;
              k[g >> 2] = c;
              return a | 0;
            }
          case 0:
            {
              i[g + 63 >> 0] = 0;
              a = 0;
              return a | 0;
            }
          default:
            {
              a = -1;
              return a | 0;
            }
        }
 while (0);
      return 0;
    }
    function Re(a) {
      a = a | 0;
      Uf(a);
      return 0;
    }
    function Se(a, b) {
      a = a | 0;
      b = b | 0;
      var c = 0,
          d = 0;
      c = k[a + 16 >> 2] | 0;
      do
        if ((b | 0) <= 0) {
          if ((b | 0) >= -1000999) {
            b = (k[a + 8 >> 2] | 0) + (b << 4) | 0;
            break;
          }
          if ((b | 0) == -1001e3) {
            b = (k[a + 12 >> 2] | 0) + 40 | 0;
            break;
          }
          d = -1001e3 - b | 0;
          b = k[c >> 2] | 0;
          if ((k[b + 8 >> 2] | 0) == 22)
            b = 80;
          else {
            b = k[b >> 2] | 0;
            b = (d | 0) > (l[b + 6 >> 0] | 0 | 0) ? 80 : b + 16 + (d + -1 << 4) | 0;
          }
        } else {
          b = (k[c >> 2] | 0) + (b << 4) | 0;
          b = b >>> 0 < (k[a + 8 >> 2] | 0) >>> 0 ? b : 80;
        }
 while (0);
      d = a + 8 | 0;
      a = kh(a, k[b >> 2] | 0, (k[d >> 2] | 0) + -16 | 0) | 0;
      c = k[d >> 2] | 0;
      k[d >> 2] = (a | 0) == 0 ? c + -16 | 0 : c + 16 | 0;
      return a | 0;
    }
    function Te(a, b) {
      a = a | 0;
      b = b | 0;
      var c = 0;
      if ((b | 0) > 1) {
        if ((k[(k[a + 12 >> 2] | 0) + 12 >> 2] | 0) > 0)
          zg(a);
        Lh(a, b);
        return ;
      } else {
        if (b)
          return ;
        b = a + 8 | 0;
        c = k[b >> 2] | 0;
        a = hh(a, 1008077, 0) | 0;
        k[c >> 2] = a;
        k[c + 8 >> 2] = l[a + 4 >> 0] | 0 | 64;
        k[b >> 2] = (k[b >> 2] | 0) + 16;
        return ;
      }
    }
    function Ue(a, b) {
      a = a | 0;
      b = b | 0;
      var c = 0,
          d = 0;
      c = k[a + 16 >> 2] | 0;
      do
        if ((b | 0) <= 0) {
          if ((b | 0) >= -1000999) {
            b = (k[a + 8 >> 2] | 0) + (b << 4) | 0;
            break;
          }
          if ((b | 0) == -1001e3) {
            b = (k[a + 12 >> 2] | 0) + 40 | 0;
            break;
          }
          d = -1001e3 - b | 0;
          b = k[c >> 2] | 0;
          if ((k[b + 8 >> 2] | 0) == 22)
            b = 80;
          else {
            b = k[b >> 2] | 0;
            b = (d | 0) > (l[b + 6 >> 0] | 0 | 0) ? 80 : b + 16 + (d + -1 << 4) | 0;
          }
        } else {
          b = (k[c >> 2] | 0) + (b << 4) | 0;
          b = b >>> 0 < (k[a + 8 >> 2] | 0) >>> 0 ? b : 80;
        }
 while (0);
      d = a + 8 | 0;
      Mh(a, k[d >> 2] | 0, b);
      k[d >> 2] = (k[d >> 2] | 0) + 16;
      return ;
    }
    function Ve(a, b) {
      a = a | 0;
      b = b | 0;
      var c = 0;
      if ((k[(k[a + 12 >> 2] | 0) + 12 >> 2] | 0) > 0)
        zg(a);
      b = jh(a, b) | 0;
      a = a + 8 | 0;
      c = k[a >> 2] | 0;
      k[c >> 2] = b;
      k[c + 8 >> 2] = 71;
      k[a >> 2] = (k[a >> 2] | 0) + 16;
      return b + 24 | 0;
    }
    function We(a, b, c) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      var d = 0,
          e = 0;
      d = k[a + 16 >> 2] | 0;
      do
        if ((b | 0) <= 0) {
          if ((b | 0) >= -1000999) {
            b = (k[a + 8 >> 2] | 0) + (b << 4) | 0;
            break;
          }
          if ((b | 0) == -1001e3) {
            b = (k[a + 12 >> 2] | 0) + 40 | 0;
            break;
          }
          e = -1001e3 - b | 0;
          b = k[d >> 2] | 0;
          if ((k[b + 8 >> 2] | 0) == 22)
            b = 80;
          else {
            b = k[b >> 2] | 0;
            b = (e | 0) > (l[b + 6 >> 0] | 0 | 0) ? 80 : b + 16 + (e + -1 << 4) | 0;
          }
        } else {
          b = (k[d >> 2] | 0) + (b << 4) | 0;
          b = b >>> 0 < (k[a + 8 >> 2] | 0) >>> 0 ? b : 80;
        }
 while (0);
      a: do
        switch (k[b + 8 >> 2] & 63 | 0) {
          case 38:
            {
              b = k[b >> 2] | 0;
              if ((c | 0) <= 0) {
                a = 0;
                return a | 0;
              }
              if ((l[b + 6 >> 0] | 0 | 0) < (c | 0)) {
                a = 0;
                return a | 0;
              } else {
                d = 1008077;
                b = b + 16 + (c + -1 << 4) | 0;
                break a;
              }
            }
          case 6:
            {
              e = k[b >> 2] | 0;
              b = k[e + 12 >> 2] | 0;
              if ((c | 0) <= 0) {
                a = 0;
                return a | 0;
              }
              if ((k[b + 12 >> 2] | 0) < (c | 0)) {
                a = 0;
                return a | 0;
              } else {
                c = c + -1 | 0;
                d = k[(k[b + 64 >> 2] | 0) + (c << 3) >> 2] | 0;
                d = (d | 0) == 0 ? 999300 : d + 24 | 0;
                b = k[k[e + 16 + (c << 2) >> 2] >> 2] | 0;
                break a;
              }
            }
          default:
            {
              a = 0;
              return a | 0;
            }
        }
 while (0);
      a = a + 8 | 0;
      c = k[a >> 2] | 0;
      e = b;
      k[c >> 2] = k[e >> 2];
      k[c + 4 >> 2] = k[e + 4 >> 2];
      k[c + 8 >> 2] = k[e + 8 >> 2];
      k[c + 12 >> 2] = k[e + 12 >> 2];
      k[a >> 2] = (k[a >> 2] | 0) + 16;
      a = d;
      return a | 0;
    }
    function Xe(a, b, c) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      var d = 0,
          e = 0,
          f = 0,
          g = 0;
      d = k[a + 16 >> 2] | 0;
      do
        if ((b | 0) <= 0) {
          if ((b | 0) >= -1000999) {
            d = (k[a + 8 >> 2] | 0) + (b << 4) | 0;
            break;
          }
          if ((b | 0) == -1001e3) {
            d = (k[a + 12 >> 2] | 0) + 40 | 0;
            break;
          }
          b = -1001e3 - b | 0;
          d = k[d >> 2] | 0;
          if ((k[d + 8 >> 2] | 0) == 22)
            d = 80;
          else {
            d = k[d >> 2] | 0;
            d = (b | 0) > (l[d + 6 >> 0] | 0 | 0) ? 80 : d + 16 + (b + -1 << 4) | 0;
          }
        } else {
          d = (k[d >> 2] | 0) + (b << 4) | 0;
          d = d >>> 0 < (k[a + 8 >> 2] | 0) >>> 0 ? d : 80;
        }
 while (0);
      a: do
        switch (k[d + 8 >> 2] & 63 | 0) {
          case 38:
            {
              b = k[d >> 2] | 0;
              if ((c | 0) <= 0) {
                a = 0;
                return a | 0;
              }
              if ((l[b + 6 >> 0] | 0 | 0) < (c | 0)) {
                a = 0;
                return a | 0;
              } else {
                f = 1008077;
                e = b + 16 + (c + -1 << 4) | 0;
                c = b;
                b = 0;
                break a;
              }
            }
          case 6:
            {
              d = k[d >> 2] | 0;
              b = k[d + 12 >> 2] | 0;
              if ((c | 0) <= 0) {
                a = 0;
                return a | 0;
              }
              if ((k[b + 12 >> 2] | 0) < (c | 0)) {
                a = 0;
                return a | 0;
              } else {
                f = c + -1 | 0;
                d = k[d + 16 + (f << 2) >> 2] | 0;
                f = k[(k[b + 64 >> 2] | 0) + (f << 3) >> 2] | 0;
                f = (f | 0) == 0 ? 999300 : f + 24 | 0;
                e = k[d >> 2] | 0;
                c = 0;
                b = d;
                break a;
              }
            }
          default:
            {
              a = 0;
              return a | 0;
            }
        }
 while (0);
      d = a + 8 | 0;
      g = (k[d >> 2] | 0) + -16 | 0;
      k[d >> 2] = g;
      k[e >> 2] = k[g >> 2];
      k[e + 4 >> 2] = k[g + 4 >> 2];
      k[e + 8 >> 2] = k[g + 8 >> 2];
      k[e + 12 >> 2] = k[g + 12 >> 2];
      if (!c) {
        if (!b) {
          g = f;
          return g | 0;
        }
        g = k[b >> 2] | 0;
        if (!((g | 0) == (b + 8 | 0) ? (k[g + 8 >> 2] & 64 | 0) != 0 : 0)) {
          g = f;
          return g | 0;
        }
        tg(a, b);
        g = f;
        return g | 0;
      }
      b = k[d >> 2] | 0;
      if (!(k[b + 8 >> 2] & 64)) {
        g = f;
        return g | 0;
      }
      if (!(i[c + 5 >> 0] & 4)) {
        g = f;
        return g | 0;
      }
      b = k[b >> 2] | 0;
      if (!(i[b + 5 >> 0] & 3)) {
        g = f;
        return g | 0;
      }
      rg(a, c, b);
      g = f;
      return g | 0;
    }
    function Ye(a, b, c) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      var d = 0,
          e = 0,
          f = 0,
          g = 0;
      g = k[a + 16 >> 2] | 0;
      f = (b | 0) > 0;
      do
        if (!f) {
          if ((b | 0) >= -1000999) {
            e = (k[a + 8 >> 2] | 0) + (b << 4) | 0;
            break;
          }
          if ((b | 0) == -1001e3) {
            e = (k[a + 12 >> 2] | 0) + 40 | 0;
            break;
          }
          e = -1001e3 - b | 0;
          d = k[g >> 2] | 0;
          if ((k[d + 8 >> 2] | 0) == 22)
            e = 80;
          else {
            d = k[d >> 2] | 0;
            e = (e | 0) > (l[d + 6 >> 0] | 0 | 0) ? 80 : d + 16 + (e + -1 << 4) | 0;
          }
        } else {
          e = (k[g >> 2] | 0) + (b << 4) | 0;
          e = e >>> 0 < (k[a + 8 >> 2] | 0) >>> 0 ? e : 80;
        }
 while (0);
      switch (k[e + 8 >> 2] & 63 | 0) {
        case 38:
          {
            c = (k[e >> 2] | 0) + 16 + (c + -1 << 4) | 0;
            return c | 0;
          }
        case 6:
          {
            do
              if (!f) {
                if ((b | 0) >= -1000999) {
                  d = (k[a + 8 >> 2] | 0) + (b << 4) | 0;
                  break;
                }
                if ((b | 0) == -1001e3) {
                  d = (k[a + 12 >> 2] | 0) + 40 | 0;
                  break;
                }
                e = -1001e3 - b | 0;
                d = k[g >> 2] | 0;
                if ((k[d + 8 >> 2] | 0) == 22)
                  d = 80;
                else {
                  d = k[d >> 2] | 0;
                  d = (e | 0) > (l[d + 6 >> 0] | 0 | 0) ? 80 : d + 16 + (e + -1 << 4) | 0;
                }
              } else {
                d = (k[g >> 2] | 0) + (b << 4) | 0;
                d = d >>> 0 < (k[a + 8 >> 2] | 0) >>> 0 ? d : 80;
              }
 while (0);
            c = k[(k[d >> 2] | 0) + 16 + (c + -1 << 2) >> 2] | 0;
            return c | 0;
          }
        default:
          {
            c = 0;
            return c | 0;
          }
      }
      return 0;
    }
    function Ze(a, b, c, d, e) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      d = d | 0;
      e = e | 0;
      var f = 0,
          g = 0;
      g = k[a + 16 >> 2] | 0;
      do
        if ((b | 0) <= 0) {
          if ((b | 0) >= -1000999) {
            b = (k[a + 8 >> 2] | 0) + (b << 4) | 0;
            break;
          }
          if ((b | 0) == -1001e3) {
            b = (k[a + 12 >> 2] | 0) + 40 | 0;
            break;
          }
          b = -1001e3 - b | 0;
          f = k[g >> 2] | 0;
          if ((k[f + 8 >> 2] | 0) == 22)
            b = 80;
          else {
            f = k[f >> 2] | 0;
            b = (b | 0) > (l[f + 6 >> 0] | 0 | 0) ? 80 : f + 16 + (b + -1 << 4) | 0;
          }
        } else {
          b = (k[g >> 2] | 0) + (b << 4) | 0;
          b = b >>> 0 < (k[a + 8 >> 2] | 0) >>> 0 ? b : 80;
        }
 while (0);
      c = (k[b >> 2] | 0) + 16 + (c + -1 << 2) | 0;
      do
        if ((d | 0) <= 0) {
          if ((d | 0) >= -1000999) {
            d = (k[a + 8 >> 2] | 0) + (d << 4) | 0;
            break;
          }
          if ((d | 0) == -1001e3) {
            d = (k[a + 12 >> 2] | 0) + 40 | 0;
            break;
          }
          b = -1001e3 - d | 0;
          f = k[g >> 2] | 0;
          if ((k[f + 8 >> 2] | 0) == 22)
            d = 80;
          else {
            d = k[f >> 2] | 0;
            d = (b | 0) > (l[d + 6 >> 0] | 0 | 0) ? 80 : d + 16 + (b + -1 << 4) | 0;
          }
        } else {
          d = (k[g >> 2] | 0) + (d << 4) | 0;
          d = d >>> 0 < (k[a + 8 >> 2] | 0) >>> 0 ? d : 80;
        }
 while (0);
      b = (k[d >> 2] | 0) + 16 + (e + -1 << 2) | 0;
      wg(a, k[c >> 2] | 0);
      b = k[b >> 2] | 0;
      k[c >> 2] = b;
      d = b + 4 | 0;
      k[d >> 2] = (k[d >> 2] | 0) + 1;
      d = k[b >> 2] | 0;
      f = b + 8 | 0;
      if ((d | 0) != (f | 0))
        k[f + 4 >> 2] = 1;
      if (!((d | 0) == (b + 8 | 0) ? (k[d + 8 >> 2] & 64 | 0) != 0 : 0))
        return ;
      tg(a, b);
      return ;
    }
    function _e(a, b, c) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      var d = 0,
          e = 0,
          f = 0,
          g = 0,
          h = 0,
          i = 0;
      f = c + b | 0;
      g = f + -1 | 0;
      d = k[a + 16 >> 2] | 0;
      do
        if ((d | 0) > (k[a + 20 >> 2] | 0) ? (h = (k[(k[a >> 2] | 0) + 48 >> 2] | 0) + (d + -1 << 2) | 0, i = k[h >> 2] | 0, (i & 63 | 0) == 4) : 0) {
          d = i >>> 6 & 255;
          e = d + (i >>> 23) | 0;
          if ((d | 0) > (b | 0) | (e + 1 | 0) < (b | 0) ? (d | 0) < (b | 0) | (d | 0) > (f | 0) : 0)
            break;
          c = (d | 0) < (b | 0) ? d : b;
          k[h >> 2] = ((e | 0) > (g | 0) ? e : g) - c << 23 | c << 6 & 16320 | i & 8372287;
          return ;
        }
 while (0);
      tk(a, b << 6 | (c << 23) + -8388608 | 4) | 0;
      return ;
    }
    function $e(a, b, c, d, e) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      d = d | 0;
      e = e | 0;
      return tk(a, c << 6 | b | d << 23 | e << 14) | 0;
    }
    function af(a) {
      a = a | 0;
      var b = 0,
          c = 0,
          d = 0,
          e = 0,
          f = 0,
          g = 0,
          h = 0;
      h = a + 24 | 0;
      g = k[h >> 2] | 0;
      k[h >> 2] = -1;
      h = tk(a, 2147450910) | 0;
      if ((g | 0) == -1) {
        a = h;
        return a | 0;
      }
      if ((h | 0) == -1) {
        a = g;
        return a | 0;
      }
      e = k[(k[a >> 2] | 0) + 48 >> 2] | 0;
      b = h;
      while (1) {
        d = e + (b << 2) | 0;
        f = k[d >> 2] | 0;
        c = (f >>> 14) + -131071 | 0;
        c = (c | 0) == -1 ? -1 : b + 1 + c | 0;
        if ((c | 0) == -1) {
          c = f;
          break;
        } else
          b = c;
      }
      b = g + ~b | 0;
      if ((((b | 0) > -1 ? b : 0 - b | 0) | 0) > 131071)
        Dg(k[a + 8 >> 2] | 0, 999311);
      k[d >> 2] = (b << 14) + 2147467264 | c & 16383;
      a = h;
      return a | 0;
    }
    function bf(a, b, c, d) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      d = d | 0;
      return tk(a, c << 6 | b | d << 14) | 0;
    }
    function cf(a, b, c) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      var d = 0,
          e = 0,
          f = 0,
          g = 0;
      if ((c | 0) == -1)
        return ;
      d = k[b >> 2] | 0;
      if ((d | 0) == -1) {
        k[b >> 2] = c;
        return ;
      }
      g = k[(k[a >> 2] | 0) + 48 >> 2] | 0;
      while (1) {
        f = g + (d << 2) | 0;
        e = k[f >> 2] | 0;
        b = (e >>> 14) + -131071 | 0;
        b = (b | 0) == -1 ? -1 : d + 1 + b | 0;
        if ((b | 0) == -1)
          break;
        else
          d = b;
      }
      b = ~d + c | 0;
      if ((((b | 0) > -1 ? b : 0 - b | 0) | 0) > 131071)
        Dg(k[a + 8 >> 2] | 0, 999311);
      k[f >> 2] = e & 16383 | (b << 14) + 2147467264;
      return ;
    }
    function df(a, b, c) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      tk(a, b << 6 | (c << 23) + 8388608 | 38) | 0;
      return ;
    }
    function ef(a) {
      a = a | 0;
      var b = 0;
      b = k[a + 16 >> 2] | 0;
      k[a + 20 >> 2] = b;
      return b | 0;
    }
    function ff(a, b, c) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      var d = 0,
          e = 0,
          f = 0,
          g = 0,
          h = 0,
          j = 0,
          l = 0,
          m = 0;
      if ((k[a + 16 >> 2] | 0) == (c | 0)) {
        k[a + 20 >> 2] = c;
        d = a + 24 | 0;
        if ((b | 0) == -1)
          return ;
        e = k[d >> 2] | 0;
        if ((e | 0) == -1) {
          k[d >> 2] = b;
          return ;
        }
        h = k[(k[a >> 2] | 0) + 48 >> 2] | 0;
        while (1) {
          g = h + (e << 2) | 0;
          f = k[g >> 2] | 0;
          d = (f >>> 14) + -131071 | 0;
          d = (d | 0) == -1 ? -1 : e + 1 + d | 0;
          if ((d | 0) == -1)
            break;
          else
            e = d;
        }
        d = ~e + b | 0;
        if ((((d | 0) > -1 ? d : 0 - d | 0) | 0) > 131071)
          Dg(k[a + 8 >> 2] | 0, 999311);
        k[g >> 2] = (d << 14) + 2147467264 | f & 16383;
        return ;
      }
      if ((b | 0) == -1)
        return ;
      m = k[(k[a >> 2] | 0) + 48 >> 2] | 0;
      d = b;
      while (1) {
        b = m + (d << 2) | 0;
        e = k[b >> 2] | 0;
        h = (e >>> 14) + -131071 | 0;
        g = d;
        d = (h | 0) == -1 ? -1 : d + 1 + h | 0;
        if ((g | 0) > 0 ? (j = m + (g + -1 << 2) | 0, l = k[j >> 2] | 0, (i[813619 + (l & 63) >> 0] | 0) < 0) : 0) {
          h = j;
          f = l;
        } else {
          h = b;
          f = e;
        }
        if ((f & 63 | 0) == 35) {
          k[h >> 2] = f & 8372224 | f >>> 23 << 6 | 34;
          g = ~g + c | 0;
          if ((((g | 0) > -1 ? g : 0 - g | 0) | 0) > 131071) {
            d = 17;
            break;
          }
          h = k[b >> 2] & 16383 | (g << 14) + 2147467264;
        } else {
          h = ~g + c | 0;
          if ((((h | 0) > -1 ? h : 0 - h | 0) | 0) > 131071) {
            d = 20;
            break;
          }
          h = e & 16383 | (h << 14) + 2147467264;
        }
        k[b >> 2] = h;
        if ((d | 0) == -1) {
          d = 23;
          break;
        }
      }
      if ((d | 0) == 17)
        Dg(k[a + 8 >> 2] | 0, 999311);
      else if ((d | 0) == 20)
        Dg(k[a + 8 >> 2] | 0, 999311);
      else if ((d | 0) == 23)
        return ;
    }
    function gf(a, b) {
      a = a | 0;
      b = b | 0;
      var c = 0,
          d = 0,
          e = 0,
          f = 0,
          g = 0;
      k[a + 20 >> 2] = k[a + 16 >> 2];
      c = a + 24 | 0;
      if ((b | 0) == -1)
        return ;
      d = k[c >> 2] | 0;
      if ((d | 0) == -1) {
        k[c >> 2] = b;
        return ;
      }
      g = k[(k[a >> 2] | 0) + 48 >> 2] | 0;
      while (1) {
        f = g + (d << 2) | 0;
        e = k[f >> 2] | 0;
        c = (e >>> 14) + -131071 | 0;
        c = (c | 0) == -1 ? -1 : d + 1 + c | 0;
        if ((c | 0) == -1)
          break;
        else
          d = c;
      }
      c = ~d + b | 0;
      if ((((c | 0) > -1 ? c : 0 - c | 0) | 0) > 131071)
        Dg(k[a + 8 >> 2] | 0, 999311);
      k[f >> 2] = (c << 14) + 2147467264 | e & 16383;
      return ;
    }
    function hf(a, b, c) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      var d = 0,
          e = 0,
          f = 0;
      if ((b | 0) == -1)
        return ;
      d = k[(k[a >> 2] | 0) + 48 >> 2] | 0;
      a = (c << 6) + 64 & 16320;
      do {
        e = d + (b << 2) | 0;
        f = k[e >> 2] | 0;
        c = (f >>> 14) + -131071 | 0;
        k[e >> 2] = f & -16321 | a;
        b = (c | 0) == -1 ? -1 : b + 1 + c | 0;
      } while ((b | 0) != -1);
      return ;
    }
    function jf(a, b, c) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      b = b << 6;
      if ((c | 0) < 262144) {
        c = tk(a, b | c << 14 | 1) | 0;
        return c | 0;
      } else {
        b = tk(a, b | 2) | 0;
        tk(a, c << 6 | 46) | 0;
        c = b;
        return c | 0;
      }
      return 0;
    }
    function kf(a, b) {
      a = a | 0;
      b = b | 0;
      var c = 0;
      b = (l[a + 44 >> 0] | 0) + b | 0;
      c = (k[a >> 2] | 0) + 8 | 0;
      if ((b | 0) <= (l[c >> 0] | 0 | 0))
        return ;
      if ((b | 0) > 249)
        Dg(k[a + 8 >> 2] | 0, 999338);
      i[c >> 0] = b;
      return ;
    }
    function lf(a, b) {
      a = a | 0;
      b = b | 0;
      var c = 0,
          d = 0;
      d = a + 44 | 0;
      b = (l[d >> 0] | 0) + b | 0;
      c = (k[a >> 2] | 0) + 8 | 0;
      if ((b | 0) <= (l[c >> 0] | 0 | 0)) {
        a = b & 255;
        i[d >> 0] = a;
        return ;
      }
      if ((b | 0) > 249)
        Dg(k[a + 8 >> 2] | 0, 999338);
      a = b & 255;
      i[c >> 0] = a;
      i[d >> 0] = a;
      return ;
    }
    function mf(a, b) {
      a = a | 0;
      b = b | 0;
      var c = 0,
          d = 0;
      c = r;
      r = r + 16 | 0;
      d = c;
      k[d >> 2] = b;
      k[d + 8 >> 2] = l[b + 4 >> 0] | 0 | 64;
      b = uk(a, d, d) | 0;
      r = c;
      return b | 0;
    }
    function nf(a, b, c) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      var d = 0,
          e = 0,
          f = 0,
          g = 0;
      d = r;
      r = r + 32 | 0;
      f = d + 16 | 0;
      e = d;
      k[f >> 2] = b;
      k[f + 8 >> 2] = 2;
      g = e;
      k[g >> 2] = b;
      k[g + 4 >> 2] = c;
      k[e + 8 >> 2] = 19;
      a = uk(a, f, e) | 0;
      r = d;
      return a | 0;
    }
    function of(a, b, c) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      var d = 0,
          e = 0,
          f = 0,
          g = 0;
      switch (k[b >> 2] | 0) {
        case 13:
          {
            a = (k[(k[a >> 2] | 0) + 48 >> 2] | 0) + (k[b + 8 >> 2] << 2) | 0;
            k[a >> 2] = k[a >> 2] & -8372225 | (c << 14) + 16384 & 8372224;
            return ;
          }
        case 14:
          {
            f = b + 8 | 0;
            d = k[a >> 2] | 0;
            b = k[d + 48 >> 2] | 0;
            g = b + (k[f >> 2] << 2) | 0;
            k[g >> 2] = k[g >> 2] & 8388607 | (c << 23) + 8388608;
            f = b + (k[f >> 2] << 2) | 0;
            c = a + 44 | 0;
            b = l[c >> 0] | 0;
            k[f >> 2] = b << 6 | k[f >> 2] & -16321;
            b = b + 1 | 0;
            d = d + 8 | 0;
            do
              if (b >>> 0 > (l[d >> 0] | 0) >>> 0)
                if (b >>> 0 > 249)
                  Dg(k[a + 8 >> 2] | 0, 999338);
                else {
                  e = b & 255;
                  i[d >> 0] = e;
                  break;
                }
              else
                e = b & 255;
 while (0);
            i[c >> 0] = e;
            return ;
          }
        default:
          return ;
      }
    }
    function pf(a, b) {
      a = a | 0;
      b = b | 0;
      switch (k[b >> 2] | 0) {
        case 13:
          {
            k[b >> 2] = 7;
            b = b + 8 | 0;
            k[b >> 2] = (k[(k[(k[a >> 2] | 0) + 48 >> 2] | 0) + (k[b >> 2] << 2) >> 2] | 0) >>> 6 & 255;
            return ;
          }
        case 14:
          {
            a = (k[(k[a >> 2] | 0) + 48 >> 2] | 0) + (k[b + 8 >> 2] << 2) | 0;
            k[a >> 2] = k[a >> 2] & 8388607 | 16777216;
            k[b >> 2] = 12;
            return ;
          }
        default:
          return ;
      }
    }
    function qf(a, b) {
      a = a | 0;
      b = b | 0;
      var c = 0,
          d = 0,
          e = 0,
          f = 0;
      switch (k[b >> 2] | 0) {
        case 13:
          {
            k[b >> 2] = 7;
            f = b + 8 | 0;
            k[f >> 2] = (k[(k[(k[a >> 2] | 0) + 48 >> 2] | 0) + (k[f >> 2] << 2) >> 2] | 0) >>> 6 & 255;
            return ;
          }
        case 9:
          {
            f = b + 8 | 0;
            a = tk(a, k[f >> 2] << 23 | 5) | 0;
            k[f >> 2] = a;
            k[b >> 2] = 12;
            return ;
          }
        case 10:
          {
            d = b + 8 | 0;
            e = j[d >> 1] | 0;
            if ((e & 256 | 0) == 0 ? (l[a + 42 >> 0] | 0) <= (e | 0) : 0) {
              f = a + 44 | 0;
              i[f >> 0] = (i[f >> 0] | 0) + -1 << 24 >> 24;
            }
            c = i[d + 2 >> 0] | 0;
            if ((i[d + 3 >> 0] | 0) == 8)
              if ((l[a + 42 >> 0] | 0) > (c & 255))
                f = 7;
              else {
                f = a + 44 | 0;
                i[f >> 0] = (i[f >> 0] | 0) + -1 << 24 >> 24;
                f = 7;
              }
            else
              f = 6;
            f = tk(a, (c & 255) << 23 | f | e << 14) | 0;
            k[d >> 2] = f;
            k[b >> 2] = 12;
            return ;
          }
        case 8:
          {
            k[b >> 2] = 7;
            return ;
          }
        case 14:
          {
            f = (k[(k[a >> 2] | 0) + 48 >> 2] | 0) + (k[b + 8 >> 2] << 2) | 0;
            k[f >> 2] = k[f >> 2] & 8388607 | 16777216;
            k[b >> 2] = 12;
            return ;
          }
        default:
          return ;
      }
    }
    function rf(a, b) {
      a = a | 0;
      b = b | 0;
      var c = 0,
          d = 0,
          e = 0;
      qf(a, b);
      if (((k[b >> 2] | 0) == 7 ? (c = k[b + 8 >> 2] | 0, (c & 256 | 0) == 0) : 0) ? (l[a + 42 >> 0] | 0 | 0) <= (c | 0) : 0) {
        e = a + 44 | 0;
        i[e >> 0] = (i[e >> 0] | 0) + -1 << 24 >> 24;
      }
      c = a + 44 | 0;
      d = (l[c >> 0] | 0) + 1 | 0;
      e = (k[a >> 2] | 0) + 8 | 0;
      if (d >>> 0 <= (l[e >> 0] | 0) >>> 0) {
        e = d & 255;
        i[c >> 0] = e;
        e = e & 255;
        e = e + -1 | 0;
        vk(a, b, e);
        return ;
      }
      if (d >>> 0 > 249)
        Dg(k[a + 8 >> 2] | 0, 999338);
      d = d & 255;
      i[e >> 0] = d;
      e = d;
      i[c >> 0] = e;
      e = e & 255;
      e = e + -1 | 0;
      vk(a, b, e);
      return ;
    }
    function sf(a, b) {
      a = a | 0;
      b = b | 0;
      var c = 0,
          d = 0,
          e = 0,
          f = 0;
      qf(a, b);
      if ((k[b >> 2] | 0) == 7) {
        e = b + 8 | 0;
        d = k[e >> 2] | 0;
        if ((k[b + 16 >> 2] | 0) == (k[b + 20 >> 2] | 0)) {
          a = d;
          return a | 0;
        }
        if ((d | 0) >= (l[a + 42 >> 0] | 0 | 0)) {
          vk(a, b, d);
          a = k[e >> 2] | 0;
          return a | 0;
        }
      }
      qf(a, b);
      if (((k[b >> 2] | 0) == 7 ? (c = k[b + 8 >> 2] | 0, (c & 256 | 0) == 0) : 0) ? (l[a + 42 >> 0] | 0 | 0) <= (c | 0) : 0) {
        e = a + 44 | 0;
        i[e >> 0] = (i[e >> 0] | 0) + -1 << 24 >> 24;
      }
      c = a + 44 | 0;
      d = (l[c >> 0] | 0) + 1 | 0;
      e = (k[a >> 2] | 0) + 8 | 0;
      do
        if (d >>> 0 > (l[e >> 0] | 0) >>> 0)
          if (d >>> 0 > 249)
            Dg(k[a + 8 >> 2] | 0, 999338);
          else {
            f = d & 255;
            i[e >> 0] = f;
            break;
          }
        else
          f = d & 255;
 while (0);
      i[c >> 0] = f;
      vk(a, b, (f & 255) + -1 | 0);
      a = k[b + 8 >> 2] | 0;
      return a | 0;
    }
    function tf(a, b) {
      a = a | 0;
      b = b | 0;
      if ((k[b >> 2] | 0) == 9 ? (k[b + 16 >> 2] | 0) == (k[b + 20 >> 2] | 0) : 0)
        return ;
      sf(a, b) | 0;
      return ;
    }
    function uf(a, b) {
      a = a | 0;
      b = b | 0;
      if ((k[b + 16 >> 2] | 0) == (k[b + 20 >> 2] | 0)) {
        qf(a, b);
        return ;
      } else {
        sf(a, b) | 0;
        return ;
      }
    }
    function vf(a, b) {
      a = a | 0;
      b = b | 0;
      var c = 0,
          d = 0,
          e = 0,
          f = 0,
          g = 0,
          h = 0,
          i = 0;
      h = r;
      r = r + 32 | 0;
      f = h + 16 | 0;
      e = h;
      if ((k[b + 16 >> 2] | 0) == (k[b + 20 >> 2] | 0))
        qf(a, b);
      else
        sf(a, b) | 0;
      d = k[b >> 2] | 0;
      switch (d | 0) {
        case 5:
          {
            g = b + 8 | 0;
            p[f >> 3] = +p[g >> 3];
            k[f + 8 >> 2] = 3;
            c = uk(a, f, f) | 0;
            k[g >> 2] = c;
            k[b >> 2] = 4;
            g = 13;
            break;
          }
        case 1:
        case 3:
        case 2:
          {
            if ((k[a + 28 >> 2] | 0) < 256) {
              if ((d | 0) == 1) {
                k[e + 8 >> 2] = 0;
                k[f >> 2] = k[(k[a + 8 >> 2] | 0) + 64 >> 2];
                k[f + 8 >> 2] = 69;
                c = uk(a, f, e) | 0;
              } else {
                k[f >> 2] = (d | 0) == 2 & 1;
                k[f + 8 >> 2] = 1;
                c = uk(a, f, f) | 0;
              }
              k[b + 8 >> 2] = c;
              k[b >> 2] = 4;
              b = c | 256;
              r = h;
              return b | 0;
            }
            break;
          }
        case 6:
          {
            g = b + 8 | 0;
            d = g;
            i = k[d >> 2] | 0;
            d = k[d + 4 >> 2] | 0;
            k[f >> 2] = i;
            k[f + 8 >> 2] = 2;
            c = e;
            k[c >> 2] = i;
            k[c + 4 >> 2] = d;
            k[e + 8 >> 2] = 19;
            c = uk(a, f, e) | 0;
            k[g >> 2] = c;
            k[b >> 2] = 4;
            g = 13;
            break;
          }
        case 4:
          {
            c = k[b + 8 >> 2] | 0;
            g = 13;
            break;
          }
        default:
          {}
      }
      if ((g | 0) == 13 ? (c | 0) < 256 : 0) {
        i = c | 256;
        r = h;
        return i | 0;
      }
      i = sf(a, b) | 0;
      r = h;
      return i | 0;
    }
    function wf(a, b, c) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      var d = 0;
      switch (k[b >> 2] | 0) {
        case 9:
          {
            tk(a, (sf(a, c) | 0) << 6 | k[b + 8 >> 2] << 23 | 9) | 0;
            break;
          }
        case 8:
          {
            if (((k[c >> 2] | 0) == 7 ? (d = k[c + 8 >> 2] | 0, (d & 256 | 0) == 0) : 0) ? (l[a + 42 >> 0] | 0) <= (d | 0) : 0) {
              d = a + 44 | 0;
              i[d >> 0] = (i[d >> 0] | 0) + -1 << 24 >> 24;
            }
            vk(a, c, k[b + 8 >> 2] | 0);
            return ;
          }
        case 10:
          {
            b = b + 8 | 0;
            d = (i[b + 3 >> 0] | 0) == 8 ? 10 : 8;
            tk(a, (vf(a, c) | 0) << 14 | d | l[b + 2 >> 0] << 6 | m[b >> 1] << 23) | 0;
            break;
          }
        default:
          {}
      }
      if ((k[c >> 2] | 0) != 7)
        return ;
      d = k[c + 8 >> 2] | 0;
      if (d & 256)
        return ;
      if ((l[a + 42 >> 0] | 0) > (d | 0))
        return ;
      a = a + 44 | 0;
      i[a >> 0] = (i[a >> 0] | 0) + -1 << 24 >> 24;
      return ;
    }
    function xf(a, b, c) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      var d = 0,
          e = 0,
          f = 0,
          g = 0,
          h = 0;
      sf(a, b) | 0;
      d = b + 8 | 0;
      f = k[d >> 2] | 0;
      if ((k[b >> 2] | 0) == 7 & (f & 256 | 0) == 0 ? (l[a + 42 >> 0] | 0 | 0) <= (f | 0) : 0) {
        h = a + 44 | 0;
        i[h >> 0] = (i[h >> 0] | 0) + -1 << 24 >> 24;
      }
      h = a + 44 | 0;
      g = l[h >> 0] | 0;
      k[d >> 2] = g;
      k[b >> 2] = 7;
      d = g + 2 | 0;
      b = (k[a >> 2] | 0) + 8 | 0;
      do
        if (d >>> 0 > (l[b >> 0] | 0) >>> 0)
          if (d >>> 0 > 249)
            Dg(k[a + 8 >> 2] | 0, 999338);
          else {
            e = d & 255;
            i[b >> 0] = e;
            break;
          }
        else
          e = d & 255;
 while (0);
      i[h >> 0] = e;
      tk(a, f << 23 | g << 6 | (vf(a, c) | 0) << 14 | 12) | 0;
      if ((k[c >> 2] | 0) != 7)
        return ;
      d = k[c + 8 >> 2] | 0;
      if (d & 256)
        return ;
      if ((l[a + 42 >> 0] | 0 | 0) > (d | 0))
        return ;
      i[h >> 0] = (i[h >> 0] | 0) + -1 << 24 >> 24;
      return ;
    }
    function yf(a, b) {
      a = a | 0;
      b = b | 0;
      var c = 0,
          d = 0,
          e = 0,
          f = 0,
          g = 0,
          h = 0,
          j = 0,
          m = 0,
          n = 0,
          o = 0;
      qf(a, b);
      g = k[b >> 2] | 0;
      a: do
        switch (g | 0) {
          case 11:
            {
              e = k[(k[a >> 2] | 0) + 48 >> 2] | 0;
              h = b + 8 | 0;
              f = k[h >> 2] | 0;
              g = e + (f << 2) | 0;
              if (!((f | 0) > 0 ? (d = e + (f + -1 << 2) | 0, c = k[d >> 2] | 0, (i[813619 + (c & 63) >> 0] | 0) < 0) : 0)) {
                d = g;
                c = k[g >> 2] | 0;
              }
              k[d >> 2] = ((c & 16320 | 0) == 0 & 1) << 6 | c & -16321;
              n = k[h >> 2] | 0;
              o = 32;
              break;
            }
          case 2:
          case 6:
          case 5:
          case 4:
            break;
          default:
            {
              h = b + 8 | 0;
              switch (g | 0) {
                case 12:
                  {
                    f = k[(k[(k[a >> 2] | 0) + 48 >> 2] | 0) + (k[h >> 2] << 2) >> 2] | 0;
                    if ((f & 63 | 0) == 27) {
                      c = a + 16 | 0;
                      k[c >> 2] = (k[c >> 2] | 0) + -1;
                      tk(a, f >>> 23 << 6 | 16418) | 0;
                      c = a + 24 | 0;
                      j = k[c >> 2] | 0;
                      k[c >> 2] = -1;
                      c = tk(a, 2147450910) | 0;
                      if ((j | 0) == -1) {
                        n = c;
                        o = 32;
                        break a;
                      }
                      if ((c | 0) == -1) {
                        o = 33;
                        break a;
                      }
                      d = k[(k[a >> 2] | 0) + 48 >> 2] | 0;
                      h = c;
                      while (1) {
                        e = d + (h << 2) | 0;
                        f = k[e >> 2] | 0;
                        g = (f >>> 14) + -131071 | 0;
                        g = (g | 0) == -1 ? -1 : h + 1 + g | 0;
                        if ((g | 0) == -1)
                          break;
                        else
                          h = g;
                      }
                      g = j + ~h | 0;
                      if ((((g | 0) > -1 ? g : 0 - g | 0) | 0) > 131071)
                        Dg(k[a + 8 >> 2] | 0, 999311);
                      else {
                        k[e >> 2] = (g << 14) + 2147467264 | f & 16383;
                        n = c;
                        o = 32;
                        break a;
                      }
                    } else
                      o = 15;
                    break;
                  }
                case 7:
                  {
                    o = 22;
                    break;
                  }
                default:
                  o = 15;
              }
              if ((o | 0) == 15) {
                g = a + 44 | 0;
                f = (l[g >> 0] | 0) + 1 | 0;
                e = (k[a >> 2] | 0) + 8 | 0;
                do
                  if (f >>> 0 > (l[e >> 0] | 0) >>> 0)
                    if (f >>> 0 > 249)
                      Dg(k[a + 8 >> 2] | 0, 999338);
                    else {
                      j = f & 255;
                      i[e >> 0] = j;
                      break;
                    }
                  else
                    j = f & 255;
 while (0);
                i[g >> 0] = j;
                wk(a, b, (j & 255) + -1 | 0);
                if ((k[b >> 2] | 0) == 7)
                  o = 22;
                else
                  m = k[h >> 2] | 0;
              }
              if ((o | 0) == 22) {
                c = k[h >> 2] | 0;
                if ((c & 256 | 0) == 0 ? (l[a + 42 >> 0] | 0) <= (c | 0) : 0) {
                  m = a + 44 | 0;
                  i[m >> 0] = (i[m >> 0] | 0) + -1 << 24 >> 24;
                  m = c;
                } else
                  m = c;
              }
              tk(a, m << 23 | 16355) | 0;
              c = a + 24 | 0;
              j = k[c >> 2] | 0;
              k[c >> 2] = -1;
              c = tk(a, 2147450910) | 0;
              if ((j | 0) != -1)
                if ((c | 0) != -1) {
                  e = k[(k[a >> 2] | 0) + 48 >> 2] | 0;
                  g = c;
                  while (1) {
                    f = e + (g << 2) | 0;
                    d = k[f >> 2] | 0;
                    h = (d >>> 14) + -131071 | 0;
                    h = (h | 0) == -1 ? -1 : g + 1 + h | 0;
                    if ((h | 0) == -1) {
                      e = f;
                      h = d;
                      break;
                    } else
                      g = h;
                  }
                  f = j + ~g | 0;
                  if ((((f | 0) > -1 ? f : 0 - f | 0) | 0) > 131071)
                    Dg(k[a + 8 >> 2] | 0, 999311);
                  else {
                    k[e >> 2] = (f << 14) + 2147467264 | h & 16383;
                    n = c;
                    o = 32;
                    break a;
                  }
                } else
                  o = 33;
              else {
                n = c;
                o = 32;
              }
            }
        }
 while (0);
      if ((o | 0) == 32 ? (n | 0) != -1 : 0) {
        j = n;
        o = 33;
      }
      do
        if ((o | 0) == 33) {
          c = b + 20 | 0;
          d = k[c >> 2] | 0;
          if ((d | 0) == -1) {
            k[c >> 2] = j;
            break;
          }
          g = k[(k[a >> 2] | 0) + 48 >> 2] | 0;
          while (1) {
            f = g + (d << 2) | 0;
            e = k[f >> 2] | 0;
            c = (e >>> 14) + -131071 | 0;
            c = (c | 0) == -1 ? -1 : d + 1 + c | 0;
            if ((c | 0) == -1)
              break;
            else
              d = c;
          }
          c = j + ~d | 0;
          if ((((c | 0) > -1 ? c : 0 - c | 0) | 0) > 131071)
            Dg(k[a + 8 >> 2] | 0, 999311);
          else {
            k[f >> 2] = (c << 14) + 2147467264 | e & 16383;
            break;
          }
        }
 while (0);
      j = b + 16 | 0;
      h = k[j >> 2] | 0;
      k[a + 20 >> 2] = k[a + 16 >> 2];
      c = a + 24 | 0;
      if ((h | 0) == -1) {
        k[j >> 2] = -1;
        return ;
      }
      d = k[c >> 2] | 0;
      if ((d | 0) == -1) {
        k[c >> 2] = h;
        k[j >> 2] = -1;
        return ;
      }
      g = k[(k[a >> 2] | 0) + 48 >> 2] | 0;
      while (1) {
        f = g + (d << 2) | 0;
        e = k[f >> 2] | 0;
        c = (e >>> 14) + -131071 | 0;
        c = (c | 0) == -1 ? -1 : d + 1 + c | 0;
        if ((c | 0) == -1)
          break;
        else
          d = c;
      }
      c = h + ~d | 0;
      if ((((c | 0) > -1 ? c : 0 - c | 0) | 0) > 131071)
        Dg(k[a + 8 >> 2] | 0, 999311);
      k[f >> 2] = (c << 14) + 2147467264 | e & 16383;
      k[j >> 2] = -1;
      return ;
    }
    function zf(a, b) {
      a = a | 0;
      b = b | 0;
      var c = 0,
          d = 0,
          e = 0,
          f = 0,
          g = 0,
          h = 0,
          j = 0,
          m = 0,
          n = 0,
          o = 0;
      qf(a, b);
      e = k[b >> 2] | 0;
      a: do
        switch (e | 0) {
          case 11:
            {
              n = k[b + 8 >> 2] | 0;
              o = 29;
              break;
            }
          case 3:
          case 1:
            break;
          default:
            {
              h = b + 8 | 0;
              switch (e | 0) {
                case 12:
                  {
                    f = k[(k[(k[a >> 2] | 0) + 48 >> 2] | 0) + (k[h >> 2] << 2) >> 2] | 0;
                    if ((f & 63 | 0) == 27) {
                      m = a + 16 | 0;
                      k[m >> 2] = (k[m >> 2] | 0) + -1;
                      tk(a, f >>> 23 << 6 | 34) | 0;
                      m = a + 24 | 0;
                      j = k[m >> 2] | 0;
                      k[m >> 2] = -1;
                      m = tk(a, 2147450910) | 0;
                      if ((j | 0) == -1) {
                        n = m;
                        o = 29;
                        break a;
                      }
                      if ((m | 0) == -1) {
                        o = 30;
                        break a;
                      }
                      h = k[(k[a >> 2] | 0) + 48 >> 2] | 0;
                      g = m;
                      while (1) {
                        d = h + (g << 2) | 0;
                        e = k[d >> 2] | 0;
                        f = (e >>> 14) + -131071 | 0;
                        f = (f | 0) == -1 ? -1 : g + 1 + f | 0;
                        if ((f | 0) == -1)
                          break;
                        else
                          g = f;
                      }
                      f = j + ~g | 0;
                      if ((((f | 0) > -1 ? f : 0 - f | 0) | 0) > 131071)
                        Dg(k[a + 8 >> 2] | 0, 999311);
                      else {
                        k[d >> 2] = (f << 14) + 2147467264 | e & 16383;
                        n = m;
                        o = 29;
                        break a;
                      }
                    } else
                      o = 12;
                    break;
                  }
                case 7:
                  {
                    o = 19;
                    break;
                  }
                default:
                  o = 12;
              }
              if ((o | 0) == 12) {
                f = a + 44 | 0;
                e = (l[f >> 0] | 0) + 1 | 0;
                d = (k[a >> 2] | 0) + 8 | 0;
                do
                  if (e >>> 0 > (l[d >> 0] | 0) >>> 0)
                    if (e >>> 0 > 249)
                      Dg(k[a + 8 >> 2] | 0, 999338);
                    else {
                      g = e & 255;
                      i[d >> 0] = g;
                      break;
                    }
                  else
                    g = e & 255;
 while (0);
                i[f >> 0] = g;
                wk(a, b, (g & 255) + -1 | 0);
                if ((k[b >> 2] | 0) == 7)
                  o = 19;
                else
                  c = k[h >> 2] | 0;
              }
              if ((o | 0) == 19) {
                c = k[h >> 2] | 0;
                if ((c & 256 | 0) == 0 ? (l[a + 42 >> 0] | 0 | 0) <= (c | 0) : 0) {
                  m = a + 44 | 0;
                  i[m >> 0] = (i[m >> 0] | 0) + -1 << 24 >> 24;
                }
              }
              tk(a, c << 23 | 32739) | 0;
              h = a + 24 | 0;
              j = k[h >> 2] | 0;
              k[h >> 2] = -1;
              h = tk(a, 2147450910) | 0;
              if ((j | 0) != -1)
                if ((h | 0) != -1) {
                  c = k[(k[a >> 2] | 0) + 48 >> 2] | 0;
                  g = h;
                  while (1) {
                    d = c + (g << 2) | 0;
                    e = k[d >> 2] | 0;
                    f = (e >>> 14) + -131071 | 0;
                    f = (f | 0) == -1 ? -1 : g + 1 + f | 0;
                    if ((f | 0) == -1)
                      break;
                    else
                      g = f;
                  }
                  f = j + ~g | 0;
                  if ((((f | 0) > -1 ? f : 0 - f | 0) | 0) > 131071)
                    Dg(k[a + 8 >> 2] | 0, 999311);
                  else {
                    k[d >> 2] = (f << 14) + 2147467264 | e & 16383;
                    n = h;
                    o = 29;
                    break a;
                  }
                } else
                  o = 30;
              else {
                n = h;
                o = 29;
              }
            }
        }
 while (0);
      if ((o | 0) == 29 ? (n | 0) != -1 : 0) {
        j = n;
        o = 30;
      }
      do
        if ((o | 0) == 30) {
          c = b + 16 | 0;
          d = k[c >> 2] | 0;
          if ((d | 0) == -1) {
            k[c >> 2] = j;
            break;
          }
          g = k[(k[a >> 2] | 0) + 48 >> 2] | 0;
          while (1) {
            f = g + (d << 2) | 0;
            e = k[f >> 2] | 0;
            c = (e >>> 14) + -131071 | 0;
            c = (c | 0) == -1 ? -1 : d + 1 + c | 0;
            if ((c | 0) == -1)
              break;
            else
              d = c;
          }
          c = j + ~d | 0;
          if ((((c | 0) > -1 ? c : 0 - c | 0) | 0) > 131071)
            Dg(k[a + 8 >> 2] | 0, 999311);
          else {
            k[f >> 2] = (c << 14) + 2147467264 | e & 16383;
            break;
          }
        }
 while (0);
      j = b + 20 | 0;
      h = k[j >> 2] | 0;
      k[a + 20 >> 2] = k[a + 16 >> 2];
      c = a + 24 | 0;
      if ((h | 0) == -1) {
        k[j >> 2] = -1;
        return ;
      }
      d = k[c >> 2] | 0;
      if ((d | 0) == -1) {
        k[c >> 2] = h;
        k[j >> 2] = -1;
        return ;
      }
      g = k[(k[a >> 2] | 0) + 48 >> 2] | 0;
      while (1) {
        f = g + (d << 2) | 0;
        e = k[f >> 2] | 0;
        c = (e >>> 14) + -131071 | 0;
        c = (c | 0) == -1 ? -1 : d + 1 + c | 0;
        if ((c | 0) == -1)
          break;
        else
          d = c;
      }
      c = h + ~d | 0;
      if ((((c | 0) > -1 ? c : 0 - c | 0) | 0) > 131071)
        Dg(k[a + 8 >> 2] | 0, 999311);
      k[f >> 2] = (c << 14) + 2147467264 | e & 16383;
      k[j >> 2] = -1;
      return ;
    }
    function Af(a, b, c) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      var d = 0;
      d = b + 8 | 0;
      i[d + 2 >> 0] = k[d >> 2];
      c = (vf(a, c) | 0) & 65535;
      j[d >> 1] = c;
      i[d + 3 >> 0] = (k[b >> 2] | 0) == 9 ? 9 : 8;
      k[b >> 2] = 10;
      return ;
    }
    function Bf(a, b, c, d) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      d = d | 0;
      var e = 0,
          f = 0,
          g = 0,
          h = 0,
          j = 0,
          m = 0,
          n = 0,
          o = 0,
          p = 0,
          q = 0,
          s = 0;
      q = r;
      r = r + 32 | 0;
      h = q;
      k[h + 20 >> 2] = -1;
      k[h + 16 >> 2] = -1;
      k[h >> 2] = 6;
      s = h + 8 | 0;
      k[s >> 2] = 0;
      k[s + 4 >> 2] = 0;
      switch (b | 0) {
        case 3:
        case 1:
        case 0:
          {
            xk(a, b + 25 | 0, c, h, d);
            r = q;
            return ;
          }
        case 2:
          {
            qf(a, c);
            switch (k[c >> 2] | 0) {
              case 11:
                {
                  b = k[(k[a >> 2] | 0) + 48 >> 2] | 0;
                  d = k[c + 8 >> 2] | 0;
                  e = b + (d << 2) | 0;
                  if (!((d | 0) > 0 ? (f = b + (d + -1 << 2) | 0, g = k[f >> 2] | 0, (i[813619 + (g & 63) >> 0] | 0) < 0) : 0)) {
                    f = e;
                    g = k[e >> 2] | 0;
                  }
                  k[f >> 2] = ((g & 16320 | 0) == 0 & 1) << 6 | g & -16321;
                  break;
                }
              case 2:
              case 6:
              case 5:
              case 4:
                {
                  k[c >> 2] = 3;
                  break;
                }
              case 3:
              case 1:
                {
                  k[c >> 2] = 2;
                  break;
                }
              case 12:
                {
                  g = a + 44 | 0;
                  f = (l[g >> 0] | 0) + 1 | 0;
                  d = (k[a >> 2] | 0) + 8 | 0;
                  do
                    if (f >>> 0 > (l[d >> 0] | 0) >>> 0)
                      if (f >>> 0 > 249)
                        Dg(k[a + 8 >> 2] | 0, 999338);
                      else {
                        e = f & 255;
                        i[d >> 0] = e;
                        break;
                      }
                    else
                      e = f & 255;
 while (0);
                  i[g >> 0] = e;
                  wk(a, c, (e & 255) + -1 | 0);
                  if ((k[c >> 2] | 0) == 7)
                    j = 17;
                  else {
                    g = c + 8 | 0;
                    f = g;
                    g = k[g >> 2] | 0;
                    j = 20;
                  }
                  break;
                }
              case 7:
                {
                  j = 17;
                  break;
                }
              default:
                {}
            }
            if ((j | 0) == 17) {
              f = c + 8 | 0;
              g = k[f >> 2] | 0;
              if ((g & 256 | 0) == 0 ? (l[a + 42 >> 0] | 0) <= (g | 0) : 0) {
                j = a + 44 | 0;
                i[j >> 0] = (i[j >> 0] | 0) + -1 << 24 >> 24;
                j = 20;
              } else
                j = 20;
            }
            if ((j | 0) == 20) {
              s = tk(a, g << 23 | 27) | 0;
              k[f >> 2] = s;
              k[c >> 2] = 12;
            }
            s = c + 20 | 0;
            e = k[s >> 2] | 0;
            h = c + 16 | 0;
            g = k[h >> 2] | 0;
            k[s >> 2] = g;
            k[h >> 2] = e;
            if ((g | 0) != -1) {
              e = k[(k[a >> 2] | 0) + 48 >> 2] | 0;
              do {
                d = e + (g << 2) | 0;
                if ((g | 0) > 0 ? (m = e + (g + -1 << 2) | 0, n = k[m >> 2] | 0, (i[813619 + (n & 63) >> 0] | 0) < 0) : 0) {
                  f = m;
                  b = n;
                } else {
                  f = d;
                  b = k[d >> 2] | 0;
                }
                if ((b & 63 | 0) == 35)
                  k[f >> 2] = b & 8372224 | b >>> 23 << 6 | 34;
                s = ((k[d >> 2] | 0) >>> 14) + -131071 | 0;
                g = (s | 0) == -1 ? -1 : g + 1 + s | 0;
              } while ((g | 0) != -1);
              e = k[h >> 2] | 0;
            }
            if ((e | 0) == -1) {
              r = q;
              return ;
            }
            g = k[(k[a >> 2] | 0) + 48 >> 2] | 0;
            do {
              d = g + (e << 2) | 0;
              if ((e | 0) > 0 ? (o = g + (e + -1 << 2) | 0, p = k[o >> 2] | 0, (i[813619 + (p & 63) >> 0] | 0) < 0) : 0) {
                b = o;
                f = p;
              } else {
                b = d;
                f = k[d >> 2] | 0;
              }
              if ((f & 63 | 0) == 35)
                k[b >> 2] = f & 8372224 | f >>> 23 << 6 | 34;
              s = ((k[d >> 2] | 0) >>> 14) + -131071 | 0;
              e = (s | 0) == -1 ? -1 : e + 1 + s | 0;
            } while ((e | 0) != -1);
            r = q;
            return ;
          }
        default:
          {
            r = q;
            return ;
          }
      }
    }
    function Cf(a, b, c) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      var d = 0,
          e = 0,
          f = 0;
      switch (b | 0) {
        case 11:
        case 10:
        case 9:
        case 8:
        case 7:
        case 4:
        case 3:
        case 6:
        case 5:
        case 2:
        case 1:
        case 0:
          {
            if (((k[c + 16 >> 2] | 0) == -1 ? (k[c + 20 >> 2] | 0) == -1 : 0) ? ((k[c >> 2] | 0) + -5 | 0) >>> 0 < 2 : 0)
              return ;
            vf(a, c) | 0;
            return ;
          }
        case 19:
          {
            yf(a, c);
            return ;
          }
        case 20:
          {
            zf(a, c);
            return ;
          }
        case 12:
          {
            qf(a, c);
            if (((k[c >> 2] | 0) == 7 ? (d = k[c + 8 >> 2] | 0, (d & 256 | 0) == 0) : 0) ? (l[a + 42 >> 0] | 0 | 0) <= (d | 0) : 0) {
              e = a + 44 | 0;
              i[e >> 0] = (i[e >> 0] | 0) + -1 << 24 >> 24;
            }
            b = a + 44 | 0;
            d = (l[b >> 0] | 0) + 1 | 0;
            e = (k[a >> 2] | 0) + 8 | 0;
            do
              if (d >>> 0 > (l[e >> 0] | 0) >>> 0)
                if (d >>> 0 > 249)
                  Dg(k[a + 8 >> 2] | 0, 999338);
                else {
                  f = d & 255;
                  i[e >> 0] = f;
                  break;
                }
              else
                f = d & 255;
 while (0);
            i[b >> 0] = f;
            vk(a, c, (f & 255) + -1 | 0);
            return ;
          }
        default:
          {
            vf(a, c) | 0;
            return ;
          }
      }
    }
    function Df(a, b, c, d, e) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      d = d | 0;
      e = e | 0;
      var f = 0,
          g = 0,
          h = 0,
          j = 0,
          m = 0,
          n = 0,
          o = 0;
      switch (b | 0) {
        case 19:
          {
            qf(a, d);
            f = d + 20 | 0;
            e = k[c + 20 >> 2] | 0;
            do
              if ((e | 0) != -1) {
                g = k[f >> 2] | 0;
                if ((g | 0) == -1) {
                  k[f >> 2] = e;
                  break;
                }
                b = k[(k[a >> 2] | 0) + 48 >> 2] | 0;
                while (1) {
                  f = b + (g << 2) | 0;
                  j = k[f >> 2] | 0;
                  h = (j >>> 14) + -131071 | 0;
                  h = (h | 0) == -1 ? -1 : g + 1 + h | 0;
                  if ((h | 0) == -1) {
                    b = f;
                    h = j;
                    break;
                  } else
                    g = h;
                }
                f = e + ~g | 0;
                if ((((f | 0) > -1 ? f : 0 - f | 0) | 0) > 131071)
                  Dg(k[a + 8 >> 2] | 0, 999311);
                else {
                  k[b >> 2] = (f << 14) + 2147467264 | h & 16383;
                  break;
                }
              }
 while (0);
            k[c >> 2] = k[d >> 2];
            k[c + 4 >> 2] = k[d + 4 >> 2];
            k[c + 8 >> 2] = k[d + 8 >> 2];
            k[c + 12 >> 2] = k[d + 12 >> 2];
            k[c + 16 >> 2] = k[d + 16 >> 2];
            k[c + 20 >> 2] = k[d + 20 >> 2];
            return ;
          }
        case 12:
          {
            if ((k[d + 16 >> 2] | 0) == (k[d + 20 >> 2] | 0))
              qf(a, d);
            else
              sf(a, d) | 0;
            if ((k[d >> 2] | 0) == 12 ? (h = d + 8 | 0, m = (k[(k[a >> 2] | 0) + 48 >> 2] | 0) + (k[h >> 2] << 2) | 0, n = k[m >> 2] | 0, (n & 63 | 0) == 29) : 0) {
              g = c + 8 | 0;
              f = k[g >> 2] | 0;
              if ((k[c >> 2] | 0) == 7 & (f & 256 | 0) == 0 ? (l[a + 42 >> 0] | 0 | 0) <= (f | 0) : 0) {
                a = a + 44 | 0;
                i[a >> 0] = (i[a >> 0] | 0) + -1 << 24 >> 24;
              }
              k[m >> 2] = f << 23 | n & 8388607;
              k[c >> 2] = 12;
              k[g >> 2] = k[h >> 2];
              return ;
            }
            qf(a, d);
            if (((k[d >> 2] | 0) == 7 ? (j = k[d + 8 >> 2] | 0, (j & 256 | 0) == 0) : 0) ? (l[a + 42 >> 0] | 0 | 0) <= (j | 0) : 0) {
              n = a + 44 | 0;
              i[n >> 0] = (i[n >> 0] | 0) + -1 << 24 >> 24;
            }
            g = a + 44 | 0;
            f = (l[g >> 0] | 0) + 1 | 0;
            h = (k[a >> 2] | 0) + 8 | 0;
            do
              if (f >>> 0 > (l[h >> 0] | 0) >>> 0)
                if (f >>> 0 > 249)
                  Dg(k[a + 8 >> 2] | 0, 999338);
                else {
                  o = f & 255;
                  i[h >> 0] = o;
                  break;
                }
              else
                o = f & 255;
 while (0);
            i[g >> 0] = o;
            vk(a, d, (o & 255) + -1 | 0);
            xk(a, 29, c, d, e);
            return ;
          }
        case 20:
          {
            qf(a, d);
            f = d + 16 | 0;
            e = k[c + 16 >> 2] | 0;
            do
              if ((e | 0) != -1) {
                g = k[f >> 2] | 0;
                if ((g | 0) == -1) {
                  k[f >> 2] = e;
                  break;
                }
                b = k[(k[a >> 2] | 0) + 48 >> 2] | 0;
                while (1) {
                  f = b + (g << 2) | 0;
                  j = k[f >> 2] | 0;
                  h = (j >>> 14) + -131071 | 0;
                  h = (h | 0) == -1 ? -1 : g + 1 + h | 0;
                  if ((h | 0) == -1) {
                    b = f;
                    h = j;
                    break;
                  } else
                    g = h;
                }
                f = e + ~g | 0;
                if ((((f | 0) > -1 ? f : 0 - f | 0) | 0) > 131071)
                  Dg(k[a + 8 >> 2] | 0, 999311);
                else {
                  k[b >> 2] = (f << 14) + 2147467264 | h & 16383;
                  break;
                }
              }
 while (0);
            k[c >> 2] = k[d >> 2];
            k[c + 4 >> 2] = k[d + 4 >> 2];
            k[c + 8 >> 2] = k[d + 8 >> 2];
            k[c + 12 >> 2] = k[d + 12 >> 2];
            k[c + 16 >> 2] = k[d + 16 >> 2];
            k[c + 20 >> 2] = k[d + 20 >> 2];
            return ;
          }
        case 11:
        case 10:
        case 9:
        case 8:
        case 7:
        case 4:
        case 3:
        case 6:
        case 5:
        case 2:
        case 1:
        case 0:
          {
            xk(a, b + 13 | 0, c, d, e);
            return ;
          }
        case 15:
        case 14:
        case 13:
          {
            yk(a, b + 18 | 0, 1, c, d);
            return ;
          }
        case 18:
        case 17:
        case 16:
          {
            yk(a, b + 15 | 0, 0, c, d);
            return ;
          }
        default:
          return ;
      }
    }
    function Ef(a, b) {
      a = a | 0;
      b = b | 0;
      k[(k[(k[a >> 2] | 0) + 56 >> 2] | 0) + ((k[a + 16 >> 2] | 0) + -1 << 2) >> 2] = b;
      return ;
    }
    function Ff(a, b, c, d) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      d = d | 0;
      var e = 0;
      e = ((c + -1 | 0) / 50 | 0) + 1 | 0;
      c = (d | 0) == -1 ? 0 : d;
      if ((e | 0) < 512) {
        tk(a, b << 6 | c << 23 | e << 14 | 43) | 0;
        b = b + 1 | 0;
        b = b & 255;
        a = a + 44 | 0;
        i[a >> 0] = b;
        return ;
      }
      if ((e | 0) >= 67108864)
        Dg(k[a + 8 >> 2] | 0, 999373);
      tk(a, b << 6 | c << 23 | 43) | 0;
      tk(a, e << 6 | 46) | 0;
      b = b + 1 | 0;
      b = b & 255;
      a = a + 44 | 0;
      i[a >> 0] = b;
      return ;
    }
    function Gf(a, b, c, d) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      d = d | 0;
      var e = 0,
          f = 0;
      f = (b | 0) == 0 | (c | 0) == 0;
      e = k[a + 16 >> 2] | 0;
      if (i[e + 34 >> 0] & 2)
        k[a + 20 >> 2] = k[e + 20 >> 2];
      k[a + 84 >> 2] = f ? 0 : b;
      k[a + 96 >> 2] = d;
      k[a + 100 >> 2] = d;
      i[a + 108 >> 0] = f ? 0 : c & 255;
      return ;
    }
    function Hf(a) {
      a = a | 0;
      return k[a + 84 >> 2] | 0;
    }
    function If(a) {
      a = a | 0;
      return l[a + 108 >> 0] | 0 | 0;
    }
    function Jf(a) {
      a = a | 0;
      return k[a + 96 >> 2] | 0;
    }
    function Kf(a, b, c) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      var d = 0,
          e = 0;
      if ((b | 0) < 0) {
        c = 0;
        return c | 0;
      }
      d = k[a + 16 >> 2] | 0;
      e = a + 48 | 0;
      if ((b | 0) > 0 & (d | 0) != (e | 0)) {
        a = d;
        while (1) {
          d = b + -1 | 0;
          a = k[a + 8 >> 2] | 0;
          if ((b | 0) > 1 & (a | 0) != (e | 0))
            b = d;
          else {
            b = d;
            break;
          }
        }
      } else
        a = d;
      if ((b | 0) != 0 | (a | 0) == (e | 0)) {
        c = 0;
        return c | 0;
      }
      k[c + 96 >> 2] = a;
      c = 1;
      return c | 0;
    }
    function Lf(a, b, c) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      var d = 0,
          e = 0,
          f = 0,
          g = 0;
      if (!b) {
        b = k[a + 8 >> 2] | 0;
        if ((k[b + -8 >> 2] | 0) != 70) {
          c = 0;
          return c | 0;
        }
        c = qg(k[(k[b + -16 >> 2] | 0) + 12 >> 2] | 0, c, 0) | 0;
        return c | 0;
      }
      f = k[b + 96 >> 2] | 0;
      do
        if (i[f + 34 >> 0] & 2) {
          if ((c | 0) >= 0) {
            b = k[f + 16 >> 2] | 0;
            d = k[(k[k[f >> 2] >> 2] | 0) + 12 >> 2] | 0;
            d = qg(d, c, ((k[f + 20 >> 2] | 0) - (k[d + 48 >> 2] | 0) >> 2) + -1 | 0) | 0;
            if (!d) {
              d = b;
              g = 10;
              break;
            } else {
              g = 14;
              break;
            }
          }
          b = k[f >> 2] | 0;
          e = l[(k[(k[b >> 2] | 0) + 12 >> 2] | 0) + 6 >> 0] | 0;
          if ((((k[f + 16 >> 2] | 0) - b >> 4) - e | 0) > (0 - c | 0)) {
            d = 999407;
            b = b + (e - c << 4) | 0;
            break;
          } else {
            c = 0;
            return c | 0;
          }
        } else {
          d = (k[f >> 2] | 0) + 16 | 0;
          g = 10;
        }
 while (0);
      if ((g | 0) == 10) {
        if ((k[a + 16 >> 2] | 0) == (f | 0))
          b = a + 8 | 0;
        else
          b = k[f + 12 >> 2] | 0;
        if ((c | 0) > 0 ? ((k[b >> 2] | 0) - d >> 4 | 0) >= (c | 0) : 0) {
          b = d;
          d = 999394;
          g = 14;
        } else {
          c = 0;
          return c | 0;
        }
      }
      if ((g | 0) == 14)
        b = b + (c + -1 << 4) | 0;
      c = a + 8 | 0;
      a = k[c >> 2] | 0;
      k[a >> 2] = k[b >> 2];
      k[a + 4 >> 2] = k[b + 4 >> 2];
      k[a + 8 >> 2] = k[b + 8 >> 2];
      k[a + 12 >> 2] = k[b + 12 >> 2];
      k[c >> 2] = (k[c >> 2] | 0) + 16;
      c = d;
      return c | 0;
    }
    function Mf(a, b, c) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      var d = 0,
          e = 0,
          f = 0,
          g = 0;
      f = k[b + 96 >> 2] | 0;
      do
        if (i[f + 34 >> 0] & 2) {
          if ((c | 0) >= 0) {
            b = k[f + 16 >> 2] | 0;
            d = k[(k[k[f >> 2] >> 2] | 0) + 12 >> 2] | 0;
            d = qg(d, c, ((k[f + 20 >> 2] | 0) - (k[d + 48 >> 2] | 0) >> 2) + -1 | 0) | 0;
            if (!d) {
              d = b;
              g = 7;
              break;
            } else {
              g = 11;
              break;
            }
          }
          e = k[f >> 2] | 0;
          b = l[(k[(k[e >> 2] | 0) + 12 >> 2] | 0) + 6 >> 0] | 0;
          if ((((k[f + 16 >> 2] | 0) - e >> 4) - b | 0) > (0 - c | 0)) {
            d = 999407;
            b = e + (b - c << 4) | 0;
            break;
          } else {
            a = 0;
            return a | 0;
          }
        } else {
          d = (k[f >> 2] | 0) + 16 | 0;
          g = 7;
        }
 while (0);
      if ((g | 0) == 7) {
        if ((k[a + 16 >> 2] | 0) == (f | 0))
          b = a + 8 | 0;
        else
          b = k[f + 12 >> 2] | 0;
        if ((c | 0) > 0 ? ((k[b >> 2] | 0) - d >> 4 | 0) >= (c | 0) : 0) {
          b = d;
          d = 999394;
          g = 11;
        } else {
          a = 0;
          return a | 0;
        }
      }
      if ((g | 0) == 11)
        b = b + (c + -1 << 4) | 0;
      a = a + 8 | 0;
      c = (k[a >> 2] | 0) + -16 | 0;
      k[b >> 2] = k[c >> 2];
      k[b + 4 >> 2] = k[c + 4 >> 2];
      k[b + 8 >> 2] = k[c + 8 >> 2];
      k[b + 12 >> 2] = k[c + 12 >> 2];
      k[a >> 2] = (k[a >> 2] | 0) + -16;
      a = d;
      return a | 0;
    }
    function Nf(a, b, c) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      var d = 0,
          e = 0,
          f = 0,
          g = 0,
          h = 0,
          j = 0,
          m = 0,
          n = 0,
          o = 0,
          p = 0,
          q = 0,
          s = 0,
          t = 0,
          u = 0,
          v = 0,
          w = 0,
          x = 0,
          y = 0,
          z = 0,
          A = 0,
          B = 0,
          C = 0,
          D = 0,
          E = 0,
          F = 0,
          G = 0,
          H = 0,
          I = 0,
          J = 0,
          K = 0,
          L = 0,
          M = 0,
          N = 0,
          O = 0,
          P = 0,
          Q = 0;
      Q = r;
      r = r + 16 | 0;
      P = Q;
      if ((i[b >> 0] | 0) == 62) {
        H = a + 8 | 0;
        N = (k[H >> 2] | 0) + -16 | 0;
        k[H >> 2] = N;
        b = b + 1 | 0;
        H = 0;
      } else {
        N = k[c + 96 >> 2] | 0;
        H = N;
        N = k[N >> 2] | 0;
      }
      if ((k[N + 8 >> 2] & 31 | 0) == 6)
        I = k[N >> 2] | 0;
      else
        I = 0;
      f = i[b >> 0] | 0;
      a: do
        if (!(f << 24 >> 24))
          c = 1;
        else {
          o = (I | 0) == 0;
          p = c + 16 | 0;
          q = c + 24 | 0;
          s = c + 28 | 0;
          t = c + 12 | 0;
          u = c + 36 | 0;
          v = I + 4 | 0;
          w = I + 12 | 0;
          x = (H | 0) == 0;
          y = c + 20 | 0;
          z = H + 34 | 0;
          A = H + 20 | 0;
          B = c + 32 | 0;
          C = c + 34 | 0;
          D = c + 33 | 0;
          E = I + 6 | 0;
          F = c + 35 | 0;
          G = c + 8 | 0;
          j = c + 4 | 0;
          m = H + 8 | 0;
          n = a + 12 | 0;
          h = b;
          c = 1;
          while (1) {
            b: do
              switch (f << 24 >> 24 | 0) {
                case 83:
                  {
                    if (!o ? (i[v >> 0] | 0) != 38 : 0) {
                      g = k[w >> 2] | 0;
                      f = k[g + 72 >> 2] | 0;
                      f = (f | 0) == 0 ? 999422 : f + 24 | 0;
                      k[p >> 2] = f;
                      e = k[g + 36 >> 2] | 0;
                      k[q >> 2] = e;
                      k[s >> 2] = k[g + 40 >> 2];
                      e = (e | 0) == 0 ? 999425 : 999430;
                    } else {
                      k[p >> 2] = 999417;
                      k[q >> 2] = -1;
                      k[s >> 2] = -1;
                      f = 999417;
                      e = 999434;
                    }
                    k[t >> 2] = e;
                    Vg(u, f, 60);
                    break;
                  }
                case 108:
                  {
                    if ((!x ? (i[z >> 0] & 2) != 0 : 0) ? (J = k[(k[k[H >> 2] >> 2] | 0) + 12 >> 2] | 0, K = k[J + 56 >> 2] | 0, (K | 0) != 0) : 0)
                      f = k[K + (((k[A >> 2] | 0) - (k[J + 48 >> 2] | 0) >> 2) + -1 << 2) >> 2] | 0;
                    else
                      f = -1;
                    k[y >> 2] = f;
                    break;
                  }
                case 116:
                  {
                    if (x)
                      f = 0;
                    else
                      f = l[z >> 0] & 32;
                    i[F >> 0] = f;
                    break;
                  }
                case 117:
                  {
                    if (!o) {
                      i[B >> 0] = i[E >> 0] | 0;
                      if ((i[v >> 0] | 0) != 38) {
                        g = k[w >> 2] | 0;
                        i[C >> 0] = i[g + 7 >> 0] | 0;
                        i[D >> 0] = i[g + 6 >> 0] | 0;
                        break b;
                      }
                    } else
                      i[B >> 0] = 0;
                    i[C >> 0] = 1;
                    i[D >> 0] = 0;
                    break;
                  }
                case 102:
                case 76:
                  break;
                case 110:
                  {
                    c: do
                      if ((!x ? (i[z >> 0] & 32) == 0 : 0) ? (L = k[m >> 2] | 0, M = i[L + 34 >> 0] | 0, (M & 2) != 0) : 0) {
                        f = k[(k[k[L >> 2] >> 2] | 0) + 12 >> 2] | 0;
                        d = k[f + 48 >> 2] | 0;
                        e = ((k[L + 20 >> 2] | 0) - d >> 2) + -1 | 0;
                        d = k[d + (e << 2) >> 2] | 0;
                        d: do
                          if (!(M & 4)) {
                            g = d & 63;
                            do
                              switch (g | 0) {
                                case 10:
                                case 8:
                                  {
                                    f = 1;
                                    break;
                                  }
                                case 24:
                                case 23:
                                case 22:
                                case 21:
                                case 20:
                                case 19:
                                case 18:
                                case 17:
                                case 16:
                                case 15:
                                case 14:
                                case 13:
                                  {
                                    f = g + -7 | 0;
                                    break;
                                  }
                                case 25:
                                  {
                                    f = 18;
                                    break;
                                  }
                                case 26:
                                  {
                                    f = 19;
                                    break;
                                  }
                                case 41:
                                  {
                                    k[j >> 2] = 999436;
                                    f = 999436;
                                    break d;
                                  }
                                case 28:
                                  {
                                    f = 4;
                                    break;
                                  }
                                case 29:
                                  {
                                    f = 22;
                                    break;
                                  }
                                case 31:
                                  {
                                    f = 5;
                                    break;
                                  }
                                case 32:
                                  {
                                    f = 20;
                                    break;
                                  }
                                case 33:
                                  {
                                    f = 21;
                                    break;
                                  }
                                case 37:
                                case 36:
                                  {
                                    g = zk(f, e, d >>> 6 & 255, j) | 0;
                                    k[G >> 2] = g;
                                    if (!g)
                                      break c;
                                    else
                                      break b;
                                  }
                                default:
                                  f = 0;
                              }
 while (0);
                            k[j >> 2] = (k[(k[n >> 2] | 0) + 148 + (f << 2) >> 2] | 0) + 24;
                            f = 999449;
                          } else {
                            k[j >> 2] = 1007823;
                            f = 999460;
                          }
 while (0);
                        k[G >> 2] = f;
                        break b;
                      } else
                        O = 44;
 while (0);
                    if ((O | 0) == 44) {
                      O = 0;
                      k[G >> 2] = 0;
                    }
                    k[G >> 2] = 1008077;
                    k[j >> 2] = 0;
                    break;
                  }
                default:
                  c = 0;
              }
 while (0);
            h = h + 1 | 0;
            f = i[h >> 0] | 0;
            if (!(f << 24 >> 24))
              break a;
          }
        }
 while (0);
      if (Op(b, 102) | 0) {
        O = a + 8 | 0;
        M = k[O >> 2] | 0;
        k[M >> 2] = k[N >> 2];
        k[M + 4 >> 2] = k[N + 4 >> 2];
        k[M + 8 >> 2] = k[N + 8 >> 2];
        k[M + 12 >> 2] = k[N + 12 >> 2];
        k[O >> 2] = (k[O >> 2] | 0) + 16;
      }
      if (!(Op(b, 76) | 0)) {
        r = Q;
        return c | 0;
      }
      if ((I | 0) != 0 ? (i[I + 4 >> 0] | 0) != 38 : 0) {
        d = I + 12 | 0;
        e = k[(k[d >> 2] | 0) + 56 >> 2] | 0;
        f = ph(a) | 0;
        O = a + 8 | 0;
        N = k[O >> 2] | 0;
        k[N >> 2] = f;
        k[N + 8 >> 2] = 69;
        k[O >> 2] = (k[O >> 2] | 0) + 16;
        k[P >> 2] = 1;
        k[P + 8 >> 2] = 1;
        if ((k[(k[d >> 2] | 0) + 24 >> 2] | 0) > 0) {
          b = 0;
          do {
            O = k[e + (b << 2) >> 2] | 0;
            mh(a, f, O, ((O | 0) < 0) << 31 >> 31, P);
            b = b + 1 | 0;
          } while ((b | 0) < (k[(k[d >> 2] | 0) + 24 >> 2] | 0));
        }
      } else {
        P = a + 8 | 0;
        a = k[P >> 2] | 0;
        k[a + 8 >> 2] = 0;
        k[P >> 2] = a + 16;
      }
      r = Q;
      return c | 0;
    }
    function Of(a, b, c) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      var d = 0,
          e = 0;
      d = r;
      r = r + 16 | 0;
      e = k[684 + ((k[b + 8 >> 2] & 15) + 1 << 2) >> 2] | 0;
      b = Ak(a, b) | 0;
      k[d >> 2] = c;
      k[d + 4 >> 2] = e;
      k[d + 8 >> 2] = b;
      Pf(a, 999465, d);
    }
    function Pf(a, b, c) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      var d = 0,
          e = 0,
          f = 0,
          g = 0;
      e = r;
      r = r + 96 | 0;
      g = e;
      f = e + 32 | 0;
      e = e + 16 | 0;
      k[e >> 2] = c;
      e = Tg(a, b, e) | 0;
      b = k[a + 16 >> 2] | 0;
      if (!(i[b + 34 >> 0] & 2))
        Uf(a);
      d = k[(k[k[b >> 2] >> 2] | 0) + 12 >> 2] | 0;
      c = k[d + 56 >> 2] | 0;
      if (!c)
        b = -1;
      else
        b = k[c + (((k[b + 20 >> 2] | 0) - (k[d + 48 >> 2] | 0) >> 2) + -1 << 2) >> 2] | 0;
      c = k[d + 72 >> 2] | 0;
      if (!c) {
        i[f >> 0] = 63;
        i[f + 1 >> 0] = 0;
      } else
        Vg(f, c + 24 | 0, 60);
      k[g >> 2] = f;
      k[g + 4 >> 2] = b;
      k[g + 8 >> 2] = e;
      Ug(a, 1012627, g) | 0;
      Uf(a);
    }
    function Qf(a, b, c) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      Of(a, ((k[b + 8 >> 2] & 15) + -3 | 0) >>> 0 < 2 ? c : b, 999492);
    }
    function Rf(a, b, c, d) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      d = d | 0;
      var e = 0;
      e = r;
      r = r + 16 | 0;
      if ((k[b + 8 >> 2] | 0) == 3) {
        p[e >> 3] = +p[b >> 3];
        e = c;
        Of(a, e, d);
      } else {
        e = (Eh(b, e) | 0) == 0;
        e = e ? b : c;
        Of(a, e, d);
      }
    }
    function Sf(a, b, c) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      var d = 0,
          e = 0,
          f = 0;
      d = r;
      r = r + 16 | 0;
      e = d + 8 | 0;
      if ((k[b + 8 >> 2] | 0) == 19) {
        f = b;
        b = k[f + 4 >> 2] | 0;
        k[d >> 2] = k[f >> 2];
        k[d + 4 >> 2] = b;
      } else {
        f = (Fh(b, d) | 0) == 0;
        c = f ? b : c;
      }
      f = Ak(a, c) | 0;
      k[e >> 2] = f;
      Pf(a, 999504, e);
    }
    function Tf(a, b, c) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      var d = 0,
          e = 0,
          f = 0;
      e = r;
      r = r + 16 | 0;
      f = e + 8 | 0;
      d = k[684 + ((k[b + 8 >> 2] & 15) + 1 << 2) >> 2] | 0;
      b = k[684 + ((k[c + 8 >> 2] & 15) + 1 << 2) >> 2] | 0;
      if ((d | 0) == (b | 0)) {
        k[e >> 2] = d;
        Pf(a, 999543, e);
      } else {
        k[f >> 2] = d;
        k[f + 4 >> 2] = b;
        Pf(a, 999576, f);
      }
    }
    function Uf(a) {
      a = a | 0;
      var b = 0,
          c = 0,
          d = 0,
          e = 0;
      b = k[a + 88 >> 2] | 0;
      if (!b)
        Wf(a, 2);
      d = (k[a + 28 >> 2] | 0) + b | 0;
      c = a + 8 | 0;
      b = k[c >> 2] | 0;
      e = b + -16 | 0;
      k[b >> 2] = k[e >> 2];
      k[b + 4 >> 2] = k[e + 4 >> 2];
      k[b + 8 >> 2] = k[e + 8 >> 2];
      k[b + 12 >> 2] = k[e + 12 >> 2];
      b = (k[c >> 2] | 0) + -16 | 0;
      k[b >> 2] = k[d >> 2];
      k[b + 4 >> 2] = k[d + 4 >> 2];
      k[b + 8 >> 2] = k[d + 8 >> 2];
      k[b + 12 >> 2] = k[d + 12 >> 2];
      b = k[c >> 2] | 0;
      k[c >> 2] = b + 16;
      cg(a, b + -16 | 0, 1, 0);
      Wf(a, 2);
    }
    function Vf(a) {
      a = a | 0;
      var b = 0,
          c = 0,
          d = 0,
          e = 0,
          f = 0,
          g = 0,
          h = 0,
          j = 0,
          m = 0,
          n = 0,
          o = 0;
      o = k[a + 16 >> 2] | 0;
      c = l[a + 108 >> 0] | 0;
      if ((c & 8 | 0) != 0 ? (b = a + 100 | 0, (k[b >> 2] | 0) == 0) : 0) {
        k[b >> 2] = k[a + 96 >> 2];
        n = 1;
      } else
        n = 0;
      m = o + 34 | 0;
      b = l[m >> 0] | 0;
      if (b & 64) {
        i[m >> 0] = b & 191;
        return ;
      }
      if (n)
        $f(a, 3, -1);
      do
        if (!(c & 4)) {
          b = o + 20 | 0;
          c = b;
        } else {
          e = k[(k[k[o >> 2] >> 2] | 0) + 12 >> 2] | 0;
          h = o + 20 | 0;
          c = k[h >> 2] | 0;
          b = k[e + 48 >> 2] | 0;
          d = (c - b >> 2) + -1 | 0;
          e = k[e + 56 >> 2] | 0;
          f = (e | 0) == 0;
          if (f)
            g = -1;
          else
            g = k[e + (d << 2) >> 2] | 0;
          if ((d | 0) != 0 ? (j = k[a + 20 >> 2] | 0, c >>> 0 > j >>> 0) : 0) {
            if (f)
              b = -1;
            else
              b = k[e + ((j - b >> 2) + -1 << 2) >> 2] | 0;
            if ((g | 0) == (b | 0)) {
              c = h;
              b = h;
              break;
            }
          }
          $f(a, 2, g);
          c = h;
          b = h;
        }
 while (0);
      b = k[b >> 2] | 0;
      k[a + 20 >> 2] = b;
      if ((i[a + 6 >> 0] | 0) != 1)
        return ;
      if (!n) {
        n = b + -4 | 0;
        k[c >> 2] = n;
        n = i[m >> 0] | 0;
        n = n & 255;
        n = n | 64;
        n = n & 255;
        i[m >> 0] = n;
        n = a + 8 | 0;
        n = k[n >> 2] | 0;
        n = n + -16 | 0;
        k[o >> 2] = n;
        Wf(a, 1);
      }
      k[a + 100 >> 2] = 1;
      n = b + -4 | 0;
      k[c >> 2] = n;
      n = i[m >> 0] | 0;
      n = n & 255;
      n = n | 64;
      n = n & 255;
      i[m >> 0] = n;
      n = a + 8 | 0;
      n = k[n >> 2] | 0;
      n = n + -16 | 0;
      k[o >> 2] = n;
      Wf(a, 1);
    }
    function Wf(a, b) {
      a = a | 0;
      b = b | 0;
      var c = 0,
          d = 0,
          e = 0,
          f = 0,
          g = 0;
      c = a + 44 | 0;
      d = k[c >> 2] | 0;
      if (d) {
        k[d + 160 >> 2] = b;
        Va((k[c >> 2] | 0) + 4 | 0, 1);
      }
      g = k[a + 12 >> 2] | 0;
      i[a + 6 >> 0] = b;
      d = g + 136 | 0;
      c = k[d >> 2] | 0;
      if (k[c + 44 >> 2] | 0) {
        e = c + 8 | 0;
        f = k[e >> 2] | 0;
        k[e >> 2] = f + 16;
        e = (k[a + 8 >> 2] | 0) + -16 | 0;
        k[f >> 2] = k[e >> 2];
        k[f + 4 >> 2] = k[e + 4 >> 2];
        k[f + 8 >> 2] = k[e + 8 >> 2];
        k[f + 12 >> 2] = k[e + 12 >> 2];
        Wf(k[d >> 2] | 0, b);
      }
      f = g + 132 | 0;
      if (!(k[f >> 2] | 0))
        rc();
      e = a + 8 | 0;
      d = k[e >> 2] | 0;
      switch (b | 0) {
        case 6:
          {
            b = hh(a, 999606, 23) | 0;
            k[d >> 2] = b;
            k[d + 8 >> 2] = l[b + 4 >> 0] | 0 | 64;
            break;
          }
        case 4:
          {
            b = k[g + 144 >> 2] | 0;
            k[d >> 2] = b;
            k[d + 8 >> 2] = l[b + 4 >> 0] | 0 | 64;
            break;
          }
        default:
          {
            b = d + -16 | 0;
            k[d >> 2] = k[b >> 2];
            k[d + 4 >> 2] = k[b + 4 >> 2];
            k[d + 8 >> 2] = k[b + 8 >> 2];
            k[d + 12 >> 2] = k[b + 12 >> 2];
          }
      }
      c = d + 16 | 0;
      k[e >> 2] = c;
      d = (k[a + 16 >> 2] | 0) + 4 | 0;
      if ((k[d >> 2] | 0) >>> 0 < c >>> 0)
        k[d >> 2] = c;
      nd[k[f >> 2] & 255](a) | 0;
      rc();
    }
    function Xf(a, b, c) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      var d = 0,
          e = 0,
          f = 0,
          g = 0,
          h = 0,
          i = 0,
          l = 0,
          m = 0,
          n = 0,
          o = 0,
          p = 0;
      p = r;
      r = r + 176 | 0;
      m = 4;
      n = ir(40) | 0;
      k[n >> 2] = 0;
      l = p;
      f = a + 106 | 0;
      g = j[f >> 1] | 0;
      h = l + 160 | 0;
      k[h >> 2] = 0;
      i = a + 44 | 0;
      k[l >> 2] = k[i >> 2];
      k[i >> 2] = l;
      m = sr(l + 4 | 0, 1, n | 0, m | 0) | 0;
      n = O;
      z = 0;
      e = z;
      z = 0;
      if ((e | 0) != 0 & (A | 0) != 0) {
        d = ur(k[e >> 2] | 0, m | 0, n | 0) | 0;
        if (!d)
          Va(e | 0, A | 0);
        O = A;
      } else
        d = -1;
      if ((d | 0) == 1)
        d = O;
      else
        d = 0;
      while (1) {
        if (d) {
          o = 6;
          break;
        }
        z = 0;
        xa(b | 0, a | 0, c | 0);
        d = z;
        z = 0;
        if ((d | 0) != 0 & (A | 0) != 0) {
          e = ur(k[d >> 2] | 0, m | 0, n | 0) | 0;
          if (!e)
            Va(d | 0, A | 0);
          O = A;
        } else
          e = -1;
        if ((e | 0) == 1)
          d = O;
        else
          break;
      }
      if ((o | 0) == 6) {
        o = k[l >> 2] | 0;
        k[i >> 2] = o;
        j[f >> 1] = g;
        o = k[h >> 2] | 0;
        jr(m | 0);
        r = p;
        return o | 0;
      }
      o = k[l >> 2] | 0;
      k[i >> 2] = o;
      j[f >> 1] = g;
      o = k[h >> 2] | 0;
      jr(m | 0);
      r = p;
      return o | 0;
    }
    function Yf(a, b) {
      a = a | 0;
      b = b | 0;
      var c = 0,
          d = 0,
          e = 0,
          f = 0,
          g = 0;
      d = a + 28 | 0;
      e = k[d >> 2] | 0;
      f = a + 92 | 0;
      c = k[f >> 2] | 0;
      if ((b + 1 | 0) >>> 0 > 268435455)
        Jg(a);
      g = Kg(a, e, c << 4, b << 4) | 0;
      k[d >> 2] = g;
      if ((c | 0) < (b | 0))
        do {
          k[g + (c << 4) + 8 >> 2] = 0;
          c = c + 1 | 0;
        } while ((c | 0) != (b | 0));
      k[f >> 2] = b;
      k[a + 24 >> 2] = g + (b + -5 << 4);
      c = a + 8 | 0;
      d = e;
      k[c >> 2] = g + ((k[c >> 2] | 0) - d >> 4 << 4);
      c = k[a + 32 >> 2] | 0;
      if (c)
        do {
          k[c >> 2] = g + ((k[c >> 2] | 0) - d >> 4 << 4);
          c = k[c + 8 >> 2] | 0;
        } while ((c | 0) != 0);
      c = k[a + 16 >> 2] | 0;
      if (!c)
        return ;
      do {
        a = c + 4 | 0;
        k[a >> 2] = g + ((k[a >> 2] | 0) - d >> 4 << 4);
        k[c >> 2] = g + ((k[c >> 2] | 0) - d >> 4 << 4);
        if (i[c + 34 >> 0] & 2) {
          a = c + 16 | 0;
          k[a >> 2] = g + ((k[a >> 2] | 0) - d >> 4 << 4);
        }
        c = k[c + 8 >> 2] | 0;
      } while ((c | 0) != 0);
      return ;
    }
    function Zf(a, b) {
      a = a | 0;
      b = b | 0;
      var c = 0,
          d = 0;
      d = r;
      r = r + 16 | 0;
      c = k[a + 92 >> 2] | 0;
      if ((c | 0) > 1e6)
        Wf(a, 6);
      b = b + 5 + ((k[a + 8 >> 2] | 0) - (k[a + 28 >> 2] | 0) >> 4) | 0;
      c = c << 1;
      c = (c | 0) > 1e6 ? 1e6 : c;
      c = (c | 0) < (b | 0) ? b : c;
      if ((c | 0) > 1e6) {
        Yf(a, 1000200);
        Pf(a, 1000997, d);
      } else {
        Yf(a, c);
        r = d;
        return ;
      }
    }
    function _f(a) {
      a = a | 0;
      var b = 0,
          c = 0,
          d = 0;
      b = k[a + 8 >> 2] | 0;
      c = k[a + 16 >> 2] | 0;
      if (c)
        do {
          d = k[c + 4 >> 2] | 0;
          b = b >>> 0 < d >>> 0 ? d : b;
          c = k[c + 8 >> 2] | 0;
        } while ((c | 0) != 0);
      b = b - (k[a + 28 >> 2] | 0) | 0;
      c = (b >> 4) + 1 | 0;
      c = ((c | 0) / 8 | 0) + 10 + c | 0;
      c = (c | 0) > 1e6 ? 1e6 : c;
      d = a + 92 | 0;
      if ((k[d >> 2] | 0) > 1e6)
        Zg(a);
      else
        _g(a);
      if ((b | 0) > 15999984)
        return ;
      if ((c | 0) >= (k[d >> 2] | 0))
        return ;
      Yf(a, c);
      return ;
    }
    function $f(a, b, c) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      var d = 0,
          e = 0,
          f = 0,
          g = 0,
          h = 0,
          j = 0,
          m = 0,
          n = 0,
          o = 0,
          p = 0,
          q = 0,
          s = 0,
          t = 0,
          u = 0;
      u = r;
      r = r + 112 | 0;
      t = u;
      s = u + 4 | 0;
      f = k[a + 84 >> 2] | 0;
      if (!f) {
        r = u;
        return ;
      }
      n = a + 109 | 0;
      if (!(i[n >> 0] | 0)) {
        r = u;
        return ;
      }
      p = k[a + 16 >> 2] | 0;
      q = a + 8 | 0;
      d = k[q >> 2] | 0;
      g = a + 28 | 0;
      e = k[g >> 2] | 0;
      m = e;
      h = d - m | 0;
      j = p + 4 | 0;
      m = (k[j >> 2] | 0) - m | 0;
      k[s >> 2] = b;
      k[s + 20 >> 2] = c;
      k[s + 96 >> 2] = p;
      b = d;
      do
        if (((k[a + 24 >> 2] | 0) - b | 0) < 336) {
          c = k[a + 92 >> 2] | 0;
          if ((c | 0) > 1e6)
            Wf(a, 6);
          e = (b - e >> 4) + 25 | 0;
          c = c << 1;
          c = (c | 0) > 1e6 ? 1e6 : c;
          c = (c | 0) < (e | 0) ? e : c;
          if ((c | 0) > 1e6) {
            Yf(a, 1000200);
            Pf(a, 1000997, t);
          } else {
            Yf(a, c);
            o = k[q >> 2] | 0;
            break;
          }
        } else
          o = d;
 while (0);
      k[j >> 2] = o + 320;
      i[n >> 0] = 0;
      t = p + 34 | 0;
      i[t >> 0] = l[t >> 0] | 4;
      md[f & 63](a, s);
      i[n >> 0] = 1;
      s = k[g >> 2] | 0;
      k[j >> 2] = s + m;
      k[q >> 2] = s + h;
      i[t >> 0] = l[t >> 0] & 251;
      r = u;
      return ;
    }
    function ag(a, b, c) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      var d = 0,
          e = 0,
          f = 0,
          g = 0,
          h = 0,
          m = 0,
          n = 0,
          o = 0,
          p = 0,
          q = 0,
          s = 0,
          t = 0,
          u = 0,
          v = 0,
          w = 0,
          x = 0,
          y = 0,
          z = 0;
      z = r;
      r = r + 32 | 0;
      n = z + 24 | 0;
      u = z + 16 | 0;
      t = z + 8 | 0;
      s = z;
      x = a + 28 | 0;
      v = a + 24 | 0;
      y = a + 8 | 0;
      w = a + 92 | 0;
      a: while (1) {
        m = k[x >> 2] | 0;
        h = b;
        f = h - m | 0;
        switch (k[b + 8 >> 2] & 63 | 0) {
          case 22:
            {
              g = m;
              o = 3;
              break a;
            }
          case 38:
            {
              g = m;
              o = 4;
              break a;
            }
          case 6:
            {
              g = h;
              s = f;
              o = 30;
              break a;
            }
          default:
            {}
        }
        b = k[y >> 2] | 0;
        if (((k[v >> 2] | 0) - b | 0) < 32) {
          d = k[w >> 2] | 0;
          if ((d | 0) > 1e6) {
            o = 63;
            break;
          }
          o = (b - m >> 4) + 6 | 0;
          b = d << 1;
          b = (b | 0) > 1e6 ? 1e6 : b;
          b = (b | 0) < (o | 0) ? o : b;
          if ((b | 0) > 1e6) {
            o = 65;
            break;
          }
          Yf(a, b);
          b = k[x >> 2] | 0;
        } else
          b = m;
        b = b + f | 0;
        h = yh(a, b, 23) | 0;
        if ((k[h + 8 >> 2] & 15 | 0) != 6) {
          o = 68;
          break;
        }
        f = k[y >> 2] | 0;
        if (f >>> 0 > b >>> 0) {
          do {
            o = f;
            f = f + -16 | 0;
            k[o >> 2] = k[f >> 2];
            k[o + 4 >> 2] = k[f + 4 >> 2];
            k[o + 8 >> 2] = k[f + 8 >> 2];
            k[o + 12 >> 2] = k[f + 12 >> 2];
          } while (f >>> 0 > b >>> 0);
          f = k[y >> 2] | 0;
        }
        k[y >> 2] = f + 16;
        k[b >> 2] = k[h >> 2];
        k[b + 4 >> 2] = k[h + 4 >> 2];
        k[b + 8 >> 2] = k[h + 8 >> 2];
        k[b + 12 >> 2] = k[h + 12 >> 2];
      }
      if ((o | 0) == 3) {
        q = f;
        p = b;
      } else if ((o | 0) == 4) {
        q = f;
        p = (k[b >> 2] | 0) + 12 | 0;
      } else if ((o | 0) == 30) {
        q = k[(k[b >> 2] | 0) + 12 >> 2] | 0;
        h = k[y >> 2] | 0;
        f = h - g >> 4;
        d = f + -1 | 0;
        p = q + 8 | 0;
        g = l[p >> 0] | 0;
        do
          if (((k[v >> 2] | 0) - h >> 4 | 0) <= (g | 0)) {
            b = k[w >> 2] | 0;
            if ((b | 0) > 1e6)
              Wf(a, 6);
            o = g + 5 + (h - m >> 4) | 0;
            g = b << 1;
            g = (g | 0) > 1e6 ? 1e6 : g;
            g = (g | 0) < (o | 0) ? o : g;
            if ((g | 0) > 1e6) {
              Yf(a, 1000200);
              Pf(a, 1000997, t);
            } else {
              Yf(a, g);
              break;
            }
          }
 while (0);
        n = i[q + 6 >> 0] | 0;
        o = n & 255;
        if ((f | 0) > (o | 0))
          m = d;
        else {
          h = k[y >> 2] | 0;
          b = o + 1 - f | 0;
          f = h;
          g = d;
          while (1) {
            k[f + 8 >> 2] = 0;
            g = g + 1 | 0;
            if ((g | 0) >= (o | 0))
              break;
            else
              f = f + 16 | 0;
          }
          k[y >> 2] = h + (b << 4);
          m = o;
        }
        if (!(i[q + 7 >> 0] | 0)) {
          e = k[x >> 2] | 0;
          d = e;
          e = e + (s + 16) | 0;
        } else {
          g = k[y >> 2] | 0;
          b = g;
          f = l[p >> 0] | 0;
          do
            if (((k[v >> 2] | 0) - b >> 4 | 0) <= (f | 0)) {
              g = k[w >> 2] | 0;
              if ((g | 0) > 1e6)
                Wf(a, 6);
              w = f + 5 + (b - (k[x >> 2] | 0) >> 4) | 0;
              g = g << 1;
              g = (g | 0) > 1e6 ? 1e6 : g;
              g = (g | 0) < (w | 0) ? w : g;
              if ((g | 0) > 1e6) {
                Yf(a, 1000200);
                Pf(a, 1000997, u);
              } else {
                Yf(a, g);
                e = k[y >> 2] | 0;
                break;
              }
            } else
              e = g;
 while (0);
          if (n << 24 >> 24 != 0 ? (k[y >> 2] = e + 16, w = 0 - m | 0, v = e + (w << 4) | 0, k[e >> 2] = k[v >> 2], k[e + 4 >> 2] = k[v + 4 >> 2], k[e + 8 >> 2] = k[v + 8 >> 2], k[e + 12 >> 2] = k[v + 12 >> 2], k[e + (w << 4) + 8 >> 2] = 0, n << 24 >> 24 != 1) : 0) {
            b = 1;
            do {
              v = k[y >> 2] | 0;
              k[y >> 2] = v + 16;
              w = b - m | 0;
              u = e + (w << 4) | 0;
              k[v >> 2] = k[u >> 2];
              k[v + 4 >> 2] = k[u + 4 >> 2];
              k[v + 8 >> 2] = k[u + 8 >> 2];
              k[v + 12 >> 2] = k[u + 12 >> 2];
              k[e + (w << 4) + 8 >> 2] = 0;
              b = b + 1 | 0;
            } while ((b | 0) != (o | 0));
          }
          d = k[x >> 2] | 0;
        }
        f = a + 16 | 0;
        b = k[(k[f >> 2] | 0) + 12 >> 2] | 0;
        if (!b)
          g = Yg(a) | 0;
        else
          g = b;
        k[f >> 2] = g;
        j[g + 32 >> 1] = c;
        k[g >> 2] = d + s;
        k[g + 16 >> 2] = e;
        c = e + (l[p >> 0] << 4) | 0;
        k[g + 4 >> 2] = c;
        b = g + 20 | 0;
        k[b >> 2] = k[q + 48 >> 2];
        d = g + 34 | 0;
        i[d >> 0] = 2;
        k[y >> 2] = c;
        if ((k[(k[a + 12 >> 2] | 0) + 12 >> 2] | 0) > 0)
          zg(a);
        if (!(i[a + 108 >> 0] & 1)) {
          y = 0;
          r = z;
          return y | 0;
        }
        k[b >> 2] = (k[b >> 2] | 0) + 4;
        y = k[g + 8 >> 2] | 0;
        if ((i[y + 34 >> 0] & 2) != 0 ? (k[(k[y + 20 >> 2] | 0) + -4 >> 2] & 63 | 0) == 37 : 0) {
          i[d >> 0] = l[d >> 0] | 32;
          d = 4;
        } else
          d = 0;
        $f(a, d, -1);
        k[b >> 2] = (k[b >> 2] | 0) + -4;
        y = 0;
        r = z;
        return y | 0;
      } else if ((o | 0) == 63)
        Wf(a, 6);
      else if ((o | 0) == 65) {
        Yf(a, 1000200);
        Pf(a, 1000997, n);
      } else if ((o | 0) == 68)
        Of(a, b, 1010546);
      e = k[p >> 2] | 0;
      f = k[y >> 2] | 0;
      do
        if (((k[v >> 2] | 0) - f | 0) < 336) {
          b = k[w >> 2] | 0;
          if ((b | 0) > 1e6)
            Wf(a, 6);
          w = (f - g >> 4) + 25 | 0;
          b = b << 1;
          b = (b | 0) > 1e6 ? 1e6 : b;
          b = (b | 0) < (w | 0) ? w : b;
          if ((b | 0) > 1e6) {
            Yf(a, 1000200);
            Pf(a, 1000997, s);
          } else {
            Yf(a, b);
            break;
          }
        }
 while (0);
      h = a + 16 | 0;
      b = k[(k[h >> 2] | 0) + 12 >> 2] | 0;
      if (!b)
        b = Yg(a) | 0;
      k[h >> 2] = b;
      j[b + 32 >> 1] = c;
      k[b >> 2] = (k[x >> 2] | 0) + q;
      k[b + 4 >> 2] = (k[y >> 2] | 0) + 320;
      i[b + 34 >> 0] = 0;
      if ((k[(k[a + 12 >> 2] | 0) + 12 >> 2] | 0) > 0)
        zg(a);
      b = a + 108 | 0;
      if (i[b >> 0] & 1)
        $f(a, 0, -1);
      d = nd[e & 255](a) | 0;
      d = (k[y >> 2] | 0) + (0 - d << 4) | 0;
      g = k[h >> 2] | 0;
      b = l[b >> 0] | 0;
      if (!(b & 6)) {
        b = d;
        e = k[g + 8 >> 2] | 0;
      } else {
        if (b & 2) {
          d = d - (k[x >> 2] | 0) | 0;
          $f(a, 1, -1);
          d = (k[x >> 2] | 0) + d | 0;
        }
        e = k[g + 8 >> 2] | 0;
        k[a + 20 >> 2] = k[e + 20 >> 2];
        b = d;
      }
      d = k[g >> 2] | 0;
      f = j[g + 32 >> 1] | 0;
      k[h >> 2] = e;
      b: do
        if (f << 16 >> 16) {
          f = f << 16 >> 16;
          while (1) {
            if (b >>> 0 >= (k[y >> 2] | 0) >>> 0) {
              b = f;
              break;
            }
            e = d + 16 | 0;
            k[d >> 2] = k[b >> 2];
            k[d + 4 >> 2] = k[b + 4 >> 2];
            k[d + 8 >> 2] = k[b + 8 >> 2];
            k[d + 12 >> 2] = k[b + 12 >> 2];
            f = f + -1 | 0;
            if (!f) {
              d = e;
              break b;
            } else {
              b = b + 16 | 0;
              d = e;
            }
          }
          if ((b | 0) > 0) {
            e = b;
            f = d;
            while (1) {
              k[f + 8 >> 2] = 0;
              if ((e | 0) > 1) {
                e = e + -1 | 0;
                f = f + 16 | 0;
              } else
                break;
            }
            d = d + (b << 4) | 0;
          }
        }
 while (0);
      k[y >> 2] = d;
      y = 1;
      r = z;
      return y | 0;
    }
    function bg(a, b) {
      a = a | 0;
      b = b | 0;
      var c = 0,
          d = 0,
          e = 0,
          f = 0,
          g = 0,
          h = 0;
      f = a + 16 | 0;
      e = k[f >> 2] | 0;
      c = l[a + 108 >> 0] | 0;
      if (!(c & 6))
        c = k[e + 8 >> 2] | 0;
      else {
        if (c & 2) {
          g = a + 28 | 0;
          b = b - (k[g >> 2] | 0) | 0;
          $f(a, 1, -1);
          b = (k[g >> 2] | 0) + b | 0;
        }
        c = k[e + 8 >> 2] | 0;
        k[a + 20 >> 2] = k[c + 20 >> 2];
      }
      d = k[e >> 2] | 0;
      e = j[e + 32 >> 1] | 0;
      g = e << 16 >> 16;
      k[f >> 2] = c;
      a = a + 8 | 0;
      if (!(e << 16 >> 16)) {
        h = d;
        k[a >> 2] = h;
        h = g + 1 | 0;
        return h | 0;
      } else {
        c = b;
        e = g;
      }
      while (1) {
        if (c >>> 0 >= (k[a >> 2] | 0) >>> 0)
          break;
        b = d + 16 | 0;
        k[d >> 2] = k[c >> 2];
        k[d + 4 >> 2] = k[c + 4 >> 2];
        k[d + 8 >> 2] = k[c + 8 >> 2];
        k[d + 12 >> 2] = k[c + 12 >> 2];
        e = e + -1 | 0;
        if (!e) {
          h = 12;
          break;
        } else {
          c = c + 16 | 0;
          d = b;
        }
      }
      if ((h | 0) == 12) {
        k[a >> 2] = b;
        h = g + 1 | 0;
        return h | 0;
      }
      if ((e | 0) > 0) {
        c = e;
        b = d;
      } else {
        h = d;
        k[a >> 2] = h;
        h = g + 1 | 0;
        return h | 0;
      }
      while (1) {
        k[b + 8 >> 2] = 0;
        if ((c | 0) > 1) {
          c = c + -1 | 0;
          b = b + 16 | 0;
        } else
          break;
      }
      h = d + (e << 4) | 0;
      k[a >> 2] = h;
      h = g + 1 | 0;
      return h | 0;
    }
    function cg(a, b, c, d) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      d = d | 0;
      var e = 0,
          f = 0,
          g = 0,
          h = 0;
      h = r;
      r = r + 16 | 0;
      f = h;
      g = a + 106 | 0;
      e = (j[g >> 1] | 0) + 1 << 16 >> 16;
      j[g >> 1] = e;
      if ((e & 65535) > 199) {
        if (e << 16 >> 16 == 200)
          Pf(a, 999630, f);
        if ((e & 65535) > 224)
          Wf(a, 6);
      }
      e = (d | 0) != 0;
      if (!e) {
        f = a + 104 | 0;
        j[f >> 1] = (j[f >> 1] | 0) + 1 << 16 >> 16;
      }
      if (!(ag(a, b, c) | 0))
        Rh(a);
      if (e) {
        c = j[g >> 1] | 0;
        c = c + -1 << 16 >> 16;
        j[g >> 1] = c;
        r = h;
        return ;
      }
      c = a + 104 | 0;
      j[c >> 1] = (j[c >> 1] | 0) + -1 << 16 >> 16;
      c = j[g >> 1] | 0;
      c = c + -1 << 16 >> 16;
      j[g >> 1] = c;
      r = h;
      return ;
    }
    function dg(a, b, c) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      var d = 0,
          e = 0,
          f = 0,
          g = 0,
          h = 0,
          n = 0,
          o = 0,
          p = 0,
          q = 0,
          s = 0,
          t = 0,
          u = 0,
          v = 0,
          w = 0,
          x = 0,
          y = 0,
          z = 0;
      z = r;
      r = r + 16 | 0;
      v = z;
      x = a + 104 | 0;
      y = j[x >> 1] | 0;
      if (!b)
        b = 1;
      else
        b = (m[b + 106 >> 1] | 0) + 1 & 65535;
      u = a + 106 | 0;
      j[u >> 1] = b;
      j[x >> 1] = 0;
      t = a + 8 | 0;
      b = Xf(a, 45, (k[t >> 2] | 0) + (0 - c << 4) | 0) | 0;
      k[v >> 2] = b;
      if ((b | 0) == -1) {
        k[v >> 2] = 2;
        w = 2;
        j[x >> 1] = y;
        y = j[u >> 1] | 0;
        y = y + -1 << 16 >> 16;
        j[u >> 1] = y;
        r = z;
        return w | 0;
      }
      if ((b | 0) <= 1) {
        w = b;
        j[x >> 1] = y;
        y = j[u >> 1] | 0;
        y = y + -1 << 16 >> 16;
        j[u >> 1] = y;
        r = z;
        return w | 0;
      }
      h = a + 16 | 0;
      n = a + 28 | 0;
      o = a + 109 | 0;
      p = a + 92 | 0;
      q = a + 88 | 0;
      s = a + 12 | 0;
      a: while (1) {
        c = k[h >> 2] | 0;
        if (!c)
          break;
        while (1) {
          d = c + 34 | 0;
          if (i[d >> 0] & 16) {
            g = c;
            break;
          }
          c = k[c + 8 >> 2] | 0;
          if (!c) {
            w = 23;
            break a;
          }
        }
        c = k[n >> 2] | 0;
        e = k[g + 28 >> 2] | 0;
        f = c + e | 0;
        ng(a, f);
        switch (b | 0) {
          case 4:
            {
              b = k[(k[s >> 2] | 0) + 144 >> 2] | 0;
              k[f >> 2] = b;
              k[c + (e + 8) >> 2] = l[b + 4 >> 0] | 0 | 64;
              break;
            }
          case 6:
            {
              b = hh(a, 999606, 23) | 0;
              k[f >> 2] = b;
              k[c + (e + 8) >> 2] = l[b + 4 >> 0] | 0 | 64;
              break;
            }
          default:
            {
              b = (k[t >> 2] | 0) + -16 | 0;
              k[f >> 2] = k[b >> 2];
              k[f + 4 >> 2] = k[b + 4 >> 2];
              k[f + 8 >> 2] = k[b + 8 >> 2];
              k[f + 12 >> 2] = k[b + 12 >> 2];
            }
        }
        c = c + (e + 16) | 0;
        k[t >> 2] = c;
        k[h >> 2] = g;
        i[o >> 0] = (l[d >> 0] | 0) & 1;
        j[x >> 1] = 0;
        d = g;
        do {
          f = k[d + 4 >> 2] | 0;
          c = c >>> 0 < f >>> 0 ? f : c;
          d = k[d + 8 >> 2] | 0;
        } while ((d | 0) != 0);
        d = c - (k[n >> 2] | 0) | 0;
        c = (d >> 4) + 1 | 0;
        c = ((c | 0) / 8 | 0) + 10 + c | 0;
        c = (c | 0) > 1e6 ? 1e6 : c;
        if ((k[p >> 2] | 0) > 1e6)
          Zg(a);
        else
          _g(a);
        if ((d | 0) <= 15999984 ? (c | 0) < (k[p >> 2] | 0) : 0)
          Yf(a, c);
        k[q >> 2] = k[g + 20 >> 2];
        b = Xf(a, 46, v) | 0;
        k[v >> 2] = b;
        if ((b | 0) <= 1) {
          w = 29;
          break;
        }
      }
      if ((w | 0) == 29) {
        j[x >> 1] = y;
        y = j[u >> 1] | 0;
        y = y + -1 << 16 >> 16;
        j[u >> 1] = y;
        r = z;
        return b | 0;
      }
      if ((w | 0) == 23)
        if ((b | 0) <= 1) {
          w = b;
          j[x >> 1] = y;
          y = j[u >> 1] | 0;
          y = y + -1 << 16 >> 16;
          j[u >> 1] = y;
          r = z;
          return w | 0;
        }
      i[a + 6 >> 0] = b;
      c = k[t >> 2] | 0;
      switch (b | 0) {
        case 4:
          {
            w = k[(k[a + 12 >> 2] | 0) + 144 >> 2] | 0;
            k[c >> 2] = w;
            k[c + 8 >> 2] = l[w + 4 >> 0] | 0 | 64;
            break;
          }
        case 6:
          {
            w = hh(a, 999606, 23) | 0;
            k[c >> 2] = w;
            k[c + 8 >> 2] = l[w + 4 >> 0] | 0 | 64;
            break;
          }
        default:
          {
            w = c + -16 | 0;
            k[c >> 2] = k[w >> 2];
            k[c + 4 >> 2] = k[w + 4 >> 2];
            k[c + 8 >> 2] = k[w + 8 >> 2];
            k[c + 12 >> 2] = k[w + 12 >> 2];
          }
      }
      w = c + 16 | 0;
      k[t >> 2] = w;
      k[(k[a + 16 >> 2] | 0) + 4 >> 2] = w;
      w = k[v >> 2] | 0;
      j[x >> 1] = y;
      y = j[u >> 1] | 0;
      y = y + -1 << 16 >> 16;
      j[u >> 1] = y;
      r = z;
      return w | 0;
    }
    function eg(a) {
      a = a | 0;
      return (j[a + 104 >> 1] | 0) == 0 | 0;
    }
    function fg(a, b, c, d) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      d = d | 0;
      var e = 0,
          f = 0,
          g = 0,
          h = 0;
      h = r;
      r = r + 16 | 0;
      g = h + 8 | 0;
      f = h;
      e = k[a + 16 >> 2] | 0;
      if (j[a + 104 >> 1] | 0)
        if ((k[(k[a + 12 >> 2] | 0) + 136 >> 2] | 0) == (a | 0))
          Pf(a, 999689, g);
        else
          Pf(a, 999647, f);
      i[a + 6 >> 0] = 1;
      k[e + 28 >> 2] = (k[e >> 2] | 0) - (k[a + 28 >> 2] | 0);
      if (i[e + 34 >> 0] & 2) {
        r = h;
        return 0;
      }
      k[e + 16 >> 2] = d;
      if (!d) {
        g = a + 8 | 0;
        g = k[g >> 2] | 0;
        h = ~b;
        h = g + (h << 4) | 0;
        k[e >> 2] = h;
        Wf(a, 1);
      }
      k[e + 24 >> 2] = c;
      g = a + 8 | 0;
      g = k[g >> 2] | 0;
      h = ~b;
      h = g + (h << 4) | 0;
      k[e >> 2] = h;
      Wf(a, 1);
      return 0;
    }
    function gg(a, b, c, d, e) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      d = d | 0;
      e = e | 0;
      var f = 0,
          g = 0,
          h = 0,
          m = 0,
          n = 0,
          o = 0,
          p = 0,
          q = 0,
          r = 0,
          s = 0;
      g = a + 16 | 0;
      f = k[g >> 2] | 0;
      h = a + 109 | 0;
      m = i[h >> 0] | 0;
      n = a + 104 | 0;
      o = j[n >> 1] | 0;
      r = a + 88 | 0;
      s = k[r >> 2] | 0;
      k[r >> 2] = e;
      q = Xf(a, b, c) | 0;
      if (!q) {
        k[r >> 2] = s;
        return q | 0;
      }
      p = a + 28 | 0;
      c = k[p >> 2] | 0;
      e = c + d | 0;
      ng(a, e);
      switch (q | 0) {
        case 6:
          {
            b = hh(a, 999606, 23) | 0;
            k[e >> 2] = b;
            k[c + (d + 8) >> 2] = l[b + 4 >> 0] | 0 | 64;
            break;
          }
        case 4:
          {
            b = k[(k[a + 12 >> 2] | 0) + 144 >> 2] | 0;
            k[e >> 2] = b;
            k[c + (d + 8) >> 2] = l[b + 4 >> 0] | 0 | 64;
            break;
          }
        default:
          {
            b = (k[a + 8 >> 2] | 0) + -16 | 0;
            k[e >> 2] = k[b >> 2];
            k[e + 4 >> 2] = k[b + 4 >> 2];
            k[e + 8 >> 2] = k[b + 8 >> 2];
            k[e + 12 >> 2] = k[b + 12 >> 2];
          }
      }
      b = c + (d + 16) | 0;
      k[a + 8 >> 2] = b;
      k[g >> 2] = f;
      i[h >> 0] = m;
      j[n >> 1] = o;
      if (f)
        do {
          o = k[f + 4 >> 2] | 0;
          b = b >>> 0 < o >>> 0 ? o : b;
          f = k[f + 8 >> 2] | 0;
        } while ((f | 0) != 0);
      e = b - (k[p >> 2] | 0) | 0;
      b = (e >> 4) + 1 | 0;
      b = ((b | 0) / 8 | 0) + 10 + b | 0;
      b = (b | 0) > 1e6 ? 1e6 : b;
      f = a + 92 | 0;
      if ((k[f >> 2] | 0) > 1e6)
        Zg(a);
      else
        _g(a);
      if ((e | 0) > 15999984) {
        k[r >> 2] = s;
        return q | 0;
      }
      if ((b | 0) >= (k[f >> 2] | 0)) {
        k[r >> 2] = s;
        return q | 0;
      }
      Yf(a, b);
      k[r >> 2] = s;
      return q | 0;
    }
    function hg(a, b, c, d) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      d = d | 0;
      var e = 0,
          f = 0,
          g = 0,
          h = 0,
          i = 0,
          l = 0,
          m = 0,
          n = 0,
          o = 0;
      e = r;
      r = r + 64 | 0;
      o = e;
      f = a + 104 | 0;
      j[f >> 1] = (j[f >> 1] | 0) + 1 << 16 >> 16;
      k[o >> 2] = b;
      k[o + 56 >> 2] = c;
      k[o + 52 >> 2] = d;
      l = o + 16 | 0;
      k[l >> 2] = 0;
      i = o + 24 | 0;
      k[i >> 2] = 0;
      h = o + 28 | 0;
      k[h >> 2] = 0;
      g = o + 36 | 0;
      k[g >> 2] = 0;
      d = o + 40 | 0;
      k[d >> 2] = 0;
      c = o + 48 | 0;
      k[c >> 2] = 0;
      n = o + 4 | 0;
      k[n >> 2] = 0;
      m = o + 12 | 0;
      k[m >> 2] = 0;
      b = gg(a, 47, o, (k[a + 8 >> 2] | 0) - (k[a + 28 >> 2] | 0) | 0, k[a + 88 >> 2] | 0) | 0;
      o = Kg(a, k[n >> 2] | 0, k[m >> 2] | 0, 0) | 0;
      k[n >> 2] = o;
      k[m >> 2] = 0;
      Kg(a, k[l >> 2] | 0, k[i >> 2] << 1, 0) | 0;
      Kg(a, k[h >> 2] | 0, k[g >> 2] << 4, 0) | 0;
      Kg(a, k[d >> 2] | 0, k[c >> 2] << 4, 0) | 0;
      j[f >> 1] = (j[f >> 1] | 0) + -1 << 16 >> 16;
      r = e;
      return b | 0;
    }
    function ig(a, b, c, d, e) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      d = d | 0;
      e = e | 0;
      var f = 0,
          g = 0,
          h = 0,
          j = 0,
          l = 0,
          m = 0,
          n = 0;
      n = r;
      r = r + 32 | 0;
      l = n;
      j = n + 8 | 0;
      k[j >> 2] = a;
      g = j + 4 | 0;
      k[g >> 2] = c;
      h = j + 8 | 0;
      k[h >> 2] = d;
      k[j + 12 >> 2] = e;
      f = j + 16 | 0;
      e = qd[c & 63](a, 1000292, 4, d) | 0;
      k[f >> 2] = e;
      i[l >> 0] = 83;
      if (!e) {
        e = qd[c & 63](a, l, 1, d) | 0;
        k[f >> 2] = e;
        i[l >> 0] = 0;
        if (!e) {
          e = qd[k[g >> 2] & 63](k[j >> 2] | 0, l, 1, k[h >> 2] | 0) | 0;
          k[f >> 2] = e;
          if (!e) {
            e = qd[k[g >> 2] & 63](k[j >> 2] | 0, 1000342, 6, k[h >> 2] | 0) | 0;
            k[f >> 2] = e;
            i[l >> 0] = 4;
            if (!e) {
              e = qd[k[g >> 2] & 63](k[j >> 2] | 0, l, 1, k[h >> 2] | 0) | 0;
              k[f >> 2] = e;
              i[l >> 0] = 4;
              if (!e) {
                e = qd[k[g >> 2] & 63](k[j >> 2] | 0, l, 1, k[h >> 2] | 0) | 0;
                k[f >> 2] = e;
                i[l >> 0] = 4;
                if (!e) {
                  e = qd[k[g >> 2] & 63](k[j >> 2] | 0, l, 1, k[h >> 2] | 0) | 0;
                  k[f >> 2] = e;
                  i[l >> 0] = 8;
                  if (!e) {
                    e = qd[k[g >> 2] & 63](k[j >> 2] | 0, l, 1, k[h >> 2] | 0) | 0;
                    k[f >> 2] = e;
                    i[l >> 0] = 8;
                    if (!e) {
                      e = qd[k[g >> 2] & 63](k[j >> 2] | 0, l, 1, k[h >> 2] | 0) | 0;
                      k[f >> 2] = e;
                      c = l;
                      k[c >> 2] = 22136;
                      k[c + 4 >> 2] = 0;
                      if (!e) {
                        e = qd[k[g >> 2] & 63](k[j >> 2] | 0, l, 8, k[h >> 2] | 0) | 0;
                        k[f >> 2] = e;
                        p[l >> 3] = 370.5;
                        if (!e) {
                          e = qd[k[g >> 2] & 63](k[j >> 2] | 0, l, 8, k[h >> 2] | 0) | 0;
                          k[f >> 2] = e;
                        }
                      } else
                        m = 18;
                    } else
                      m = 16;
                  } else
                    m = 14;
                } else
                  m = 12;
              } else
                m = 10;
            } else
              m = 8;
          } else
            m = 6;
        } else
          m = 4;
      } else {
        i[l >> 0] = 0;
        m = 4;
      }
      if ((m | 0) == 4)
        m = 6;
      if ((m | 0) == 6) {
        i[l >> 0] = 4;
        m = 8;
      }
      if ((m | 0) == 8) {
        i[l >> 0] = 4;
        m = 10;
      }
      if ((m | 0) == 10) {
        i[l >> 0] = 4;
        m = 12;
      }
      if ((m | 0) == 12) {
        i[l >> 0] = 8;
        m = 14;
      }
      if ((m | 0) == 14) {
        i[l >> 0] = 8;
        m = 16;
      }
      if ((m | 0) == 16) {
        c = l;
        k[c >> 2] = 22136;
        k[c + 4 >> 2] = 0;
        m = 18;
      }
      if ((m | 0) == 18)
        p[l >> 3] = 370.5;
      i[l >> 0] = k[b + 12 >> 2];
      if (e) {
        Ek(b, 0, j);
        m = k[f >> 2] | 0;
        r = n;
        return m | 0;
      }
      m = qd[k[g >> 2] & 63](k[j >> 2] | 0, l, 1, k[h >> 2] | 0) | 0;
      k[f >> 2] = m;
      Ek(b, 0, j);
      m = k[f >> 2] | 0;
      r = n;
      return m | 0;
    }
    function jg(a, b) {
      a = a | 0;
      b = b | 0;
      a = vg(a, 38, (b << 4) + 16 | 0) | 0;
      i[a + 6 >> 0] = b;
      return a | 0;
    }
    function kg(a, b) {
      a = a | 0;
      b = b | 0;
      var c = 0,
          d = 0;
      c = vg(a, 6, (b << 2) + 16 | 0) | 0;
      k[c + 12 >> 2] = 0;
      i[c + 6 >> 0] = b;
      if (!b)
        return c | 0;
      d = c + 16 | 0;
      a = b;
      do {
        a = a + -1 | 0;
        k[d + (a << 2) >> 2] = 0;
      } while ((a | 0) != 0);
      return c | 0;
    }
    function lg(a, b) {
      a = a | 0;
      b = b | 0;
      var c = 0,
          d = 0,
          e = 0;
      c = b + 6 | 0;
      if (!(i[c >> 0] | 0))
        return ;
      else
        d = 0;
      do {
        e = Kg(a, 0, 0, 24) | 0;
        k[e + 4 >> 2] = 1;
        k[e >> 2] = e + 8;
        k[e + 16 >> 2] = 0;
        k[b + 16 + (d << 2) >> 2] = e;
        d = d + 1 | 0;
      } while ((d | 0) < (l[c >> 0] | 0));
      return ;
    }
    function mg(a, b) {
      a = a | 0;
      b = b | 0;
      var c = 0,
          d = 0,
          e = 0;
      d = a + 32 | 0;
      c = k[d >> 2] | 0;
      a: do
        if (c) {
          while (1) {
            e = k[c >> 2] | 0;
            if (e >>> 0 < b >>> 0)
              break a;
            if ((e | 0) == (b | 0))
              break;
            d = c + 8 | 0;
            c = k[d >> 2] | 0;
            if (!c)
              break a;
          }
          return c | 0;
        }
 while (0);
      e = Kg(a, 0, 0, 24) | 0;
      k[e + 4 >> 2] = 0;
      k[e + 8 >> 2] = k[d >> 2];
      k[e + 12 >> 2] = 1;
      k[d >> 2] = e;
      k[e >> 2] = b;
      c = a + 40 | 0;
      if ((k[c >> 2] | 0) != (a | 0)) {
        a = e;
        return a | 0;
      }
      b = (k[a + 12 >> 2] | 0) + 104 | 0;
      k[c >> 2] = k[b >> 2];
      k[b >> 2] = a;
      a = e;
      return a | 0;
    }
    function ng(a, b) {
      a = a | 0;
      b = b | 0;
      var c = 0,
          d = 0,
          e = 0,
          f = 0;
      f = a + 32 | 0;
      c = k[f >> 2] | 0;
      if (!c)
        return ;
      while (1) {
        d = k[c >> 2] | 0;
        if (d >>> 0 < b >>> 0) {
          c = 9;
          break;
        }
        e = c + 8 | 0;
        k[f >> 2] = k[e >> 2];
        if (k[c + 4 >> 2] | 0) {
          k[e >> 2] = k[d >> 2];
          k[e + 4 >> 2] = k[d + 4 >> 2];
          k[e + 8 >> 2] = k[d + 8 >> 2];
          k[e + 12 >> 2] = k[d + 12 >> 2];
          k[c >> 2] = e;
          if (k[c + 16 >> 2] & 64)
            tg(a, c);
        } else
          Kg(a, c, 24, 0) | 0;
        c = k[f >> 2] | 0;
        if (!c) {
          c = 9;
          break;
        }
      }
      if ((c | 0) == 9)
        return ;
    }
    function og(a) {
      a = a | 0;
      var b = 0,
          c = 0;
      a = vg(a, 9, 80) | 0;
      b = a + 44 | 0;
      k[a + 68 >> 2] = 0;
      k[a + 64 >> 2] = 0;
      c = a + 12 | 0;
      k[c >> 2] = 0;
      k[c + 4 >> 2] = 0;
      k[c + 8 >> 2] = 0;
      k[c + 12 >> 2] = 0;
      k[c + 16 >> 2] = 0;
      k[b >> 2] = 0;
      k[b + 4 >> 2] = 0;
      k[b + 8 >> 2] = 0;
      k[b + 12 >> 2] = 0;
      i[a + 6 >> 0] = 0;
      i[a + 7 >> 0] = 0;
      i[a + 8 >> 0] = 0;
      k[a + 60 >> 2] = 0;
      k[a + 32 >> 2] = 0;
      k[a + 36 >> 2] = 0;
      k[a + 40 >> 2] = 0;
      k[a + 72 >> 2] = 0;
      return a | 0;
    }
    function pg(a, b) {
      a = a | 0;
      b = b | 0;
      Kg(a, k[b + 48 >> 2] | 0, k[b + 20 >> 2] << 2, 0) | 0;
      Kg(a, k[b + 52 >> 2] | 0, k[b + 28 >> 2] << 2, 0) | 0;
      Kg(a, k[b + 44 >> 2] | 0, k[b + 16 >> 2] << 4, 0) | 0;
      Kg(a, k[b + 56 >> 2] | 0, k[b + 24 >> 2] << 2, 0) | 0;
      Kg(a, k[b + 60 >> 2] | 0, (k[b + 32 >> 2] | 0) * 12 | 0, 0) | 0;
      Kg(a, k[b + 64 >> 2] | 0, k[b + 12 >> 2] << 3, 0) | 0;
      Kg(a, b, 80, 0) | 0;
      return ;
    }
    function qg(a, b, c) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      var d = 0,
          e = 0;
      d = k[a + 32 >> 2] | 0;
      if ((d | 0) <= 0) {
        e = 0;
        return e | 0;
      }
      e = k[a + 60 >> 2] | 0;
      a = 0;
      while (1) {
        if ((k[e + (a * 12 | 0) + 4 >> 2] | 0) > (c | 0)) {
          a = 0;
          b = 8;
          break;
        }
        if ((k[e + (a * 12 | 0) + 8 >> 2] | 0) > (c | 0)) {
          b = b + -1 | 0;
          if (!b) {
            b = 6;
            break;
          }
        }
        a = a + 1 | 0;
        if ((a | 0) >= (d | 0)) {
          a = 0;
          b = 8;
          break;
        }
      }
      if ((b | 0) == 6) {
        e = (k[e + (a * 12 | 0) >> 2] | 0) + 24 | 0;
        return e | 0;
      } else if ((b | 0) == 8)
        return a | 0;
      return 0;
    }
    function rg(a, b, c) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      a = k[a + 12 >> 2] | 0;
      if ((l[a + 61 >> 0] | 0) < 2) {
        Fk(a, c);
        return ;
      } else {
        c = b + 5 | 0;
        i[c >> 0] = (l[a + 60 >> 0] | 0) & 3 | (l[c >> 0] | 0) & 248;
        return ;
      }
    }
    function sg(a, b) {
      a = a | 0;
      b = b | 0;
      var c = 0;
      a = k[a + 12 >> 2] | 0;
      c = b + 5 | 0;
      i[c >> 0] = (l[c >> 0] | 0) & 251;
      a = a + 80 | 0;
      k[b + 28 >> 2] = k[a >> 2];
      k[a >> 2] = b;
      return ;
    }
    function tg(a, b) {
      a = a | 0;
      b = b | 0;
      var c = 0;
      c = k[a + 12 >> 2] | 0;
      a = k[k[b >> 2] >> 2] | 0;
      if (!((a | 0) != 0 & (l[c + 61 >> 0] | 0) < 2))
        return ;
      if (!(i[a + 5 >> 0] & 3))
        return ;
      Fk(c, a);
      return ;
    }
    function ug(a, b) {
      a = a | 0;
      b = b | 0;
      var c = 0;
      a = k[a + 12 >> 2] | 0;
      c = b + 5 | 0;
      i[c >> 0] = (l[c >> 0] | 0) & 252;
      k[a + 64 >> 2] = k[b >> 2];
      a = a + 100 | 0;
      k[b >> 2] = k[a >> 2];
      k[a >> 2] = b;
      return ;
    }
    function vg(a, b, c) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      var d = 0;
      d = k[a + 12 >> 2] | 0;
      c = Kg(a, 0, b & 15, c) | 0;
      i[c + 5 >> 0] = (l[d + 60 >> 0] | 0) & 3;
      i[c + 4 >> 0] = b;
      b = d + 64 | 0;
      k[c >> 2] = k[b >> 2];
      k[b >> 2] = c;
      return c | 0;
    }
    function wg(a, b) {
      a = a | 0;
      b = b | 0;
      var c = 0,
          d = 0;
      d = b + 4 | 0;
      c = (k[d >> 2] | 0) + -1 | 0;
      k[d >> 2] = c;
      if (c)
        return ;
      if ((k[b >> 2] | 0) != (b + 8 | 0))
        return ;
      Kg(a, b, 24, 0) | 0;
      return ;
    }
    function xg(a, b, c) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      var d = 0,
          e = 0,
          f = 0,
          g = 0,
          h = 0;
      g = k[a + 12 >> 2] | 0;
      h = b + 5 | 0;
      if ((c | 0) == 0 | (i[h >> 0] & 8) != 0)
        return ;
      if (i[c + 6 >> 0] & 4)
        return ;
      if (!(xh(c, 2, k[g + 156 >> 2] | 0) | 0))
        return ;
      if (((i[g + 61 >> 0] | 0) + -2 & 255) < 4 ? (i[h >> 0] = (l[g + 60 >> 0] | 0) & 3 | (l[h >> 0] | 0) & 248, f = g + 68 | 0, e = k[f >> 2] | 0, (e | 0) == (b | 0)) : 0) {
        do
          d = Gk(a, e, 1) | 0;
 while ((d | 0) == (e | 0));
        k[f >> 2] = d;
      }
      d = g + 64 | 0;
      while (1) {
        c = k[d >> 2] | 0;
        if ((c | 0) == (b | 0))
          break;
        else
          d = c;
      }
      k[d >> 2] = k[b >> 2];
      g = g + 72 | 0;
      k[b >> 2] = k[g >> 2];
      k[g >> 2] = b;
      i[h >> 0] = l[h >> 0] | 0 | 8;
      return ;
    }
    function yg(a) {
      a = a | 0;
      var b = 0,
          c = 0,
          d = 0,
          e = 0,
          f = 0,
          g = 0;
      e = a + 12 | 0;
      g = k[e >> 2] | 0;
      b = g + 96 | 0;
      while (1) {
        c = k[b >> 2] | 0;
        if (!c)
          break;
        else
          b = c;
      }
      f = g + 72 | 0;
      c = k[f >> 2] | 0;
      if (!c)
        b = g;
      else {
        d = c;
        while (1) {
          k[f >> 2] = k[d >> 2];
          k[d >> 2] = k[b >> 2];
          k[b >> 2] = d;
          c = k[f >> 2] | 0;
          if (!c)
            break;
          else {
            b = d;
            d = c;
          }
        }
        b = k[e >> 2] | 0;
      }
      b = b + 96 | 0;
      if (k[b >> 2] | 0)
        do
          Hk(a, 0);
 while ((k[b >> 2] | 0) != 0);
      i[g + 60 >> 0] = 3;
      i[g + 62 >> 0] = 0;
      Gk(a, f, -1) | 0;
      Gk(a, g + 64 | 0, -1) | 0;
      Gk(a, g + 100 | 0, -1) | 0;
      return ;
    }
    function zg(a) {
      a = a | 0;
      var b = 0,
          c = 0,
          d = 0,
          e = 0,
          f = 0,
          g = 0,
          h = 0,
          j = 0,
          l = 0;
      f = a + 12 | 0;
      g = k[f >> 2] | 0;
      c = g + 12 | 0;
      b = g + 128 | 0;
      e = k[b >> 2] | 0;
      d = ((k[c >> 2] | 0) / 200 | 0) + 1 | 0;
      if (!(i[g + 63 >> 0] | 0)) {
        Xg(g, -2e4);
        return ;
      }
      l = ka(d, e) | 0;
      h = g + 61 | 0;
      d = (d | 0) < (2147483647 / (e | 0) | 0 | 0) ? l : 2147483647;
      do {
        d = d - (Ik(a) | 0) | 0;
        e = (i[h >> 0] | 0) == 7;
        if ((d | 0) <= -2e3) {
          j = 6;
          break;
        }
      } while (!e);
      if ((j | 0) == 6 ? !e : 0) {
        Xg(g, ((d | 0) / (k[b >> 2] | 0) | 0) * 200 | 0);
        e = k[f >> 2] | 0;
        c = e + 96 | 0;
        e = e + 120 | 0;
        a: do
          if (!(k[c >> 2] | 0))
            b = 0;
          else {
            d = 0;
            while (1) {
              b = k[e >> 2] | 0;
              if (d >>> 0 >= b >>> 0)
                break;
              Hk(a, 1);
              if (!(k[c >> 2] | 0)) {
                b = 0;
                break a;
              } else
                d = d + 1 | 0;
            }
            b = b << 1;
          }
 while (0);
        k[e >> 2] = b;
        return ;
      }
      a = ((k[g + 20 >> 2] | 0) >>> 0) / 100 | 0;
      j = k[g + 124 >> 2] | 0;
      l = ka(j, 0 - a | 0) | 0;
      Xg(g, (k[c >> 2] | 0) + (k[g + 8 >> 2] | 0) + ((j | 0) < (2147483647 / (a >>> 0) | 0 | 0) ? l : -2147483647) | 0);
      return ;
    }
    function Ag(a, b) {
      a = a | 0;
      b = b | 0;
      var c = 0,
          d = 0,
          e = 0,
          f = 0,
          g = 0;
      e = a + 12 | 0;
      g = k[e >> 2] | 0;
      if (b)
        i[g + 62 >> 0] = 1;
      b = g + 61 | 0;
      d = i[b >> 0] | 0;
      if ((d & 255) < 2) {
        i[b >> 0] = 2;
        c = g + 64 | 0;
        do
          b = Gk(a, c, 1) | 0;
 while ((b | 0) == (c | 0));
        k[g + 68 >> 2] = b;
        d = k[e >> 2] | 0;
        b = d;
        d = i[d + 61 >> 0] | 0;
      } else
        b = g;
      c = b + 61 | 0;
      if (d << 24 >> 24 == 7)
        c = 7;
      else {
        do
          Ik(a) | 0;
 while ((i[c >> 0] | 0) != 7);
        c = k[e >> 2] | 0;
        b = c;
        c = i[c + 61 >> 0] | 0;
      }
      d = b + 61 | 0;
      if (!(1 << (c & 255) & -129)) {
        do
          Ik(a) | 0;
 while ((1 << l[d >> 0] & -129 | 0) == 0);
        c = k[e >> 2] | 0;
        b = c;
        c = i[c + 61 >> 0] | 0;
      }
      d = b + 61 | 0;
      if (c << 24 >> 24 != 6) {
        do
          Ik(a) | 0;
 while ((i[d >> 0] | 0) != 6);
        b = k[e >> 2] | 0;
        if ((i[b + 61 >> 0] | 0) != 7)
          f = 16;
      } else
        f = 16;
      if ((f | 0) == 16) {
        b = b + 61 | 0;
        do
          Ik(a) | 0;
 while ((i[b >> 0] | 0) != 7);
      }
      i[g + 62 >> 0] = 0;
      f = ((k[g + 20 >> 2] | 0) >>> 0) / 100 | 0;
      e = k[g + 124 >> 2] | 0;
      a = ka(e, 0 - f | 0) | 0;
      Xg(g, (k[g + 12 >> 2] | 0) + (k[g + 8 >> 2] | 0) + ((e | 0) < (2147483647 / (f >>> 0) | 0 | 0) ? a : -2147483647) | 0);
      return ;
    }
    function Bg(a) {
      a = a | 0;
      var b = 0,
          c = 0;
      ug(a, ih(a, 1013007) | 0);
      b = 0;
      do {
        c = ih(a, k[3816 + (b << 2) >> 2] | 0) | 0;
        ug(a, c);
        b = b + 1 | 0;
        i[c + 6 >> 0] = b;
      } while ((b | 0) != 22);
      return ;
    }
    function Cg(a, b) {
      a = a | 0;
      b = b | 0;
      var c = 0,
          d = 0,
          e = 0;
      e = r;
      r = r + 16 | 0;
      d = e + 8 | 0;
      c = e;
      if ((b | 0) < 257) {
        d = k[a + 52 >> 2] | 0;
        k[c >> 2] = b;
        d = Ug(d, 999731, c) | 0;
        r = e;
        return d | 0;
      }
      c = k[3816 + (b + -257 << 2) >> 2] | 0;
      if ((b | 0) >= 289) {
        d = c;
        r = e;
        return d | 0;
      }
      b = k[a + 52 >> 2] | 0;
      k[d >> 2] = c;
      d = Ug(b, 999736, d) | 0;
      r = e;
      return d | 0;
    }
    function Dg(a, b) {
      a = a | 0;
      b = b | 0;
      Jk(a, b, k[a + 16 >> 2] | 0);
    }
    function Eg(a, b, c) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      var d = 0,
          e = 0;
      e = k[a + 52 >> 2] | 0;
      c = hh(e, b, c) | 0;
      d = e + 8 | 0;
      b = k[d >> 2] | 0;
      k[d >> 2] = b + 16;
      k[b >> 2] = c;
      k[b + 8 >> 2] = l[c + 4 >> 0] | 0 | 64;
      b = nh(e, k[a + 64 >> 2] | 0, (k[d >> 2] | 0) + -16 | 0) | 0;
      a = b + 8 | 0;
      if (!(k[a >> 2] | 0)) {
        k[b >> 2] = 1;
        k[a >> 2] = 1;
        if ((k[(k[e + 12 >> 2] | 0) + 12 >> 2] | 0) > 0)
          zg(e);
      } else
        c = k[b + 16 >> 2] | 0;
      k[d >> 2] = (k[d >> 2] | 0) + -16;
      return c | 0;
    }
    function Fg(a, b, c, d, e) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      d = d | 0;
      e = e | 0;
      var f = 0;
      k[b + 16 >> 2] = 0;
      i[b + 80 >> 0] = 46;
      f = b + 52 | 0;
      k[f >> 2] = a;
      k[b >> 2] = e;
      k[b + 32 >> 2] = 289;
      k[b + 56 >> 2] = c;
      k[b + 48 >> 2] = 0;
      k[b + 4 >> 2] = 1;
      k[b + 8 >> 2] = 1;
      k[b + 72 >> 2] = d;
      c = ih(a, 1013007) | 0;
      k[b + 76 >> 2] = c;
      c = b + 60 | 0;
      d = k[c >> 2] | 0;
      d = Kg(k[f >> 2] | 0, k[d >> 2] | 0, k[d + 8 >> 2] | 0, 32) | 0;
      c = k[c >> 2] | 0;
      k[c >> 2] = d;
      k[c + 8 >> 2] = 32;
      return ;
    }
    function Gg(a) {
      a = a | 0;
      var b = 0;
      k[a + 8 >> 2] = k[a + 4 >> 2];
      b = a + 32 | 0;
      if ((k[b >> 2] | 0) == 289) {
        b = Kk(a, a + 24 | 0) | 0;
        k[a + 16 >> 2] = b;
        return ;
      } else {
        a = a + 16 | 0;
        k[a >> 2] = k[b >> 2];
        k[a + 4 >> 2] = k[b + 4 >> 2];
        k[a + 8 >> 2] = k[b + 8 >> 2];
        k[a + 12 >> 2] = k[b + 12 >> 2];
        k[b >> 2] = 289;
        return ;
      }
    }
    function Hg(a) {
      a = a | 0;
      var b = 0;
      b = Kk(a, a + 40 | 0) | 0;
      k[a + 32 >> 2] = b;
      return b | 0;
    }
    function Ig(a, b, c, d, e, f) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      d = d | 0;
      e = e | 0;
      f = f | 0;
      var g = 0,
          h = 0,
          i = 0,
          j = 0,
          l = 0,
          m = 0,
          n = 0;
      n = r;
      r = r + 16 | 0;
      h = n;
      g = k[c >> 2] | 0;
      if ((g | 0) >= ((e | 0) / 2 | 0 | 0))
        if ((g | 0) < (e | 0))
          m = e;
        else {
          k[h >> 2] = f;
          k[h + 4 >> 2] = e;
          Pf(a, 999741, h);
        }
      else {
        m = g << 1;
        m = (m | 0) < 4 ? 4 : m;
      }
      if ((m + 1 | 0) >>> 0 > (4294967295 / (d >>> 0) | 0) >>> 0)
        Jg(a);
      j = ka(g, d) | 0;
      d = ka(m, d) | 0;
      e = k[a + 12 >> 2] | 0;
      i = (b | 0) != 0;
      f = e + 4 | 0;
      h = qd[k[e >> 2] & 63](k[f >> 2] | 0, b, j, d) | 0;
      if ((d | 0) != 0 & (h | 0) == 0) {
        Ag(a, 1);
        g = qd[k[e >> 2] & 63](k[f >> 2] | 0, b, j, d) | 0;
        if (!g)
          Wf(a, 4);
        else
          l = g;
      } else
        l = h;
      a = e + 12 | 0;
      k[a >> 2] = (i ? 0 - j | 0 : 0) + d + (k[a >> 2] | 0);
      k[c >> 2] = m;
      r = n;
      return l | 0;
    }
    function Jg(a) {
      a = a | 0;
      var b = 0;
      b = r;
      r = r + 16 | 0;
      Pf(a, 999767, b);
    }
    function Kg(a, b, c, d) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      d = d | 0;
      var e = 0,
          f = 0,
          g = 0,
          h = 0,
          i = 0;
      g = k[a + 12 >> 2] | 0;
      h = (b | 0) != 0;
      e = g + 4 | 0;
      f = qd[k[g >> 2] & 63](k[e >> 2] | 0, b, c, d) | 0;
      if ((d | 0) != 0 & (f | 0) == 0) {
        Ag(a, 1);
        e = qd[k[g >> 2] & 63](k[e >> 2] | 0, b, c, d) | 0;
        if (!e)
          Wf(a, 4);
        else
          i = e;
      } else
        i = f;
      a = g + 12 | 0;
      k[a >> 2] = (h ? 0 - c | 0 : 0) + d + (k[a >> 2] | 0);
      return i | 0;
    }
    function Lg(a) {
      a = a | 0;
      var b = 0,
          c = 0;
      if (a >>> 0 < 8) {
        b = a;
        return b | 0;
      }
      if (a >>> 0 > 15) {
        b = 1;
        do {
          c = a + 1 | 0;
          a = c >>> 1;
          b = b + 1 | 0;
        } while (c >>> 0 > 31);
        b = b << 3;
      } else
        b = 8;
      c = b | a + -8;
      return c | 0;
    }
    function Mg(a) {
      a = a | 0;
      var b = 0;
      b = a >>> 3 & 31;
      if (!b)
        return a | 0;
      a = (a & 7 | 8) << b + -1;
      return a | 0;
    }
    function Ng(a) {
      a = a | 0;
      var b = 0,
          c = 0;
      a = a + -1 | 0;
      if (a >>> 0 > 255) {
        b = 0;
        while (1) {
          b = b + 8 | 0;
          c = a >>> 8;
          if (a >>> 0 > 65535)
            a = c;
          else {
            a = c;
            break;
          }
        }
      } else
        b = 0;
      return (l[999806 + a >> 0] | 0) + b | 0;
    }
    function Og(a, b, c, d, e) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      d = d | 0;
      e = e | 0;
      var f = 0.0,
          g = 0,
          h = 0.0,
          i = 0,
          j = 0,
          l = 0,
          m = 0,
          n = 0,
          o = 0,
          q = 0;
      q = r;
      r = r + 48 | 0;
      o = q + 40 | 0;
      j = q + 32 | 0;
      m = q + 24 | 0;
      i = q + 16 | 0;
      n = q + 8 | 0;
      g = q;
      a: do
        switch (b | 0) {
          case 4:
          case 5:
            {
              if ((k[c + 8 >> 2] | 0) != 3) {
                if (!(Eh(c, m) | 0))
                  break a;
              } else
                p[m >> 3] = +p[c >> 3];
              if ((k[d + 8 >> 2] | 0) == 3) {
                h = +p[d >> 3];
                p[i >> 3] = h;
              } else {
                if (!(Eh(d, i) | 0))
                  break a;
                h = +p[i >> 3];
              }
              f = +p[m >> 3];
              switch (b | 0) {
                case 4:
                  {
                    f = +$(+f, +h);
                    break;
                  }
                case 5:
                  {
                    f = f / h;
                    break;
                  }
                default:
                  f = 0.0;
              }
              p[e >> 3] = f;
              k[e + 8 >> 2] = 3;
              r = q;
              return ;
            }
          case 13:
          case 11:
          case 10:
          case 9:
          case 8:
          case 7:
            {
              if ((k[c + 8 >> 2] | 0) != 19) {
                if (!(Fh(c, o) | 0))
                  break a;
              } else {
                i = c;
                m = k[i + 4 >> 2] | 0;
                n = o;
                k[n >> 2] = k[i >> 2];
                k[n + 4 >> 2] = m;
              }
              if ((k[d + 8 >> 2] | 0) == 19) {
                a = d;
                i = k[a >> 2] | 0;
                a = k[a + 4 >> 2] | 0;
                k[j >> 2] = i;
                k[j + 4 >> 2] = a;
                j = a;
              } else {
                if (!(Fh(d, j) | 0))
                  break a;
                i = k[j >> 2] | 0;
                j = k[j + 4 >> 2] | 0;
              }
              c = o;
              g = k[c >> 2] | 0;
              c = k[c + 4 >> 2] | 0;
              switch (b | 0) {
                case 11:
                  {
                    g = Ph(g, c, or(0, 0, i | 0, j | 0) | 0, O) | 0;
                    c = O;
                    break;
                  }
                case 13:
                  {
                    g = ~g;
                    c = ~c;
                    break;
                  }
                case 7:
                  {
                    g = i & g;
                    c = j & c;
                    break;
                  }
                case 10:
                  {
                    g = Ph(g, c, i, j) | 0;
                    c = O;
                    break;
                  }
                case 9:
                  {
                    g = i ^ g;
                    c = j ^ c;
                    break;
                  }
                case 8:
                  {
                    g = i | g;
                    c = j | c;
                    break;
                  }
                case 12:
                  {
                    g = or(0, 0, g | 0, c | 0) | 0;
                    c = O;
                    break;
                  }
                default:
                  {
                    g = 0;
                    c = 0;
                  }
              }
              a = e;
              k[a >> 2] = g;
              k[a + 4 >> 2] = c;
              k[e + 8 >> 2] = 19;
              r = q;
              return ;
            }
          default:
            {
              switch (k[c + 8 >> 2] | 0) {
                case 19:
                  {
                    if ((k[d + 8 >> 2] | 0) == 19) {
                      j = k[c >> 2] | 0;
                      c = k[c + 4 >> 2] | 0;
                      g = d;
                      i = k[g >> 2] | 0;
                      g = k[g + 4 >> 2] | 0;
                      switch (b | 0) {
                        case 0:
                          {
                            g = pr(i | 0, g | 0, j | 0, c | 0) | 0;
                            c = O;
                            break;
                          }
                        case 1:
                          {
                            g = or(j | 0, c | 0, i | 0, g | 0) | 0;
                            c = O;
                            break;
                          }
                        case 2:
                          {
                            g = Er(i | 0, g | 0, j | 0, c | 0) | 0;
                            c = O;
                            break;
                          }
                        case 3:
                          {
                            g = Oh(a, j, c, i, g) | 0;
                            c = O;
                            break;
                          }
                        case 6:
                          {
                            g = Nh(a, j, c, i, g) | 0;
                            c = O;
                            break;
                          }
                        case 12:
                          {
                            g = or(0, 0, j | 0, c | 0) | 0;
                            c = O;
                            break;
                          }
                        case 13:
                          {
                            g = ~j;
                            c = ~c;
                            break;
                          }
                        default:
                          {
                            g = 0;
                            c = 0;
                          }
                      }
                      a = e;
                      k[a >> 2] = g;
                      k[a + 4 >> 2] = c;
                      k[e + 8 >> 2] = 19;
                      r = q;
                      return ;
                    } else
                      l = 41;
                    break;
                  }
                case 3:
                  {
                    p[n >> 3] = +p[c >> 3];
                    break;
                  }
                default:
                  l = 41;
              }
              if ((l | 0) == 41 ? (Eh(c, n) | 0) == 0 : 0)
                break a;
              if ((k[d + 8 >> 2] | 0) == 3) {
                h = +p[d >> 3];
                p[g >> 3] = h;
              } else {
                if (!(Eh(d, g) | 0))
                  break a;
                h = +p[g >> 3];
              }
              f = +p[n >> 3];
              switch (b | 0) {
                case 0:
                  {
                    f = f + h;
                    break;
                  }
                case 1:
                  {
                    f = f - h;
                    break;
                  }
                case 2:
                  {
                    f = f * h;
                    break;
                  }
                case 5:
                  {
                    f = f / h;
                    break;
                  }
                case 4:
                  {
                    f = +$(+f, +h);
                    break;
                  }
                case 6:
                  {
                    f = +Y(+(f / h));
                    break;
                  }
                case 12:
                  {
                    f = -f;
                    break;
                  }
                case 3:
                  {
                    f = +Iq(f, h);
                    f = h * f < 0.0 ? h + f : f;
                    break;
                  }
                default:
                  f = 0.0;
              }
              p[e >> 3] = f;
              k[e + 8 >> 2] = 3;
              r = q;
              return ;
            }
        }
 while (0);
      Bh(a, c, d, e, b + 6 | 0);
      r = q;
      return ;
    }
    function Pg(a) {
      a = a | 0;
      return ((i[813362 + (a + 1) >> 0] & 2) == 0 ? (a | 32) + -87 | 0 : a + -48 | 0) | 0;
    }
    function Qg(a, b) {
      a = a | 0;
      b = b | 0;
      var c = 0,
          d = 0,
          e = 0,
          f = 0,
          g = 0,
          h = 0,
          j = 0,
          l = 0,
          m = 0,
          n = 0,
          o = 0.0,
          q = 0;
      q = r;
      r = r + 16 | 0;
      n = q;
      f = a;
      while (1) {
        d = i[f >> 0] | 0;
        e = f + 1 | 0;
        if (!(i[813362 + ((d & 255) + 1) >> 0] & 8))
          break;
        else
          f = e;
      }
      switch (d << 24 >> 24) {
        case 45:
          {
            m = 1;
            d = e;
            break;
          }
        case 43:
          {
            m = 0;
            d = e;
            break;
          }
        default:
          {
            m = 0;
            d = f;
          }
      }
      f = i[d >> 0] | 0;
      a: do
        if (f << 24 >> 24 == 48) {
          switch (i[d + 1 >> 0] | 0) {
            case 88:
            case 120:
              break;
            default:
              {
                l = 8;
                break a;
              }
          }
          d = d + 2 | 0;
          f = i[d >> 0] | 0;
          e = i[813362 + ((f & 255) + 1) >> 0] | 0;
          if (!(e & 16)) {
            g = 0;
            h = 0;
            j = 1;
          } else {
            g = 0;
            e = 0;
            while (1) {
              g = xr(g | 0, e | 0, 4) | 0;
              h = f << 24 >> 24;
              h = (i[813362 + (h + 1) >> 0] & 2) == 0 ? (h | 32) + -87 | 0 : h + -48 | 0;
              g = pr(h | 0, ((h | 0) < 0) << 31 >> 31 | 0, g | 0, O | 0) | 0;
              h = O;
              d = d + 1 | 0;
              f = i[d >> 0] | 0;
              e = i[813362 + ((f & 255) + 1) >> 0] | 0;
              if (!(e & 16)) {
                j = 0;
                break;
              } else
                e = h;
            }
          }
        } else
          l = 8;
 while (0);
      if ((l | 0) == 8) {
        e = i[813362 + ((f & 255) + 1) >> 0] | 0;
        if (!(e & 2)) {
          g = 0;
          h = 0;
          j = 1;
        } else {
          g = 0;
          e = 0;
          while (1) {
            h = Er(g | 0, e | 0, 10, 0) | 0;
            g = O;
            f = f << 24 >> 24;
            f = pr(f | 0, ((f | 0) < 0) << 31 >> 31 | 0, -48, -1) | 0;
            g = pr(f | 0, O | 0, h | 0, g | 0) | 0;
            h = O;
            d = d + 1 | 0;
            f = i[d >> 0] | 0;
            e = i[813362 + ((f & 255) + 1) >> 0] | 0;
            if (!(e & 2)) {
              j = 0;
              break;
            } else
              e = h;
          }
        }
      }
      if (e & 8)
        do {
          d = d + 1 | 0;
          f = i[d >> 0] | 0;
        } while ((i[813362 + ((f & 255) + 1) >> 0] & 8) != 0);
      do
        if (f << 24 >> 24 != 0 | (j | 0) != 0 | (d | 0) == 0) {
          if ((Sp(a, 1000062) | 0) == 0 ? (o = +$q(a, n), c = k[n >> 2] | 0, (c | 0) != (a | 0)) : 0) {
            d = i[c >> 0] | 0;
            if (i[813362 + ((d & 255) + 1) >> 0] & 8) {
              do {
                c = c + 1 | 0;
                d = i[c >> 0] | 0;
              } while ((i[813362 + ((d & 255) + 1) >> 0] & 8) != 0);
              k[n >> 2] = c;
            }
            if (!(d << 24 >> 24))
              if (!c) {
                a = 0;
                r = q;
                return a | 0;
              } else {
                p[b >> 3] = o;
                k[b + 8 >> 2] = 3;
                break;
              }
          }
          a = 0;
          r = q;
          return a | 0;
        } else {
          n = (m | 0) != 0;
          m = or(0, 0, g | 0, h | 0) | 0;
          c = b;
          k[c >> 2] = n ? m : g;
          k[c + 4 >> 2] = n ? O : h;
          k[b + 8 >> 2] = 19;
          c = d;
        }
 while (0);
      a = 1 - a + c | 0;
      r = q;
      return a | 0;
    }
    function Rg(a, b) {
      a = a | 0;
      b = b | 0;
      var c = 0,
          d = 0,
          e = 0;
      if (b >>> 0 < 128) {
        i[a + 7 >> 0] = b;
        a = 1;
        return a | 0;
      } else {
        d = 63;
        c = 1;
      }
      while (1) {
        e = c + 1 | 0;
        i[a + (8 - c) >> 0] = b & 63 | 128;
        b = b >>> 6;
        d = d >>> 1;
        if (b >>> 0 > d >>> 0)
          c = e;
        else
          break;
      }
      i[a + (7 - c) >> 0] = d << 1 ^ 254 | b;
      a = e;
      return a | 0;
    }
    function Sg(a, b) {
      a = a | 0;
      b = b | 0;
      var c = 0,
          d = 0,
          e = 0,
          f = 0,
          g = 0,
          h = 0,
          j = 0;
      g = r;
      r = r + 80 | 0;
      d = g + 8 | 0;
      c = g;
      f = g + 16 | 0;
      e = b + 8 | 0;
      if ((k[e >> 2] | 0) != 19) {
        p[d >> 3] = +p[b >> 3];
        c = Xq(f, 1010115, d) | 0;
        d = f + (Tp(f, 1000065) | 0) | 0;
        if (!(i[d >> 0] | 0)) {
          i[f + c >> 0] = 46;
          i[f + (c + 1) >> 0] = 48;
          c = c + 2 | 0;
        }
      } else {
        j = b;
        h = k[j + 4 >> 2] | 0;
        d = c;
        k[d >> 2] = k[j >> 2];
        k[d + 4 >> 2] = h;
        c = Xq(f, 1010110, c) | 0;
      }
      j = hh(a, f, c) | 0;
      k[b >> 2] = j;
      k[e >> 2] = l[j + 4 >> 0] | 64;
      r = g;
      return ;
    }
    function Tg(a, b, c) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      var d = 0,
          e = 0,
          f = 0,
          g = 0,
          h = 0,
          j = 0,
          m = 0,
          n = 0,
          o = 0,
          q = 0,
          s = 0,
          t = 0,
          u = 0,
          v = 0,
          w = 0,
          x = 0,
          y = 0,
          z = 0,
          A = 0,
          B = 0,
          C = 0,
          D = 0,
          E = 0,
          F = 0,
          G = 0,
          H = 0,
          I = 0,
          J = 0.0;
      H = r;
      r = r + 160 | 0;
      D = H + 64 | 0;
      A = H + 16 | 0;
      z = H + 8 | 0;
      y = H + 32 | 0;
      x = H + 56 | 0;
      w = H;
      v = H + 24 | 0;
      B = H + 48 | 0;
      u = H + 40 | 0;
      q = H + 106 | 0;
      o = H + 104 | 0;
      s = H + 80 | 0;
      t = H + 72 | 0;
      g = Op(b, 37) | 0;
      m = a + 24 | 0;
      F = a + 8 | 0;
      e = k[F >> 2] | 0;
      f = (k[m >> 2] | 0) - e | 0;
      a: do
        if (!g) {
          E = b;
          C = f;
          d = e;
          G = 0;
        } else {
          n = t + 7 | 0;
          j = 0;
          b: while (1) {
            if ((f | 0) < 48) {
              Zf(a, 2);
              e = k[F >> 2] | 0;
            }
            k[F >> 2] = e + 16;
            h = hh(a, b, g - b | 0) | 0;
            k[e >> 2] = h;
            k[e + 8 >> 2] = l[h + 4 >> 0] | 64;
            e = i[g + 1 >> 0] | 0;
            c: do
              switch (e | 0) {
                case 100:
                  {
                    e = k[F >> 2] | 0;
                    k[F >> 2] = e + 16;
                    b = (k[c >> 2] | 0) + (4 - 1) & ~(4 - 1);
                    h = k[b >> 2] | 0;
                    k[c >> 2] = b + 4;
                    b = e;
                    k[b >> 2] = h;
                    k[b + 4 >> 2] = ((h | 0) < 0) << 31 >> 31;
                    k[e + 8 >> 2] = 19;
                    e = k[F >> 2] | 0;
                    b = e + -16 | 0;
                    e = e + -8 | 0;
                    if ((k[e >> 2] | 0) != 19) {
                      p[v >> 3] = +p[b >> 3];
                      f = Xq(q, 1010115, v) | 0;
                      h = q + (Tp(q, 1000065) | 0) | 0;
                      if (!(i[h >> 0] | 0)) {
                        i[q + f >> 0] = 46;
                        i[q + (f + 1) >> 0] = 48;
                        f = f + 2 | 0;
                      }
                    } else {
                      I = b;
                      h = k[I + 4 >> 2] | 0;
                      f = B;
                      k[f >> 2] = k[I >> 2];
                      k[f + 4 >> 2] = h;
                      f = Xq(q, 1010110, B) | 0;
                    }
                    I = hh(a, q, f) | 0;
                    k[b >> 2] = I;
                    k[e >> 2] = l[I + 4 >> 0] | 64;
                    break;
                  }
                case 99:
                  {
                    I = (k[c >> 2] | 0) + (4 - 1) & ~(4 - 1);
                    e = k[I >> 2] | 0;
                    k[c >> 2] = I + 4;
                    i[o >> 0] = e;
                    e = e & 255;
                    if (!(i[813362 + (e + 1) >> 0] & 4)) {
                      k[u >> 2] = e;
                      Ug(a, 1000077, u) | 0;
                      break c;
                    } else {
                      I = k[F >> 2] | 0;
                      k[F >> 2] = I + 16;
                      h = hh(a, o, 1) | 0;
                      k[I >> 2] = h;
                      k[I + 8 >> 2] = l[h + 4 >> 0] | 64;
                      break c;
                    }
                  }
                case 115:
                  {
                    h = (k[c >> 2] | 0) + (4 - 1) & ~(4 - 1);
                    f = k[h >> 2] | 0;
                    k[c >> 2] = h + 4;
                    f = (f | 0) == 0 ? 1015567 : f;
                    h = yr(f | 0) | 0;
                    I = k[F >> 2] | 0;
                    k[F >> 2] = I + 16;
                    h = hh(a, f, h) | 0;
                    k[I >> 2] = h;
                    k[I + 8 >> 2] = l[h + 4 >> 0] | 64;
                    break;
                  }
                case 102:
                  {
                    e = k[F >> 2] | 0;
                    k[F >> 2] = e + 16;
                    f = (k[c >> 2] | 0) + (8 - 1) & ~(8 - 1);
                    J = +p[f >> 3];
                    k[c >> 2] = f + 8;
                    p[e >> 3] = J;
                    k[e + 8 >> 2] = 3;
                    e = k[F >> 2] | 0;
                    f = e + -16 | 0;
                    e = e + -8 | 0;
                    if ((k[e >> 2] | 0) != 19) {
                      p[z >> 3] = +p[f >> 3];
                      b = Xq(q, 1010115, z) | 0;
                      I = q + (Tp(q, 1000065) | 0) | 0;
                      if (!(i[I >> 0] | 0)) {
                        i[q + b >> 0] = 46;
                        i[q + (b + 1) >> 0] = 48;
                        b = b + 2 | 0;
                      }
                    } else {
                      h = f;
                      I = k[h + 4 >> 2] | 0;
                      b = y;
                      k[b >> 2] = k[h >> 2];
                      k[b + 4 >> 2] = I;
                      b = Xq(q, 1010110, y) | 0;
                    }
                    I = hh(a, q, b) | 0;
                    k[f >> 2] = I;
                    k[e >> 2] = l[I + 4 >> 0] | 64;
                    break;
                  }
                case 37:
                  {
                    I = k[F >> 2] | 0;
                    k[F >> 2] = I + 16;
                    h = hh(a, 1007444, 1) | 0;
                    k[I >> 2] = h;
                    k[I + 8 >> 2] = l[h + 4 >> 0] | 64;
                    break;
                  }
                case 112:
                  {
                    I = (k[c >> 2] | 0) + (4 - 1) & ~(4 - 1);
                    h = k[I >> 2] | 0;
                    k[c >> 2] = I + 4;
                    k[A >> 2] = h;
                    h = Xq(s, 1000083, A) | 0;
                    I = k[F >> 2] | 0;
                    k[F >> 2] = I + 16;
                    h = hh(a, s, h) | 0;
                    k[I >> 2] = h;
                    k[I + 8 >> 2] = l[h + 4 >> 0] | 64;
                    break;
                  }
                case 85:
                  {
                    I = (k[c >> 2] | 0) + (4 - 1) & ~(4 - 1);
                    e = k[I >> 2] | 0;
                    k[c >> 2] = I + 4;
                    if (e >>> 0 < 128) {
                      i[n >> 0] = e;
                      e = 1;
                    } else {
                      b = 63;
                      f = 1;
                      while (1) {
                        h = f + 1 | 0;
                        i[t + (8 - f) >> 0] = e & 63 | 128;
                        e = e >>> 6;
                        b = b >>> 1;
                        if (e >>> 0 > b >>> 0)
                          f = h;
                        else
                          break;
                      }
                      i[t + (7 - f) >> 0] = b << 1 ^ 254 | e;
                      e = h;
                    }
                    I = k[F >> 2] | 0;
                    k[F >> 2] = I + 16;
                    h = hh(a, t + (8 - e) | 0, e) | 0;
                    k[I >> 2] = h;
                    k[I + 8 >> 2] = l[h + 4 >> 0] | 64;
                    break;
                  }
                case 73:
                  {
                    e = k[F >> 2] | 0;
                    k[F >> 2] = e + 16;
                    f = (k[c >> 2] | 0) + (8 - 1) & ~(8 - 1);
                    I = f;
                    h = k[I >> 2] | 0;
                    I = k[I + 4 >> 2] | 0;
                    k[c >> 2] = f + 8;
                    f = e;
                    k[f >> 2] = h;
                    k[f + 4 >> 2] = I;
                    k[e + 8 >> 2] = 19;
                    e = k[F >> 2] | 0;
                    f = e + -16 | 0;
                    e = e + -8 | 0;
                    if ((k[e >> 2] | 0) != 19) {
                      p[x >> 3] = +p[f >> 3];
                      b = Xq(q, 1010115, x) | 0;
                      I = q + (Tp(q, 1000065) | 0) | 0;
                      if (!(i[I >> 0] | 0)) {
                        i[q + b >> 0] = 46;
                        i[q + (b + 1) >> 0] = 48;
                        b = b + 2 | 0;
                      }
                    } else {
                      h = f;
                      I = k[h + 4 >> 2] | 0;
                      b = w;
                      k[b >> 2] = k[h >> 2];
                      k[b + 4 >> 2] = I;
                      b = Xq(q, 1010110, w) | 0;
                    }
                    I = hh(a, q, b) | 0;
                    k[f >> 2] = I;
                    k[e >> 2] = l[I + 4 >> 0] | 64;
                    break;
                  }
                default:
                  break b;
              }
 while (0);
            h = j + 2 | 0;
            b = g + 2 | 0;
            g = Op(b, 37) | 0;
            e = k[F >> 2] | 0;
            f = (k[m >> 2] | 0) - e | 0;
            if (!g) {
              E = b;
              C = f;
              d = e;
              G = h;
              break a;
            } else
              j = h;
          }
          k[D >> 2] = e;
          Pf(a, 1000086, D);
        }
 while (0);
      if ((C | 0) < 32) {
        Zf(a, 1);
        d = k[F >> 2] | 0;
      }
      I = yr(E | 0) | 0;
      k[F >> 2] = d + 16;
      I = hh(a, E, I) | 0;
      k[d >> 2] = I;
      k[d + 8 >> 2] = l[I + 4 >> 0] | 64;
      if ((G | 0) <= 0) {
        I = k[F >> 2] | 0;
        I = I + -16 | 0;
        I = k[I >> 2] | 0;
        I = I + 24 | 0;
        r = H;
        return I | 0;
      }
      Lh(a, G | 1);
      I = k[F >> 2] | 0;
      I = I + -16 | 0;
      I = k[I >> 2] | 0;
      I = I + 24 | 0;
      r = H;
      return I | 0;
    }
    function Ug(a, b, c) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      var d = 0,
          e = 0;
      d = r;
      r = r + 16 | 0;
      e = d;
      k[e >> 2] = c;
      c = Tg(a, b, e) | 0;
      r = d;
      return c | 0;
    }
    function Vg(a, b, c) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      var d = 0,
          e = 0,
          f = 0,
          g = 0,
          h = 0;
      h = yr(b | 0) | 0;
      switch (i[b >> 0] | 0) {
        case 61:
          {
            d = b + 1 | 0;
            if (h >>> 0 > c >>> 0) {
              h = c + -1 | 0;
              rr(a | 0, d | 0, h | 0) | 0;
              i[a + h >> 0] = 0;
              return ;
            } else {
              rr(a | 0, d | 0, h | 0) | 0;
              return ;
            }
          }
        case 64:
          if (h >>> 0 > c >>> 0) {
            i[a >> 0] = i[1012760] | 0;
            i[a + 1 >> 0] = i[1012761] | 0;
            i[a + 2 >> 0] = i[1012762] | 0;
            rr(a + 3 | 0, b + (4 - c + h) | 0, c + -3 | 0) | 0;
            return ;
          } else {
            rr(a | 0, b + 1 | 0, h | 0) | 0;
            return ;
          }
        default:
          {
            g = Op(b, 10) | 0;
            f = a;
            e = 1000129;
            d = f + 9 | 0;
            do {
              i[f >> 0] = i[e >> 0] | 0;
              f = f + 1 | 0;
              e = e + 1 | 0;
            } while ((f | 0) < (d | 0));
            f = a + 9 | 0;
            d = c + -15 | 0;
            e = (g | 0) == 0;
            if (h >>> 0 < d >>> 0 & e) {
              rr(f | 0, b | 0, h | 0) | 0;
              d = h + 9 | 0;
            } else {
              h = e ? h : g - b | 0;
              d = h >>> 0 > d >>> 0 ? d : h;
              rr(f | 0, b | 0, d | 0) | 0;
              h = a + (d + 9) | 0;
              i[h >> 0] = i[1012760] | 0;
              i[h + 1 >> 0] = i[1012761] | 0;
              i[h + 2 >> 0] = i[1012762] | 0;
              d = d + 12 | 0;
            }
            a = a + d | 0;
            i[a >> 0] = i[1000139] | 0;
            i[a + 1 >> 0] = i[1000140] | 0;
            i[a + 2 >> 0] = i[1000141] | 0;
            return ;
          }
      }
    }
    function Wg(a, b, c, d, e, f) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      d = d | 0;
      e = e | 0;
      f = f | 0;
      var g = 0,
          h = 0,
          j = 0,
          l = 0,
          m = 0,
          n = 0,
          o = 0,
          p = 0,
          q = 0,
          s = 0,
          t = 0;
      q = r;
      r = r + 176 | 0;
      h = q + 160 | 0;
      l = q + 88 | 0;
      o = q;
      j = q + 112 | 0;
      m = kg(a, 1) | 0;
      n = a + 8 | 0;
      s = k[n >> 2] | 0;
      k[s >> 2] = m;
      k[s + 8 >> 2] = 70;
      s = (k[n >> 2] | 0) + 16 | 0;
      k[n >> 2] = s;
      g = a + 24 | 0;
      if (((k[g >> 2] | 0) - s | 0) < 16)
        Zf(a, 0);
      t = ph(a) | 0;
      k[o + 64 >> 2] = t;
      s = k[n >> 2] | 0;
      k[s >> 2] = t;
      k[s + 8 >> 2] = 69;
      s = (k[n >> 2] | 0) + 16 | 0;
      k[n >> 2] = s;
      if (((k[g >> 2] | 0) - s | 0) < 16)
        Zf(a, 0);
      g = og(a) | 0;
      k[m + 12 >> 2] = g;
      k[j >> 2] = g;
      e = ih(a, e) | 0;
      s = g + 72 | 0;
      k[s >> 2] = e;
      k[o + 60 >> 2] = c;
      t = o + 68 | 0;
      k[t >> 2] = d;
      k[d + 28 >> 2] = 0;
      k[d + 16 >> 2] = 0;
      k[d + 4 >> 2] = 0;
      Fg(a, o, b, e, f);
      b = o + 48 | 0;
      k[j + 4 >> 2] = k[b >> 2];
      k[j + 8 >> 2] = o;
      k[b >> 2] = j;
      k[j + 16 >> 2] = 0;
      k[j + 20 >> 2] = 0;
      k[j + 24 >> 2] = -1;
      k[j + 28 >> 2] = 0;
      k[j + 32 >> 2] = 0;
      b = j + 40 | 0;
      k[b >> 2] = 0;
      i[b + 4 >> 0] = 0;
      t = k[t >> 2] | 0;
      k[j + 36 >> 2] = k[t + 4 >> 2];
      k[s >> 2] = k[o + 72 >> 2];
      i[g + 8 >> 0] = 2;
      i[h + 14 >> 0] = 0;
      i[h + 12 >> 0] = 0;
      k[h + 4 >> 2] = k[t + 28 >> 2];
      k[h + 8 >> 2] = k[t + 16 >> 2];
      i[h + 13 >> 0] = 0;
      k[h >> 2] = 0;
      k[j + 12 >> 2] = h;
      i[g + 7 >> 0] = 1;
      k[l + 16 >> 2] = -1;
      k[l + 20 >> 2] = -1;
      k[l >> 2] = 8;
      k[l + 8 >> 2] = 0;
      Lk(j, k[o + 76 >> 2] | 0, l) | 0;
      Gg(o);
      g = o + 16 | 0;
      a: while (1) {
        a = k[g >> 2] | 0;
        switch (a | 0) {
          case 277:
          case 289:
          case 262:
          case 261:
          case 260:
            break a;
          default:
            {}
        }
        Mk(o);
        if ((a | 0) == 274) {
          p = 8;
          break;
        }
      }
      if ((p | 0) == 8)
        a = k[g >> 2] | 0;
      if ((a | 0) == 289) {
        Ok(o);
        k[n >> 2] = (k[n >> 2] | 0) + -16;
        r = q;
        return m | 0;
      } else
        Nk(o, 289);
      return 0;
    }
    function Xg(a, b) {
      a = a | 0;
      b = b | 0;
      var c = 0;
      c = a + 12 | 0;
      a = a + 8 | 0;
      k[a >> 2] = (k[c >> 2] | 0) - b + (k[a >> 2] | 0);
      k[c >> 2] = b;
      return ;
    }
    function Yg(a) {
      a = a | 0;
      var b = 0;
      b = Kg(a, 0, 0, 36) | 0;
      a = k[a + 16 >> 2] | 0;
      k[a + 12 >> 2] = b;
      k[b + 8 >> 2] = a;
      k[b + 12 >> 2] = 0;
      return b | 0;
    }
    function Zg(a) {
      a = a | 0;
      var b = 0,
          c = 0;
      c = (k[a + 16 >> 2] | 0) + 12 | 0;
      b = k[c >> 2] | 0;
      k[c >> 2] = 0;
      if (!b)
        return ;
      do {
        c = b;
        b = k[b + 12 >> 2] | 0;
        Kg(a, c, 36, 0) | 0;
      } while ((b | 0) != 0);
      return ;
    }
    function _g(a) {
      a = a | 0;
      var b = 0,
          c = 0,
          d = 0,
          e = 0;
      d = k[a + 16 >> 2] | 0;
      c = d + 12 | 0;
      b = k[c >> 2] | 0;
      if (!b)
        return ;
      while (1) {
        e = d;
        d = k[b + 12 >> 2] | 0;
        if (!d) {
          b = 4;
          break;
        }
        Kg(a, b, 36, 0) | 0;
        k[c >> 2] = d;
        k[d + 8 >> 2] = e;
        c = d + 12 | 0;
        b = k[c >> 2] | 0;
        if (!b) {
          b = 4;
          break;
        }
      }
      if ((b | 0) == 4)
        return ;
    }
    function $g(a) {
      a = a | 0;
      var b = 0,
          c = 0,
          d = 0,
          e = 0,
          f = 0,
          g = 0,
          h = 0,
          m = 0,
          n = 0;
      b = k[a + 12 >> 2] | 0;
      if ((k[b + 12 >> 2] | 0) > 0)
        zg(a);
      e = Kg(a, 0, 8, 116) | 0;
      c = e + 4 | 0;
      i[e + 9 >> 0] = (l[b + 60 >> 0] | 0) & 3;
      i[e + 8 >> 0] = 8;
      g = b + 64 | 0;
      k[c >> 2] = k[g >> 2];
      k[g >> 2] = c;
      g = a + 8 | 0;
      d = k[g >> 2] | 0;
      k[d >> 2] = c;
      k[d + 8 >> 2] = 72;
      k[g >> 2] = (k[g >> 2] | 0) + 16;
      k[e + 16 >> 2] = b;
      g = e + 32 | 0;
      k[g >> 2] = 0;
      d = e + 20 | 0;
      k[d >> 2] = 0;
      f = e + 96 | 0;
      k[f >> 2] = 0;
      k[e + 44 >> 2] = c;
      k[e + 48 >> 2] = 0;
      j[e + 110 >> 1] = 0;
      m = e + 88 | 0;
      k[m >> 2] = 0;
      h = e + 112 | 0;
      i[h >> 0] = 0;
      n = e + 100 | 0;
      k[n >> 2] = 0;
      i[e + 113 >> 0] = 1;
      k[e + 36 >> 2] = 0;
      j[e + 108 >> 1] = 1;
      i[e + 10 >> 0] = 0;
      k[e + 92 >> 2] = 0;
      i[h >> 0] = i[a + 108 >> 0] | 0;
      h = k[a + 96 >> 2] | 0;
      k[n >> 2] = h;
      k[m >> 2] = k[a + 84 >> 2];
      k[e + 104 >> 2] = h;
      b = (k[b + 136 >> 2] | 0) + -4 | 0;
      b = l[b >> 0] | l[b + 1 >> 0] << 8 | l[b + 2 >> 0] << 16 | l[b + 3 >> 0] << 24;
      i[e >> 0] = b;
      i[e + 1 >> 0] = b >> 8;
      i[e + 2 >> 0] = b >> 16;
      i[e + 3 >> 0] = b >> 24;
      b = Kg(a, 0, 0, 640) | 0;
      k[g >> 2] = b;
      k[f >> 2] = 40;
      f = b + 8 | 0;
      k[f >> 2] = 0;
      k[b + 24 >> 2] = 0;
      k[b + 40 >> 2] = 0;
      k[b + 56 >> 2] = 0;
      k[b + 72 >> 2] = 0;
      k[b + 88 >> 2] = 0;
      k[b + 104 >> 2] = 0;
      k[b + 120 >> 2] = 0;
      k[b + 136 >> 2] = 0;
      k[b + 152 >> 2] = 0;
      k[b + 168 >> 2] = 0;
      k[b + 184 >> 2] = 0;
      k[b + 200 >> 2] = 0;
      k[b + 216 >> 2] = 0;
      k[b + 232 >> 2] = 0;
      k[b + 248 >> 2] = 0;
      k[b + 264 >> 2] = 0;
      k[b + 280 >> 2] = 0;
      k[b + 296 >> 2] = 0;
      k[b + 312 >> 2] = 0;
      k[b + 328 >> 2] = 0;
      k[b + 344 >> 2] = 0;
      k[b + 360 >> 2] = 0;
      k[b + 376 >> 2] = 0;
      k[b + 392 >> 2] = 0;
      k[b + 408 >> 2] = 0;
      k[b + 424 >> 2] = 0;
      k[b + 440 >> 2] = 0;
      k[b + 456 >> 2] = 0;
      k[b + 472 >> 2] = 0;
      k[b + 488 >> 2] = 0;
      k[b + 504 >> 2] = 0;
      k[b + 520 >> 2] = 0;
      k[b + 536 >> 2] = 0;
      k[b + 552 >> 2] = 0;
      k[b + 568 >> 2] = 0;
      k[b + 584 >> 2] = 0;
      k[b + 600 >> 2] = 0;
      k[b + 616 >> 2] = 0;
      k[b + 632 >> 2] = 0;
      k[e + 28 >> 2] = b + 560;
      a = e + 52 | 0;
      k[e + 60 >> 2] = 0;
      k[e + 64 >> 2] = 0;
      i[e + 86 >> 0] = 0;
      k[a >> 2] = b;
      k[e + 12 >> 2] = b + 16;
      k[f >> 2] = 0;
      k[e + 56 >> 2] = b + 336;
      k[d >> 2] = a;
      return c | 0;
    }
    function ah(a, b) {
      a = a | 0;
      b = b | 0;
      var c = 0,
          d = 0,
          e = 0,
          f = 0,
          g = 0;
      f = b + -4 | 0;
      e = b + 28 | 0;
      ng(b, k[e >> 2] | 0);
      c = k[e >> 2] | 0;
      if (!c) {
        Kg(a, f, 116, 0) | 0;
        return ;
      }
      k[b + 16 >> 2] = b + 48;
      g = b + 60 | 0;
      d = k[g >> 2] | 0;
      k[g >> 2] = 0;
      if (d) {
        c = d;
        do {
          g = c;
          c = k[c + 12 >> 2] | 0;
          Kg(b, g, 36, 0) | 0;
        } while ((c | 0) != 0);
        c = k[e >> 2] | 0;
      }
      Kg(b, c, k[b + 92 >> 2] << 4, 0) | 0;
      Kg(a, f, 116, 0) | 0;
      return ;
    }
    function bh(a, b) {
      a = a | 0;
      b = b | 0;
      var c = 0,
          d = 0,
          e = 0,
          f = 0,
          g = 0,
          h = 0;
      g = r;
      r = r + 32 | 0;
      d = g + 8 | 0;
      c = g;
      e = qd[a & 63](b, 0, 8, 400) | 0;
      if (!e) {
        f = 0;
        r = g;
        return f | 0;
      }
      f = e + 4 | 0;
      h = e + 120 | 0;
      k[f >> 2] = 0;
      i[e + 8 >> 0] = 8;
      i[e + 180 >> 0] = 1;
      i[e + 9 >> 0] = 1;
      k[e + 16 >> 2] = h;
      k[e + 32 >> 2] = 0;
      k[e + 20 >> 2] = 0;
      k[e + 96 >> 2] = 0;
      k[e + 44 >> 2] = f;
      k[e + 48 >> 2] = 0;
      j[e + 110 >> 1] = 0;
      k[e + 88 >> 2] = 0;
      i[e + 112 >> 0] = 0;
      k[e + 100 >> 2] = 0;
      i[e + 113 >> 0] = 1;
      k[e + 104 >> 2] = 0;
      k[e + 36 >> 2] = 0;
      j[e + 108 >> 1] = 1;
      i[e + 10 >> 0] = 0;
      k[e + 92 >> 2] = 0;
      k[h >> 2] = a;
      k[e + 124 >> 2] = b;
      k[e + 256 >> 2] = f;
      a = Hb(0) | 0;
      k[c >> 2] = a;
      k[d >> 2] = f;
      k[d + 4 >> 2] = c;
      k[d + 8 >> 2] = 80;
      k[d + 12 >> 2] = 47;
      c = eh(d, 16, a) | 0;
      k[e + 176 >> 2] = c;
      i[e + 183 >> 0] = 0;
      c = e + 140 | 0;
      k[e + 168 >> 2] = 0;
      k[e + 228 >> 2] = 0;
      k[e + 236 >> 2] = 0;
      k[e + 252 >> 2] = 0;
      k[e + 260 >> 2] = 0;
      k[c >> 2] = 0;
      k[c + 4 >> 2] = 0;
      k[c + 8 >> 2] = 0;
      k[c + 12 >> 2] = 0;
      i[e + 181 >> 0] = 7;
      i[e + 182 >> 0] = 0;
      c = e + 128 | 0;
      a = e + 184 | 0;
      d = a + 44 | 0;
      do {
        k[a >> 2] = 0;
        a = a + 4 | 0;
      } while ((a | 0) < (d | 0));
      k[c >> 2] = 400;
      k[e + 132 >> 2] = 0;
      k[e + 240 >> 2] = 0;
      k[e + 244 >> 2] = 200;
      k[e + 248 >> 2] = 200;
      a = e + 364 | 0;
      d = a + 36 | 0;
      do {
        k[a >> 2] = 0;
        a = a + 4 | 0;
      } while ((a | 0) < (d | 0));
      if (!(Xf(f, 48, 0) | 0)) {
        h = f;
        r = g;
        return h | 0;
      }
      Qk(f);
      h = 0;
      r = g;
      return h | 0;
    }
    function ch(a) {
      a = a | 0;
      Qk(k[(k[a + 12 >> 2] | 0) + 136 >> 2] | 0);
      return ;
    }
    function dh(a, b) {
      a = a | 0;
      b = b | 0;
      var c = 0;
      c = k[a + 12 >> 2] | 0;
      if ((a | 0) != (b | 0))
        if ((c | 0) == (k[b + 12 >> 2] | 0))
          c = (cr(a + 24 | 0, b + 24 | 0, c) | 0) == 0;
        else
          c = 0;
      else
        c = 1;
      return c & 1 | 0;
    }
    function eh(a, b, c) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      var d = 0;
      c = c ^ b;
      d = (b >>> 5) + 1 | 0;
      if (d >>> 0 > b >>> 0) {
        a = c;
        return a | 0;
      }
      do {
        c = (c << 5) + (c >>> 2) + (l[a + (b + -1) >> 0] | 0) ^ c;
        b = b - d | 0;
      } while (b >>> 0 >= d >>> 0);
      return c | 0;
    }
    function fh(a, b) {
      a = a | 0;
      b = b | 0;
      var c = 0,
          d = 0,
          e = 0,
          f = 0,
          g = 0,
          h = 0,
          i = 0,
          j = 0,
          l = 0;
      h = k[a + 12 >> 2] | 0;
      g = h + 24 | 0;
      h = h + 32 | 0;
      d = k[h >> 2] | 0;
      if ((d | 0) < (b | 0)) {
        if ((b + 1 | 0) >>> 0 > 1073741823)
          Jg(a);
        e = Kg(a, k[g >> 2] | 0, d << 2, b << 2) | 0;
        k[g >> 2] = e;
        d = k[h >> 2] | 0;
        if ((d | 0) < (b | 0) ? (k[e + (d << 2) >> 2] = 0, c = d + 1 | 0, (c | 0) != (b | 0)) : 0)
          do {
            k[(k[g >> 2] | 0) + (c << 2) >> 2] = 0;
            c = c + 1 | 0;
          } while ((c | 0) != (b | 0));
      }
      if ((d | 0) > 0) {
        c = b + -1 | 0;
        f = 0;
        do {
          i = (k[g >> 2] | 0) + (f << 2) | 0;
          e = k[i >> 2] | 0;
          k[i >> 2] = 0;
          if (e)
            do {
              l = e + 16 | 0;
              j = e;
              e = k[l >> 2] | 0;
              i = (k[g >> 2] | 0) + ((k[j + 8 >> 2] & c) << 2) | 0;
              k[l >> 2] = k[i >> 2];
              k[i >> 2] = j;
            } while ((e | 0) != 0);
          f = f + 1 | 0;
        } while ((f | 0) < (d | 0));
      }
      if ((d | 0) <= (b | 0)) {
        k[h >> 2] = b;
        return ;
      }
      if ((b + 1 | 0) >>> 0 > 1073741823)
        Jg(a);
      l = Kg(a, k[g >> 2] | 0, d << 2, b << 2) | 0;
      k[g >> 2] = l;
      k[h >> 2] = b;
      return ;
    }
    function gh(a, b) {
      a = a | 0;
      b = b | 0;
      var c = 0,
          d = 0,
          e = 0;
      d = k[a + 12 >> 2] | 0;
      a = (k[d + 24 >> 2] | 0) + (((k[d + 32 >> 2] | 0) + -1 & k[b + 8 >> 2]) << 2) | 0;
      while (1) {
        e = k[a >> 2] | 0;
        c = e + 16 | 0;
        if ((e | 0) == (b | 0))
          break;
        else
          a = c;
      }
      k[a >> 2] = k[c >> 2];
      e = d + 28 | 0;
      k[e >> 2] = (k[e >> 2] | 0) + -1;
      return ;
    }
    function hh(a, b, c) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      var d = 0,
          e = 0,
          f = 0,
          g = 0,
          h = 0,
          j = 0,
          m = 0,
          n = 0;
      if (c >>> 0 >= 41) {
        if ((c + 1 | 0) >>> 0 > 4294967275)
          Jg(a);
        m = k[(k[a + 12 >> 2] | 0) + 56 >> 2] | 0;
        n = vg(a, 20, c + 25 | 0) | 0;
        k[n + 12 >> 2] = c;
        k[n + 8 >> 2] = m;
        i[n + 6 >> 0] = 0;
        a = n + 24 | 0;
        rr(a | 0, b | 0, c | 0) | 0;
        i[a + c >> 0] = 0;
        return n | 0;
      }
      n = k[a + 12 >> 2] | 0;
      f = k[n + 56 >> 2] ^ c;
      d = (c >>> 5) + 1 | 0;
      if (d >>> 0 > c >>> 0)
        m = f;
      else {
        e = c;
        do {
          f = (f << 5) + (f >>> 2) + (l[b + (e + -1) >> 0] | 0) ^ f;
          e = e - d | 0;
        } while (e >>> 0 >= d >>> 0);
        m = f;
      }
      d = n + 32 | 0;
      g = k[d >> 2] | 0;
      h = n + 24 | 0;
      j = (k[h >> 2] | 0) + ((g + -1 & m) << 2) | 0;
      f = k[j >> 2] | 0;
      a: do
        if (f) {
          while (1) {
            if ((k[f + 12 >> 2] | 0) == (c | 0) ? (cr(b, f + 24 | 0, c) | 0) == 0 : 0)
              break;
            f = k[f + 16 >> 2] | 0;
            if (!f)
              break a;
          }
          d = f + 5 | 0;
          e = (l[d >> 0] | 0) ^ 3;
          if (((l[n + 60 >> 0] | 0) ^ 3) & e) {
            n = f;
            return n | 0;
          }
          i[d >> 0] = e;
          n = f;
          return n | 0;
        }
 while (0);
      e = n + 28 | 0;
      if ((g | 0) < 1073741824 ? (k[e >> 2] | 0) >= (g | 0) : 0) {
        fh(a, g << 1);
        f = (k[h >> 2] | 0) + (((k[d >> 2] | 0) + -1 & m) << 2) | 0;
      } else
        f = j;
      n = vg(a, 4, c + 25 | 0) | 0;
      k[n + 12 >> 2] = c;
      k[n + 8 >> 2] = m;
      i[n + 6 >> 0] = 0;
      a = n + 24 | 0;
      rr(a | 0, b | 0, c | 0) | 0;
      i[a + c >> 0] = 0;
      k[n + 16 >> 2] = k[f >> 2];
      k[f >> 2] = n;
      k[e >> 2] = (k[e >> 2] | 0) + 1;
      return n | 0;
    }
    function ih(a, b) {
      a = a | 0;
      b = b | 0;
      return hh(a, b, yr(b | 0) | 0) | 0;
    }
    function jh(a, b) {
      a = a | 0;
      b = b | 0;
      var c = 0,
          d = 0;
      if (b >>> 0 > 4294967271)
        Jg(a);
      else {
        a = vg(a, 7, b + 24 | 0) | 0;
        k[a + 12 >> 2] = b;
        k[a + 8 >> 2] = 0;
        d = 80;
        c = k[d + 4 >> 2] | 0;
        b = a + 16 | 0;
        k[b >> 2] = k[d >> 2];
        k[b + 4 >> 2] = c;
        i[a + 6 >> 0] = k[22];
        return a | 0;
      }
      return 0;
    }
    function kh(a, b, c) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      var d = 0,
          e = 0,
          f = 0,
          g = 0,
          h = 0,
          i = 0,
          j = 0,
          m = 0,
          n = 0,
          o = 0;
      o = r;
      r = r + 16 | 0;
      i = o;
      m = c + 8 | 0;
      switch (k[m >> 2] | 0) {
        case 19:
          {
            h = c;
            d = k[h >> 2] | 0;
            h = k[h + 4 >> 2] | 0;
            if (!(!(h >>> 0 > 0 | (h | 0) == 0 & d >>> 0 > 2147483648 | ((h | 0) < 0 | (h | 0) == 0 & d >>> 0 < 1) | (d | 0) == 0) ? (g = k[b + 8 >> 2] | 0, d >>> 0 <= g >>> 0) : 0))
              n = 5;
            break;
          }
        case 0:
          {
            g = k[b + 8 >> 2] | 0;
            d = 0;
            break;
          }
        default:
          n = 5;
      }
      if ((n | 0) == 5) {
        f = Rk(b, c) | 0;
        g = f + 16 | 0;
        a: do
          if (!(Kh(0, g, c) | 0)) {
            while (1) {
              if (((k[f + 24 >> 2] | 0) == 10 ? (k[m >> 2] & 64 | 0) != 0 : 0) ? (k[g >> 2] | 0) == (k[c >> 2] | 0) : 0) {
                j = f;
                break a;
              }
              h = k[f + 28 >> 2] | 0;
              if (!h)
                break;
              e = f + (h << 5) | 0;
              g = f + (h << 5) + 16 | 0;
              if (Kh(0, g, c) | 0) {
                j = e;
                break a;
              } else
                f = e;
            }
            Pf(a, 1000142, i);
          } else
            j = f;
 while (0);
        d = k[b + 8 >> 2] | 0;
        g = d;
        d = d + 1 + (j - (k[b + 16 >> 2] | 0) >> 5) | 0;
      }
      h = b + 12 | 0;
      while (1) {
        if (d >>> 0 >= g >>> 0)
          break;
        f = k[h >> 2] | 0;
        e = d + 1 | 0;
        if (!(k[f + (d << 4) + 8 >> 2] | 0))
          d = e;
        else {
          n = 17;
          break;
        }
      }
      if ((n | 0) == 17) {
        n = c;
        k[n >> 2] = e;
        k[n + 4 >> 2] = 0;
        k[m >> 2] = 19;
        n = c + 16 | 0;
        c = f + (d << 4) | 0;
        k[n >> 2] = k[c >> 2];
        k[n + 4 >> 2] = k[c + 4 >> 2];
        k[n + 8 >> 2] = k[c + 8 >> 2];
        k[n + 12 >> 2] = k[c + 12 >> 2];
        n = 1;
        r = o;
        return n | 0;
      }
      d = d - g | 0;
      f = 1 << (l[b + 7 >> 0] | 0);
      if ((d | 0) >= (f | 0)) {
        n = 0;
        r = o;
        return n | 0;
      }
      e = b + 16 | 0;
      g = k[e >> 2] | 0;
      while (1) {
        if (k[g + (d << 5) + 8 >> 2] | 0)
          break;
        d = d + 1 | 0;
        if ((d | 0) >= (f | 0)) {
          d = 0;
          n = 23;
          break;
        }
      }
      if ((n | 0) == 23) {
        r = o;
        return d | 0;
      }
      n = g + (d << 5) + 16 | 0;
      k[c >> 2] = k[n >> 2];
      k[c + 4 >> 2] = k[n + 4 >> 2];
      k[c + 8 >> 2] = k[n + 8 >> 2];
      k[c + 12 >> 2] = k[n + 12 >> 2];
      n = c + 16 | 0;
      c = (k[e >> 2] | 0) + (d << 5) | 0;
      k[n >> 2] = k[c >> 2];
      k[n + 4 >> 2] = k[c + 4 >> 2];
      k[n + 8 >> 2] = k[c + 8 >> 2];
      k[n + 12 >> 2] = k[c + 12 >> 2];
      n = 1;
      r = o;
      return n | 0;
    }
    function lh(a, b, c, d) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      d = d | 0;
      var e = 0,
          f = 0,
          g = 0,
          h = 0,
          j = 0,
          m = 0,
          n = 0,
          o = 0,
          p = 0,
          q = 0,
          s = 0,
          t = 0,
          u = 0,
          v = 0,
          w = 0;
      v = r;
      r = r + 32 | 0;
      g = v + 16 | 0;
      s = v;
      m = b + 8 | 0;
      n = k[m >> 2] | 0;
      o = b + 7 | 0;
      t = i[o >> 0] | 0;
      p = t & 255;
      q = b + 16 | 0;
      u = k[q >> 2] | 0;
      if (n >>> 0 < c >>> 0) {
        if ((c + 1 | 0) >>> 0 > 268435455)
          Jg(a);
        j = b + 12 | 0;
        h = Kg(a, k[j >> 2] | 0, n << 4, c << 4) | 0;
        k[j >> 2] = h;
        j = k[m >> 2] | 0;
        if (j >>> 0 < c >>> 0)
          do {
            k[h + (j << 4) + 8 >> 2] = 0;
            j = j + 1 | 0;
          } while ((j | 0) != (c | 0));
        k[m >> 2] = c;
      }
      if (!d) {
        k[q >> 2] = 104;
        d = 0;
        h = 104;
        j = 0;
      } else {
        f = Ng(d) | 0;
        if ((f | 0) > 30)
          Pf(a, 1000164, g);
        j = 1 << f;
        if ((j + 1 | 0) >>> 0 > 134217727)
          Jg(a);
        h = Kg(a, 0, 0, j << 5) | 0;
        k[q >> 2] = h;
        d = 0;
        do {
          k[h + (d << 5) + 28 >> 2] = 0;
          k[h + (d << 5) + 24 >> 2] = 0;
          k[h + (d << 5) + 8 >> 2] = 0;
          d = d + 1 | 0;
        } while ((d | 0) < (j | 0));
        d = j;
        j = f & 255;
      }
      i[o >> 0] = j;
      k[b + 20 >> 2] = h + (d << 5);
      do
        if (n >>> 0 > c >>> 0) {
          k[m >> 2] = c;
          f = b + 12 | 0;
          e = s + 8 | 0;
          j = c;
          do {
            d = k[f >> 2] | 0;
            if (!(k[d + (j << 4) + 8 >> 2] | 0))
              j = j + 1 | 0;
            else {
              g = d + (j << 4) | 0;
              j = j + 1 | 0;
              h = pr(j | 0, 0, -1, -1) | 0;
              w = O;
              a: do
                if (w >>> 0 < 0 | ((w | 0) == 0 ? h >>> 0 < (k[m >> 2] | 0) >>> 0 : 0)) {
                  h = d + (h << 4) | 0;
                  d = 28;
                } else {
                  h = (k[q >> 2] | 0) + (((1 << (l[o >> 0] | 0)) + -1 & j) << 5) | 0;
                  while (1) {
                    if ((k[h + 24 >> 2] | 0) == 19 ? (w = h + 16 | 0, (k[w + 4 >> 2] | 0) == 0 ? (k[w >> 2] | 0) == (j | 0) : 0) : 0)
                      break;
                    d = k[h + 28 >> 2] | 0;
                    if (!d) {
                      d = 29;
                      break a;
                    }
                    h = h + (d << 5) | 0;
                  }
                  d = 28;
                }
 while (0);
              if ((d | 0) == 28) {
                d = 0;
                if ((h | 0) == 80)
                  d = 29;
              }
              if ((d | 0) == 29) {
                h = s;
                k[h >> 2] = j;
                k[h + 4 >> 2] = 0;
                k[e >> 2] = 19;
                h = rh(a, b, s) | 0;
              }
              ;
              k[h >> 2] = k[g >> 2];
              k[h + 4 >> 2] = k[g + 4 >> 2];
              k[h + 8 >> 2] = k[g + 8 >> 2];
              k[h + 12 >> 2] = k[g + 12 >> 2];
            }
          } while ((j | 0) != (n | 0));
          if ((c + 1 | 0) >>> 0 > 268435455)
            Jg(a);
          else {
            w = b + 12 | 0;
            c = Kg(a, k[w >> 2] | 0, n << 4, c << 4) | 0;
            k[w >> 2] = c;
            break;
          }
        }
 while (0);
      j = 1 << p;
      if (t << 24 >> 24 != 31) {
        d = j;
        do {
          h = d;
          d = d + -1 | 0;
          if (k[u + (d << 5) + 8 >> 2] | 0) {
            g = u + (d << 5) | 0;
            f = u + (d << 5) + 16 | 0;
            e = uh(b, f) | 0;
            if ((e | 0) == 80)
              e = rh(a, b, f) | 0;
            k[e >> 2] = k[g >> 2];
            k[e + 4 >> 2] = k[g + 4 >> 2];
            k[e + 8 >> 2] = k[g + 8 >> 2];
            k[e + 12 >> 2] = k[g + 12 >> 2];
          }
        } while ((h | 0) > 1);
      }
      if ((u | 0) == 104) {
        r = v;
        return ;
      }
      Kg(a, u, j << 5, 0) | 0;
      r = v;
      return ;
    }
    function mh(a, b, c, d, e) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      d = d | 0;
      e = e | 0;
      var f = 0,
          g = 0,
          h = 0,
          i = 0,
          j = 0,
          m = 0;
      m = r;
      r = r + 16 | 0;
      j = m;
      f = pr(c | 0, d | 0, -1, -1) | 0;
      g = O;
      a: do
        if (g >>> 0 < 0 | ((g | 0) == 0 ? f >>> 0 < (k[b + 8 >> 2] | 0) >>> 0 : 0)) {
          h = (k[b + 12 >> 2] | 0) + (f << 4) | 0;
          i = 9;
        } else {
          f = (k[b + 16 >> 2] | 0) + (((1 << (l[b + 7 >> 0] | 0)) + -1 & c) << 5) | 0;
          while (1) {
            if ((k[f + 24 >> 2] | 0) == 19 ? (g = f + 16 | 0, (k[g >> 2] | 0) == (c | 0) ? (k[g + 4 >> 2] | 0) == (d | 0) : 0) : 0)
              break;
            g = k[f + 28 >> 2] | 0;
            if (!g)
              break a;
            f = f + (g << 5) | 0;
          }
          h = f;
          i = 9;
        }
 while (0);
      if ((i | 0) == 9 ? (h | 0) != 80 : 0) {
        b = h;
        k[b >> 2] = k[e >> 2];
        k[b + 4 >> 2] = k[e + 4 >> 2];
        k[b + 8 >> 2] = k[e + 8 >> 2];
        k[b + 12 >> 2] = k[e + 12 >> 2];
        r = m;
        return ;
      }
      i = j;
      k[i >> 2] = c;
      k[i + 4 >> 2] = d;
      k[j + 8 >> 2] = 19;
      b = rh(a, b, j) | 0;
      k[b >> 2] = k[e >> 2];
      k[b + 4 >> 2] = k[e + 4 >> 2];
      k[b + 8 >> 2] = k[e + 8 >> 2];
      k[b + 12 >> 2] = k[e + 12 >> 2];
      r = m;
      return ;
    }
    function nh(a, b, c) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      var d = 0;
      d = uh(b, c) | 0;
      if ((d | 0) != 80) {
        b = d;
        return b | 0;
      }
      b = rh(a, b, c) | 0;
      return b | 0;
    }
    function oh(a, b, c) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      var d = 0;
      if ((k[b + 16 >> 2] | 0) == 104)
        d = 0;
      else
        d = 1 << (l[b + 7 >> 0] | 0);
      lh(a, b, c, d);
      return ;
    }
    function ph(a) {
      a = a | 0;
      a = vg(a, 5, 32) | 0;
      k[a + 24 >> 2] = 0;
      i[a + 6 >> 0] = -1;
      k[a + 12 >> 2] = 0;
      k[a + 8 >> 2] = 0;
      k[a + 16 >> 2] = 104;
      i[a + 7 >> 0] = 0;
      k[a + 20 >> 2] = 104;
      return a | 0;
    }
    function qh(a, b) {
      a = a | 0;
      b = b | 0;
      var c = 0;
      c = k[b + 16 >> 2] | 0;
      if ((c | 0) != 104)
        Kg(a, c, 32 << (l[b + 7 >> 0] | 0), 0) | 0;
      Kg(a, k[b + 12 >> 2] | 0, k[b + 8 >> 2] << 4, 0) | 0;
      Kg(a, b, 32, 0) | 0;
      return ;
    }
    function rh(a, b, c) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      var d = 0,
          e = 0,
          f = 0,
          g = 0.0,
          h = 0,
          j = 0,
          m = 0,
          n = 0,
          o = 0,
          q = 0,
          s = 0,
          t = 0,
          u = 0,
          v = 0,
          w = 0,
          x = 0;
      x = r;
      r = r + 160 | 0;
      e = x + 24 | 0;
      v = x + 32 | 0;
      f = x;
      switch (k[c + 8 >> 2] | 0) {
        case 0:
          {
            Pf(a, 1000179, x + 16 | 0);
            break;
          }
        case 3:
          {
            m = 3;
            break;
          }
        default:
          w = c;
      }
      if ((m | 0) == 3) {
        g = +p[c >> 3];
        if (!(g == g & 0.0 == 0.0))
          Pf(a, 1000198, e);
        if (+Y(+g) == g ? g >= -9223372036854775808.0 & g < 9223372036854775808.0 : 0) {
          q = +Z(g) >= 1.0 ? (g > 0.0 ? ~~+la(+Y(g / 4294967296.0), 4294967295.0) >>> 0 : ~~+ja((g - +(~~g >>> 0)) / 4294967296.0) >>> 0) : 0;
          w = f;
          k[w >> 2] = ~~g >>> 0;
          k[w + 4 >> 2] = q;
          k[f + 8 >> 2] = 19;
          w = f;
        } else
          w = c;
      }
      j = Rk(b, w) | 0;
      o = j + 8 | 0;
      do
        if ((j | 0) == 104 | (k[o >> 2] | 0) != 0) {
          f = b + 20 | 0;
          s = b + 16 | 0;
          c = k[s >> 2] | 0;
          e = k[f >> 2] | 0;
          while (1) {
            if (e >>> 0 <= c >>> 0)
              break;
            d = e + -32 | 0;
            k[f >> 2] = d;
            if (!(k[e + -8 >> 2] | 0)) {
              n = e;
              m = 37;
              break;
            } else
              e = d;
          }
          if ((m | 0) == 37) {
            e = Rk(b, j + 16 | 0) | 0;
            if ((e | 0) == (j | 0)) {
              c = j + 28 | 0;
              e = k[c >> 2] | 0;
              if (!e)
                e = d;
              else {
                v = d;
                k[n + -4 >> 2] = j + (e << 5) - v >> 5;
                e = v;
              }
              k[c >> 2] = e - j >> 5;
              break;
            } else {
              while (1) {
                c = e + 28 | 0;
                f = e + (k[c >> 2] << 5) | 0;
                if ((f | 0) == (j | 0))
                  break;
                else
                  e = f;
              }
              f = d;
              k[c >> 2] = f - e >> 5;
              k[d >> 2] = k[j >> 2];
              k[d + 4 >> 2] = k[j + 4 >> 2];
              k[d + 8 >> 2] = k[j + 8 >> 2];
              k[d + 12 >> 2] = k[j + 12 >> 2];
              k[d + 16 >> 2] = k[j + 16 >> 2];
              k[d + 20 >> 2] = k[j + 20 >> 2];
              k[d + 24 >> 2] = k[j + 24 >> 2];
              k[d + 28 >> 2] = k[j + 28 >> 2];
              e = j + 28 | 0;
              if (k[e >> 2] | 0) {
                v = n + -4 | 0;
                k[v >> 2] = (k[v >> 2] | 0) + (j - f >> 5);
                k[e >> 2] = 0;
              }
              k[o >> 2] = 0;
              d = j;
              break;
            }
          }
          c = v;
          e = c + 128 | 0;
          do {
            k[c >> 2] = 0;
            c = c + 4 | 0;
          } while ((c | 0) < (e | 0));
          j = b + 12 | 0;
          h = k[b + 8 >> 2] | 0;
          f = 0;
          c = 1;
          d = 0;
          o = 1;
          while (1) {
            if (o >>> 0 > h >>> 0)
              if (c >>> 0 > h >>> 0) {
                q = f;
                break;
              } else
                m = h;
            else
              m = o;
            if (c >>> 0 > m >>> 0) {
              e = c;
              c = 0;
            } else {
              n = k[j >> 2] | 0;
              e = c;
              c = 0;
              do {
                c = ((k[n + (e + -1 << 4) + 8 >> 2] | 0) != 0 & 1) + c | 0;
                e = e + 1 | 0;
              } while (e >>> 0 <= m >>> 0);
            }
            q = v + (d << 2) | 0;
            k[q >> 2] = (k[q >> 2] | 0) + c;
            f = c + f | 0;
            d = d + 1 | 0;
            if ((d | 0) >= 32) {
              q = f;
              break;
            } else {
              c = e;
              o = o << 1;
            }
          }
          c = 0;
          f = 1 << (l[b + 7 >> 0] | 0);
          n = 0;
          a: while (1) {
            e = f;
            while (1) {
              f = e + -1 | 0;
              if (!e) {
                o = n;
                break a;
              }
              e = k[s >> 2] | 0;
              if (!(k[e + (f << 5) + 8 >> 2] | 0))
                e = f;
              else
                break;
            }
            if ((k[e + (f << 5) + 24 >> 2] | 0) == 19 ? (o = e + (f << 5) + 16 | 0, t = k[o >> 2] | 0, o = k[o + 4 >> 2] | 0, !(o >>> 0 > 0 | (o | 0) == 0 & t >>> 0 > 2147483648 | ((o | 0) < 0 | (o | 0) == 0 & t >>> 0 < 1) | (t | 0) == 0)) : 0) {
              e = v + ((Ng(t) | 0) << 2) | 0;
              k[e >> 2] = (k[e >> 2] | 0) + 1;
              e = 1;
            } else
              e = 0;
            c = e + c | 0;
            n = n + 1 | 0;
          }
          c = c + q | 0;
          if ((k[w + 8 >> 2] | 0) == 19 ? (t = w, u = k[t >> 2] | 0, t = k[t + 4 >> 2] | 0, !(t >>> 0 > 0 | (t | 0) == 0 & u >>> 0 > 2147483648 | ((t | 0) < 0 | (t | 0) == 0 & u >>> 0 < 1) | (u | 0) == 0)) : 0) {
            e = v + ((Ng(u) | 0) << 2) | 0;
            k[e >> 2] = (k[e >> 2] | 0) + 1;
            e = 1;
          } else
            e = 0;
          h = c + e | 0;
          b: do
            if (!h) {
              d = 0;
              e = 0;
            } else {
              j = 0;
              c = 0;
              m = 0;
              d = 0;
              e = 0;
              n = 1;
              while (1) {
                f = k[v + (m << 2) >> 2] | 0;
                if (!f)
                  f = c;
                else {
                  u = f + c | 0;
                  t = u >>> 0 > j >>> 0;
                  f = u;
                  d = t ? n : d;
                  e = t ? u : e;
                }
                if ((f | 0) == (h | 0))
                  break b;
                j = n & 2147483647;
                if (j >>> 0 >= h >>> 0)
                  break;
                else {
                  c = f;
                  m = m + 1 | 0;
                  n = n << 1;
                }
              }
            }
 while (0);
          lh(a, b, d, q + 1 + o - e | 0);
          d = uh(b, w) | 0;
          if ((d | 0) != 80) {
            b = d;
            r = x;
            return b | 0;
          }
          b = rh(a, b, w) | 0;
          r = x;
          return b | 0;
        } else
          d = j;
 while (0);
      t = w;
      u = k[t + 4 >> 2] | 0;
      v = d + 16 | 0;
      k[v >> 2] = k[t >> 2];
      k[v + 4 >> 2] = u;
      v = k[w + 8 >> 2] | 0;
      k[d + 24 >> 2] = v;
      if (((v & 64 | 0) != 0 ? (i[b + 5 >> 0] & 4) != 0 : 0) ? (i[(k[w >> 2] | 0) + 5 >> 0] & 3) != 0 : 0)
        sg(a, b);
      b = d;
      r = x;
      return b | 0;
    }
    function sh(a, b, c) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      var d = 0,
          e = 0,
          f = 0;
      d = pr(b | 0, c | 0, -1, -1) | 0;
      f = O;
      if (f >>> 0 < 0 | ((f | 0) == 0 ? d >>> 0 < (k[a + 8 >> 2] | 0) >>> 0 : 0)) {
        f = (k[a + 12 >> 2] | 0) + (d << 4) | 0;
        return f | 0;
      }
      d = (k[a + 16 >> 2] | 0) + (((1 << (l[a + 7 >> 0] | 0)) + -1 & b) << 5) | 0;
      while (1) {
        if ((k[d + 24 >> 2] | 0) == 19 ? (f = d + 16 | 0, (k[f >> 2] | 0) == (b | 0) ? (k[f + 4 >> 2] | 0) == (c | 0) : 0) : 0)
          break;
        a = k[d + 28 >> 2] | 0;
        if (!a) {
          d = 80;
          e = 9;
          break;
        }
        d = d + (a << 5) | 0;
      }
      if ((e | 0) == 9)
        return d | 0;
      f = d;
      return f | 0;
    }
    function th(a, b) {
      a = a | 0;
      b = b | 0;
      var c = 0,
          d = 0;
      a = (k[a + 16 >> 2] | 0) + (((1 << (l[a + 7 >> 0] | 0)) + -1 & k[b + 8 >> 2]) << 5) | 0;
      while (1) {
        if ((k[a + 24 >> 2] | 0) == 68 ? (k[a + 16 >> 2] | 0) == (b | 0) : 0)
          break;
        c = k[a + 28 >> 2] | 0;
        if (!c) {
          a = 80;
          d = 7;
          break;
        }
        a = a + (c << 5) | 0;
      }
      if ((d | 0) == 7)
        return a | 0;
      d = a;
      return d | 0;
    }
    function uh(a, b) {
      a = a | 0;
      b = b | 0;
      var c = 0,
          d = 0,
          e = 0.0,
          f = 0,
          g = 0,
          h = 0,
          i = 0,
          j = 0;
      switch (k[b + 8 >> 2] & 63 | 0) {
        case 4:
          {
            c = k[b >> 2] | 0;
            a = (k[a + 16 >> 2] | 0) + (((1 << (l[a + 7 >> 0] | 0)) + -1 & k[c + 8 >> 2]) << 5) | 0;
            while (1) {
              if ((k[a + 24 >> 2] | 0) == 68 ? (k[a + 16 >> 2] | 0) == (c | 0) : 0) {
                f = a;
                break;
              }
              d = k[a + 28 >> 2] | 0;
              if (!d) {
                i = 80;
                j = 30;
                break;
              }
              a = a + (d << 5) | 0;
            }
            if ((j | 0) == 30)
              return i | 0;
            j = f;
            return j | 0;
          }
        case 19:
          {
            f = b;
            c = k[f >> 2] | 0;
            f = k[f + 4 >> 2] | 0;
            d = pr(c | 0, f | 0, -1, -1) | 0;
            h = O;
            if (h >>> 0 < 0 | ((h | 0) == 0 ? d >>> 0 < (k[a + 8 >> 2] | 0) >>> 0 : 0)) {
              j = (k[a + 12 >> 2] | 0) + (d << 4) | 0;
              return j | 0;
            }
            a = (k[a + 16 >> 2] | 0) + (((1 << (l[a + 7 >> 0] | 0)) + -1 & c) << 5) | 0;
            while (1) {
              if ((k[a + 24 >> 2] | 0) == 19 ? (h = a + 16 | 0, (k[h >> 2] | 0) == (c | 0) ? (k[h + 4 >> 2] | 0) == (f | 0) : 0) : 0) {
                g = a;
                break;
              }
              d = k[a + 28 >> 2] | 0;
              if (!d) {
                i = 80;
                j = 30;
                break;
              }
              a = a + (d << 5) | 0;
            }
            if ((j | 0) == 30)
              return i | 0;
            j = g;
            return j | 0;
          }
        case 3:
          {
            e = +p[b >> 3];
            if (+Y(+e) == e ? e >= -9223372036854775808.0 & e < 9223372036854775808.0 : 0) {
              c = ~~e >>> 0;
              f = +Z(e) >= 1.0 ? (e > 0.0 ? ~~+la(+Y(e / 4294967296.0), 4294967295.0) >>> 0 : ~~+ja((e - +(~~e >>> 0)) / 4294967296.0) >>> 0) : 0;
              d = pr(c | 0, f | 0, -1, -1) | 0;
              g = O;
              if (g >>> 0 < 0 | ((g | 0) == 0 ? d >>> 0 < (k[a + 8 >> 2] | 0) >>> 0 : 0)) {
                j = (k[a + 12 >> 2] | 0) + (d << 4) | 0;
                return j | 0;
              }
              a = (k[a + 16 >> 2] | 0) + (((1 << (l[a + 7 >> 0] | 0)) + -1 & c) << 5) | 0;
              while (1) {
                if ((k[a + 24 >> 2] | 0) == 19 ? (g = a + 16 | 0, (k[g >> 2] | 0) == (c | 0) ? (k[g + 4 >> 2] | 0) == (f | 0) : 0) : 0) {
                  h = a;
                  break;
                }
                d = k[a + 28 >> 2] | 0;
                if (!d) {
                  i = 80;
                  j = 30;
                  break;
                }
                a = a + (d << 5) | 0;
              }
              if ((j | 0) == 30)
                return i | 0;
              j = h;
              return j | 0;
            }
            break;
          }
        case 0:
          {
            j = 80;
            return j | 0;
          }
        default:
          {}
      }
      c = Rk(a, b) | 0;
      a: do
        if (!(Kh(0, c + 16 | 0, b) | 0)) {
          d = c;
          while (1) {
            a = k[d + 28 >> 2] | 0;
            if (!a) {
              i = 80;
              break;
            }
            c = d + (a << 5) | 0;
            if (!(Kh(0, d + (a << 5) + 16 | 0, b) | 0))
              d = c;
            else
              break a;
          }
          return i | 0;
        }
 while (0);
      j = c;
      return j | 0;
    }
    function vh(a) {
      a = a | 0;
      var b = 0,
          c = 0,
          d = 0,
          e = 0,
          f = 0,
          g = 0,
          h = 0,
          i = 0;
      c = k[a + 8 >> 2] | 0;
      if ((c | 0) != 0 ? (d = k[a + 12 >> 2] | 0, (k[d + (c + -1 << 4) + 8 >> 2] | 0) == 0) : 0) {
        if (c >>> 0 > 1)
          b = 0;
        else {
          i = 0;
          return i | 0;
        }
        do {
          i = (b + c | 0) >>> 1;
          h = (k[d + (i + -1 << 4) + 8 >> 2] | 0) == 0;
          c = h ? i : c;
          b = h ? b : i;
        } while ((c - b | 0) >>> 0 > 1);
        return b | 0;
      }
      h = k[a + 16 >> 2] | 0;
      if ((h | 0) == 104) {
        i = c;
        return i | 0;
      }
      i = a + 12 | 0;
      g = a + 7 | 0;
      e = c + 1 | 0;
      b = c;
      while (1) {
        d = pr(e | 0, 0, -1, -1) | 0;
        a = O;
        a: do
          if (a >>> 0 < 0 | (a | 0) == 0 & d >>> 0 < c >>> 0)
            d = (k[i >> 2] | 0) + (d << 4) | 0;
          else {
            d = h + (((1 << (l[g >> 0] | 0)) + -1 & e) << 5) | 0;
            while (1) {
              if ((k[d + 24 >> 2] | 0) == 19 ? (a = d + 16 | 0, (k[a + 4 >> 2] | 0) == 0 ? (k[a >> 2] | 0) == (e | 0) : 0) : 0)
                break;
              a = k[d + 28 >> 2] | 0;
              if (!a) {
                d = 80;
                break a;
              }
              d = d + (a << 5) | 0;
            }
          }
 while (0);
        if (!(k[d + 8 >> 2] | 0)) {
          d = e;
          break;
        }
        if (e >>> 0 > 1073741823) {
          b = 1;
          f = 18;
          break;
        }
        b = e;
        e = e << 1;
      }
      if ((f | 0) == 18) {
        while (1) {
          a = pr(b | 0, 0, -1, -1) | 0;
          f = O;
          b: do
            if (f >>> 0 < 0 | (f | 0) == 0 & a >>> 0 < c >>> 0)
              a = (k[i >> 2] | 0) + (a << 4) | 0;
            else {
              a = h + (((1 << (l[g >> 0] | 0)) + -1 & b) << 5) | 0;
              while (1) {
                if ((k[a + 24 >> 2] | 0) == 19 ? (f = a + 16 | 0, (k[f + 4 >> 2] | 0) == 0 ? (k[f >> 2] | 0) == (b | 0) : 0) : 0)
                  break;
                d = k[a + 28 >> 2] | 0;
                if (!d) {
                  a = 80;
                  break b;
                }
                a = a + (d << 5) | 0;
              }
            }
 while (0);
          if (!(k[a + 8 >> 2] | 0))
            break;
          else {
            b = b + 1 | 0;
            f = 18;
          }
        }
        i = b + -1 | 0;
        return i | 0;
      }
      if ((d - b | 0) >>> 0 > 1)
        f = d;
      else {
        i = b;
        return i | 0;
      }
      do {
        e = (f + b | 0) >>> 1;
        d = pr(e | 0, 0, -1, -1) | 0;
        a = O;
        c: do
          if (a >>> 0 < 0 | (a | 0) == 0 & d >>> 0 < c >>> 0)
            d = (k[i >> 2] | 0) + (d << 4) | 0;
          else {
            d = h + (((1 << (l[g >> 0] | 0)) + 2147483647 & e) << 5) | 0;
            while (1) {
              if ((k[d + 24 >> 2] | 0) == 19 ? (a = d + 16 | 0, (k[a + 4 >> 2] | 0) == 0 ? (k[a >> 2] | 0) == (e | 0) : 0) : 0)
                break;
              a = k[d + 28 >> 2] | 0;
              if (!a) {
                d = 80;
                break c;
              }
              d = d + (a << 5) | 0;
            }
          }
 while (0);
        d = (k[d + 8 >> 2] | 0) == 0;
        f = d ? e : f;
        b = d ? b : e;
      } while ((f - b | 0) >>> 0 > 1);
      return b | 0;
    }
    function wh(a) {
      a = a | 0;
      var b = 0,
          c = 0,
          d = 0;
      b = a + 12 | 0;
      c = 0;
      do {
        d = ih(a, k[3964 + (c << 2) >> 2] | 0) | 0;
        k[(k[b >> 2] | 0) + 148 + (c << 2) >> 2] = d;
        ug(a, k[(k[b >> 2] | 0) + 148 + (c << 2) >> 2] | 0);
        c = c + 1 | 0;
      } while ((c | 0) != 24);
      return ;
    }
    function xh(a, b, c) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      c = th(a, c) | 0;
      if (k[c + 8 >> 2] | 0) {
        a = c;
        return a | 0;
      }
      a = a + 6 | 0;
      i[a >> 0] = l[a >> 0] | 0 | 1 << b;
      a = 0;
      return a | 0;
    }
    function yh(a, b, c) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      var d = 0;
      d = k[b + 8 >> 2] & 15;
      switch (d | 0) {
        case 5:
          {
            d = (k[b >> 2] | 0) + 24 | 0;
            break;
          }
        case 7:
          {
            d = (k[b >> 2] | 0) + 8 | 0;
            break;
          }
        default:
          d = (k[a + 12 >> 2] | 0) + 244 + (d << 2) | 0;
      }
      d = k[d >> 2] | 0;
      if (!d) {
        c = 80;
        return c | 0;
      }
      c = th(d, k[(k[a + 12 >> 2] | 0) + 148 + (c << 2) >> 2] | 0) | 0;
      return c | 0;
    }
    function zh(a, b, c, d, e, f) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      d = d | 0;
      e = e | 0;
      f = f | 0;
      var g = 0,
          h = 0,
          i = 0,
          j = 0;
      g = a + 28 | 0;
      h = k[g >> 2] | 0;
      i = a + 8 | 0;
      j = k[i >> 2] | 0;
      k[i >> 2] = j + 16;
      k[j >> 2] = k[b >> 2];
      k[j + 4 >> 2] = k[b + 4 >> 2];
      k[j + 8 >> 2] = k[b + 8 >> 2];
      k[j + 12 >> 2] = k[b + 12 >> 2];
      b = k[i >> 2] | 0;
      k[i >> 2] = b + 16;
      k[b >> 2] = k[c >> 2];
      k[b + 4 >> 2] = k[c + 4 >> 2];
      k[b + 8 >> 2] = k[c + 8 >> 2];
      k[b + 12 >> 2] = k[c + 12 >> 2];
      c = k[i >> 2] | 0;
      k[i >> 2] = c + 16;
      k[c >> 2] = k[d >> 2];
      k[c + 4 >> 2] = k[d + 4 >> 2];
      k[c + 8 >> 2] = k[d + 8 >> 2];
      k[c + 12 >> 2] = k[d + 12 >> 2];
      if (!f) {
        j = k[i >> 2] | 0;
        k[i >> 2] = j + 16;
        k[j >> 2] = k[e >> 2];
        k[j + 4 >> 2] = k[e + 4 >> 2];
        k[j + 8 >> 2] = k[e + 8 >> 2];
        k[j + 12 >> 2] = k[e + 12 >> 2];
        cg(a, (k[i >> 2] | 0) + -64 | 0, 0, (l[(k[a + 16 >> 2] | 0) + 34 >> 0] | 0) & 2);
        return ;
      } else {
        cg(a, (k[i >> 2] | 0) + (f + -4 << 4) | 0, f, (l[(k[a + 16 >> 2] | 0) + 34 >> 0] | 0) & 2);
        j = (k[g >> 2] | 0) + (e - h) | 0;
        e = (k[i >> 2] | 0) + -16 | 0;
        k[i >> 2] = e;
        k[j >> 2] = k[e >> 2];
        k[j + 4 >> 2] = k[e + 4 >> 2];
        k[j + 8 >> 2] = k[e + 8 >> 2];
        k[j + 12 >> 2] = k[e + 12 >> 2];
        return ;
      }
    }
    function Ah(a, b, c, d, e) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      d = d | 0;
      e = e | 0;
      var f = 0,
          g = 0,
          h = 0,
          i = 0;
      f = k[b + 8 >> 2] & 15;
      switch (f | 0) {
        case 5:
          {
            f = (k[b >> 2] | 0) + 24 | 0;
            break;
          }
        case 7:
          {
            f = (k[b >> 2] | 0) + 8 | 0;
            break;
          }
        default:
          f = (k[a + 12 >> 2] | 0) + 244 + (f << 2) | 0;
      }
      f = k[f >> 2] | 0;
      if (!f)
        f = 80;
      else
        f = th(f, k[(k[a + 12 >> 2] | 0) + 148 + (e << 2) >> 2] | 0) | 0;
      if (!(k[f + 8 >> 2] | 0)) {
        f = k[c + 8 >> 2] & 15;
        switch (f | 0) {
          case 7:
            {
              f = (k[c >> 2] | 0) + 8 | 0;
              break;
            }
          case 5:
            {
              f = (k[c >> 2] | 0) + 24 | 0;
              break;
            }
          default:
            f = (k[a + 12 >> 2] | 0) + 244 + (f << 2) | 0;
        }
        f = k[f >> 2] | 0;
        if (!f)
          f = 80;
        else
          f = th(f, k[(k[a + 12 >> 2] | 0) + 148 + (e << 2) >> 2] | 0) | 0;
      }
      if (!(k[f + 8 >> 2] | 0)) {
        d = 0;
        return d | 0;
      }
      h = a + 28 | 0;
      g = k[h >> 2] | 0;
      e = a + 8 | 0;
      i = k[e >> 2] | 0;
      k[e >> 2] = i + 16;
      k[i >> 2] = k[f >> 2];
      k[i + 4 >> 2] = k[f + 4 >> 2];
      k[i + 8 >> 2] = k[f + 8 >> 2];
      k[i + 12 >> 2] = k[f + 12 >> 2];
      f = k[e >> 2] | 0;
      k[e >> 2] = f + 16;
      k[f >> 2] = k[b >> 2];
      k[f + 4 >> 2] = k[b + 4 >> 2];
      k[f + 8 >> 2] = k[b + 8 >> 2];
      k[f + 12 >> 2] = k[b + 12 >> 2];
      b = k[e >> 2] | 0;
      k[e >> 2] = b + 16;
      k[b >> 2] = k[c >> 2];
      k[b + 4 >> 2] = k[c + 4 >> 2];
      k[b + 8 >> 2] = k[c + 8 >> 2];
      k[b + 12 >> 2] = k[c + 12 >> 2];
      cg(a, (k[e >> 2] | 0) + -48 | 0, 1, (l[(k[a + 16 >> 2] | 0) + 34 >> 0] | 0) & 2);
      d = (k[h >> 2] | 0) + (d - g) | 0;
      c = (k[e >> 2] | 0) + -16 | 0;
      k[e >> 2] = c;
      k[d >> 2] = k[c >> 2];
      k[d + 4 >> 2] = k[c + 4 >> 2];
      k[d + 8 >> 2] = k[c + 8 >> 2];
      k[d + 12 >> 2] = k[c + 12 >> 2];
      d = 1;
      return d | 0;
    }
    function Bh(a, b, c, d, e) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      d = d | 0;
      e = e | 0;
      var f = 0,
          g = 0;
      g = r;
      r = r + 16 | 0;
      f = g;
      if (Ah(a, b, c, d, e) | 0) {
        r = g;
        return ;
      }
      switch (e | 0) {
        case 22:
          {
            Qf(a, b, c);
            break;
          }
        case 19:
        case 17:
        case 16:
        case 15:
        case 14:
        case 13:
          {
            if ((k[b + 8 >> 2] | 0) != 3) {
              if (!(Eh(b, f) | 0))
                Rf(a, b, c, 1000217);
            } else
              p[f >> 3] = +p[b >> 3];
            if ((k[c + 8 >> 2] | 0) == 3) {
              p[f >> 3] = +p[c >> 3];
              Sf(a, b, c);
            }
            if (!(Eh(c, f) | 0))
              Rf(a, b, c, 1000217);
            else
              Sf(a, b, c);
            break;
          }
        default:
          Rf(a, b, c, 1000246);
      }
    }
    function Ch(a, b, c, d) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      d = d | 0;
      var e = 0;
      e = a + 8 | 0;
      if (!(Ah(a, b, c, k[e >> 2] | 0, d) | 0)) {
        c = -1;
        return c | 0;
      }
      a = k[e >> 2] | 0;
      e = k[a + 8 >> 2] | 0;
      if (e)
        if ((e | 0) == 1)
          a = (k[a >> 2] | 0) != 0;
        else
          a = 1;
      else
        a = 0;
      c = a & 1;
      return c | 0;
    }
    function Dh(a, b, c, d) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      d = d | 0;
      var e = 0,
          f = 0,
          g = 0,
          h = 0,
          j = 0,
          m = 0,
          n = 0,
          o = 0;
      o = r;
      r = r + 80 | 0;
      g = o + 8 | 0;
      j = o + 32 | 0;
      h = o + 40 | 0;
      f = o + 48 | 0;
      e = o;
      m = o + 16 | 0;
      n = o + 56 | 0;
      switch (i[d >> 0] | 0) {
        case 27:
          {
            k[n + 12 >> 2] = 1000268;
            break;
          }
        case 61:
        case 64:
          {
            k[n + 12 >> 2] = d + 1;
            break;
          }
        default:
          k[n + 12 >> 2] = d;
      }
      k[n >> 2] = a;
      d = n + 4 | 0;
      k[d >> 2] = b;
      k[n + 8 >> 2] = c;
      if (Uh(b, m, 3) | 0)
        Sk(n, 1000282);
      if (cr(1000293, m, 3) | 0)
        Sk(n, 1000297);
      if (Uh(k[d >> 2] | 0, m, 1) | 0)
        Sk(n, 1000282);
      if ((i[m >> 0] | 0) != 83)
        Sk(n, 1000303);
      if (Uh(k[d >> 2] | 0, m, 1) | 0)
        Sk(n, 1000282);
      if (i[m >> 0] | 0)
        Sk(n, 1000323);
      if (Uh(k[d >> 2] | 0, m, 6) | 0)
        Sk(n, 1000282);
      if (cr(1000342, m, 6) | 0)
        Sk(n, 1000349);
      if (Uh(k[d >> 2] | 0, m, 1) | 0)
        Sk(n, 1000282);
      if ((i[m >> 0] | 0) != 4) {
        c = k[n >> 2] | 0;
        k[e >> 2] = 1013127;
        Sk(n, Ug(c, 1000359, e) | 0);
      }
      if (Uh(k[d >> 2] | 0, m, 1) | 0)
        Sk(n, 1000282);
      if ((i[m >> 0] | 0) != 4) {
        e = k[n >> 2] | 0;
        k[f >> 2] = 1000379;
        Sk(n, Ug(e, 1000359, f) | 0);
      }
      if (Uh(k[d >> 2] | 0, m, 1) | 0)
        Sk(n, 1000282);
      if ((i[m >> 0] | 0) != 4) {
        f = k[n >> 2] | 0;
        k[h >> 2] = 1000386;
        Sk(n, Ug(f, 1000359, h) | 0);
      }
      if (Uh(k[d >> 2] | 0, m, 1) | 0)
        Sk(n, 1000282);
      if ((i[m >> 0] | 0) != 8) {
        h = k[n >> 2] | 0;
        k[j >> 2] = 1000398;
        Sk(n, Ug(h, 1000359, j) | 0);
      }
      if (Uh(k[d >> 2] | 0, m, 1) | 0)
        Sk(n, 1000282);
      if ((i[m >> 0] | 0) != 8) {
        j = k[n >> 2] | 0;
        k[g >> 2] = 1000410;
        Sk(n, Ug(j, 1000359, g) | 0);
      }
      if (Uh(k[d >> 2] | 0, m, 8) | 0)
        Sk(n, 1000282);
      j = m;
      if (!((k[j >> 2] | 0) == 22136 & (k[j + 4 >> 2] | 0) == 0))
        Sk(n, 1000421);
      if (Uh(k[d >> 2] | 0, m, 8) | 0)
        Sk(n, 1000282);
      if (+p[m >> 3] != 370.5)
        Sk(n, 1000444);
      if (Uh(k[d >> 2] | 0, m, 1) | 0)
        Sk(n, 1000282);
      d = kg(a, l[m >> 0] | 0) | 0;
      j = a + 8 | 0;
      m = k[j >> 2] | 0;
      k[m >> 2] = d;
      k[m + 8 >> 2] = 70;
      m = (k[j >> 2] | 0) + 16 | 0;
      k[j >> 2] = m;
      if (((k[a + 24 >> 2] | 0) - m | 0) >= 16) {
        a = og(a) | 0;
        m = d + 12 | 0;
        k[m >> 2] = a;
        Tk(n, a, 0);
        r = o;
        return d | 0;
      }
      Zf(a, 0);
      a = og(a) | 0;
      m = d + 12 | 0;
      k[m >> 2] = a;
      Tk(n, a, 0);
      r = o;
      return d | 0;
    }
    function Eh(a, b) {
      a = a | 0;
      b = b | 0;
      var c = 0,
          d = 0,
          e = 0;
      e = r;
      r = r + 16 | 0;
      d = e;
      c = k[a + 8 >> 2] | 0;
      if ((c | 0) == 19) {
        d = a;
        p[b >> 3] = +((k[d >> 2] | 0) >>> 0) + 4294967296.0 * +(k[d + 4 >> 2] | 0);
        d = 1;
        r = e;
        return d | 0;
      }
      if ((c & 15 | 0) != 4) {
        d = 0;
        r = e;
        return d | 0;
      }
      c = Qg((k[a >> 2] | 0) + 24 | 0, d) | 0;
      if ((c | 0) != ((k[(k[a >> 2] | 0) + 12 >> 2] | 0) + 1 | 0)) {
        d = 0;
        r = e;
        return d | 0;
      }
      c = (k[d + 8 >> 2] | 0) == 19;
      a = k[d >> 2] | 0;
      d = k[d + 4 >> 2] | 0;
      k[t >> 2] = a;
      k[t + 4 >> 2] = d;
      p[b >> 3] = c ? +(a >>> 0) + 4294967296.0 * +(d | 0) : +p[t >> 3];
      d = 1;
      r = e;
      return d | 0;
    }
    function Fh(a, b) {
      a = a | 0;
      b = b | 0;
      var c = 0.0,
          d = 0,
          e = 0,
          f = 0,
          g = 0.0;
      f = r;
      r = r + 16 | 0;
      e = f;
      a: while (1) {
        d = k[a + 8 >> 2] | 0;
        switch (d | 0) {
          case 3:
            {
              e = 3;
              break a;
            }
          case 19:
            {
              e = 6;
              break a;
            }
          default:
            {}
        }
        if ((d & 15 | 0) != 4) {
          a = 0;
          e = 9;
          break;
        }
        d = Qg((k[a >> 2] | 0) + 24 | 0, e) | 0;
        if ((d | 0) == ((k[(k[a >> 2] | 0) + 12 >> 2] | 0) + 1 | 0))
          a = e;
        else {
          a = 0;
          e = 9;
          break;
        }
      }
      if ((e | 0) == 3) {
        g = +p[a >> 3];
        c = +Y(+g);
        if (g != c) {
          b = 0;
          r = f;
          return b | 0;
        }
        if (!(c >= -9223372036854775808.0 & c < 9223372036854775808.0)) {
          b = 0;
          r = f;
          return b | 0;
        }
        e = +Z(c) >= 1.0 ? (c > 0.0 ? ~~+la(+Y(c / 4294967296.0), 4294967295.0) >>> 0 : ~~+ja((c - +(~~c >>> 0)) / 4294967296.0) >>> 0) : 0;
        k[b >> 2] = ~~c >>> 0;
        k[b + 4 >> 2] = e;
        b = 1;
        r = f;
        return b | 0;
      } else if ((e | 0) == 6) {
        d = a;
        e = k[d + 4 >> 2] | 0;
        k[b >> 2] = k[d >> 2];
        k[b + 4 >> 2] = e;
        b = 1;
        r = f;
        return b | 0;
      } else if ((e | 0) == 9) {
        r = f;
        return a | 0;
      }
      return 0;
    }
    function Gh(a, b, c, d) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      d = d | 0;
      var e = 0,
          f = 0,
          g = 0,
          h = 0,
          j = 0,
          l = 0,
          m = 0;
      m = r;
      r = r + 16 | 0;
      l = m;
      j = a + 12 | 0;
      e = b;
      b = k[b + 8 >> 2] | 0;
      h = 0;
      while (1) {
        if ((b | 0) != 69) {
          b = yh(a, e, 0) | 0;
          f = k[b + 8 >> 2] | 0;
          if (!f) {
            f = 11;
            break;
          }
        } else {
          f = k[e >> 2] | 0;
          g = uh(f, c) | 0;
          if (k[g + 8 >> 2] | 0) {
            e = g;
            f = 9;
            break;
          }
          b = k[f + 24 >> 2] | 0;
          if (!b) {
            e = g;
            f = 9;
            break;
          }
          if (i[b + 6 >> 0] & 1) {
            e = g;
            f = 9;
            break;
          }
          b = xh(b, 0, k[(k[j >> 2] | 0) + 148 >> 2] | 0) | 0;
          if (!b) {
            e = g;
            f = 9;
            break;
          }
          f = k[b + 8 >> 2] | 0;
        }
        h = h + 1 | 0;
        if ((f & 15 | 0) == 6) {
          f = 13;
          break;
        }
        if ((h | 0) >= 2e3) {
          f = 14;
          break;
        } else {
          e = b;
          b = f;
        }
      }
      if ((f | 0) == 9) {
        k[d >> 2] = k[e >> 2];
        k[d + 4 >> 2] = k[e + 4 >> 2];
        k[d + 8 >> 2] = k[e + 8 >> 2];
        k[d + 12 >> 2] = k[e + 12 >> 2];
        r = m;
        return ;
      } else if ((f | 0) == 11)
        Of(a, e, 1000469);
      else if ((f | 0) == 13) {
        zh(a, b, e, c, d, 1);
        r = m;
        return ;
      } else if ((f | 0) == 14)
        Pf(a, 1000475, l);
    }
    function Hh(a, b, c, d) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      d = d | 0;
      var e = 0,
          f = 0,
          g = 0,
          h = 0,
          j = 0,
          l = 0,
          m = 0,
          n = 0,
          o = 0,
          p = 0,
          q = 0;
      q = r;
      r = r + 16 | 0;
      m = q;
      l = a + 12 | 0;
      e = b;
      b = k[b + 8 >> 2] | 0;
      j = 0;
      while (1) {
        if ((b | 0) != 69) {
          b = yh(a, e, 1) | 0;
          f = k[b + 8 >> 2] | 0;
          if (!f) {
            p = 16;
            break;
          }
        } else {
          g = k[e >> 2] | 0;
          h = uh(g, c) | 0;
          if (k[h + 8 >> 2] | 0) {
            o = g;
            n = h;
            break;
          }
          f = k[g + 24 >> 2] | 0;
          if (!f) {
            e = g;
            b = h;
            p = 9;
            break;
          }
          if (i[f + 6 >> 0] & 2) {
            e = g;
            b = h;
            p = 9;
            break;
          }
          b = xh(f, 1, k[(k[l >> 2] | 0) + 152 >> 2] | 0) | 0;
          if (!b) {
            e = g;
            b = h;
            p = 9;
            break;
          }
          f = k[b + 8 >> 2] | 0;
        }
        j = j + 1 | 0;
        if ((f & 15 | 0) == 6) {
          p = 18;
          break;
        }
        if ((j | 0) >= 2e3) {
          p = 19;
          break;
        } else {
          e = b;
          b = f;
        }
      }
      if ((p | 0) == 9)
        if ((b | 0) == 80) {
          o = e;
          n = rh(a, e, c) | 0;
        } else {
          o = e;
          n = b;
        }
      else if ((p | 0) == 16)
        Of(a, e, 1000469);
      else if ((p | 0) == 18) {
        zh(a, b, e, c, d, 0);
        r = q;
        return ;
      } else if ((p | 0) == 19)
        Pf(a, 1000514, m);
      k[n >> 2] = k[d >> 2];
      k[n + 4 >> 2] = k[d + 4 >> 2];
      k[n + 8 >> 2] = k[d + 8 >> 2];
      k[n + 12 >> 2] = k[d + 12 >> 2];
      i[o + 6 >> 0] = 0;
      if (!(k[d + 8 >> 2] & 64)) {
        r = q;
        return ;
      }
      if (!(i[o + 5 >> 0] & 4)) {
        r = q;
        return ;
      }
      if (!(i[(k[d >> 2] | 0) + 5 >> 0] & 3)) {
        r = q;
        return ;
      }
      sg(a, o);
      r = q;
      return ;
    }
    function Ih(a, b, c) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      var d = 0,
          e = 0.0,
          f = 0,
          g = 0,
          h = 0,
          i = 0.0,
          j = 0;
      j = r;
      r = r + 16 | 0;
      g = j;
      h = b + 8 | 0;
      d = k[h >> 2] | 0;
      do
        if ((d | 0) != 19)
          if ((d | 0) == 3) {
            i = +p[b >> 3];
            f = 8;
            break;
          } else
            break;
        else {
          if ((k[c + 8 >> 2] | 0) != 19) {
            f = b;
            p[g >> 3] = +((k[f >> 2] | 0) >>> 0) + 4294967296.0 * +(k[f + 4 >> 2] | 0);
            i = +p[g >> 3];
            f = 8;
            break;
          }
          g = k[b + 4 >> 2] | 0;
          h = k[c + 4 >> 2] | 0;
          c = ((g | 0) < (h | 0) | ((g | 0) == (h | 0) ? (k[b >> 2] | 0) >>> 0 < (k[c >> 2] | 0) >>> 0 : 0)) & 1;
          r = j;
          return c | 0;
        }
 while (0);
      a: do
        if ((f | 0) == 8) {
          switch (k[c + 8 >> 2] | 0) {
            case 3:
              {
                e = +p[c >> 3];
                break;
              }
            case 19:
              {
                p[g >> 3] = +((k[c >> 2] | 0) >>> 0) + 4294967296.0 * +(k[c + 4 >> 2] | 0);
                e = +p[g >> 3];
                break;
              }
            default:
              {
                d = k[h >> 2] | 0;
                break a;
              }
          }
          c = i < e & 1;
          r = j;
          return c | 0;
        }
 while (0);
      if ((d & 15 | 0) == 4 ? (k[c + 8 >> 2] & 15 | 0) == 4 : 0) {
        g = k[b >> 2] | 0;
        h = k[c >> 2] | 0;
        f = g + 24 | 0;
        a = h + 24 | 0;
        d = Mp(f, a) | 0;
        b: do
          if (!d) {
            b = k[g + 12 >> 2] | 0;
            h = k[h + 12 >> 2] | 0;
            while (1) {
              g = yr(f | 0) | 0;
              d = (g | 0) == (b | 0);
              if ((g | 0) == (h | 0))
                break;
              if (d) {
                d = -1;
                break b;
              }
              g = g + 1 | 0;
              f = f + g | 0;
              a = a + g | 0;
              d = Mp(f, a) | 0;
              if (d)
                break b;
              else {
                b = b - g | 0;
                h = h - g | 0;
              }
            }
            d = d & 1 ^ 1;
          }
 while (0);
        c = d >>> 31;
        r = j;
        return c | 0;
      }
      d = Ch(a, b, c, 20) | 0;
      if ((d | 0) < 0)
        Tf(a, b, c);
      else {
        c = d;
        r = j;
        return c | 0;
      }
      return 0;
    }
    function Jh(a, b, c) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      var d = 0,
          e = 0.0,
          f = 0,
          g = 0,
          h = 0,
          i = 0.0,
          j = 0;
      j = r;
      r = r + 16 | 0;
      g = j;
      h = b + 8 | 0;
      d = k[h >> 2] | 0;
      do
        if ((d | 0) != 19)
          if ((d | 0) == 3) {
            i = +p[b >> 3];
            f = 8;
            break;
          } else
            break;
        else {
          if ((k[c + 8 >> 2] | 0) != 19) {
            f = b;
            p[g >> 3] = +((k[f >> 2] | 0) >>> 0) + 4294967296.0 * +(k[f + 4 >> 2] | 0);
            i = +p[g >> 3];
            f = 8;
            break;
          }
          a = b;
          g = k[a + 4 >> 2] | 0;
          h = k[c + 4 >> 2] | 0;
          c = ((g | 0) < (h | 0) | ((g | 0) == (h | 0) ? (k[a >> 2] | 0) >>> 0 <= (k[c >> 2] | 0) >>> 0 : 0)) & 1;
          r = j;
          return c | 0;
        }
 while (0);
      a: do
        if ((f | 0) == 8) {
          switch (k[c + 8 >> 2] | 0) {
            case 3:
              {
                e = +p[c >> 3];
                break;
              }
            case 19:
              {
                p[g >> 3] = +((k[c >> 2] | 0) >>> 0) + 4294967296.0 * +(k[c + 4 >> 2] | 0);
                e = +p[g >> 3];
                break;
              }
            default:
              {
                d = k[h >> 2] | 0;
                break a;
              }
          }
          c = i <= e & 1;
          r = j;
          return c | 0;
        }
 while (0);
      if ((d & 15 | 0) == 4 ? (k[c + 8 >> 2] & 15 | 0) == 4 : 0) {
        g = k[b >> 2] | 0;
        h = k[c >> 2] | 0;
        f = g + 24 | 0;
        b = h + 24 | 0;
        d = Mp(f, b) | 0;
        b: do
          if (!d) {
            a = k[g + 12 >> 2] | 0;
            h = k[h + 12 >> 2] | 0;
            while (1) {
              g = yr(f | 0) | 0;
              d = (g | 0) == (a | 0);
              if ((g | 0) == (h | 0))
                break;
              if (d) {
                d = -1;
                break b;
              }
              g = g + 1 | 0;
              f = f + g | 0;
              b = b + g | 0;
              d = Mp(f, b) | 0;
              if (d)
                break b;
              else {
                a = a - g | 0;
                h = h - g | 0;
              }
            }
            d = d & 1 ^ 1;
          }
 while (0);
        c = (d | 0) < 1 & 1;
        r = j;
        return c | 0;
      }
      d = Ch(a, b, c, 21) | 0;
      if ((d | 0) > -1) {
        c = d;
        r = j;
        return c | 0;
      }
      d = Ch(a, c, b, 20) | 0;
      if ((d | 0) < 0)
        Tf(a, b, c);
      c = (d | 0) == 0 & 1;
      r = j;
      return c | 0;
    }
    function Kh(a, b, c) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      var d = 0,
          e = 0,
          f = 0.0,
          g = 0.0,
          h = 0,
          j = 0,
          l = 0,
          m = 0,
          n = 0;
      n = r;
      r = r + 16 | 0;
      l = n;
      d = k[b + 8 >> 2] | 0;
      h = d & 63;
      j = c + 8 | 0;
      e = k[j >> 2] | 0;
      if ((h | 0) != (e & 63 | 0)) {
        a = d & 15;
        if (!((a | 0) == 3 & (a | 0) == (e & 15 | 0))) {
          c = 0;
          r = n;
          return c | 0;
        }
        switch (d | 0) {
          case 3:
            {
              g = +p[b >> 3];
              break;
            }
          case 19:
            {
              e = b;
              p[l >> 3] = +((k[e >> 2] | 0) >>> 0) + 4294967296.0 * +(k[e + 4 >> 2] | 0);
              e = k[j >> 2] | 0;
              g = +p[l >> 3];
              break;
            }
          default:
            g = 0.0;
        }
        switch (e | 0) {
          case 3:
            {
              f = +p[c >> 3];
              break;
            }
          case 19:
            {
              p[l >> 3] = +((k[c >> 2] | 0) >>> 0) + 4294967296.0 * +(k[c + 4 >> 2] | 0);
              f = +p[l >> 3];
              break;
            }
          default:
            f = 0.0;
        }
        c = g == f & 1;
        r = n;
        return c | 0;
      }
      a: do
        switch (h | 0) {
          case 19:
            {
              c = ((k[b >> 2] | 0) == (k[c >> 2] | 0) ? (k[b + 4 >> 2] | 0) == (k[c + 4 >> 2] | 0) : 0) & 1;
              r = n;
              return c | 0;
            }
          case 3:
            {
              c = +p[b >> 3] == +p[c >> 3] & 1;
              r = n;
              return c | 0;
            }
          case 1:
            {
              c = (k[b >> 2] | 0) == (k[c >> 2] | 0) & 1;
              r = n;
              return c | 0;
            }
          case 2:
            {
              c = (k[b >> 2] | 0) == (k[c >> 2] | 0) & 1;
              r = n;
              return c | 0;
            }
          case 22:
            {
              c = (k[b >> 2] | 0) == (k[c >> 2] | 0) & 1;
              r = n;
              return c | 0;
            }
          case 4:
            {
              c = (k[b >> 2] | 0) == (k[c >> 2] | 0) & 1;
              r = n;
              return c | 0;
            }
          case 20:
            {
              c = dh(k[b >> 2] | 0, k[c >> 2] | 0) | 0;
              r = n;
              return c | 0;
            }
          case 7:
            {
              d = k[b >> 2] | 0;
              e = k[c >> 2] | 0;
              if ((d | 0) == (e | 0)) {
                c = 1;
                r = n;
                return c | 0;
              }
              if (!a) {
                c = 0;
                r = n;
                return c | 0;
              }
              d = k[d + 8 >> 2] | 0;
              if ((d | 0) != 0 ? (i[d + 6 >> 0] & 32) == 0 : 0) {
                e = xh(d, 5, k[(k[a + 12 >> 2] | 0) + 168 >> 2] | 0) | 0;
                if (e)
                  break a;
                e = k[c >> 2] | 0;
              }
              e = k[e + 8 >> 2] | 0;
              if (!e) {
                c = 0;
                r = n;
                return c | 0;
              }
              if (!(i[e + 6 >> 0] & 32)) {
                e = xh(e, 5, k[(k[a + 12 >> 2] | 0) + 168 >> 2] | 0) | 0;
                m = 37;
                break a;
              } else {
                c = 0;
                r = n;
                return c | 0;
              }
            }
          case 5:
            {
              d = k[b >> 2] | 0;
              e = k[c >> 2] | 0;
              if ((d | 0) == (e | 0)) {
                c = 1;
                r = n;
                return c | 0;
              }
              if (!a) {
                c = 0;
                r = n;
                return c | 0;
              }
              d = k[d + 24 >> 2] | 0;
              if ((d | 0) != 0 ? (i[d + 6 >> 0] & 32) == 0 : 0) {
                e = xh(d, 5, k[(k[a + 12 >> 2] | 0) + 168 >> 2] | 0) | 0;
                if (e)
                  break a;
                e = k[c >> 2] | 0;
              }
              e = k[e + 24 >> 2] | 0;
              if (!e) {
                c = 0;
                r = n;
                return c | 0;
              }
              if (!(i[e + 6 >> 0] & 32)) {
                e = xh(e, 5, k[(k[a + 12 >> 2] | 0) + 168 >> 2] | 0) | 0;
                m = 37;
                break a;
              } else {
                c = 0;
                r = n;
                return c | 0;
              }
            }
          case 0:
            {
              c = 1;
              r = n;
              return c | 0;
            }
          default:
            {
              c = (k[b >> 2] | 0) == (k[c >> 2] | 0) & 1;
              r = n;
              return c | 0;
            }
        }
 while (0);
      if ((m | 0) == 37)
        if (!e) {
          c = 0;
          r = n;
          return c | 0;
        }
      d = a + 8 | 0;
      zh(a, e, b, c, k[d >> 2] | 0, 1);
      d = k[d >> 2] | 0;
      e = k[d + 8 >> 2] | 0;
      if (e)
        if ((e | 0) == 1)
          d = (k[d >> 2] | 0) != 0;
        else
          d = 1;
      else
        d = 0;
      c = d & 1;
      r = n;
      return c | 0;
    }
    function Lh(a, b) {
      a = a | 0;
      b = b | 0;
      var c = 0,
          d = 0,
          e = 0,
          f = 0,
          g = 0,
          h = 0,
          i = 0,
          j = 0,
          m = 0,
          n = 0,
          o = 0,
          p = 0;
      o = r;
      r = r + 16 | 0;
      m = o;
      i = a + 8 | 0;
      j = a + 12 | 0;
      h = k[i >> 2] | 0;
      a: while (1) {
        f = h + -32 | 0;
        d = h + -24 | 0;
        e = k[d >> 2] | 0;
        g = h + -16 | 0;
        b: do
          if (((e & 15) + -3 | 0) >>> 0 < 2) {
            switch (k[h + -8 >> 2] & 15 | 0) {
              case 3:
                {
                  Sg(a, g);
                  e = k[d >> 2] | 0;
                  break;
                }
              case 4:
                break;
              default:
                {
                  n = 5;
                  break b;
                }
            }
            d = k[(k[g >> 2] | 0) + 12 >> 2] | 0;
            e = e & 15;
            c = (e | 0) == 4;
            if (!d) {
              if (!((e | 0) == 3 & (c ^ 1))) {
                c = 2;
                break;
              }
              Sg(a, f);
              c = 2;
              break;
            }
            if (c ? (k[(k[f >> 2] | 0) + 12 >> 2] | 0) == 0 : 0) {
              k[f >> 2] = k[g >> 2];
              k[f + 4 >> 2] = k[g + 4 >> 2];
              k[f + 8 >> 2] = k[g + 8 >> 2];
              k[f + 12 >> 2] = k[g + 12 >> 2];
              c = 2;
              break;
            }
            c: do
              if ((b | 0) > 1) {
                c = 1;
                while (1) {
                  g = ~c;
                  e = h + (g << 4) | 0;
                  switch (k[h + (g << 4) + 8 >> 2] & 15 | 0) {
                    case 3:
                      {
                        Sg(a, e);
                        break;
                      }
                    case 4:
                      break;
                    default:
                      break c;
                  }
                  e = k[(k[e >> 2] | 0) + 12 >> 2] | 0;
                  if (e >>> 0 >= ~d >>> 0) {
                    n = 16;
                    break a;
                  }
                  d = e + d | 0;
                  c = c + 1 | 0;
                  if ((c | 0) >= (b | 0))
                    break c;
                }
              } else
                c = 1;
 while (0);
            f = Vh(a, (k[j >> 2] | 0) + 108 | 0, d) | 0;
            e = c;
            d = 0;
            while (1) {
              p = k[h + (0 - e << 4) >> 2] | 0;
              g = k[p + 12 >> 2] | 0;
              rr(f + d | 0, p + 24 | 0, g | 0) | 0;
              d = g + d | 0;
              if ((e | 0) > 1)
                e = e + -1 | 0;
              else
                break;
            }
            p = 0 - c | 0;
            g = hh(a, f, d) | 0;
            k[h + (p << 4) >> 2] = g;
            k[h + (p << 4) + 8 >> 2] = l[g + 4 >> 0] | 0 | 64;
          } else
            n = 5;
 while (0);
        if ((n | 0) == 5) {
          n = 0;
          Bh(a, f, g, f, 22);
          c = 2;
        }
        b = b + 1 - c | 0;
        h = (k[i >> 2] | 0) + (1 - c << 4) | 0;
        k[i >> 2] = h;
        if ((b | 0) <= 1) {
          n = 22;
          break;
        }
      }
      if ((n | 0) == 16)
        Pf(a, 1000553, m);
      else if ((n | 0) == 22) {
        r = o;
        return ;
      }
    }
    function Mh(a, b, c) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      var d = 0,
          e = 0,
          f = 0;
      a: do
        switch (k[c + 8 >> 2] & 15 | 0) {
          case 5:
            {
              d = k[c >> 2] | 0;
              e = k[d + 24 >> 2] | 0;
              if (((e | 0) != 0 ? (i[e + 6 >> 0] & 16) == 0 : 0) ? (f = xh(e, 4, k[(k[a + 12 >> 2] | 0) + 164 >> 2] | 0) | 0, (f | 0) != 0) : 0) {
                e = f;
                break a;
              }
              a = vh(d) | 0;
              c = b;
              k[c >> 2] = a;
              k[c + 4 >> 2] = ((a | 0) < 0) << 31 >> 31;
              k[b + 8 >> 2] = 19;
              return ;
            }
          case 4:
            {
              a = b;
              k[a >> 2] = k[(k[c >> 2] | 0) + 12 >> 2];
              k[a + 4 >> 2] = 0;
              k[b + 8 >> 2] = 19;
              return ;
            }
          default:
            {
              d = yh(a, c, 4) | 0;
              if (!(k[d + 8 >> 2] | 0))
                Of(a, c, 1000576);
              else
                e = d;
            }
        }
 while (0);
      zh(a, e, c, c, b, 1);
      return ;
    }
    function Nh(a, b, c, d, e) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      d = d | 0;
      e = e | 0;
      var f = 0,
          g = 0,
          h = 0,
          i = 0;
      g = r;
      r = r + 16 | 0;
      f = g;
      h = pr(d | 0, e | 0, 1, 0) | 0;
      i = O;
      if (!(i >>> 0 < 0 | (i | 0) == 0 & h >>> 0 < 2)) {
        f = Cr(b | 0, c | 0, d | 0, e | 0) | 0;
        a = O;
        if ((e ^ c | 0) < 0) {
          i = Dr(b | 0, c | 0, d | 0, e | 0) | 0;
          i = ((i | 0) != 0 | (O | 0) != 0) << 31 >> 31;
          i = pr(i | 0, ((i | 0) < 0) << 31 >> 31 | 0, f | 0, a | 0) | 0;
          r = g;
          return i | 0;
        } else {
          h = a;
          i = f;
          O = h;
          r = g;
          return i | 0;
        }
      }
      if ((d | 0) == 0 & (e | 0) == 0)
        Pf(a, 1000590, f);
      i = or(0, 0, b | 0, c | 0) | 0;
      h = O;
      O = h;
      r = g;
      return i | 0;
    }
    function Oh(a, b, c, d, e) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      d = d | 0;
      e = e | 0;
      var f = 0,
          g = 0,
          h = 0;
      f = r;
      r = r + 16 | 0;
      g = pr(d | 0, e | 0, 1, 0) | 0;
      h = O;
      if (!(h >>> 0 < 0 | (h | 0) == 0 & g >>> 0 < 2)) {
        g = Dr(b | 0, c | 0, d | 0, e | 0) | 0;
        h = O;
        a = (e ^ c | 0) < 0 & ((g | 0) != 0 | (h | 0) != 0);
        h = pr((a ? d : 0) | 0, (a ? e : 0) | 0, g | 0, h | 0) | 0;
        g = O;
        O = g;
        r = f;
        return h | 0;
      }
      if ((d | 0) == 0 & (e | 0) == 0)
        Pf(a, 1000616, f);
      else {
        g = 0;
        h = 0;
        O = g;
        r = f;
        return h | 0;
      }
      return 0;
    }
    function Ph(a, b, c, d) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      d = d | 0;
      var e = 0;
      if ((d | 0) < 0) {
        e = (d | 0) < -1 | (d | 0) == -1 & c >>> 0 < 4294967233;
        d = or(0, 0, c | 0, d | 0) | 0;
        d = tr(a | 0, b | 0, d | 0) | 0;
        O = e ? 0 : O;
        return (e ? 0 : d) | 0;
      } else {
        d = (d | 0) > 0 | (d | 0) == 0 & c >>> 0 > 63;
        e = xr(a | 0, b | 0, c | 0) | 0;
        O = d ? 0 : O;
        return (d ? 0 : e) | 0;
      }
      return 0;
    }
    function Qh(a) {
      a = a | 0;
      var b = 0,
          c = 0,
          d = 0,
          e = 0,
          f = 0,
          g = 0,
          h = 0,
          i = 0,
          j = 0;
      e = k[a + 16 >> 2] | 0;
      f = e + 16 | 0;
      h = k[f >> 2] | 0;
      g = e + 20 | 0;
      i = k[(k[g >> 2] | 0) + -4 >> 2] | 0;
      c = i & 63;
      switch (c | 0) {
        case 12:
        case 7:
        case 6:
        case 28:
        case 26:
        case 25:
        case 17:
        case 16:
        case 24:
        case 23:
        case 22:
        case 21:
        case 20:
        case 19:
        case 18:
        case 15:
        case 14:
        case 13:
          {
            i = h + ((i >>> 6 & 255) << 4) | 0;
            h = a + 8 | 0;
            a = (k[h >> 2] | 0) + -16 | 0;
            k[h >> 2] = a;
            k[i >> 2] = k[a >> 2];
            k[i + 4 >> 2] = k[a + 4 >> 2];
            k[i + 8 >> 2] = k[a + 8 >> 2];
            k[i + 12 >> 2] = k[a + 12 >> 2];
            return ;
          }
        case 31:
        case 32:
        case 33:
          {
            f = a + 8 | 0;
            e = k[f >> 2] | 0;
            b = k[e + -8 >> 2] | 0;
            if (b)
              if ((b | 0) == 1)
                b = (k[e + -16 >> 2] | 0) == 0;
              else
                b = 0;
            else
              b = 1;
            d = b & 1;
            b = d ^ 1;
            k[f >> 2] = e + -16;
            if ((c | 0) == 33) {
              a = (yh(a, h + (i >>> 23 << 4) | 0, 21) | 0) + 8 | 0;
              b = (k[a >> 2] | 0) == 0 ? d : b;
            }
            if ((b | 0) == (i >>> 6 & 255 | 0))
              return ;
            k[g >> 2] = (k[g >> 2] | 0) + 4;
            return ;
          }
        case 29:
          {
            c = a + 8 | 0;
            j = k[c >> 2] | 0;
            g = j + -16 | 0;
            d = j + -32 | 0;
            b = d - (h + (i >>> 23 << 4)) | 0;
            h = j + -48 | 0;
            k[h >> 2] = k[g >> 2];
            k[h + 4 >> 2] = k[g + 4 >> 2];
            k[h + 8 >> 2] = k[g + 8 >> 2];
            k[h + 12 >> 2] = k[g + 12 >> 2];
            if ((b | 0) > 16) {
              k[c >> 2] = d;
              Lh(a, b >> 4);
            }
            j = (k[f >> 2] | 0) + ((i >>> 6 & 255) << 4) | 0;
            i = (k[c >> 2] | 0) + -16 | 0;
            k[j >> 2] = k[i >> 2];
            k[j + 4 >> 2] = k[i + 4 >> 2];
            k[j + 8 >> 2] = k[i + 8 >> 2];
            k[j + 12 >> 2] = k[i + 12 >> 2];
            k[c >> 2] = k[e + 4 >> 2];
            return ;
          }
        case 41:
          {
            k[a + 8 >> 2] = k[e + 4 >> 2];
            return ;
          }
        case 36:
          {
            if (!(i & 8372224))
              return ;
            k[a + 8 >> 2] = k[e + 4 >> 2];
            return ;
          }
        default:
          return ;
      }
    }
    function nk(a) {
      a = a | 0;
      var b = 0,
          c = 0,
          d = 0,
          e = 0,
          f = 0,
          g = 0,
          h = 0,
          j = 0,
          n = 0,
          o = 0,
          p = 0,
          q = 0,
          s = 0,
          t = 0,
          u = 0,
          v = 0,
          x = 0,
          y = 0,
          z = 0,
          A = 0,
          B = 0,
          C = 0,
          D = 0,
          E = 0,
          F = 0,
          G = 0,
          H = 0,
          I = 0,
          J = 0,
          K = 0,
          L = 0,
          M = 0,
          N = 0,
          O = 0,
          P = 0,
          Q = 0,
          R = 0,
          S = 0,
          T = 0,
          U = 0;
      U = r;
      r = r + 16 | 0;
      S = U + 8 | 0;
      R = U;
      if (!a) {
        T = -2;
        r = U;
        return T | 0;
      }
      N = k[a + 32 >> 2] | 0;
      if (!N) {
        T = -2;
        r = U;
        return T | 0;
      }
      if ((k[N >> 2] | 0) != (a | 0)) {
        T = -2;
        r = U;
        return T | 0;
      }
      J = N + 4 | 0;
      K = N + 40 | 0;
      L = N + 16 | 0;
      M = N + 3168 | 0;
      v = N + 8 | 0;
      x = N + 12 | 0;
      y = N + 1088 | 0;
      z = N + 60 | 0;
      A = N + 3148 | 0;
      B = N + 56 | 0;
      C = N + 36 | 0;
      D = N + 64064 | 0;
      E = N + 20 | 0;
      F = N + 24 | 0;
      O = N + 48 | 0;
      P = k[w >> 2] | 0;
      G = N + 3160 | 0;
      Q = N + 3172 | 0;
      H = N + 3152 | 0;
      I = N + 3156 | 0;
      a = k[J >> 2] | 0;
      a: while (1) {
        b = (a | 0) > 9;
        b: do
          switch (a | 0) {
            case 2:
              {
                T = 7;
                break b;
              }
            case 1:
              {
                a = -1;
                T = 148;
                break a;
              }
            default:
              {}
          }
 while (!b);
        if ((T | 0) == 7) {
          T = 0;
          a = (i[L >> 0] | 0) == 0;
          c: do
            if (!(i[K >> 0] | 0)) {
              if (a) {
                u = k[A >> 2] | 0;
                d = k[N >> 2] | 0;
                n = k[d + 20 >> 2] | 0;
                t = (k[D >> 2] | 0) + 1 | 0;
                s = (k[C >> 2] | 0) * 1e5 | 0;
                e = k[M >> 2] | 0;
                f = k[z >> 2] | 0;
                c = k[y >> 2] | 0;
                a = i[v >> 0] | 0;
                g = k[x >> 2] | 0;
                h = k[B >> 2] | 0;
                j = n;
                d = k[d + 16 >> 2] | 0;
                d: while (1) {
                  e: do
                    if ((g | 0) > 0) {
                      if (!j) {
                        p = e;
                        b = 0;
                        break d;
                      }
                      b = a & 255;
                      while (1) {
                        if ((g | 0) == 1) {
                          g = j;
                          T = 115;
                          break e;
                        }
                        i[d >> 0] = a;
                        e = k[744 + ((e >>> 24 ^ b) << 2) >> 2] ^ e << 8;
                        g = g + -1 | 0;
                        d = d + 1 | 0;
                        j = j + -1 | 0;
                        if (!j) {
                          p = e;
                          b = 0;
                          break d;
                        }
                      }
                    } else {
                      p = e;
                      o = f;
                      q = c;
                      e = a;
                    }
 while (0);
                  while (1) {
                    if ((T | 0) == 115) {
                      T = 0;
                      if (!g) {
                        p = e;
                        g = 1;
                        b = 0;
                        break d;
                      }
                      i[d >> 0] = a;
                      p = k[744 + ((e >>> 24 ^ a & 255) << 2) >> 2] ^ e << 8;
                      o = f;
                      q = c;
                      e = a;
                      j = g + -1 | 0;
                      d = d + 1 | 0;
                    }
                    if ((q | 0) > (t | 0)) {
                      a = -4;
                      T = 148;
                      break a;
                    }
                    if ((q | 0) == (t | 0)) {
                      f = o;
                      c = t;
                      a = e;
                      g = 0;
                      b = j;
                      break d;
                    }
                    a = o & 255;
                    if (h >>> 0 >= s >>> 0) {
                      a = -4;
                      T = 148;
                      break a;
                    }
                    f = k[u + (h << 2) >> 2] | 0;
                    h = f >>> 8;
                    c = q + 1 | 0;
                    f = f & 255;
                    if ((f | 0) != (o | 0)) {
                      e = p;
                      g = j;
                      T = 115;
                      continue;
                    }
                    if ((c | 0) == (t | 0)) {
                      e = p;
                      f = o;
                      c = t;
                      g = j;
                      T = 115;
                    } else
                      break;
                  }
                  if (h >>> 0 >= s >>> 0) {
                    a = -4;
                    T = 148;
                    break a;
                  }
                  e = k[u + (h << 2) >> 2] | 0;
                  h = e >>> 8;
                  c = q + 2 | 0;
                  if ((c | 0) == (t | 0)) {
                    e = p;
                    f = o;
                    c = t;
                    g = 2;
                    continue;
                  }
                  f = e & 255;
                  if ((f | 0) != (o | 0)) {
                    e = p;
                    g = 2;
                    continue;
                  }
                  if (h >>> 0 >= s >>> 0) {
                    a = -4;
                    T = 148;
                    break a;
                  }
                  e = k[u + (h << 2) >> 2] | 0;
                  h = e >>> 8;
                  c = q + 3 | 0;
                  if ((c | 0) == (t | 0)) {
                    e = p;
                    f = o;
                    c = t;
                    g = 3;
                    continue;
                  }
                  f = e & 255;
                  if ((f | 0) != (o | 0)) {
                    e = p;
                    g = 3;
                    continue;
                  }
                  if (h >>> 0 >= s >>> 0) {
                    a = -4;
                    T = 148;
                    break a;
                  }
                  b = k[u + (h << 2) >> 2] | 0;
                  e = b >>> 8;
                  if (e >>> 0 >= s >>> 0) {
                    a = -4;
                    T = 148;
                    break a;
                  }
                  h = k[u + (e << 2) >> 2] | 0;
                  e = p;
                  f = h & 255;
                  c = q + 5 | 0;
                  g = (b & 255) + 4 | 0;
                  h = h >>> 8;
                }
                e = k[N >> 2] | 0;
                q = e + 24 | 0;
                t = k[q >> 2] | 0;
                s = t + (n - b) | 0;
                k[q >> 2] = s;
                if (s >>> 0 < t >>> 0) {
                  t = e + 28 | 0;
                  k[t >> 2] = (k[t >> 2] | 0) + 1;
                }
                k[M >> 2] = p;
                i[v >> 0] = a;
                k[x >> 2] = g;
                k[y >> 2] = c;
                k[z >> 2] = f;
                k[A >> 2] = u;
                k[B >> 2] = h;
                k[e + 16 >> 2] = d;
                k[e + 20 >> 2] = b;
                break;
              }
              b = k[N >> 2] | 0;
              if (k[b + 20 >> 2] | 0) {
                a = k[x >> 2] | 0;
                do
                  do
                    if (!a) {
                      q = k[y >> 2] | 0;
                      n = k[D >> 2] | 0;
                      c = n + 1 | 0;
                      if ((q | 0) == (c | 0))
                        break c;
                      if ((q | 0) > (c | 0)) {
                        a = -4;
                        T = 148;
                        break a;
                      }
                      k[x >> 2] = 1;
                      j = k[z >> 2] | 0;
                      i[v >> 0] = j;
                      d = k[B >> 2] | 0;
                      o = (k[C >> 2] | 0) * 1e5 | 0;
                      if (d >>> 0 >= o >>> 0) {
                        a = -4;
                        T = 148;
                        break a;
                      }
                      p = k[A >> 2] | 0;
                      e = k[p + (d << 2) >> 2] | 0;
                      c = e >>> 8;
                      k[B >> 2] = c;
                      d = k[E >> 2] | 0;
                      if (!d) {
                        u = k[F >> 2] | 0;
                        d = k[1768 + (u << 2) >> 2] | 0;
                        k[E >> 2] = d;
                        u = u + 1 | 0;
                        k[F >> 2] = (u | 0) == 512 ? 0 : u;
                      }
                      a = d + -1 | 0;
                      k[E >> 2] = a;
                      g = q + 1 | 0;
                      k[y >> 2] = g;
                      if ((q | 0) == (n | 0))
                        a = 1;
                      else {
                        d = (a | 0) == 1 ^ e & 255;
                        if ((d | 0) != (j | 0)) {
                          k[z >> 2] = d;
                          a = 1;
                          break;
                        }
                        k[x >> 2] = 2;
                        if (c >>> 0 >= o >>> 0) {
                          a = -4;
                          T = 148;
                          break a;
                        }
                        e = k[p + (c << 2) >> 2] | 0;
                        c = e >>> 8;
                        k[B >> 2] = c;
                        if (!a) {
                          u = k[F >> 2] | 0;
                          d = k[1768 + (u << 2) >> 2] | 0;
                          k[E >> 2] = d;
                          u = u + 1 | 0;
                          k[F >> 2] = (u | 0) == 512 ? 0 : u;
                        } else
                          d = a;
                        f = d + -1 | 0;
                        k[E >> 2] = f;
                        h = q + 2 | 0;
                        k[y >> 2] = h;
                        if ((g | 0) == (n | 0)) {
                          a = 2;
                          break;
                        }
                        d = (f | 0) == 1 ^ e & 255;
                        if ((d | 0) != (j | 0)) {
                          k[z >> 2] = d;
                          a = 2;
                          break;
                        }
                        k[x >> 2] = 3;
                        if (c >>> 0 >= o >>> 0) {
                          a = -4;
                          T = 148;
                          break a;
                        }
                        e = k[p + (c << 2) >> 2] | 0;
                        a = e >>> 8;
                        k[B >> 2] = a;
                        if (!f) {
                          u = k[F >> 2] | 0;
                          d = k[1768 + (u << 2) >> 2] | 0;
                          k[E >> 2] = d;
                          u = u + 1 | 0;
                          k[F >> 2] = (u | 0) == 512 ? 0 : u;
                        } else
                          d = f;
                        d = d + -1 | 0;
                        k[E >> 2] = d;
                        k[y >> 2] = q + 3;
                        if ((h | 0) == (n | 0)) {
                          a = 3;
                          break;
                        }
                        c = (d | 0) == 1 ^ e & 255;
                        if ((c | 0) != (j | 0)) {
                          k[z >> 2] = c;
                          a = 3;
                          break;
                        }
                        if (a >>> 0 >= o >>> 0) {
                          a = -4;
                          T = 148;
                          break a;
                        }
                        a = k[p + (a << 2) >> 2] | 0;
                        e = a >>> 8;
                        k[B >> 2] = e;
                        if (!d) {
                          u = k[F >> 2] | 0;
                          d = k[1768 + (u << 2) >> 2] | 0;
                          k[E >> 2] = d;
                          u = u + 1 | 0;
                          k[F >> 2] = (u | 0) == 512 ? 0 : u;
                        }
                        c = d + -1 | 0;
                        k[E >> 2] = c;
                        k[y >> 2] = q + 4;
                        a = ((c | 0) == 1 ^ a & 255) + 4 | 0;
                        k[x >> 2] = a;
                        if (e >>> 0 >= o >>> 0) {
                          a = -4;
                          T = 148;
                          break a;
                        }
                        u = k[p + (e << 2) >> 2] | 0;
                        d = u & 255;
                        k[z >> 2] = d;
                        k[B >> 2] = u >>> 8;
                        if (!c) {
                          u = k[F >> 2] | 0;
                          c = k[1768 + (u << 2) >> 2] | 0;
                          k[E >> 2] = c;
                          u = u + 1 | 0;
                          k[F >> 2] = (u | 0) == 512 ? 0 : u;
                        }
                        u = c + -1 | 0;
                        k[E >> 2] = u;
                        k[z >> 2] = (u | 0) == 1 ^ d;
                        k[y >> 2] = q + 5;
                      }
                    } else {
                      i[k[b + 16 >> 2] >> 0] = i[v >> 0] | 0;
                      a = k[M >> 2] | 0;
                      k[M >> 2] = k[744 + ((l[v >> 0] ^ a >>> 24) << 2) >> 2] ^ a << 8;
                      a = (k[x >> 2] | 0) + -1 | 0;
                      k[x >> 2] = a;
                      b = k[N >> 2] | 0;
                      t = b + 16 | 0;
                      k[t >> 2] = (k[t >> 2] | 0) + 1;
                      t = b + 20 | 0;
                      k[t >> 2] = (k[t >> 2] | 0) + -1;
                      t = b + 24 | 0;
                      u = (k[t >> 2] | 0) + 1 | 0;
                      k[t >> 2] = u;
                      if (!u) {
                        u = b + 28 | 0;
                        k[u >> 2] = (k[u >> 2] | 0) + 1;
                      }
                    }
 while (0);
 while ((k[b + 20 >> 2] | 0) != 0);
              }
            } else {
              b = k[N >> 2] | 0;
              c = (k[b + 20 >> 2] | 0) == 0;
              if (a) {
                if (c)
                  break;
                a = k[x >> 2] | 0;
                while (1) {
                  do
                    if (!a) {
                      s = k[y >> 2] | 0;
                      p = k[D >> 2] | 0;
                      c = p + 1 | 0;
                      if ((s | 0) == (c | 0))
                        break c;
                      if ((s | 0) > (c | 0)) {
                        a = -4;
                        T = 148;
                        break a;
                      }
                      k[x >> 2] = 1;
                      o = k[z >> 2] | 0;
                      i[v >> 0] = o;
                      e = k[B >> 2] | 0;
                      q = (k[C >> 2] | 0) * 1e5 | 0;
                      if (e >>> 0 < q >>> 0) {
                        c = 256;
                        d = 0;
                      } else {
                        a = -4;
                        T = 148;
                        break a;
                      }
                      do {
                        u = d + c >> 1;
                        t = (k[N + 1092 + (u << 2) >> 2] | 0) > (e | 0);
                        c = t ? u : c;
                        d = t ? d : u;
                      } while ((c - d | 0) != 1);
                      n = k[H >> 2] | 0;
                      g = m[n + (e << 1) >> 1] | 0;
                      j = k[I >> 2] | 0;
                      h = (l[j + (e >>> 1) >> 0] | 0) >>> (e << 2 & 4) << 16 & 983040 | g;
                      k[B >> 2] = h;
                      f = s + 1 | 0;
                      k[y >> 2] = f;
                      if ((s | 0) != (p | 0)) {
                        e = d & 255;
                        if ((e | 0) != (o | 0)) {
                          k[z >> 2] = e;
                          a = 1;
                          break;
                        }
                        k[x >> 2] = 2;
                        if (h >>> 0 < q >>> 0) {
                          d = 256;
                          e = 0;
                        } else {
                          a = -4;
                          T = 148;
                          break a;
                        }
                        do {
                          u = e + d >> 1;
                          t = (k[N + 1092 + (u << 2) >> 2] | 0) > (h | 0);
                          d = t ? u : d;
                          e = t ? e : u;
                        } while ((d - e | 0) != 1);
                        a = m[n + (h << 1) >> 1] | 0;
                        h = (l[j + (h >>> 1) >> 0] | 0) >>> (g << 2 & 4) << 16 & 983040 | a;
                        k[B >> 2] = h;
                        g = s + 2 | 0;
                        k[y >> 2] = g;
                        if ((f | 0) == (p | 0))
                          a = 2;
                        else {
                          e = e & 255;
                          if ((e | 0) != (o | 0)) {
                            k[z >> 2] = e;
                            a = 2;
                            break;
                          }
                          k[x >> 2] = 3;
                          if (h >>> 0 < q >>> 0) {
                            d = 256;
                            e = 0;
                          } else {
                            a = -4;
                            T = 148;
                            break a;
                          }
                          do {
                            u = e + d >> 1;
                            t = (k[N + 1092 + (u << 2) >> 2] | 0) > (h | 0);
                            d = t ? u : d;
                            e = t ? e : u;
                          } while ((d - e | 0) != 1);
                          c = m[n + (h << 1) >> 1] | 0;
                          h = (l[j + (h >>> 1) >> 0] | 0) >>> (a << 2 & 4) << 16 & 983040 | c;
                          k[B >> 2] = h;
                          k[y >> 2] = s + 3;
                          if ((g | 0) == (p | 0)) {
                            a = 3;
                            break;
                          }
                          d = e & 255;
                          if ((d | 0) != (o | 0)) {
                            k[z >> 2] = d;
                            a = 3;
                            break;
                          }
                          if (h >>> 0 < q >>> 0) {
                            e = 256;
                            d = 0;
                          } else {
                            a = -4;
                            T = 148;
                            break a;
                          }
                          do {
                            u = d + e >> 1;
                            t = (k[N + 1092 + (u << 2) >> 2] | 0) > (h | 0);
                            e = t ? u : e;
                            d = t ? d : u;
                          } while ((e - d | 0) != 1);
                          f = m[n + (h << 1) >> 1] | 0;
                          c = (l[j + (h >>> 1) >> 0] | 0) >>> (c << 2 & 4) << 16 & 983040 | f;
                          k[B >> 2] = c;
                          k[y >> 2] = s + 4;
                          a = (d & 255) + 4 | 0;
                          k[x >> 2] = a;
                          if (c >>> 0 < q >>> 0) {
                            e = 256;
                            d = 0;
                          } else {
                            a = -4;
                            T = 148;
                            break a;
                          }
                          do {
                            u = d + e >> 1;
                            t = (k[N + 1092 + (u << 2) >> 2] | 0) > (c | 0);
                            e = t ? u : e;
                            d = t ? d : u;
                          } while ((e - d | 0) != 1);
                          k[z >> 2] = d;
                          k[B >> 2] = (l[j + (c >>> 1) >> 0] | 0) >>> (f << 2 & 4) << 16 & 983040 | m[n + (c << 1) >> 1];
                          k[y >> 2] = s + 5;
                        }
                      } else
                        a = 1;
                    } else {
                      i[k[b + 16 >> 2] >> 0] = i[v >> 0] | 0;
                      a = k[M >> 2] | 0;
                      k[M >> 2] = k[744 + ((l[v >> 0] ^ a >>> 24) << 2) >> 2] ^ a << 8;
                      a = (k[x >> 2] | 0) + -1 | 0;
                      k[x >> 2] = a;
                      b = k[N >> 2] | 0;
                      t = b + 16 | 0;
                      k[t >> 2] = (k[t >> 2] | 0) + 1;
                      t = b + 20 | 0;
                      k[t >> 2] = (k[t >> 2] | 0) + -1;
                      t = b + 24 | 0;
                      u = (k[t >> 2] | 0) + 1 | 0;
                      k[t >> 2] = u;
                      if (!u) {
                        u = b + 28 | 0;
                        k[u >> 2] = (k[u >> 2] | 0) + 1;
                      }
                    }
 while (0);
                  if (!(k[b + 20 >> 2] | 0))
                    break c;
                }
              }
              if (!c) {
                a = k[x >> 2] | 0;
                do
                  do
                    if (!a) {
                      u = k[y >> 2] | 0;
                      q = k[D >> 2] | 0;
                      c = q + 1 | 0;
                      if ((u | 0) == (c | 0))
                        break c;
                      if ((u | 0) > (c | 0)) {
                        a = -4;
                        T = 148;
                        break a;
                      }
                      k[x >> 2] = 1;
                      p = k[z >> 2] | 0;
                      i[v >> 0] = p;
                      e = k[B >> 2] | 0;
                      s = (k[C >> 2] | 0) * 1e5 | 0;
                      if (e >>> 0 < s >>> 0) {
                        c = 256;
                        d = 0;
                      } else {
                        a = -4;
                        T = 148;
                        break a;
                      }
                      do {
                        t = d + c >> 1;
                        o = (k[N + 1092 + (t << 2) >> 2] | 0) > (e | 0);
                        c = o ? t : c;
                        d = o ? d : t;
                      } while ((c - d | 0) != 1);
                      o = k[H >> 2] | 0;
                      a = m[o + (e << 1) >> 1] | 0;
                      t = k[I >> 2] | 0;
                      c = (l[t + (e >>> 1) >> 0] | 0) >>> (e << 2 & 4) << 16 & 983040 | a;
                      k[B >> 2] = c;
                      e = k[E >> 2] | 0;
                      if (!e) {
                        n = k[F >> 2] | 0;
                        e = k[1768 + (n << 2) >> 2] | 0;
                        k[E >> 2] = e;
                        n = n + 1 | 0;
                        k[F >> 2] = (n | 0) == 512 ? 0 : n;
                      }
                      g = e + -1 | 0;
                      k[E >> 2] = g;
                      j = u + 1 | 0;
                      k[y >> 2] = j;
                      if ((u | 0) == (q | 0))
                        a = 1;
                      else {
                        e = (g | 0) == 1 ^ d & 255;
                        if ((e | 0) != (p | 0)) {
                          k[z >> 2] = e;
                          a = 1;
                          break;
                        }
                        k[x >> 2] = 2;
                        if (c >>> 0 < s >>> 0) {
                          f = 256;
                          e = 0;
                        } else {
                          a = -4;
                          T = 148;
                          break a;
                        }
                        do {
                          n = e + f >> 1;
                          h = (k[N + 1092 + (n << 2) >> 2] | 0) > (c | 0);
                          f = h ? n : f;
                          e = h ? e : n;
                        } while ((f - e | 0) != 1);
                        h = e;
                        n = m[o + (c << 1) >> 1] | 0;
                        d = (l[t + (c >>> 1) >> 0] | 0) >>> (a << 2 & 4) << 16 & 983040 | n;
                        k[B >> 2] = d;
                        if (!g) {
                          g = k[F >> 2] | 0;
                          e = k[1768 + (g << 2) >> 2] | 0;
                          k[E >> 2] = e;
                          g = g + 1 | 0;
                          k[F >> 2] = (g | 0) == 512 ? 0 : g;
                        } else
                          e = g;
                        g = e + -1 | 0;
                        k[E >> 2] = g;
                        c = u + 2 | 0;
                        k[y >> 2] = c;
                        if ((j | 0) == (q | 0)) {
                          a = 2;
                          break;
                        }
                        e = (g | 0) == 1 ^ h & 255;
                        if ((e | 0) != (p | 0)) {
                          k[z >> 2] = e;
                          a = 2;
                          break;
                        }
                        k[x >> 2] = 3;
                        if (d >>> 0 < s >>> 0) {
                          f = 256;
                          e = 0;
                        } else {
                          a = -4;
                          T = 148;
                          break a;
                        }
                        do {
                          j = e + f >> 1;
                          h = (k[N + 1092 + (j << 2) >> 2] | 0) > (d | 0);
                          f = h ? j : f;
                          e = h ? e : j;
                        } while ((f - e | 0) != 1);
                        h = e;
                        j = m[o + (d << 1) >> 1] | 0;
                        f = (l[t + (d >>> 1) >> 0] | 0) >>> (n << 2 & 4) << 16 & 983040 | j;
                        k[B >> 2] = f;
                        if (!g) {
                          n = k[F >> 2] | 0;
                          e = k[1768 + (n << 2) >> 2] | 0;
                          k[E >> 2] = e;
                          n = n + 1 | 0;
                          k[F >> 2] = (n | 0) == 512 ? 0 : n;
                        } else
                          e = g;
                        d = e + -1 | 0;
                        k[E >> 2] = d;
                        k[y >> 2] = u + 3;
                        if ((c | 0) == (q | 0)) {
                          a = 3;
                          break;
                        }
                        c = (d | 0) == 1 ^ h & 255;
                        if ((c | 0) != (p | 0)) {
                          k[z >> 2] = c;
                          a = 3;
                          break;
                        }
                        if (f >>> 0 < s >>> 0) {
                          c = 256;
                          e = 0;
                        } else {
                          a = -4;
                          T = 148;
                          break a;
                        }
                        do {
                          q = e + c >> 1;
                          p = (k[N + 1092 + (q << 2) >> 2] | 0) > (f | 0);
                          c = p ? q : c;
                          e = p ? e : q;
                        } while ((c - e | 0) != 1);
                        h = m[o + (f << 1) >> 1] | 0;
                        f = (l[t + (f >>> 1) >> 0] | 0) >>> (j << 2 & 4) << 16 & 983040 | h;
                        k[B >> 2] = f;
                        if (!d) {
                          q = k[F >> 2] | 0;
                          d = k[1768 + (q << 2) >> 2] | 0;
                          k[E >> 2] = d;
                          q = q + 1 | 0;
                          k[F >> 2] = (q | 0) == 512 ? 0 : q;
                        }
                        c = d + -1 | 0;
                        k[E >> 2] = c;
                        k[y >> 2] = u + 4;
                        a = ((c | 0) == 1 ^ e & 255) + 4 | 0;
                        k[x >> 2] = a;
                        if (f >>> 0 < s >>> 0) {
                          d = 256;
                          e = 0;
                        } else {
                          a = -4;
                          T = 148;
                          break a;
                        }
                        do {
                          s = e + d >> 1;
                          q = (k[N + 1092 + (s << 2) >> 2] | 0) > (f | 0);
                          d = q ? s : d;
                          e = q ? e : s;
                        } while ((d - e | 0) != 1);
                        k[z >> 2] = e;
                        k[B >> 2] = (l[t + (f >>> 1) >> 0] | 0) >>> (h << 2 & 4) << 16 & 983040 | m[o + (f << 1) >> 1];
                        if (!c) {
                          t = k[F >> 2] | 0;
                          c = k[1768 + (t << 2) >> 2] | 0;
                          k[E >> 2] = c;
                          t = t + 1 | 0;
                          k[F >> 2] = (t | 0) == 512 ? 0 : t;
                        }
                        t = c + -1 | 0;
                        k[E >> 2] = t;
                        k[z >> 2] = (t | 0) == 1 ^ e;
                        k[y >> 2] = u + 5;
                      }
                    } else {
                      i[k[b + 16 >> 2] >> 0] = i[v >> 0] | 0;
                      a = k[M >> 2] | 0;
                      k[M >> 2] = k[744 + ((l[v >> 0] ^ a >>> 24) << 2) >> 2] ^ a << 8;
                      a = (k[x >> 2] | 0) + -1 | 0;
                      k[x >> 2] = a;
                      b = k[N >> 2] | 0;
                      t = b + 16 | 0;
                      k[t >> 2] = (k[t >> 2] | 0) + 1;
                      t = b + 20 | 0;
                      k[t >> 2] = (k[t >> 2] | 0) + -1;
                      t = b + 24 | 0;
                      u = (k[t >> 2] | 0) + 1 | 0;
                      k[t >> 2] = u;
                      if (!u) {
                        u = b + 28 | 0;
                        k[u >> 2] = (k[u >> 2] | 0) + 1;
                      }
                    }
 while (0);
 while ((k[b + 20 >> 2] | 0) != 0);
              }
            }
 while (0);
          if ((k[y >> 2] | 0) != ((k[D >> 2] | 0) + 1 | 0)) {
            a = 0;
            T = 148;
            break;
          }
          if (k[x >> 2] | 0) {
            a = 0;
            T = 148;
            break;
          }
          b = ~k[M >> 2];
          k[M >> 2] = b;
          a = k[O >> 2] | 0;
          if ((a | 0) > 2) {
            k[R >> 2] = k[G >> 2];
            k[R + 4 >> 2] = b;
            Ib(P | 0, 1004699, R | 0) | 0;
            a = k[O >> 2] | 0;
          }
          if ((a | 0) > 1)
            _c(93, P | 0) | 0;
          a = k[M >> 2] | 0;
          if ((a | 0) != (k[G >> 2] | 0)) {
            a = -4;
            T = 148;
            break;
          }
          u = k[Q >> 2] | 0;
          k[Q >> 2] = (u << 1 | u >>> 31) ^ a;
          k[J >> 2] = 14;
        }
        a = jk(N) | 0;
        if ((a | 0) == 4) {
          T = 144;
          break;
        }
        if ((k[J >> 2] | 0) == 2)
          a = 2;
        else {
          T = 148;
          break;
        }
      }
      if ((T | 0) == 144) {
        a = N + 3164 | 0;
        if ((k[O >> 2] | 0) > 2) {
          T = k[Q >> 2] | 0;
          k[S >> 2] = k[a >> 2];
          k[S + 4 >> 2] = T;
          Ib(P | 0, 1004717, S | 0) | 0;
        }
        T = (k[Q >> 2] | 0) == (k[a >> 2] | 0) ? 4 : -4;
        r = U;
        return T | 0;
      } else if ((T | 0) == 148) {
        r = U;
        return a | 0;
      }
      return 0;
    }
    function ok(a) {
      a = a | 0;
      var b = 0,
          c = 0,
          d = 0;
      if (!a) {
        d = -2;
        return d | 0;
      }
      d = a + 32 | 0;
      c = k[d >> 2] | 0;
      if (!c) {
        d = -2;
        return d | 0;
      }
      if ((k[c >> 2] | 0) != (a | 0)) {
        d = -2;
        return d | 0;
      }
      b = k[c + 3148 >> 2] | 0;
      if (b)
        md[k[a + 40 >> 2] & 63](k[a + 44 >> 2] | 0, b);
      b = k[c + 3152 >> 2] | 0;
      if (b)
        md[k[a + 40 >> 2] & 63](k[a + 44 >> 2] | 0, b);
      b = k[c + 3156 >> 2] | 0;
      c = a + 40 | 0;
      if (!b)
        b = a + 44 | 0;
      else {
        a = a + 44 | 0;
        md[k[c >> 2] & 63](k[a >> 2] | 0, b);
        b = a;
      }
      md[k[c >> 2] & 63](k[b >> 2] | 0, k[d >> 2] | 0);
      k[d >> 2] = 0;
      d = 0;
      return d | 0;
    }
    function pk(a, b, c, d, e, f) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      d = d | 0;
      e = e | 0;
      f = f | 0;
      var g = 0,
          h = 0,
          j = 0,
          l = 0,
          m = 0,
          n = 0;
      n = r;
      r = r + 48 | 0;
      h = n;
      if ((a | 0) == 0 | (b | 0) == 0 | (c | 0) == 0) {
        m = -2;
        r = n;
        return m | 0;
      }
      if (e >>> 0 > 1 | f >>> 0 > 4) {
        m = -2;
        r = n;
        return m | 0;
      }
      l = h + 40 | 0;
      m = h + 44 | 0;
      k[m >> 2] = 0;
      k[h + 36 >> 2] = 50;
      k[l >> 2] = 50;
      g = ir(64116) | 0;
      if (!g) {
        m = -3;
        r = n;
        return m | 0;
      }
      k[g >> 2] = h;
      j = h + 32 | 0;
      k[j >> 2] = g;
      k[g + 4 >> 2] = 10;
      k[g + 32 >> 2] = 0;
      k[g + 28 >> 2] = 0;
      k[g + 3172 >> 2] = 0;
      k[h + 8 >> 2] = 0;
      k[h + 12 >> 2] = 0;
      k[h + 24 >> 2] = 0;
      k[h + 28 >> 2] = 0;
      i[g + 40 >> 0] = e;
      k[g + 3156 >> 2] = 0;
      k[g + 3152 >> 2] = 0;
      k[g + 3148 >> 2] = 0;
      k[g + 44 >> 2] = 0;
      k[g + 48 >> 2] = f;
      k[h >> 2] = c;
      k[h + 16 >> 2] = a;
      k[h + 4 >> 2] = d;
      e = h + 20 | 0;
      k[e >> 2] = k[b >> 2];
      g = nk(h) | 0;
      switch (g | 0) {
        case 4:
          {
            k[b >> 2] = (k[b >> 2] | 0) - (k[e >> 2] | 0);
            a = k[j >> 2] | 0;
            if (!a) {
              m = 0;
              r = n;
              return m | 0;
            }
            if ((k[a >> 2] | 0) != (h | 0)) {
              m = 0;
              r = n;
              return m | 0;
            }
            e = k[a + 3148 >> 2] | 0;
            if (e)
              md[k[l >> 2] & 63](k[m >> 2] | 0, e);
            e = k[a + 3152 >> 2] | 0;
            if (e)
              md[k[l >> 2] & 63](k[m >> 2] | 0, e);
            e = k[a + 3156 >> 2] | 0;
            if (e)
              md[k[l >> 2] & 63](k[m >> 2] | 0, e);
            md[k[l >> 2] & 63](k[m >> 2] | 0, k[j >> 2] | 0);
            k[j >> 2] = 0;
            m = 0;
            r = n;
            return m | 0;
          }
        case 0:
          {
            g = (k[e >> 2] | 0) == 0;
            a = k[j >> 2] | 0;
            if ((a | 0) != 0 ? (k[a >> 2] | 0) == (h | 0) : 0) {
              e = k[a + 3148 >> 2] | 0;
              if (e)
                md[k[l >> 2] & 63](k[m >> 2] | 0, e);
              e = k[a + 3152 >> 2] | 0;
              if (e)
                md[k[l >> 2] & 63](k[m >> 2] | 0, e);
              e = k[a + 3156 >> 2] | 0;
              if (e)
                md[k[l >> 2] & 63](k[m >> 2] | 0, e);
              md[k[l >> 2] & 63](k[m >> 2] | 0, k[j >> 2] | 0);
              k[j >> 2] = 0;
            }
            m = g ? -8 : -7;
            r = n;
            return m | 0;
          }
        default:
          {
            a = k[j >> 2] | 0;
            if (!a) {
              m = g;
              r = n;
              return m | 0;
            }
            if ((k[a >> 2] | 0) != (h | 0)) {
              m = g;
              r = n;
              return m | 0;
            }
            e = k[a + 3148 >> 2] | 0;
            if (e)
              md[k[l >> 2] & 63](k[m >> 2] | 0, e);
            e = k[a + 3152 >> 2] | 0;
            if (e)
              md[k[l >> 2] & 63](k[m >> 2] | 0, e);
            e = k[a + 3156 >> 2] | 0;
            if (e)
              md[k[l >> 2] & 63](k[m >> 2] | 0, e);
            md[k[l >> 2] & 63](k[m >> 2] | 0, k[j >> 2] | 0);
            k[j >> 2] = 0;
            m = g;
            r = n;
            return m | 0;
          }
      }
      return 0;
    }
    function qk(a) {
      a = a | 0;
      return a | 0;
    }
    function rk(a, b) {
      a = a | 0;
      b = b | 0;
      Zf(a, k[b >> 2] | 0);
      return ;
    }
    function sk(a, b) {
      a = a | 0;
      b = b | 0;
      cg(a, k[b >> 2] | 0, k[b + 4 >> 2] | 0, 0);
      return ;
    }
    function tk(a, b) {
      a = a | 0;
      b = b | 0;
      var c = 0,
          d = 0,
          e = 0,
          f = 0,
          g = 0,
          h = 0,
          j = 0,
          l = 0,
          m = 0,
          n = 0,
          o = 0,
          p = 0,
          q = 0,
          r = 0;
      q = k[a >> 2] | 0;
      o = a + 24 | 0;
      e = k[o >> 2] | 0;
      r = a + 16 | 0;
      m = k[r >> 2] | 0;
      do
        if ((e | 0) != -1) {
          n = k[q + 48 >> 2] | 0;
          while (1) {
            h = n + (e << 2) | 0;
            g = k[h >> 2] | 0;
            f = (g >>> 14) + -131071 | 0;
            c = e;
            e = (f | 0) == -1 ? -1 : e + 1 + f | 0;
            if ((c | 0) > 0 ? (j = n + (c + -1 << 2) | 0, l = k[j >> 2] | 0, (i[813619 + (l & 63) >> 0] | 0) < 0) : 0) {
              d = j;
              f = l;
            } else {
              d = h;
              f = g;
            }
            if ((f & 63 | 0) == 35) {
              k[d >> 2] = f & 8372224 | f >>> 23 << 6 | 34;
              d = m + ~c | 0;
              if ((((d | 0) > -1 ? d : 0 - d | 0) | 0) > 131071) {
                e = 8;
                break;
              }
              d = k[h >> 2] & 16383 | (d << 14) + 2147467264;
            } else {
              d = m + ~c | 0;
              if ((((d | 0) > -1 ? d : 0 - d | 0) | 0) > 131071) {
                e = 11;
                break;
              }
              d = (d << 14) + 2147467264 | g & 16383;
            }
            k[h >> 2] = d;
            if ((e | 0) == -1) {
              e = 14;
              break;
            }
          }
          if ((e | 0) == 8)
            Dg(k[a + 8 >> 2] | 0, 999311);
          else if ((e | 0) == 11)
            Dg(k[a + 8 >> 2] | 0, 999311);
          else if ((e | 0) == 14) {
            p = k[r >> 2] | 0;
            break;
          }
        } else
          p = m;
 while (0);
      k[o >> 2] = -1;
      c = q + 20 | 0;
      if ((p | 0) < (k[c >> 2] | 0)) {
        e = k[q + 48 >> 2] | 0;
        c = p;
      } else {
        p = q + 48 | 0;
        e = Ig(k[(k[a + 8 >> 2] | 0) + 52 >> 2] | 0, k[p >> 2] | 0, c, 4, 2147483647, 1013057) | 0;
        k[p >> 2] = e;
        c = k[r >> 2] | 0;
      }
      k[e + (c << 2) >> 2] = b;
      d = k[r >> 2] | 0;
      e = q + 24 | 0;
      c = a + 8 | 0;
      if ((d | 0) < (k[e >> 2] | 0)) {
        b = q + 56 | 0;
        q = d;
        a = k[c >> 2] | 0;
        a = a + 8 | 0;
        a = k[a >> 2] | 0;
        b = k[b >> 2] | 0;
        q = b + (q << 2) | 0;
        k[q >> 2] = a;
        q = k[r >> 2] | 0;
        a = q + 1 | 0;
        k[r >> 2] = a;
        return q | 0;
      } else {
        b = q + 56 | 0;
        q = Ig(k[(k[c >> 2] | 0) + 52 >> 2] | 0, k[b >> 2] | 0, e, 4, 2147483647, 1013057) | 0;
        k[b >> 2] = q;
        q = k[r >> 2] | 0;
        a = k[c >> 2] | 0;
        a = a + 8 | 0;
        a = k[a >> 2] | 0;
        b = k[b >> 2] | 0;
        q = b + (q << 2) | 0;
        k[q >> 2] = a;
        q = k[r >> 2] | 0;
        a = q + 1 | 0;
        k[r >> 2] = a;
        return q | 0;
      }
      return 0;
    }
    function uk(a, b, c) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      var d = 0,
          e = 0,
          f = 0,
          g = 0,
          h = 0,
          j = 0;
      e = k[a + 8 >> 2] | 0;
      h = k[e + 52 >> 2] | 0;
      j = k[a >> 2] | 0;
      e = nh(h, k[e + 64 >> 2] | 0, b) | 0;
      g = e + 8 | 0;
      if ((k[g >> 2] | 0) == 19) {
        d = k[e >> 2] | 0;
        b = a + 28 | 0;
        if (((d | 0) < (k[b >> 2] | 0) ? (f = k[j + 44 >> 2] | 0, ((k[c + 8 >> 2] ^ k[f + (d << 4) + 8 >> 2]) & 63 | 0) == 0) : 0) ? (Kh(0, f + (d << 4) | 0, c) | 0) != 0 : 0) {
          j = d;
          return j | 0;
        }
      } else
        b = a + 28 | 0;
      a = j + 16 | 0;
      d = k[a >> 2] | 0;
      f = k[b >> 2] | 0;
      k[e >> 2] = f;
      k[e + 4 >> 2] = ((f | 0) < 0) << 31 >> 31;
      k[g >> 2] = 19;
      if ((f | 0) < (d | 0))
        a = d;
      else {
        g = j + 44 | 0;
        e = Ig(h, k[g >> 2] | 0, a, 16, 67108863, 1013047) | 0;
        k[g >> 2] = e;
        a = k[a >> 2] | 0;
      }
      e = k[j + 44 >> 2] | 0;
      if ((d | 0) < (a | 0))
        do {
          k[e + (d << 4) + 8 >> 2] = 0;
          d = d + 1 | 0;
        } while ((d | 0) < (a | 0));
      g = e + (f << 4) | 0;
      k[g >> 2] = k[c >> 2];
      k[g + 4 >> 2] = k[c + 4 >> 2];
      k[g + 8 >> 2] = k[c + 8 >> 2];
      k[g + 12 >> 2] = k[c + 12 >> 2];
      k[b >> 2] = (k[b >> 2] | 0) + 1;
      if (!(k[c + 8 >> 2] & 64)) {
        j = f;
        return j | 0;
      }
      if (!(i[j + 5 >> 0] & 4)) {
        j = f;
        return j | 0;
      }
      b = k[c >> 2] | 0;
      if (!(i[b + 5 >> 0] & 3)) {
        j = f;
        return j | 0;
      }
      rg(h, j, b);
      j = f;
      return j | 0;
    }
    function vk(a, b, c) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      var d = 0,
          e = 0,
          f = 0,
          g = 0,
          h = 0,
          j = 0,
          l = 0,
          m = 0,
          n = 0,
          o = 0,
          p = 0,
          q = 0,
          r = 0,
          s = 0,
          t = 0,
          u = 0,
          v = 0,
          w = 0,
          x = 0,
          y = 0,
          z = 0,
          A = 0;
      wk(a, b, c);
      m = (k[b >> 2] | 0) == 11;
      x = b + 16 | 0;
      do
        if (m ? (d = k[b + 8 >> 2] | 0, (d | 0) != -1) : 0) {
          h = k[x >> 2] | 0;
          if ((h | 0) == -1) {
            k[x >> 2] = d;
            break;
          }
          e = k[(k[a >> 2] | 0) + 48 >> 2] | 0;
          while (1) {
            g = e + (h << 2) | 0;
            f = k[g >> 2] | 0;
            j = (f >>> 14) + -131071 | 0;
            j = (j | 0) == -1 ? -1 : h + 1 + j | 0;
            if ((j | 0) == -1) {
              j = f;
              break;
            } else
              h = j;
          }
          h = d + ~h | 0;
          if ((((h | 0) > -1 ? h : 0 - h | 0) | 0) > 131071)
            Dg(k[a + 8 >> 2] | 0, 999311);
          else {
            k[g >> 2] = (h << 14) + 2147467264 | j & 16383;
            break;
          }
        }
 while (0);
      h = k[x >> 2] | 0;
      t = b + 20 | 0;
      e = k[t >> 2] | 0;
      if ((h | 0) == (e | 0)) {
        k[x >> 2] = -1;
        k[t >> 2] = -1;
        A = b + 8 | 0;
        k[A >> 2] = c;
        k[b >> 2] = 7;
        return ;
      }
      a: do
        if ((h | 0) == -1)
          l = 18;
        else {
          f = k[(k[a >> 2] | 0) + 48 >> 2] | 0;
          while (1) {
            j = f + (h << 2) | 0;
            if ((h | 0) > 0 ? (n = k[f + (h + -1 << 2) >> 2] | 0, (i[813619 + (n & 63) >> 0] | 0) < 0) : 0)
              g = n;
            else
              g = k[j >> 2] | 0;
            if ((g & 63 | 0) != 35) {
              l = 25;
              break a;
            }
            l = ((k[j >> 2] | 0) >>> 14) + -131071 | 0;
            h = (l | 0) == -1 ? -1 : h + 1 + l | 0;
            if ((h | 0) == -1) {
              l = 18;
              break;
            }
          }
        }
 while (0);
      b: do
        if ((l | 0) == 18)
          if ((e | 0) == -1) {
            s = -1;
            A = -1;
          } else {
            f = k[(k[a >> 2] | 0) + 48 >> 2] | 0;
            h = e;
            while (1) {
              j = f + (h << 2) | 0;
              if ((h | 0) > 0 ? (o = k[f + (h + -1 << 2) >> 2] | 0, (i[813619 + (o & 63) >> 0] | 0) < 0) : 0)
                g = o;
              else
                g = k[j >> 2] | 0;
              if ((g & 63 | 0) != 35) {
                l = 25;
                break b;
              }
              n = ((k[j >> 2] | 0) >>> 14) + -131071 | 0;
              h = (n | 0) == -1 ? -1 : h + 1 + n | 0;
              if ((h | 0) == -1) {
                s = -1;
                A = -1;
                break;
              }
            }
          }
 while (0);
      do
        if ((l | 0) == 25) {
          n = a + 24 | 0;
          do
            if (!m) {
              d = k[n >> 2] | 0;
              k[n >> 2] = -1;
              l = tk(a, 2147450910) | 0;
              if ((d | 0) != -1)
                if ((l | 0) != -1) {
                  f = k[(k[a >> 2] | 0) + 48 >> 2] | 0;
                  h = l;
                  while (1) {
                    g = f + (h << 2) | 0;
                    e = k[g >> 2] | 0;
                    j = (e >>> 14) + -131071 | 0;
                    j = (j | 0) == -1 ? -1 : h + 1 + j | 0;
                    if ((j | 0) == -1) {
                      j = e;
                      break;
                    } else
                      h = j;
                  }
                  h = d + ~h | 0;
                  if ((((h | 0) > -1 ? h : 0 - h | 0) | 0) > 131071)
                    Dg(k[a + 8 >> 2] | 0, 999311);
                  else {
                    k[g >> 2] = (h << 14) + 2147467264 | j & 16383;
                    p = l;
                    break;
                  }
                } else
                  p = d;
              else
                p = l;
            } else
              p = -1;
 while (0);
          m = a + 16 | 0;
          o = a + 20 | 0;
          k[o >> 2] = k[m >> 2];
          d = c << 6;
          l = tk(a, d | 16387) | 0;
          k[o >> 2] = k[m >> 2];
          d = tk(a, d | 8388611) | 0;
          k[o >> 2] = k[m >> 2];
          if ((p | 0) != -1) {
            h = k[n >> 2] | 0;
            if ((h | 0) == -1) {
              k[n >> 2] = p;
              s = l;
              A = d;
              break;
            }
            j = k[(k[a >> 2] | 0) + 48 >> 2] | 0;
            while (1) {
              e = j + (h << 2) | 0;
              f = k[e >> 2] | 0;
              g = (f >>> 14) + -131071 | 0;
              g = (g | 0) == -1 ? -1 : h + 1 + g | 0;
              if ((g | 0) == -1)
                break;
              else
                h = g;
            }
            g = p + ~h | 0;
            if ((((g | 0) > -1 ? g : 0 - g | 0) | 0) > 131071)
              Dg(k[a + 8 >> 2] | 0, 999311);
            else {
              k[e >> 2] = (g << 14) + 2147467264 | f & 16383;
              s = l;
              A = d;
              break;
            }
          } else {
            s = l;
            A = d;
          }
        }
 while (0);
      p = k[a + 16 >> 2] | 0;
      k[a + 20 >> 2] = p;
      g = k[t >> 2] | 0;
      c: do
        if ((g | 0) != -1) {
          d = (c | 0) == 255;
          m = c << 6 & 16320;
          n = k[(k[a >> 2] | 0) + 48 >> 2] | 0;
          while (1) {
            l = n + (g << 2) | 0;
            j = k[l >> 2] | 0;
            o = (j >>> 14) + -131071 | 0;
            e = g;
            g = (o | 0) == -1 ? -1 : g + 1 + o | 0;
            if ((e | 0) > 0 ? (q = n + (e + -1 << 2) | 0, r = k[q >> 2] | 0, (i[813619 + (r & 63) >> 0] | 0) < 0) : 0) {
              f = q;
              h = r;
            } else {
              f = l;
              h = j;
            }
            if ((h & 63 | 0) == 35) {
              j = h >>> 23;
              if (d | (j | 0) == (c | 0))
                j = h & 8372224 | j << 6 | 34;
              else
                j = h & -16321 | m;
              k[f >> 2] = j;
              h = p + ~e | 0;
              if ((((h | 0) > -1 ? h : 0 - h | 0) | 0) > 131071) {
                l = 51;
                break;
              }
              h = k[l >> 2] & 16383 | (h << 14) + 2147467264;
            } else {
              h = s + ~e | 0;
              if ((((h | 0) > -1 ? h : 0 - h | 0) | 0) > 131071) {
                l = 54;
                break;
              }
              h = j & 16383 | (h << 14) + 2147467264;
            }
            k[l >> 2] = h;
            if ((g | 0) == -1)
              break c;
          }
          if ((l | 0) == 51)
            Dg(k[a + 8 >> 2] | 0, 999311);
          else if ((l | 0) == 54)
            Dg(k[a + 8 >> 2] | 0, 999311);
        }
 while (0);
      d = k[x >> 2] | 0;
      if ((d | 0) == -1) {
        k[x >> 2] = -1;
        k[t >> 2] = -1;
        A = b + 8 | 0;
        k[A >> 2] = c;
        k[b >> 2] = 7;
        return ;
      }
      n = c << 6;
      m = n & 16320;
      o = k[(k[a >> 2] | 0) + 48 >> 2] | 0;
      if ((c | 0) == 255) {
        while (1) {
          j = o + (d << 2) | 0;
          e = k[j >> 2] | 0;
          s = (e >>> 14) + -131071 | 0;
          g = d;
          d = (s | 0) == -1 ? -1 : d + 1 + s | 0;
          if ((g | 0) > 0 ? (u = o + (g + -1 << 2) | 0, v = k[u >> 2] | 0, (i[813619 + (v & 63) >> 0] | 0) < 0) : 0) {
            h = u;
            f = v;
          } else {
            h = j;
            f = e;
          }
          if ((f & 63 | 0) == 35) {
            k[h >> 2] = f & 8372224 | f >>> 23 << 6 | 34;
            e = p + ~g | 0;
            if ((((e | 0) > -1 ? e : 0 - e | 0) | 0) > 131071) {
              l = 76;
              break;
            }
            e = k[j >> 2] & 16383 | (e << 14) + 2147467264;
          } else {
            g = A + ~g | 0;
            if ((((g | 0) > -1 ? g : 0 - g | 0) | 0) > 131071) {
              l = 79;
              break;
            }
            e = e & 16383 | (g << 14) + 2147467264;
          }
          k[j >> 2] = e;
          if ((d | 0) == -1) {
            l = 82;
            break;
          }
        }
        if ((l | 0) == 76) {
          v = a + 8 | 0;
          v = k[v >> 2] | 0;
          Dg(v, 999311);
        } else if ((l | 0) == 79) {
          v = a + 8 | 0;
          v = k[v >> 2] | 0;
          Dg(v, 999311);
        } else if ((l | 0) == 82) {
          k[x >> 2] = -1;
          k[t >> 2] = -1;
          A = b + 8 | 0;
          k[A >> 2] = c;
          k[b >> 2] = 7;
          return ;
        }
      } else
        w = d;
      while (1) {
        j = o + (w << 2) | 0;
        h = k[j >> 2] | 0;
        v = (h >>> 14) + -131071 | 0;
        g = w;
        w = (v | 0) == -1 ? -1 : w + 1 + v | 0;
        if ((g | 0) > 0 ? (y = o + (g + -1 << 2) | 0, z = k[y >> 2] | 0, (i[813619 + (z & 63) >> 0] | 0) < 0) : 0) {
          f = y;
          e = z;
        } else {
          f = j;
          e = h;
        }
        if ((e & 63 | 0) == 35) {
          if ((e >>> 23 | 0) == (c | 0))
            d = e & 8372224 | n | 34;
          else
            d = e & -16321 | m;
          k[f >> 2] = d;
          d = p + ~g | 0;
          if ((((d | 0) > -1 ? d : 0 - d | 0) | 0) > 131071) {
            l = 76;
            break;
          }
          d = k[j >> 2] & 16383 | (d << 14) + 2147467264;
        } else {
          d = A + ~g | 0;
          if ((((d | 0) > -1 ? d : 0 - d | 0) | 0) > 131071) {
            l = 79;
            break;
          }
          d = h & 16383 | (d << 14) + 2147467264;
        }
        k[j >> 2] = d;
        if ((w | 0) == -1) {
          l = 82;
          break;
        }
      }
      if ((l | 0) == 76) {
        c = a + 8 | 0;
        c = k[c >> 2] | 0;
        Dg(c, 999311);
      } else if ((l | 0) == 79) {
        c = a + 8 | 0;
        c = k[c >> 2] | 0;
        Dg(c, 999311);
      } else if ((l | 0) == 82) {
        k[x >> 2] = -1;
        k[t >> 2] = -1;
        A = b + 8 | 0;
        k[A >> 2] = c;
        k[b >> 2] = 7;
        return ;
      }
    }
    function wk(a, b, c) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      var d = 0,
          e = 0,
          f = 0,
          g = 0,
          h = 0,
          i = 0;
      i = r;
      r = r + 32 | 0;
      d = i + 16 | 0;
      f = i;
      qf(a, b);
      e = k[b >> 2] | 0;
      a: do
        switch (e | 0) {
          case 12:
            {
              a = (k[(k[a >> 2] | 0) + 48 >> 2] | 0) + (k[b + 8 >> 2] << 2) | 0;
              k[a >> 2] = k[a >> 2] & -16321 | c << 6 & 16320;
              break;
            }
          case 4:
            {
              d = k[b + 8 >> 2] | 0;
              e = c << 6;
              if ((d | 0) < 262144) {
                tk(a, e | d << 14 | 1) | 0;
                break a;
              } else {
                tk(a, e | 2) | 0;
                tk(a, d << 6 | 46) | 0;
                break a;
              }
            }
          case 2:
          case 3:
            {
              tk(a, c << 6 | ((e | 0) == 2 & 1) << 23 | 3) | 0;
              break;
            }
          case 1:
            {
              f = c + 1 | 0;
              e = k[a + 16 >> 2] | 0;
              do
                if ((e | 0) > (k[a + 20 >> 2] | 0) ? (g = (k[(k[a >> 2] | 0) + 48 >> 2] | 0) + (e + -1 << 2) | 0, h = k[g >> 2] | 0, (h & 63 | 0) == 4) : 0) {
                  e = h >>> 6 & 255;
                  d = e + (h >>> 23) | 0;
                  if ((e | 0) > (c | 0) | (d + 1 | 0) < (c | 0) ? (e | 0) < (c | 0) | (e | 0) > (f | 0) : 0)
                    break;
                  a = (e | 0) < (c | 0) ? e : c;
                  k[g >> 2] = a << 6 & 16320 | h & 8372287 | ((d | 0) > (c | 0) ? d : c) - a << 23;
                  break a;
                }
 while (0);
              tk(a, c << 6 | 4) | 0;
              break;
            }
          case 6:
            {
              h = b + 8 | 0;
              g = k[h >> 2] | 0;
              h = k[h + 4 >> 2] | 0;
              k[d >> 2] = g;
              k[d + 8 >> 2] = 2;
              e = f;
              k[e >> 2] = g;
              k[e + 4 >> 2] = h;
              k[f + 8 >> 2] = 19;
              e = uk(a, d, f) | 0;
              d = c << 6;
              if ((e | 0) < 262144) {
                tk(a, d | e << 14 | 1) | 0;
                break a;
              } else {
                tk(a, d | 2) | 0;
                tk(a, e << 6 | 46) | 0;
                break a;
              }
            }
          case 5:
            {
              p[d >> 3] = +p[b + 8 >> 3];
              k[d + 8 >> 2] = 3;
              e = uk(a, d, d) | 0;
              d = c << 6;
              if ((e | 0) < 262144) {
                tk(a, d | e << 14 | 1) | 0;
                break a;
              } else {
                tk(a, d | 2) | 0;
                tk(a, e << 6 | 46) | 0;
                break a;
              }
            }
          case 7:
            {
              d = k[b + 8 >> 2] | 0;
              if ((d | 0) != (c | 0))
                tk(a, d << 23 | c << 6) | 0;
              break;
            }
          default:
            {
              r = i;
              return ;
            }
        }
 while (0);
      k[b + 8 >> 2] = c;
      k[b >> 2] = 7;
      r = i;
      return ;
    }
    function xk(a, b, c, d, e) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      d = d | 0;
      e = e | 0;
      var f = 0,
          g = 0.0,
          h = 0,
          j = 0,
          m = 0,
          n = 0,
          o = 0,
          q = 0,
          s = 0,
          u = 0,
          v = 0,
          w = 0,
          x = 0,
          y = 0,
          z = 0,
          A = 0,
          B = 0;
      B = r;
      r = r + 64 | 0;
      s = B + 48 | 0;
      v = B + 32 | 0;
      w = B + 16 | 0;
      u = B;
      a: do
        if (b >>> 0 < 27) {
          q = b + -13 | 0;
          b: do
            if ((k[c + 16 >> 2] | 0) == -1 ? (k[c + 20 >> 2] | 0) == -1 : 0) {
              switch (k[c >> 2] | 0) {
                case 5:
                  {
                    g = +p[c + 8 >> 3];
                    p[v >> 3] = g;
                    k[v + 8 >> 2] = 3;
                    p[t >> 3] = g;
                    h = 3;
                    f = k[t >> 2] | 0;
                    m = k[t + 4 >> 2] | 0;
                    break;
                  }
                case 6:
                  {
                    m = c + 8 | 0;
                    f = k[m >> 2] | 0;
                    m = k[m + 4 >> 2] | 0;
                    h = v;
                    k[h >> 2] = f;
                    k[h + 4 >> 2] = m;
                    k[v + 8 >> 2] = 19;
                    h = 19;
                    break;
                  }
                default:
                  break b;
              }
              if ((k[d + 16 >> 2] | 0) == -1 ? (k[d + 20 >> 2] | 0) == -1 : 0) {
                switch (k[d >> 2] | 0) {
                  case 6:
                    {
                      o = d + 8 | 0;
                      n = k[o >> 2] | 0;
                      o = k[o + 4 >> 2] | 0;
                      j = w;
                      k[j >> 2] = n;
                      k[j + 4 >> 2] = o;
                      k[w + 8 >> 2] = 19;
                      j = 19;
                      break;
                    }
                  case 5:
                    {
                      g = +p[d + 8 >> 3];
                      p[w >> 3] = g;
                      k[w + 8 >> 2] = 3;
                      p[t >> 3] = g;
                      j = 3;
                      n = k[t >> 2] | 0;
                      o = k[t + 4 >> 2] | 0;
                      break;
                    }
                  default:
                    break b;
                }
                c: do
                  switch (b | 0) {
                    case 16:
                    case 19:
                    case 18:
                      {
                        k[t >> 2] = n;
                        k[t + 4 >> 2] = o;
                        if (!(((j | 0) == 19 ? +(n >>> 0) + 4294967296.0 * +(o | 0) : +p[t >> 3]) != 0.0))
                          break b;
                        break;
                      }
                    case 26:
                    case 24:
                    case 23:
                    case 22:
                    case 21:
                    case 20:
                      {
                        do
                          if ((h | 0) != 19)
                            if (!(Fh(v, s) | 0))
                              break b;
                            else {
                              j = k[w + 8 >> 2] | 0;
                              break;
                            }
                          else {
                            o = s;
                            k[o >> 2] = f;
                            k[o + 4 >> 2] = m;
                          }
 while (0);
                        if ((j | 0) == 19)
                          break c;
                        if (!(Fh(w, s) | 0))
                          break a;
                        break;
                      }
                    default:
                      {}
                  }
 while (0);
                Og(k[(k[a + 8 >> 2] | 0) + 52 >> 2] | 0, q, v, w, u);
                if ((k[u + 8 >> 2] | 0) == 19) {
                  k[c >> 2] = 6;
                  a = u;
                  e = k[a + 4 >> 2] | 0;
                  b = c + 8 | 0;
                  k[b >> 2] = k[a >> 2];
                  k[b + 4 >> 2] = e;
                  r = B;
                  return ;
                }
                g = +p[u >> 3];
                if (g != g | 0.0 != 0.0 | g == 0.0)
                  break a;
                k[c >> 2] = 5;
                p[c + 8 >> 3] = g;
                r = B;
                return ;
              }
            }
 while (0);
        }
 while (0);
      switch (b | 0) {
        case 25:
        case 26:
        case 28:
          {
            h = sf(a, c) | 0;
            j = 0;
            break;
          }
        default:
          {
            j = vf(a, d) | 0;
            h = vf(a, c) | 0;
          }
      }
      if ((h | 0) > (j | 0)) {
        if (((k[c >> 2] | 0) == 7 ? (x = k[c + 8 >> 2] | 0, (x & 256 | 0) == 0) : 0) ? (l[a + 42 >> 0] | 0 | 0) <= (x | 0) : 0) {
          A = a + 44 | 0;
          i[A >> 0] = (i[A >> 0] | 0) + -1 << 24 >> 24;
        }
        if (((k[d >> 2] | 0) == 7 ? (y = k[d + 8 >> 2] | 0, (y & 256 | 0) == 0) : 0) ? (l[a + 42 >> 0] | 0 | 0) <= (y | 0) : 0) {
          f = a + 44 | 0;
          i[f >> 0] = (i[f >> 0] | 0) + -1 << 24 >> 24;
          f = c;
        } else
          f = c;
      } else {
        if (((k[d >> 2] | 0) == 7 ? (z = k[d + 8 >> 2] | 0, (z & 256 | 0) == 0) : 0) ? (l[a + 42 >> 0] | 0 | 0) <= (z | 0) : 0) {
          d = a + 44 | 0;
          i[d >> 0] = (i[d >> 0] | 0) + -1 << 24 >> 24;
        }
        if (((k[c >> 2] | 0) == 7 ? (A = k[c + 8 >> 2] | 0, (A & 256 | 0) == 0) : 0) ? (l[a + 42 >> 0] | 0 | 0) <= (A | 0) : 0) {
          f = a + 44 | 0;
          i[f >> 0] = (i[f >> 0] | 0) + -1 << 24 >> 24;
          f = c;
        } else
          f = c;
      }
      b = tk(a, h << 23 | b | j << 14) | 0;
      k[c + 8 >> 2] = b;
      k[f >> 2] = 12;
      k[(k[(k[a >> 2] | 0) + 56 >> 2] | 0) + ((k[a + 16 >> 2] | 0) + -1 << 2) >> 2] = e;
      r = B;
      return ;
    }
    function yk(a, b, c, d, e) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      d = d | 0;
      e = e | 0;
      var f = 0,
          g = 0,
          h = 0,
          j = 0;
      g = vf(a, d) | 0;
      f = vf(a, e) | 0;
      if (((k[e >> 2] | 0) == 7 ? (j = k[e + 8 >> 2] | 0, (j & 256 | 0) == 0) : 0) ? (l[a + 42 >> 0] | 0 | 0) <= (j | 0) : 0) {
        e = a + 44 | 0;
        i[e >> 0] = (i[e >> 0] | 0) + -1 << 24 >> 24;
      }
      if (((k[d >> 2] | 0) == 7 ? (h = k[d + 8 >> 2] | 0, (h & 256 | 0) == 0) : 0) ? (l[a + 42 >> 0] | 0 | 0) <= (h | 0) : 0) {
        e = a + 44 | 0;
        i[e >> 0] = (i[e >> 0] | 0) + -1 << 24 >> 24;
      }
      j = (b | 0) != 31 & (c | 0) == 0;
      tk(a, (j ? 64 : c << 6) | b | (j ? f : g) << 23 | (j ? g : f) << 14) | 0;
      j = a + 24 | 0;
      c = k[j >> 2] | 0;
      k[j >> 2] = -1;
      j = tk(a, 2147450910) | 0;
      if ((c | 0) == -1) {
        b = j;
        a = d + 8 | 0;
        k[a >> 2] = b;
        k[d >> 2] = 11;
        return ;
      }
      if ((j | 0) == -1) {
        b = c;
        a = d + 8 | 0;
        k[a >> 2] = b;
        k[d >> 2] = 11;
        return ;
      }
      e = k[(k[a >> 2] | 0) + 48 >> 2] | 0;
      f = j;
      while (1) {
        h = e + (f << 2) | 0;
        b = k[h >> 2] | 0;
        g = (b >>> 14) + -131071 | 0;
        g = (g | 0) == -1 ? -1 : f + 1 + g | 0;
        if ((g | 0) == -1) {
          g = b;
          break;
        } else
          f = g;
      }
      f = c + ~f | 0;
      if ((((f | 0) > -1 ? f : 0 - f | 0) | 0) > 131071)
        Dg(k[a + 8 >> 2] | 0, 999311);
      k[h >> 2] = (f << 14) + 2147467264 | g & 16383;
      b = j;
      a = d + 8 | 0;
      k[a >> 2] = b;
      k[d >> 2] = 11;
      return ;
    }
    function zk(a, b, c, d) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      d = d | 0;
      var e = 0,
          f = 0,
          g = 0,
          h = 0,
          j = 0,
          l = 0,
          m = 0,
          n = 0;
      n = a + 48 | 0;
      a: while (1) {
        m = qg(a, c + 1 | 0, b) | 0;
        k[d >> 2] = m;
        if (m) {
          c = 1013025;
          m = 42;
          break;
        }
        if ((b | 0) <= 0) {
          c = 0;
          m = 42;
          break;
        }
        m = k[n >> 2] | 0;
        j = 0;
        l = 0;
        g = -1;
        while (1) {
          e = k[m + (l << 2) >> 2] | 0;
          h = e & 63;
          f = e >>> 6 & 255;
          switch (h | 0) {
            case 30:
              {
                f = l + -131070 + (e >>> 14) | 0;
                f = (f | 0) > (j | 0) & ((f | 0) <= (b | 0) & (l | 0) < (f | 0)) ? f : j;
                break;
              }
            case 41:
              {
                if ((f + 2 | 0) > (c | 0))
                  f = j;
                else {
                  f = j;
                  g = (l | 0) < (j | 0) ? -1 : l;
                }
                break;
              }
            case 4:
              {
                if ((f | 0) <= (c | 0) ? (f + (e >>> 23) | 0) >= (c | 0) : 0) {
                  f = j;
                  g = (l | 0) < (j | 0) ? -1 : l;
                } else
                  f = j;
                break;
              }
            case 37:
            case 36:
              {
                if ((f | 0) > (c | 0))
                  f = j;
                else {
                  f = j;
                  g = (l | 0) < (j | 0) ? -1 : l;
                }
                break;
              }
            default:
              if ((f | 0) == (c | 0) & (i[813619 + h >> 0] & 64) != 0) {
                f = j;
                g = (l | 0) < (j | 0) ? -1 : l;
              } else
                f = j;
          }
          l = l + 1 | 0;
          if ((l | 0) == (b | 0)) {
            b = g;
            break;
          } else
            j = f;
        }
        if ((b | 0) == -1) {
          c = 0;
          m = 42;
          break;
        }
        c = k[m + (b << 2) >> 2] | 0;
        e = c & 63;
        switch (e | 0) {
          case 7:
          case 6:
            {
              f = e;
              m = 20;
              break a;
            }
          case 12:
            {
              m = 36;
              break a;
            }
          case 2:
            {
              c = m;
              m = 33;
              break a;
            }
          case 0:
            break;
          case 1:
            {
              m = 32;
              break a;
            }
          case 5:
            {
              m = 31;
              break a;
            }
          default:
            {
              c = 0;
              m = 42;
              break a;
            }
        }
        e = c >>> 23;
        if (e >>> 0 < (c >>> 6 & 255) >>> 0)
          c = e;
        else {
          c = 0;
          m = 42;
          break;
        }
      }
      if ((m | 0) == 20) {
        g = c >>> 14;
        e = c >>> 23;
        if ((f | 0) == 7)
          e = qg(a, e + 1 | 0, b) | 0;
        else {
          e = k[(k[a + 64 >> 2] | 0) + (e << 3) >> 2] | 0;
          e = (e | 0) == 0 ? 1007823 : e + 24 | 0;
        }
        if (!(g & 256)) {
          a = zk(a, b, g & 511, d) | 0;
          if (!((a | 0) != 0 ? (i[a >> 0] | 0) == 99 : 0))
            m = 28;
        } else {
          c = g & 255;
          b = k[a + 44 >> 2] | 0;
          if ((k[b + (c << 4) + 8 >> 2] & 15 | 0) == 4)
            k[d >> 2] = (k[b + (c << 4) >> 2] | 0) + 24;
          else
            m = 28;
        }
        if ((m | 0) == 28)
          k[d >> 2] = 1007823;
        if (!e) {
          d = 1013019;
          return d | 0;
        }
        d = (dr(e, 1013007) | 0) == 0;
        d = d ? 1013012 : 1013019;
        return d | 0;
      } else if ((m | 0) == 31) {
        a = k[(k[a + 64 >> 2] | 0) + (c >>> 23 << 3) >> 2] | 0;
        k[d >> 2] = (a | 0) == 0 ? 1007823 : a + 24 | 0;
        d = 1012988;
        return d | 0;
      } else if ((m | 0) == 32)
        b = c >>> 14;
      else if ((m | 0) == 33)
        b = (k[c + (b + 1 << 2) >> 2] | 0) >>> 6;
      else if ((m | 0) == 36) {
        c = c >>> 14;
        if (!(c & 256)) {
          a = zk(a, b, c & 511, d) | 0;
          if ((a | 0) != 0 ? (i[a >> 0] | 0) == 99 : 0) {
            d = 1013040;
            return d | 0;
          }
        } else {
          b = c & 255;
          c = k[a + 44 >> 2] | 0;
          if ((k[c + (b << 4) + 8 >> 2] & 15 | 0) == 4) {
            k[d >> 2] = (k[c + (b << 4) >> 2] | 0) + 24;
            d = 1013040;
            return d | 0;
          }
        }
        k[d >> 2] = 1007823;
        d = 1013040;
        return d | 0;
      } else if ((m | 0) == 42)
        return c | 0;
      c = k[a + 44 >> 2] | 0;
      if ((k[c + (b << 4) + 8 >> 2] & 15 | 0) != 4) {
        d = 0;
        return d | 0;
      }
      k[d >> 2] = (k[c + (b << 4) >> 2] | 0) + 24;
      d = 1013031;
      return d | 0;
    }
    function Ak(a, b) {
      a = a | 0;
      b = b | 0;
      var c = 0,
          d = 0,
          e = 0,
          f = 0,
          g = 0,
          h = 0,
          j = 0,
          l = 0;
      l = r;
      r = r + 16 | 0;
      j = l;
      h = l + 8 | 0;
      k[h >> 2] = 0;
      e = k[a + 16 >> 2] | 0;
      if (!(i[e + 34 >> 0] & 2)) {
        j = 1008077;
        r = l;
        return j | 0;
      }
      f = k[k[e >> 2] >> 2] | 0;
      d = i[f + 6 >> 0] | 0;
      a: do
        if (!(d << 24 >> 24))
          g = 7;
        else {
          c = d & 255;
          d = 0;
          while (1) {
            if ((k[k[f + 16 + (d << 2) >> 2] >> 2] | 0) == (b | 0))
              break;
            d = d + 1 | 0;
            if ((d | 0) >= (c | 0)) {
              g = 7;
              break a;
            }
          }
          d = k[(k[(k[f + 12 >> 2] | 0) + 64 >> 2] | 0) + (d << 3) >> 2] | 0;
          d = (d | 0) == 0 ? 1007823 : d + 24 | 0;
          k[h >> 2] = d;
          c = 1012988;
        }
 while (0);
      do
        if ((g | 0) == 7) {
          c = k[e + 16 >> 2] | 0;
          d = b - c | 0;
          if ((d | 0) <= -16) {
            j = 1008077;
            r = l;
            return j | 0;
          }
          if ((d | 0) >= ((k[e + 4 >> 2] | 0) - c | 0)) {
            j = 1008077;
            r = l;
            return j | 0;
          }
          c = k[f + 12 >> 2] | 0;
          c = zk(c, ((k[e + 20 >> 2] | 0) - (k[c + 48 >> 2] | 0) >> 2) + -1 | 0, d >> 4, h) | 0;
          if (!c) {
            j = 1008077;
            r = l;
            return j | 0;
          } else {
            d = k[h >> 2] | 0;
            break;
          }
        }
 while (0);
      k[j >> 2] = c;
      k[j + 4 >> 2] = d;
      j = Ug(a, 1012996, j) | 0;
      r = l;
      return j | 0;
    }
    function Bk(a, b) {
      a = a | 0;
      b = b | 0;
      var c = 0,
          d = 0,
          e = 0,
          f = 0,
          g = 0,
          h = 0,
          n = 0,
          o = 0,
          p = 0,
          q = 0,
          r = 0,
          s = 0;
      q = a + 16 | 0;
      d = k[q >> 2] | 0;
      if ((m[a + 106 >> 1] | 0) > 199)
        Bp(a, 999630, b);
      c = a + 6 | 0;
      switch (i[c >> 0] | 0) {
        case 1:
          {
            i[c >> 0] = 0;
            p = a + 28 | 0;
            k[d >> 2] = (k[p >> 2] | 0) + (k[d + 28 >> 2] | 0);
            if (!(i[d + 34 >> 0] & 2)) {
              c = k[d + 16 >> 2] | 0;
              if (c) {
                b = id[c & 63](a, 1, k[d + 24 >> 2] | 0) | 0;
                d = k[q >> 2] | 0;
                b = (k[a + 8 >> 2] | 0) + (0 - b << 4) | 0;
              }
              c = l[a + 108 >> 0] | 0;
              if (!(c & 6))
                e = k[d + 8 >> 2] | 0;
              else {
                if (c & 2) {
                  b = b - (k[p >> 2] | 0) | 0;
                  $f(a, 1, -1);
                  b = (k[p >> 2] | 0) + b | 0;
                }
                e = k[d + 8 >> 2] | 0;
                k[a + 20 >> 2] = k[e + 20 >> 2];
              }
              c = k[d >> 2] | 0;
              d = j[d + 32 >> 1] | 0;
              k[q >> 2] = e;
              f = a + 8 | 0;
              a: do
                if (d << 16 >> 16) {
                  d = d << 16 >> 16;
                  while (1) {
                    if (b >>> 0 >= (k[f >> 2] | 0) >>> 0) {
                      b = d;
                      break;
                    }
                    e = c + 16 | 0;
                    k[c >> 2] = k[b >> 2];
                    k[c + 4 >> 2] = k[b + 4 >> 2];
                    k[c + 8 >> 2] = k[b + 8 >> 2];
                    k[c + 12 >> 2] = k[b + 12 >> 2];
                    d = d + -1 | 0;
                    if (!d) {
                      c = e;
                      break a;
                    } else {
                      b = b + 16 | 0;
                      c = e;
                    }
                  }
                  if ((b | 0) > 0) {
                    e = b;
                    d = c;
                    while (1) {
                      k[d + 8 >> 2] = 0;
                      if ((e | 0) > 1) {
                        e = e + -1 | 0;
                        d = d + 16 | 0;
                      } else
                        break;
                    }
                    c = c + (b << 4) | 0;
                  }
                }
 while (0);
              k[f >> 2] = c;
            } else
              Rh(a);
            e = k[q >> 2] | 0;
            f = a + 48 | 0;
            if ((e | 0) == (f | 0))
              return ;
            g = a + 8 | 0;
            h = a + 108 | 0;
            n = a + 20 | 0;
            o = a + 88 | 0;
            do {
              c = e + 34 | 0;
              d = i[c >> 0] | 0;
              if (!(d & 2)) {
                d = d & 255;
                if (d & 16) {
                  i[c >> 0] = d & 239;
                  k[o >> 2] = k[e + 20 >> 2];
                }
                if ((j[e + 32 >> 1] | 0) == -1 ? (r = e + 4 | 0, s = k[g >> 2] | 0, (k[r >> 2] | 0) >>> 0 < s >>> 0) : 0)
                  k[r >> 2] = s;
                e = id[k[e + 16 >> 2] & 63](a, 1, k[e + 24 >> 2] | 0) | 0;
                e = (k[g >> 2] | 0) + (0 - e << 4) | 0;
                c = k[q >> 2] | 0;
                d = l[h >> 0] | 0;
                if (!(d & 6)) {
                  d = e;
                  b = k[c + 8 >> 2] | 0;
                } else {
                  if (d & 2) {
                    e = e - (k[p >> 2] | 0) | 0;
                    $f(a, 1, -1);
                    e = (k[p >> 2] | 0) + e | 0;
                  }
                  b = k[c + 8 >> 2] | 0;
                  k[n >> 2] = k[b + 20 >> 2];
                  d = e;
                }
                e = k[c >> 2] | 0;
                c = j[c + 32 >> 1] | 0;
                k[q >> 2] = b;
                b: do
                  if (c << 16 >> 16) {
                    b = d;
                    c = c << 16 >> 16;
                    while (1) {
                      if (b >>> 0 >= (k[g >> 2] | 0) >>> 0) {
                        b = c;
                        break;
                      }
                      d = e + 16 | 0;
                      k[e >> 2] = k[b >> 2];
                      k[e + 4 >> 2] = k[b + 4 >> 2];
                      k[e + 8 >> 2] = k[b + 8 >> 2];
                      k[e + 12 >> 2] = k[b + 12 >> 2];
                      c = c + -1 | 0;
                      if (!c) {
                        e = d;
                        break b;
                      } else {
                        b = b + 16 | 0;
                        e = d;
                      }
                    }
                    if ((b | 0) > 0) {
                      d = b;
                      c = e;
                      while (1) {
                        k[c + 8 >> 2] = 0;
                        if ((d | 0) > 1) {
                          d = d + -1 | 0;
                          c = c + 16 | 0;
                        } else
                          break;
                      }
                      e = e + (b << 4) | 0;
                    }
                  }
 while (0);
                k[g >> 2] = e;
              } else {
                Qh(a);
                Rh(a);
              }
              e = k[q >> 2] | 0;
            } while ((e | 0) != (f | 0));
            return ;
          }
        case 0:
          {
            if ((d | 0) != (a + 48 | 0))
              Bp(a, 1012921, b);
            if (ag(a, b + -16 | 0, -1) | 0)
              return ;
            Rh(a);
            return ;
          }
        default:
          Bp(a, 1012959, b);
      }
    }
    function Ck(a, b) {
      a = a | 0;
      b = b | 0;
      var c = 0,
          d = 0;
      if (b)
        Ap(a, k[b >> 2] | 0);
      c = a + 16 | 0;
      b = k[c >> 2] | 0;
      d = a + 48 | 0;
      if ((b | 0) == (d | 0))
        return ;
      do {
        if (!(i[b + 34 >> 0] & 2))
          Ap(a, 1);
        else {
          Qh(a);
          Rh(a);
        }
        b = k[c >> 2] | 0;
      } while ((b | 0) != (d | 0));
      return ;
    }
    function Dk(a, b) {
      a = a | 0;
      b = b | 0;
      var c = 0,
          d = 0,
          e = 0,
          f = 0,
          g = 0,
          h = 0;
      h = r;
      r = r + 16 | 0;
      g = h + 8 | 0;
      f = h;
      c = k[b >> 2] | 0;
      e = k[c >> 2] | 0;
      k[c >> 2] = e + -1;
      if (!e)
        c = Sh(c) | 0;
      else {
        e = c + 4 | 0;
        c = k[e >> 2] | 0;
        k[e >> 2] = c + 1;
        c = l[c >> 0] | 0;
      }
      d = k[b + 52 >> 2] | 0;
      e = (d | 0) == 0;
      if ((c | 0) == 27) {
        if (!e ? (Op(d, 98) | 0) == 0 : 0) {
          k[f >> 2] = 1012909;
          k[f + 4 >> 2] = d;
          Ug(a, 1012867, f) | 0;
          Wf(a, 3);
        }
        g = Dh(a, k[b >> 2] | 0, b + 4 | 0, k[b + 56 >> 2] | 0) | 0;
        lg(a, g);
        r = h;
        return ;
      } else {
        if (!e ? (Op(d, 116) | 0) == 0 : 0) {
          k[g >> 2] = 1012916;
          k[g + 4 >> 2] = d;
          Ug(a, 1012867, g) | 0;
          Wf(a, 3);
        }
        g = Wg(a, k[b >> 2] | 0, b + 4 | 0, b + 16 | 0, k[b + 56 >> 2] | 0, c) | 0;
        lg(a, g);
        r = h;
        return ;
      }
    }
    function Ek(a, b, c) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      var d = 0,
          e = 0,
          f = 0,
          g = 0,
          h = 0,
          j = 0,
          l = 0,
          m = 0,
          n = 0,
          o = 0,
          q = 0,
          s = 0,
          t = 0;
      t = r;
      r = r + 16 | 0;
      s = t;
      q = t + 8 | 0;
      o = c + 12 | 0;
      if ((k[o >> 2] | 0) == 0 ? (h = k[a + 72 >> 2] | 0, (h | 0) != (b | 0)) : 0) {
        do
          if (h) {
            e = (k[h + 12 >> 2] | 0) + 1 | 0;
            k[q >> 2] = e;
            if (e >>> 0 < 255) {
              i[s >> 0] = e;
              d = c + 16 | 0;
              b = k[d >> 2] | 0;
              if (!b) {
                b = qd[k[c + 4 >> 2] & 63](k[c >> 2] | 0, s, 1, k[c + 8 >> 2] | 0) | 0;
                k[d >> 2] = b;
              }
            } else {
              i[s >> 0] = -1;
              d = c + 16 | 0;
              b = k[d >> 2] | 0;
              if (b)
                break;
              b = qd[k[c + 4 >> 2] & 63](k[c >> 2] | 0, s, 1, k[c + 8 >> 2] | 0) | 0;
              k[d >> 2] = b;
              if (b)
                break;
              b = qd[k[c + 4 >> 2] & 63](k[c >> 2] | 0, q, 4, k[c + 8 >> 2] | 0) | 0;
              k[d >> 2] = b;
              e = k[q >> 2] | 0;
            }
            if (!b) {
              b = qd[k[c + 4 >> 2] & 63](k[c >> 2] | 0, h + 24 | 0, e + -1 | 0, k[c + 8 >> 2] | 0) | 0;
              k[d >> 2] = b;
            }
          } else {
            i[s >> 0] = 0;
            d = c + 16 | 0;
            b = k[d >> 2] | 0;
            if (!b) {
              b = qd[k[c + 4 >> 2] & 63](k[c >> 2] | 0, s, 1, k[c + 8 >> 2] | 0) | 0;
              k[d >> 2] = b;
            }
          }
 while (0);
        n = d;
      } else {
        i[s >> 0] = 0;
        d = c + 16 | 0;
        b = k[d >> 2] | 0;
        if (!b) {
          b = qd[k[c + 4 >> 2] & 63](k[c >> 2] | 0, s, 1, k[c + 8 >> 2] | 0) | 0;
          k[d >> 2] = b;
        }
        n = d;
      }
      k[s >> 2] = k[a + 36 >> 2];
      if (!b) {
        b = qd[k[c + 4 >> 2] & 63](k[c >> 2] | 0, s, 4, k[c + 8 >> 2] | 0) | 0;
        k[n >> 2] = b;
      }
      k[s >> 2] = k[a + 40 >> 2];
      if (!b) {
        b = qd[k[c + 4 >> 2] & 63](k[c >> 2] | 0, s, 4, k[c + 8 >> 2] | 0) | 0;
        k[n >> 2] = b;
      }
      i[s >> 0] = i[a + 6 >> 0] | 0;
      if (!b) {
        b = qd[k[c + 4 >> 2] & 63](k[c >> 2] | 0, s, 1, k[c + 8 >> 2] | 0) | 0;
        k[n >> 2] = b;
      }
      i[s >> 0] = i[a + 7 >> 0] | 0;
      if (!b) {
        b = qd[k[c + 4 >> 2] & 63](k[c >> 2] | 0, s, 1, k[c + 8 >> 2] | 0) | 0;
        k[n >> 2] = b;
      }
      i[s >> 0] = i[a + 8 >> 0] | 0;
      if (!b) {
        b = qd[k[c + 4 >> 2] & 63](k[c >> 2] | 0, s, 1, k[c + 8 >> 2] | 0) | 0;
        k[n >> 2] = b;
      }
      f = a + 20 | 0;
      k[s >> 2] = k[f >> 2];
      if (!b) {
        e = c + 4 | 0;
        d = c + 8 | 0;
        b = qd[k[e >> 2] & 63](k[c >> 2] | 0, s, 4, k[d >> 2] | 0) | 0;
        k[n >> 2] = b;
        if (!b) {
          b = qd[k[e >> 2] & 63](k[c >> 2] | 0, k[a + 48 >> 2] | 0, k[f >> 2] << 2, k[d >> 2] | 0) | 0;
          k[n >> 2] = b;
          d = k[a + 16 >> 2] | 0;
          k[s >> 2] = d;
          if (!b) {
            b = qd[k[c + 4 >> 2] & 63](k[c >> 2] | 0, s, 4, k[c + 8 >> 2] | 0) | 0;
            k[n >> 2] = b;
          }
        } else
          m = 34;
      } else
        m = 34;
      if ((m | 0) == 34) {
        d = k[a + 16 >> 2] | 0;
        k[s >> 2] = d;
      }
      a: do
        if ((d | 0) > 0) {
          j = a + 44 | 0;
          h = c + 4 | 0;
          m = c + 8 | 0;
          l = 0;
          while (1) {
            f = k[j >> 2] | 0;
            g = f + (l << 4) | 0;
            f = f + (l << 4) + 8 | 0;
            e = k[f >> 2] | 0;
            i[s >> 0] = e & 63;
            if (!b) {
              b = qd[k[h >> 2] & 63](k[c >> 2] | 0, s, 1, k[m >> 2] | 0) | 0;
              k[n >> 2] = b;
              e = k[f >> 2] | 0;
            }
            switch (e & 63 | 0) {
              case 1:
                {
                  i[s >> 0] = k[g >> 2];
                  if (!b) {
                    b = qd[k[h >> 2] & 63](k[c >> 2] | 0, s, 1, k[m >> 2] | 0) | 0;
                    k[n >> 2] = b;
                  }
                  break;
                }
              case 3:
                {
                  p[s >> 3] = +p[g >> 3];
                  if (!b) {
                    b = qd[k[h >> 2] & 63](k[c >> 2] | 0, s, 8, k[m >> 2] | 0) | 0;
                    k[n >> 2] = b;
                  }
                  break;
                }
              case 19:
                {
                  e = g;
                  f = k[e + 4 >> 2] | 0;
                  g = s;
                  k[g >> 2] = k[e >> 2];
                  k[g + 4 >> 2] = f;
                  if (!b) {
                    b = qd[k[h >> 2] & 63](k[c >> 2] | 0, s, 8, k[m >> 2] | 0) | 0;
                    k[n >> 2] = b;
                  }
                  break;
                }
              case 4:
              case 20:
                {
                  g = k[g >> 2] | 0;
                  do
                    if (g) {
                      f = (k[g + 12 >> 2] | 0) + 1 | 0;
                      k[q >> 2] = f;
                      if (f >>> 0 < 255) {
                        i[s >> 0] = f;
                        if (!b) {
                          b = qd[k[h >> 2] & 63](k[c >> 2] | 0, s, 1, k[m >> 2] | 0) | 0;
                          k[n >> 2] = b;
                        }
                      } else {
                        i[s >> 0] = -1;
                        if (b)
                          break;
                        b = qd[k[h >> 2] & 63](k[c >> 2] | 0, s, 1, k[m >> 2] | 0) | 0;
                        k[n >> 2] = b;
                        if (b)
                          break;
                        b = qd[k[h >> 2] & 63](k[c >> 2] | 0, q, 4, k[m >> 2] | 0) | 0;
                        k[n >> 2] = b;
                        f = k[q >> 2] | 0;
                      }
                      if (!b) {
                        b = qd[k[h >> 2] & 63](k[c >> 2] | 0, g + 24 | 0, f + -1 | 0, k[m >> 2] | 0) | 0;
                        k[n >> 2] = b;
                      }
                    } else {
                      i[s >> 0] = 0;
                      if (!b) {
                        b = qd[k[h >> 2] & 63](k[c >> 2] | 0, s, 1, k[m >> 2] | 0) | 0;
                        k[n >> 2] = b;
                      }
                    }
 while (0);
                  break;
                }
              default:
                {}
            }
            l = l + 1 | 0;
            if ((l | 0) == (d | 0))
              break a;
          }
        }
 while (0);
      m = a + 12 | 0;
      j = k[m >> 2] | 0;
      k[s >> 2] = j;
      if (!b) {
        b = qd[k[c + 4 >> 2] & 63](k[c >> 2] | 0, s, 4, k[c + 8 >> 2] | 0) | 0;
        k[n >> 2] = b;
      }
      if ((j | 0) > 0) {
        e = a + 64 | 0;
        d = c + 4 | 0;
        h = c + 8 | 0;
        g = 0;
        do {
          f = k[e >> 2] | 0;
          i[s >> 0] = i[f + (g << 3) + 4 >> 0] | 0;
          if (!b) {
            b = qd[k[d >> 2] & 63](k[c >> 2] | 0, s, 1, k[h >> 2] | 0) | 0;
            k[n >> 2] = b;
            f = k[e >> 2] | 0;
          }
          i[s >> 0] = i[f + (g << 3) + 5 >> 0] | 0;
          if (!b) {
            b = qd[k[d >> 2] & 63](k[c >> 2] | 0, s, 1, k[h >> 2] | 0) | 0;
            k[n >> 2] = b;
          }
          g = g + 1 | 0;
        } while ((g | 0) != (j | 0));
      }
      f = k[a + 28 >> 2] | 0;
      k[s >> 2] = f;
      if (!b) {
        l = qd[k[c + 4 >> 2] & 63](k[c >> 2] | 0, s, 4, k[c + 8 >> 2] | 0) | 0;
        k[n >> 2] = l;
      }
      if ((f | 0) > 0) {
        e = a + 52 | 0;
        d = a + 72 | 0;
        b = 0;
        do {
          Ek(k[(k[e >> 2] | 0) + (b << 2) >> 2] | 0, k[d >> 2] | 0, c);
          b = b + 1 | 0;
        } while ((b | 0) != (f | 0));
      }
      if (!(k[o >> 2] | 0))
        f = k[a + 24 >> 2] | 0;
      else
        f = 0;
      k[s >> 2] = f;
      d = k[n >> 2] | 0;
      if (!d) {
        e = c + 4 | 0;
        b = c + 8 | 0;
        d = qd[k[e >> 2] & 63](k[c >> 2] | 0, s, 4, k[b >> 2] | 0) | 0;
        k[n >> 2] = d;
        if (!d) {
          d = qd[k[e >> 2] & 63](k[c >> 2] | 0, k[a + 56 >> 2] | 0, f << 2, k[b >> 2] | 0) | 0;
          k[n >> 2] = d;
        }
      }
      if (!(k[o >> 2] | 0))
        b = k[a + 32 >> 2] | 0;
      else
        b = 0;
      k[s >> 2] = b;
      if (!d) {
        d = qd[k[c + 4 >> 2] & 63](k[c >> 2] | 0, s, 4, k[c + 8 >> 2] | 0) | 0;
        k[n >> 2] = d;
      }
      if ((b | 0) > 0) {
        h = a + 60 | 0;
        g = c + 4 | 0;
        e = c + 8 | 0;
        l = 0;
        do {
          j = k[(k[h >> 2] | 0) + (l * 12 | 0) >> 2] | 0;
          do
            if (!j) {
              i[s >> 0] = 0;
              if (!d) {
                d = qd[k[g >> 2] & 63](k[c >> 2] | 0, s, 1, k[e >> 2] | 0) | 0;
                k[n >> 2] = d;
              }
            } else {
              f = (k[j + 12 >> 2] | 0) + 1 | 0;
              k[q >> 2] = f;
              if (f >>> 0 < 255) {
                i[s >> 0] = f;
                if (!d) {
                  d = qd[k[g >> 2] & 63](k[c >> 2] | 0, s, 1, k[e >> 2] | 0) | 0;
                  k[n >> 2] = d;
                }
              } else {
                i[s >> 0] = -1;
                if (d)
                  break;
                d = qd[k[g >> 2] & 63](k[c >> 2] | 0, s, 1, k[e >> 2] | 0) | 0;
                k[n >> 2] = d;
                if (d)
                  break;
                d = qd[k[g >> 2] & 63](k[c >> 2] | 0, q, 4, k[e >> 2] | 0) | 0;
                k[n >> 2] = d;
                f = k[q >> 2] | 0;
              }
              if (d)
                break;
              d = qd[k[g >> 2] & 63](k[c >> 2] | 0, j + 24 | 0, f + -1 | 0, k[e >> 2] | 0) | 0;
              k[n >> 2] = d;
            }
 while (0);
          f = k[h >> 2] | 0;
          k[s >> 2] = k[f + (l * 12 | 0) + 4 >> 2];
          if (!d) {
            d = qd[k[g >> 2] & 63](k[c >> 2] | 0, s, 4, k[e >> 2] | 0) | 0;
            k[n >> 2] = d;
            f = k[h >> 2] | 0;
          }
          k[s >> 2] = k[f + (l * 12 | 0) + 8 >> 2];
          if (!d) {
            d = qd[k[g >> 2] & 63](k[c >> 2] | 0, s, 4, k[e >> 2] | 0) | 0;
            k[n >> 2] = d;
          }
          l = l + 1 | 0;
        } while ((l | 0) != (b | 0));
      }
      if (!(k[o >> 2] | 0))
        l = k[m >> 2] | 0;
      else
        l = 0;
      k[s >> 2] = l;
      if (!d) {
        d = qd[k[c + 4 >> 2] & 63](k[c >> 2] | 0, s, 4, k[c + 8 >> 2] | 0) | 0;
        k[n >> 2] = d;
      }
      if ((l | 0) <= 0) {
        r = t;
        return ;
      }
      j = a + 64 | 0;
      g = c + 4 | 0;
      b = c + 8 | 0;
      h = 0;
      do {
        e = k[(k[j >> 2] | 0) + (h << 3) >> 2] | 0;
        do
          if (!e) {
            i[s >> 0] = 0;
            if (!d) {
              d = qd[k[g >> 2] & 63](k[c >> 2] | 0, s, 1, k[b >> 2] | 0) | 0;
              k[n >> 2] = d;
            }
          } else {
            f = (k[e + 12 >> 2] | 0) + 1 | 0;
            k[q >> 2] = f;
            if (f >>> 0 < 255) {
              i[s >> 0] = f;
              if (!d) {
                d = qd[k[g >> 2] & 63](k[c >> 2] | 0, s, 1, k[b >> 2] | 0) | 0;
                k[n >> 2] = d;
              }
            } else {
              i[s >> 0] = -1;
              if (d)
                break;
              d = qd[k[g >> 2] & 63](k[c >> 2] | 0, s, 1, k[b >> 2] | 0) | 0;
              k[n >> 2] = d;
              if (d)
                break;
              d = qd[k[g >> 2] & 63](k[c >> 2] | 0, q, 4, k[b >> 2] | 0) | 0;
              k[n >> 2] = d;
              f = k[q >> 2] | 0;
            }
            if (d)
              break;
            d = qd[k[g >> 2] & 63](k[c >> 2] | 0, e + 24 | 0, f + -1 | 0, k[b >> 2] | 0) | 0;
            k[n >> 2] = d;
          }
 while (0);
        h = h + 1 | 0;
      } while ((h | 0) != (l | 0));
      r = t;
      return ;
    }
    function Fk(a, b) {
      a = a | 0;
      b = b | 0;
      var c = 0,
          d = 0,
          e = 0,
          f = 0;
      f = a + 16 | 0;
      c = b;
      b = i[b + 5 >> 0] | 0;
      a: while (1) {
        d = c + 5 | 0;
        b = b & 252;
        e = b & 255;
        i[d >> 0] = e;
        switch (l[c + 4 >> 0] | 0 | 0) {
          case 38:
            {
              e = 10;
              break a;
            }
          case 7:
            break;
          case 5:
            {
              e = 11;
              break a;
            }
          case 9:
            {
              e = 13;
              break a;
            }
          case 6:
            {
              e = 9;
              break a;
            }
          case 20:
          case 4:
            {
              e = 3;
              break a;
            }
          case 8:
            {
              e = 12;
              break a;
            }
          default:
            {
              e = 14;
              break a;
            }
        }
        b = k[c + 8 >> 2] | 0;
        if ((b | 0) != 0 ? (i[b + 5 >> 0] & 3) != 0 : 0) {
          Fk(a, b);
          b = i[d >> 0] | 0;
        } else
          b = e;
        i[d >> 0] = b & 255 | 4;
        k[f >> 2] = (k[c + 12 >> 2] | 0) + 24 + (k[f >> 2] | 0);
        e = c;
        c = k[c + 16 >> 2] | 0;
        if (!(i[e + 6 >> 0] & 64)) {
          e = 14;
          break;
        }
        b = i[c + 5 >> 0] | 0;
        if (!(b & 3)) {
          e = 14;
          break;
        }
      }
      if ((e | 0) == 3) {
        i[d >> 0] = b | 4;
        k[f >> 2] = (k[c + 12 >> 2] | 0) + 25 + (k[f >> 2] | 0);
        return ;
      } else if ((e | 0) == 9) {
        a = a + 76 | 0;
        k[c + 8 >> 2] = k[a >> 2];
        k[a >> 2] = c;
        return ;
      } else if ((e | 0) == 10) {
        a = a + 76 | 0;
        k[c + 8 >> 2] = k[a >> 2];
        k[a >> 2] = c;
        return ;
      } else if ((e | 0) == 11) {
        a = a + 76 | 0;
        k[c + 28 >> 2] = k[a >> 2];
        k[a >> 2] = c;
        return ;
      } else if ((e | 0) == 12) {
        a = a + 76 | 0;
        k[c + 36 >> 2] = k[a >> 2];
        k[a >> 2] = c;
        return ;
      } else if ((e | 0) == 13) {
        a = a + 76 | 0;
        k[c + 76 >> 2] = k[a >> 2];
        k[a >> 2] = c;
        return ;
      } else if ((e | 0) == 14)
        return ;
    }
    function Gk(a, b, c) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      var d = 0,
          e = 0,
          f = 0,
          g = 0,
          h = 0,
          j = 0,
          m = 0,
          n = 0,
          o = 0;
      m = l[(k[a + 12 >> 2] | 0) + 60 >> 0] | 0;
      j = m ^ 3;
      m = m & 3;
      e = k[b >> 2] | 0;
      d = (e | 0) == 0;
      if (!((c | 0) != 0 & (d ^ 1))) {
        a = b;
        m = d;
        a = m ? 0 : a;
        return a | 0;
      }
      h = c + -1 | 0;
      while (1) {
        d = e + 5 | 0;
        c = l[d >> 0] | 0;
        a: do
          if (!((c ^ 3) & j)) {
            k[b >> 2] = k[e >> 2];
            switch (l[e + 4 >> 0] | 0 | 0) {
              case 5:
                {
                  qh(a, e);
                  break a;
                }
              case 8:
                {
                  ah(a, e);
                  break a;
                }
              case 6:
                {
                  g = e + 6 | 0;
                  c = i[g >> 0] | 0;
                  if (!(c << 24 >> 24))
                    d = c & 255;
                  else {
                    f = 0;
                    do {
                      d = k[e + 16 + (f << 2) >> 2] | 0;
                      if (((d | 0) != 0 ? (o = d + 4 | 0, n = (k[o >> 2] | 0) + -1 | 0, k[o >> 2] = n, (n | 0) == 0) : 0) ? (k[d >> 2] | 0) == (d + 8 | 0) : 0) {
                        Kg(a, d, 24, 0) | 0;
                        c = i[g >> 0] | 0;
                      }
                      f = f + 1 | 0;
                      d = c & 255;
                    } while ((f | 0) < (d | 0));
                  }
                  Kg(a, e, (d << 2) + 16 | 0, 0) | 0;
                  break a;
                }
              case 38:
                {
                  Kg(a, e, ((l[e + 6 >> 0] | 0) << 4) + 16 | 0, 0) | 0;
                  break a;
                }
              case 4:
                {
                  gh(a, e);
                  break;
                }
              case 7:
                {
                  Kg(a, e, (k[e + 12 >> 2] | 0) + 24 | 0, 0) | 0;
                  break a;
                }
              case 20:
                break;
              case 9:
                {
                  pg(a, e);
                  break a;
                }
              default:
                break a;
            }
            Kg(a, e, (k[e + 12 >> 2] | 0) + 25 | 0, 0) | 0;
          } else {
            i[d >> 0] = c & 248 | m;
            b = e;
          }
 while (0);
        e = k[b >> 2] | 0;
        d = (e | 0) == 0;
        c = d ^ 1;
        if (!((h | 0) != 0 & c))
          break;
        else
          h = (c << 31 >> 31) + h | 0;
      }
      o = d ? 0 : b;
      return o | 0;
    }
    function Hk(a, b) {
      a = a | 0;
      b = b | 0;
      var c = 0,
          d = 0,
          e = 0,
          f = 0,
          g = 0,
          h = 0,
          j = 0,
          m = 0,
          n = 0,
          o = 0;
      h = r;
      r = r + 32 | 0;
      j = h + 16 | 0;
      g = h;
      f = k[a + 12 >> 2] | 0;
      c = f + 96 | 0;
      d = k[c >> 2] | 0;
      k[c >> 2] = k[d >> 2];
      c = f + 64 | 0;
      k[d >> 2] = k[c >> 2];
      k[c >> 2] = d;
      c = d + 5 | 0;
      e = l[c >> 0] | 0;
      i[c >> 0] = e & 247;
      if (((i[f + 61 >> 0] | 0) + -2 & 255) < 4)
        i[c >> 0] = (l[f + 60 >> 0] | 0) & 3 | e & 240;
      k[g >> 2] = d;
      k[g + 8 >> 2] = l[d + 4 >> 0] | 0 | 64;
      c = yh(a, g, 2) | 0;
      if (!c) {
        r = h;
        return ;
      }
      if ((k[c + 8 >> 2] & 15 | 0) != 6) {
        r = h;
        return ;
      }
      m = a + 109 | 0;
      n = i[m >> 0] | 0;
      f = f + 63 | 0;
      e = i[f >> 0] | 0;
      i[m >> 0] = 0;
      i[f >> 0] = 0;
      d = a + 8 | 0;
      o = k[d >> 2] | 0;
      k[o >> 2] = k[c >> 2];
      k[o + 4 >> 2] = k[c + 4 >> 2];
      k[o + 8 >> 2] = k[c + 8 >> 2];
      k[o + 12 >> 2] = k[c + 12 >> 2];
      c = (k[d >> 2] | 0) + 16 | 0;
      k[c >> 2] = k[g >> 2];
      k[c + 4 >> 2] = k[g + 4 >> 2];
      k[c + 8 >> 2] = k[g + 8 >> 2];
      k[c + 12 >> 2] = k[g + 12 >> 2];
      c = k[d >> 2] | 0;
      k[d >> 2] = c + 32;
      c = gg(a, 51, 0, c - (k[a + 28 >> 2] | 0) | 0, 0) | 0;
      i[m >> 0] = n;
      i[f >> 0] = e;
      if (!((b | 0) != 0 & (c | 0) != 0)) {
        r = h;
        return ;
      }
      if ((c | 0) != 2) {
        o = c;
        Wf(a, o);
      }
      c = k[d >> 2] | 0;
      if ((k[c + -8 >> 2] & 15 | 0) == 4)
        c = (k[c + -16 >> 2] | 0) + 24 | 0;
      else
        c = 1012826;
      k[j >> 2] = c;
      Ug(a, 1012837, j) | 0;
      o = 5;
      Wf(a, o);
    }
    function Ik(a) {
      a = a | 0;
      var b = 0,
          c = 0,
          d = 0,
          e = 0,
          f = 0,
          g = 0,
          h = 0,
          j = 0,
          m = 0,
          n = 0,
          o = 0,
          p = 0,
          q = 0,
          r = 0,
          s = 0,
          t = 0,
          u = 0,
          v = 0,
          w = 0,
          x = 0,
          y = 0;
      x = a + 12 | 0;
      y = k[x >> 2] | 0;
      h = y + 61 | 0;
      switch (l[h >> 0] | 0) {
        case 6:
          {
            d = y + 96 | 0;
            if ((k[d >> 2] | 0) != 0 ? (i[y + 62 >> 0] | 0) != 1 : 0) {
              e = y + 120 | 0;
              b = 0;
              while (1) {
                c = k[e >> 2] | 0;
                if (b >>> 0 >= c >>> 0) {
                  g = 116;
                  break;
                }
                Hk(a, 1);
                b = b + 1 | 0;
                if (!(k[d >> 2] | 0)) {
                  d = 0;
                  break;
                }
              }
              if ((g | 0) == 116)
                d = c << 1;
              k[e >> 2] = d;
              y = b * 6 | 0;
              return y | 0;
            }
            i[h >> 0] = 7;
            y = 0;
            return y | 0;
          }
        case 2:
          {
            c = y + 72 | 0;
            b = y + 68 | 0;
            d = k[b >> 2] | 0;
            if ((d | 0) != 0 ? (w = y + 12 | 0, x = k[w >> 2] | 0, a = Gk(a, d, 83) | 0, k[b >> 2] = a, y = y + 20 | 0, k[y >> 2] = (k[w >> 2] | 0) - x + (k[y >> 2] | 0), (a | 0) != 0) : 0) {
              y = 498;
              return y | 0;
            }
            i[h >> 0] = 3;
            k[b >> 2] = c;
            y = 0;
            return y | 0;
          }
        case 3:
          {
            d = y + 96 | 0;
            c = y + 68 | 0;
            b = k[c >> 2] | 0;
            if ((b | 0) != 0 ? (w = y + 12 | 0, x = k[w >> 2] | 0, a = Gk(a, b, 83) | 0, k[c >> 2] = a, y = y + 20 | 0, k[y >> 2] = (k[w >> 2] | 0) - x + (k[y >> 2] | 0), (a | 0) != 0) : 0) {
              y = 498;
              return y | 0;
            }
            i[h >> 0] = 4;
            k[c >> 2] = d;
            y = 0;
            return y | 0;
          }
        case 4:
          {
            c = y + 68 | 0;
            b = k[c >> 2] | 0;
            if ((b | 0) != 0 ? (w = y + 12 | 0, x = k[w >> 2] | 0, a = Gk(a, b, 83) | 0, k[c >> 2] = a, y = y + 20 | 0, k[y >> 2] = (k[w >> 2] | 0) - x + (k[y >> 2] | 0), (a | 0) != 0) : 0) {
              y = 498;
              return y | 0;
            }
            i[h >> 0] = 5;
            k[c >> 2] = 0;
            y = 0;
            return y | 0;
          }
        case 5:
          {
            x = (k[y + 136 >> 2] | 0) + 5 | 0;
            i[x >> 0] = l[y + 60 >> 0] & 3 | l[x >> 0] & 248;
            if ((i[y + 62 >> 0] | 0) != 1) {
              d = y + 12 | 0;
              c = k[d >> 2] | 0;
              x = y + 108 | 0;
              b = y + 116 | 0;
              w = Kg(a, k[x >> 2] | 0, k[b >> 2] | 0, 0) | 0;
              k[x >> 2] = w;
              k[b >> 2] = 0;
              b = k[y + 32 >> 2] | 0;
              if ((k[y + 28 >> 2] | 0) < ((b | 0) / 4 | 0 | 0))
                fh(a, (b | 0) / 2 | 0);
              y = y + 20 | 0;
              k[y >> 2] = (k[d >> 2] | 0) - c + (k[y >> 2] | 0);
            }
            i[h >> 0] = 6;
            y = 0;
            return y | 0;
          }
        case 1:
          {
            d = y + 76 | 0;
            if (!(k[d >> 2] | 0))
              t = y;
            else {
              do
                vp(y);
 while ((k[d >> 2] | 0) != 0);
              t = k[x >> 2] | 0;
            }
            g = k[t + 80 >> 2] | 0;
            i[t + 61 >> 0] = 8;
            u = t + 16 | 0;
            k[u >> 2] = 0;
            if (i[a + 5 >> 0] & 3)
              Fk(t, a);
            if ((k[t + 48 >> 2] & 64 | 0) != 0 ? (e = k[t + 40 >> 2] | 0, (i[e + 5 >> 0] & 3) != 0) : 0)
              Fk(t, e);
            up(t);
            f = t + 104 | 0;
            e = k[f >> 2] | 0;
            a: do
              if (e) {
                c = f;
                do {
                  while (1) {
                    f = e + 32 | 0;
                    if ((i[e + 5 >> 0] & 7) == 0 ? (k[f >> 2] | 0) != 0 : 0)
                      break;
                    q = e + 40 | 0;
                    k[c >> 2] = k[q >> 2];
                    k[q >> 2] = e;
                    f = k[f >> 2] | 0;
                    if (f)
                      do {
                        e = f + 8 | 0;
                        d = e + 4 | 0;
                        if (k[d >> 2] | 0) {
                          f = k[f >> 2] | 0;
                          if ((k[f + 8 >> 2] & 64 | 0) != 0 ? (b = k[f >> 2] | 0, (i[b + 5 >> 0] & 3) != 0) : 0)
                            Fk(t, b);
                          k[d >> 2] = 0;
                        }
                        f = k[e >> 2] | 0;
                      } while ((f | 0) != 0);
                    e = k[c >> 2] | 0;
                    if (!e)
                      break a;
                  }
                  c = e + 40 | 0;
                  e = k[c >> 2] | 0;
                } while ((e | 0) != 0);
              }
 while (0);
            j = t + 76 | 0;
            if (k[j >> 2] | 0)
              do
                vp(t);
 while ((k[j >> 2] | 0) != 0);
            c = k[u >> 2] | 0;
            k[j >> 2] = g;
            if (g)
              do
                vp(t);
 while ((k[j >> 2] | 0) != 0);
            k[u >> 2] = 0;
            b = t + 88 | 0;
            while (1) {
              e = k[b >> 2] | 0;
              k[b >> 2] = 0;
              f = 0;
              b: while (1) {
                while (1) {
                  if (!e)
                    break b;
                  d = k[e + 28 >> 2] | 0;
                  if (!(wp(t, e) | 0))
                    e = d;
                  else {
                    e = d;
                    break;
                  }
                }
                if (!(k[j >> 2] | 0)) {
                  f = 1;
                  continue;
                }
                while (1) {
                  vp(t);
                  if (!(k[j >> 2] | 0)) {
                    f = 1;
                    continue b;
                  }
                }
              }
              if (!f)
                break;
            }
            m = t + 84 | 0;
            xp(t, k[m >> 2] | 0, 0);
            n = t + 92 | 0;
            xp(t, k[n >> 2] | 0, 0);
            o = k[m >> 2] | 0;
            p = k[n >> 2] | 0;
            d = k[u >> 2] | 0;
            h = t + 96 | 0;
            f = h;
            while (1) {
              e = k[f >> 2] | 0;
              if (!e)
                break;
              else
                f = e;
            }
            q = d + c | 0;
            g = t + 72 | 0;
            e = k[g >> 2] | 0;
            c: do
              if (e)
                do {
                  while (1) {
                    if (!(i[e + 5 >> 0] & 3)) {
                      g = e;
                      break;
                    }
                    k[g >> 2] = k[e >> 2];
                    k[e >> 2] = k[f >> 2];
                    k[f >> 2] = e;
                    f = k[g >> 2] | 0;
                    if (!f)
                      break c;
                    else {
                      d = e;
                      e = f;
                      f = d;
                    }
                  }
                  e = k[g >> 2] | 0;
                } while ((e | 0) != 0);
 while (0);
            k[t + 120 >> 2] = 1;
            f = k[h >> 2] | 0;
            if (f)
              do {
                if (i[f + 5 >> 0] & 3)
                  Fk(t, f);
                f = k[f >> 2] | 0;
              } while ((f | 0) != 0);
            if (k[j >> 2] | 0)
              do
                vp(t);
 while ((k[j >> 2] | 0) != 0);
            k[u >> 2] = 0;
            while (1) {
              e = k[b >> 2] | 0;
              k[b >> 2] = 0;
              f = 0;
              d: while (1) {
                while (1) {
                  if (!e)
                    break d;
                  d = k[e + 28 >> 2] | 0;
                  if (!(wp(t, e) | 0))
                    e = d;
                  else {
                    e = d;
                    break;
                  }
                }
                if (!(k[j >> 2] | 0)) {
                  f = 1;
                  continue;
                }
                while (1) {
                  vp(t);
                  if (!(k[j >> 2] | 0)) {
                    f = 1;
                    continue d;
                  }
                }
              }
              if (!f)
                break;
            }
            f = k[b >> 2] | 0;
            if (f)
              do {
                j = i[f + 7 >> 0] | 0;
                e = k[f + 16 >> 2] | 0;
                b = e + (1 << (j & 255) << 5) | 0;
                if (j << 24 >> 24 != 31)
                  do {
                    d = e + 8 | 0;
                    do
                      if ((k[d >> 2] | 0) != 0 ? (r = e + 24 | 0, s = k[r >> 2] | 0, (s & 64 | 0) != 0) : 0) {
                        c = k[e + 16 >> 2] | 0;
                        if ((s & 15 | 0) != 4) {
                          if (!(i[c + 5 >> 0] & 3))
                            break;
                          k[d >> 2] = 0;
                          k[r >> 2] = 10;
                          break;
                        }
                        if (!c)
                          break;
                        if (!(i[c + 5 >> 0] & 3))
                          break;
                        Fk(t, c);
                      }
 while (0);
                    e = e + 32 | 0;
                  } while (e >>> 0 < b >>> 0);
                f = k[f + 28 >> 2] | 0;
              } while ((f | 0) != 0);
            f = k[n >> 2] | 0;
            if (f)
              do {
                s = i[f + 7 >> 0] | 0;
                e = k[f + 16 >> 2] | 0;
                b = e + (1 << (s & 255) << 5) | 0;
                if (s << 24 >> 24 != 31)
                  do {
                    d = e + 8 | 0;
                    do
                      if ((k[d >> 2] | 0) != 0 ? (v = e + 24 | 0, w = k[v >> 2] | 0, (w & 64 | 0) != 0) : 0) {
                        c = k[e + 16 >> 2] | 0;
                        if ((w & 15 | 0) != 4) {
                          if (!(i[c + 5 >> 0] & 3))
                            break;
                          k[d >> 2] = 0;
                          k[v >> 2] = 10;
                          break;
                        }
                        if (!c)
                          break;
                        if (!(i[c + 5 >> 0] & 3))
                          break;
                        Fk(t, c);
                      }
 while (0);
                    e = e + 32 | 0;
                  } while (e >>> 0 < b >>> 0);
                f = k[f + 28 >> 2] | 0;
              } while ((f | 0) != 0);
            xp(t, k[m >> 2] | 0, o);
            xp(t, k[n >> 2] | 0, p);
            f = t + 60 | 0;
            i[f >> 0] = l[f >> 0] ^ 3;
            f = k[u >> 2] | 0;
            e = k[x >> 2] | 0;
            i[e + 61 >> 0] = 2;
            b = e + 64 | 0;
            d = 0;
            do {
              d = d + 1 | 0;
              c = Gk(a, b, 1) | 0;
            } while ((c | 0) == (b | 0));
            k[e + 68 >> 2] = c;
            k[y + 20 >> 2] = (k[y + 12 >> 2] | 0) + (k[y + 8 >> 2] | 0);
            y = q + f + (d * 6 | 0) | 0;
            return y | 0;
          }
        case 0:
          {
            b = y + 16 | 0;
            k[b >> 2] = 0;
            vp(y);
            if (!(k[y + 76 >> 2] | 0))
              i[h >> 0] = 1;
            y = k[b >> 2] | 0;
            return y | 0;
          }
        case 7:
          {
            d = y + 16 | 0;
            k[d >> 2] = k[y + 32 >> 2] << 2;
            c = y + 76 | 0;
            k[c >> 2] = 0;
            k[c + 4 >> 2] = 0;
            k[c + 8 >> 2] = 0;
            k[c + 12 >> 2] = 0;
            k[c + 16 >> 2] = 0;
            c = k[y + 136 >> 2] | 0;
            if ((c | 0) != 0 ? (i[c + 5 >> 0] & 3) != 0 : 0)
              Fk(y, c);
            if ((k[y + 48 >> 2] & 64 | 0) != 0 ? (f = k[y + 40 >> 2] | 0, (i[f + 5 >> 0] & 3) != 0) : 0)
              Fk(y, f);
            up(y);
            b = k[y + 96 >> 2] | 0;
            if (b)
              do {
                if (i[b + 5 >> 0] & 3)
                  Fk(y, b);
                b = k[b >> 2] | 0;
              } while ((b | 0) != 0);
            i[h >> 0] = 0;
            y = k[d >> 2] | 0;
            return y | 0;
          }
        default:
          {
            y = 0;
            return y | 0;
          }
      }
      return 0;
    }
    function Jk(a, b, c) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      var d = 0,
          e = 0,
          f = 0,
          g = 0,
          h = 0,
          j = 0,
          l = 0,
          m = 0,
          n = 0,
          o = 0,
          p = 0;
      f = r;
      r = r + 112 | 0;
      p = f + 40 | 0;
      e = f + 32 | 0;
      d = f + 24 | 0;
      l = f + 16 | 0;
      m = f;
      f = f + 48 | 0;
      Vg(f, (k[a + 72 >> 2] | 0) + 24 | 0, 60);
      o = a + 52 | 0;
      n = k[o >> 2] | 0;
      g = k[a + 4 >> 2] | 0;
      k[m >> 2] = f;
      k[m + 4 >> 2] = g;
      k[m + 8 >> 2] = b;
      m = Ug(n, 1012627, m) | 0;
      if (!c) {
        n = k[o >> 2] | 0;
        Wf(n, 3);
      }
      n = k[o >> 2] | 0;
      do
        if ((c + -290 | 0) >>> 0 >= 4) {
          if ((c | 0) < 257) {
            k[d >> 2] = c;
            b = Ug(n, 999731, d) | 0;
            break;
          }
          b = k[3816 + (c + -257 << 2) >> 2] | 0;
          if ((c | 0) < 289) {
            k[e >> 2] = b;
            b = Ug(n, 999736, e) | 0;
          }
        } else {
          e = a + 60 | 0;
          c = k[e >> 2] | 0;
          d = c + 4 | 0;
          b = k[d >> 2] | 0;
          f = c + 8 | 0;
          g = k[f >> 2] | 0;
          do
            if ((b + 1 | 0) >>> 0 > g >>> 0)
              if (g >>> 0 > 2147483646)
                Jk(a, 1012383, 0);
              else {
                h = g << 1;
                j = Kg(n, k[c >> 2] | 0, g, h) | 0;
                k[c >> 2] = j;
                k[f >> 2] = h;
                h = k[d >> 2] | 0;
                break;
              }
            else {
              h = b;
              j = k[c >> 2] | 0;
            }
 while (0);
          k[d >> 2] = h + 1;
          i[j + h >> 0] = 0;
          b = k[o >> 2] | 0;
          k[l >> 2] = k[k[e >> 2] >> 2];
          b = Ug(b, 999736, l) | 0;
        }
 while (0);
      k[p >> 2] = m;
      k[p + 4 >> 2] = b;
      Ug(n, 1012637, p) | 0;
      p = k[o >> 2] | 0;
      Wf(p, 3);
    }
    function Kk(a, b) {
      a = a | 0;
      b = b | 0;
      var c = 0,
          d = 0,
          e = 0,
          f = 0,
          g = 0,
          h = 0,
          j = 0,
          m = 0,
          n = 0,
          o = 0,
          p = 0,
          q = 0,
          s = 0,
          t = 0,
          u = 0,
          v = 0,
          w = 0,
          x = 0,
          y = 0,
          z = 0,
          A = 0,
          B = 0,
          C = 0,
          D = 0,
          E = 0,
          F = 0,
          G = 0,
          H = 0,
          I = 0,
          J = 0,
          K = 0,
          L = 0,
          M = 0,
          N = 0,
          O = 0;
      O = r;
      r = r + 16 | 0;
      s = O;
      M = a + 60 | 0;
      k[(k[M >> 2] | 0) + 4 >> 2] = 0;
      N = a + 56 | 0;
      q = a + 4 | 0;
      a: while (1) {
        e = k[a >> 2] | 0;
        b: while (1) {
          switch (e | 0) {
            case -1:
              {
                c = 289;
                p = 391;
                break a;
              }
            case 47:
              {
                p = 71;
                break a;
              }
            case 126:
              {
                p = 79;
                break a;
              }
            case 58:
              {
                p = 87;
                break a;
              }
            case 39:
            case 34:
              {
                p = 95;
                break a;
              }
            case 45:
              break b;
            case 61:
              {
                p = 39;
                break a;
              }
            case 13:
            case 10:
              {
                p = 4;
                break b;
              }
            case 91:
              {
                p = 35;
                break a;
              }
            case 60:
              {
                p = 47;
                break a;
              }
            case 11:
            case 9:
            case 12:
            case 32:
              break;
            case 62:
              {
                p = 59;
                break a;
              }
            case 46:
              {
                p = 349;
                break a;
              }
            case 57:
            case 56:
            case 55:
            case 54:
            case 53:
            case 52:
            case 51:
            case 50:
            case 49:
            case 48:
              {
                p = 368;
                break a;
              }
            default:
              {
                p = 369;
                break a;
              }
          }
          j = k[N >> 2] | 0;
          J = k[j >> 2] | 0;
          k[j >> 2] = J + -1;
          if (!J)
            e = Sh(j) | 0;
          else {
            J = j + 4 | 0;
            e = k[J >> 2] | 0;
            k[J >> 2] = e + 1;
            e = l[e >> 0] | 0;
          }
          k[a >> 2] = e;
        }
        if ((p | 0) == 4) {
          p = 0;
          j = k[N >> 2] | 0;
          J = k[j >> 2] | 0;
          k[j >> 2] = J + -1;
          if (!J)
            j = Sh(j) | 0;
          else {
            J = j + 4 | 0;
            j = k[J >> 2] | 0;
            k[J >> 2] = j + 1;
            j = l[j >> 0] | 0;
          }
          k[a >> 2] = j;
          switch (j | 0) {
            case 13:
            case 10:
              {
                if ((j | 0) != (e | 0)) {
                  j = k[N >> 2] | 0;
                  J = k[j >> 2] | 0;
                  k[j >> 2] = J + -1;
                  if (!J)
                    j = Sh(j) | 0;
                  else {
                    J = j + 4 | 0;
                    j = k[J >> 2] | 0;
                    k[J >> 2] = j + 1;
                    j = l[j >> 0] | 0;
                  }
                  k[a >> 2] = j;
                }
                break;
              }
            default:
              {}
          }
          J = (k[q >> 2] | 0) + 1 | 0;
          k[q >> 2] = J;
          if ((J | 0) == 2147483647) {
            p = 14;
            break;
          } else
            continue;
        }
        j = k[N >> 2] | 0;
        J = k[j >> 2] | 0;
        k[j >> 2] = J + -1;
        if (!J)
          j = Sh(j) | 0;
        else {
          J = j + 4 | 0;
          j = k[J >> 2] | 0;
          k[J >> 2] = j + 1;
          j = l[j >> 0] | 0;
        }
        k[a >> 2] = j;
        if ((j | 0) != 45) {
          c = 45;
          p = 391;
          break;
        }
        j = k[N >> 2] | 0;
        J = k[j >> 2] | 0;
        k[j >> 2] = J + -1;
        if (!J)
          j = Sh(j) | 0;
        else {
          J = j + 4 | 0;
          j = k[J >> 2] | 0;
          k[J >> 2] = j + 1;
          j = l[j >> 0] | 0;
        }
        k[a >> 2] = j;
        do
          if ((j | 0) == 91) {
            j = rp(a) | 0;
            k[(k[M >> 2] | 0) + 4 >> 2] = 0;
            if ((j | 0) > -1) {
              sp(a, 0, j);
              k[(k[M >> 2] | 0) + 4 >> 2] = 0;
              continue a;
            } else {
              j = k[a >> 2] | 0;
              break;
            }
          }
 while (0);
        while (1) {
          switch (j | 0) {
            case -1:
            case 13:
            case 10:
              continue a;
            default:
              {}
          }
          j = k[N >> 2] | 0;
          J = k[j >> 2] | 0;
          k[j >> 2] = J + -1;
          if (!J)
            j = Sh(j) | 0;
          else {
            J = j + 4 | 0;
            j = k[J >> 2] | 0;
            k[J >> 2] = j + 1;
            j = l[j >> 0] | 0;
          }
          k[a >> 2] = j;
        }
      }
      switch (p | 0) {
        case 14:
          {
            Jk(a, 1012328, 0);
            break;
          }
        case 35:
          {
            c = rp(a) | 0;
            if ((c | 0) > -1) {
              sp(a, b, c);
              a = 293;
              r = O;
              return a | 0;
            }
            if ((c | 0) == -1) {
              a = 91;
              r = O;
              return a | 0;
            } else
              Jk(a, 1012353, 293);
            break;
          }
        case 39:
          {
            c = k[N >> 2] | 0;
            b = k[c >> 2] | 0;
            k[c >> 2] = b + -1;
            if (!b)
              c = Sh(c) | 0;
            else {
              b = c + 4 | 0;
              c = k[b >> 2] | 0;
              k[b >> 2] = c + 1;
              c = l[c >> 0] | 0;
            }
            k[a >> 2] = c;
            if ((c | 0) != 61) {
              a = 61;
              r = O;
              return a | 0;
            }
            c = k[N >> 2] | 0;
            b = k[c >> 2] | 0;
            k[c >> 2] = b + -1;
            if (!b)
              c = Sh(c) | 0;
            else {
              b = c + 4 | 0;
              c = k[b >> 2] | 0;
              k[b >> 2] = c + 1;
              c = l[c >> 0] | 0;
            }
            k[a >> 2] = c;
            a = 282;
            r = O;
            return a | 0;
          }
        case 47:
          {
            c = k[N >> 2] | 0;
            b = k[c >> 2] | 0;
            k[c >> 2] = b + -1;
            if (!b)
              c = Sh(c) | 0;
            else {
              b = c + 4 | 0;
              c = k[b >> 2] | 0;
              k[b >> 2] = c + 1;
              c = l[c >> 0] | 0;
            }
            k[a >> 2] = c;
            switch (c | 0) {
              case 60:
                {
                  c = k[N >> 2] | 0;
                  b = k[c >> 2] | 0;
                  k[c >> 2] = b + -1;
                  if (!b)
                    c = Sh(c) | 0;
                  else {
                    b = c + 4 | 0;
                    c = k[b >> 2] | 0;
                    k[b >> 2] = c + 1;
                    c = l[c >> 0] | 0;
                  }
                  k[a >> 2] = c;
                  a = 286;
                  r = O;
                  return a | 0;
                }
              case 61:
                {
                  c = k[N >> 2] | 0;
                  b = k[c >> 2] | 0;
                  k[c >> 2] = b + -1;
                  if (!b)
                    c = Sh(c) | 0;
                  else {
                    b = c + 4 | 0;
                    c = k[b >> 2] | 0;
                    k[b >> 2] = c + 1;
                    c = l[c >> 0] | 0;
                  }
                  k[a >> 2] = c;
                  a = 284;
                  r = O;
                  return a | 0;
                }
              default:
                {
                  a = 60;
                  r = O;
                  return a | 0;
                }
            }
          }
        case 59:
          {
            c = k[N >> 2] | 0;
            b = k[c >> 2] | 0;
            k[c >> 2] = b + -1;
            if (!b)
              c = Sh(c) | 0;
            else {
              b = c + 4 | 0;
              c = k[b >> 2] | 0;
              k[b >> 2] = c + 1;
              c = l[c >> 0] | 0;
            }
            k[a >> 2] = c;
            switch (c | 0) {
              case 61:
                {
                  c = k[N >> 2] | 0;
                  b = k[c >> 2] | 0;
                  k[c >> 2] = b + -1;
                  if (!b)
                    c = Sh(c) | 0;
                  else {
                    b = c + 4 | 0;
                    c = k[b >> 2] | 0;
                    k[b >> 2] = c + 1;
                    c = l[c >> 0] | 0;
                  }
                  k[a >> 2] = c;
                  a = 283;
                  r = O;
                  return a | 0;
                }
              case 62:
                {
                  c = k[N >> 2] | 0;
                  b = k[c >> 2] | 0;
                  k[c >> 2] = b + -1;
                  if (!b)
                    c = Sh(c) | 0;
                  else {
                    b = c + 4 | 0;
                    c = k[b >> 2] | 0;
                    k[b >> 2] = c + 1;
                    c = l[c >> 0] | 0;
                  }
                  k[a >> 2] = c;
                  a = 287;
                  r = O;
                  return a | 0;
                }
              default:
                {
                  a = 62;
                  r = O;
                  return a | 0;
                }
            }
          }
        case 71:
          {
            c = k[N >> 2] | 0;
            b = k[c >> 2] | 0;
            k[c >> 2] = b + -1;
            if (!b)
              c = Sh(c) | 0;
            else {
              b = c + 4 | 0;
              c = k[b >> 2] | 0;
              k[b >> 2] = c + 1;
              c = l[c >> 0] | 0;
            }
            k[a >> 2] = c;
            if ((c | 0) != 47) {
              a = 47;
              r = O;
              return a | 0;
            }
            c = k[N >> 2] | 0;
            b = k[c >> 2] | 0;
            k[c >> 2] = b + -1;
            if (!b)
              c = Sh(c) | 0;
            else {
              b = c + 4 | 0;
              c = k[b >> 2] | 0;
              k[b >> 2] = c + 1;
              c = l[c >> 0] | 0;
            }
            k[a >> 2] = c;
            a = 279;
            r = O;
            return a | 0;
          }
        case 79:
          {
            c = k[N >> 2] | 0;
            b = k[c >> 2] | 0;
            k[c >> 2] = b + -1;
            if (!b)
              c = Sh(c) | 0;
            else {
              b = c + 4 | 0;
              c = k[b >> 2] | 0;
              k[b >> 2] = c + 1;
              c = l[c >> 0] | 0;
            }
            k[a >> 2] = c;
            if ((c | 0) != 61) {
              a = 126;
              r = O;
              return a | 0;
            }
            c = k[N >> 2] | 0;
            b = k[c >> 2] | 0;
            k[c >> 2] = b + -1;
            if (!b)
              c = Sh(c) | 0;
            else {
              b = c + 4 | 0;
              c = k[b >> 2] | 0;
              k[b >> 2] = c + 1;
              c = l[c >> 0] | 0;
            }
            k[a >> 2] = c;
            a = 285;
            r = O;
            return a | 0;
          }
        case 87:
          {
            c = k[N >> 2] | 0;
            b = k[c >> 2] | 0;
            k[c >> 2] = b + -1;
            if (!b)
              c = Sh(c) | 0;
            else {
              b = c + 4 | 0;
              c = k[b >> 2] | 0;
              k[b >> 2] = c + 1;
              c = l[c >> 0] | 0;
            }
            k[a >> 2] = c;
            if ((c | 0) != 58) {
              a = 58;
              r = O;
              return a | 0;
            }
            c = k[N >> 2] | 0;
            b = k[c >> 2] | 0;
            k[c >> 2] = b + -1;
            if (!b)
              c = Sh(c) | 0;
            else {
              b = c + 4 | 0;
              c = k[b >> 2] | 0;
              k[b >> 2] = c + 1;
              c = l[c >> 0] | 0;
            }
            k[a >> 2] = c;
            a = 288;
            r = O;
            return a | 0;
          }
        case 95:
          {
            j = k[M >> 2] | 0;
            d = j + 4 | 0;
            h = k[d >> 2] | 0;
            g = j + 8 | 0;
            f = k[g >> 2] | 0;
            do
              if ((h + 1 | 0) >>> 0 > f >>> 0)
                if (f >>> 0 > 2147483646)
                  Jk(a, 1012383, 0);
                else {
                  c = f << 1;
                  o = Kg(k[a + 52 >> 2] | 0, k[j >> 2] | 0, f, c) | 0;
                  k[j >> 2] = o;
                  k[g >> 2] = c;
                  c = k[d >> 2] | 0;
                  break;
                }
              else {
                c = h;
                o = k[j >> 2] | 0;
              }
 while (0);
            J = e & 255;
            k[d >> 2] = c + 1;
            i[o + c >> 0] = J;
            j = k[N >> 2] | 0;
            o = k[j >> 2] | 0;
            k[j >> 2] = o + -1;
            if (!o)
              j = Sh(j) | 0;
            else {
              o = j + 4 | 0;
              j = k[o >> 2] | 0;
              k[o >> 2] = j + 1;
              j = l[j >> 0] | 0;
            }
            k[a >> 2] = j;
            c: do
              if ((j | 0) != (e | 0)) {
                o = a + 52 | 0;
                d: while (1) {
                  e: do
                    switch (j | 0) {
                      case -1:
                        {
                          p = 107;
                          break d;
                        }
                      case 13:
                      case 10:
                        {
                          p = 108;
                          break d;
                        }
                      case 92:
                        {
                          f = k[M >> 2] | 0;
                          d = f + 4 | 0;
                          h = k[d >> 2] | 0;
                          j = f + 8 | 0;
                          g = k[j >> 2] | 0;
                          if ((h + 1 | 0) >>> 0 > g >>> 0) {
                            if (g >>> 0 > 2147483646) {
                              p = 112;
                              break d;
                            }
                            h = g << 1;
                            n = Kg(k[o >> 2] | 0, k[f >> 2] | 0, g, h) | 0;
                            k[f >> 2] = n;
                            k[j >> 2] = h;
                            h = k[d >> 2] | 0;
                            j = n;
                          } else
                            j = k[f >> 2] | 0;
                          k[d >> 2] = h + 1;
                          i[j + h >> 0] = 92;
                          j = k[N >> 2] | 0;
                          n = k[j >> 2] | 0;
                          k[j >> 2] = n + -1;
                          if (!n)
                            c = Sh(j) | 0;
                          else {
                            n = j + 4 | 0;
                            c = k[n >> 2] | 0;
                            k[n >> 2] = c + 1;
                            c = l[c >> 0] | 0;
                          }
                          k[a >> 2] = c;
                          f: do
                            switch (c | 0) {
                              case 122:
                                {
                                  j = (k[M >> 2] | 0) + 4 | 0;
                                  k[j >> 2] = (k[j >> 2] | 0) + -1;
                                  j = k[N >> 2] | 0;
                                  n = k[j >> 2] | 0;
                                  k[j >> 2] = n + -1;
                                  if (!n)
                                    j = Sh(j) | 0;
                                  else {
                                    n = j + 4 | 0;
                                    j = k[n >> 2] | 0;
                                    k[n >> 2] = j + 1;
                                    j = l[j >> 0] | 0;
                                  }
                                  k[a >> 2] = j;
                                  if (i[813362 + (j + 1) >> 0] & 8)
                                    while (1) {
                                      switch (j | 0) {
                                        case 13:
                                        case 10:
                                          {
                                            h = k[N >> 2] | 0;
                                            n = k[h >> 2] | 0;
                                            k[h >> 2] = n + -1;
                                            if (!n)
                                              h = Sh(h) | 0;
                                            else {
                                              n = h + 4 | 0;
                                              h = k[n >> 2] | 0;
                                              k[n >> 2] = h + 1;
                                              h = l[h >> 0] | 0;
                                            }
                                            k[a >> 2] = h;
                                            switch (h | 0) {
                                              case 13:
                                              case 10:
                                                {
                                                  if ((h | 0) != (j | 0)) {
                                                    j = k[N >> 2] | 0;
                                                    n = k[j >> 2] | 0;
                                                    k[j >> 2] = n + -1;
                                                    if (!n)
                                                      j = Sh(j) | 0;
                                                    else {
                                                      n = j + 4 | 0;
                                                      j = k[n >> 2] | 0;
                                                      k[n >> 2] = j + 1;
                                                      j = l[j >> 0] | 0;
                                                    }
                                                    k[a >> 2] = j;
                                                  }
                                                  break;
                                                }
                                              default:
                                                j = h;
                                            }
                                            n = (k[q >> 2] | 0) + 1 | 0;
                                            k[q >> 2] = n;
                                            if ((n | 0) == 2147483647) {
                                              p = 276;
                                              break d;
                                            }
                                            break;
                                          }
                                        default:
                                          {
                                            j = k[N >> 2] | 0;
                                            n = k[j >> 2] | 0;
                                            k[j >> 2] = n + -1;
                                            if (!n)
                                              j = Sh(j) | 0;
                                            else {
                                              n = j + 4 | 0;
                                              j = k[n >> 2] | 0;
                                              k[n >> 2] = j + 1;
                                              j = l[j >> 0] | 0;
                                            }
                                            k[a >> 2] = j;
                                          }
                                      }
                                      if (!(i[813362 + (j + 1) >> 0] & 8))
                                        break f;
                                    }
                                  break;
                                }
                              case 39:
                              case 34:
                              case 92:
                                {
                                  p = 317;
                                  break;
                                }
                              case -1:
                                {
                                  j = -1;
                                  break e;
                                }
                              case 98:
                                {
                                  c = 8;
                                  p = 317;
                                  break;
                                }
                              case 102:
                                {
                                  c = 12;
                                  p = 317;
                                  break;
                                }
                              case 110:
                                {
                                  c = 10;
                                  p = 317;
                                  break;
                                }
                              case 114:
                                {
                                  c = 13;
                                  p = 317;
                                  break;
                                }
                              case 116:
                                {
                                  c = 9;
                                  p = 317;
                                  break;
                                }
                              case 118:
                                {
                                  c = 11;
                                  p = 317;
                                  break;
                                }
                              case 120:
                                {
                                  f = k[M >> 2] | 0;
                                  d = f + 4 | 0;
                                  h = k[d >> 2] | 0;
                                  j = f + 8 | 0;
                                  g = k[j >> 2] | 0;
                                  if ((h + 1 | 0) >>> 0 > g >>> 0) {
                                    if (g >>> 0 > 2147483646) {
                                      p = 128;
                                      break d;
                                    }
                                    h = g << 1;
                                    p = Kg(k[o >> 2] | 0, k[f >> 2] | 0, g, h) | 0;
                                    k[f >> 2] = p;
                                    k[j >> 2] = h;
                                    h = k[d >> 2] | 0;
                                    j = p;
                                  } else
                                    j = k[f >> 2] | 0;
                                  k[d >> 2] = h + 1;
                                  i[j + h >> 0] = 120;
                                  j = k[N >> 2] | 0;
                                  p = k[j >> 2] | 0;
                                  k[j >> 2] = p + -1;
                                  if (!p)
                                    c = Sh(j) | 0;
                                  else {
                                    p = j + 4 | 0;
                                    c = k[p >> 2] | 0;
                                    k[p >> 2] = c + 1;
                                    c = l[c >> 0] | 0;
                                  }
                                  k[a >> 2] = c;
                                  if (!(i[813362 + (c + 1) >> 0] & 16)) {
                                    p = 134;
                                    break d;
                                  }
                                  m = (Pg(c) | 0) << 4;
                                  d = k[a >> 2] | 0;
                                  f = k[M >> 2] | 0;
                                  c = f + 4 | 0;
                                  h = k[c >> 2] | 0;
                                  j = f + 8 | 0;
                                  g = k[j >> 2] | 0;
                                  if ((h + 1 | 0) >>> 0 > g >>> 0) {
                                    if (g >>> 0 > 2147483646) {
                                      p = 148;
                                      break d;
                                    }
                                    h = g << 1;
                                    p = Kg(k[o >> 2] | 0, k[f >> 2] | 0, g, h) | 0;
                                    k[f >> 2] = p;
                                    k[j >> 2] = h;
                                    h = k[c >> 2] | 0;
                                    j = p;
                                  } else
                                    j = k[f >> 2] | 0;
                                  k[c >> 2] = h + 1;
                                  i[j + h >> 0] = d;
                                  j = k[N >> 2] | 0;
                                  p = k[j >> 2] | 0;
                                  k[j >> 2] = p + -1;
                                  if (!p)
                                    c = Sh(j) | 0;
                                  else {
                                    p = j + 4 | 0;
                                    c = k[p >> 2] | 0;
                                    k[p >> 2] = c + 1;
                                    c = l[c >> 0] | 0;
                                  }
                                  k[a >> 2] = c;
                                  if (!(i[813362 + (c + 1) >> 0] & 16)) {
                                    p = 154;
                                    break d;
                                  }
                                  c = (Pg(c) | 0) + m | 0;
                                  p = (k[M >> 2] | 0) + 4 | 0;
                                  k[p >> 2] = (k[p >> 2] | 0) + -2;
                                  p = 317;
                                  break;
                                }
                              case 13:
                              case 10:
                                {
                                  j = k[N >> 2] | 0;
                                  p = k[j >> 2] | 0;
                                  k[j >> 2] = p + -1;
                                  if (!p)
                                    j = Sh(j) | 0;
                                  else {
                                    p = j + 4 | 0;
                                    j = k[p >> 2] | 0;
                                    k[p >> 2] = j + 1;
                                    j = l[j >> 0] | 0;
                                  }
                                  k[a >> 2] = j;
                                  switch (j | 0) {
                                    case 13:
                                    case 10:
                                      {
                                        if ((j | 0) != (c | 0)) {
                                          j = k[N >> 2] | 0;
                                          p = k[j >> 2] | 0;
                                          k[j >> 2] = p + -1;
                                          if (!p)
                                            j = Sh(j) | 0;
                                          else {
                                            p = j + 4 | 0;
                                            j = k[p >> 2] | 0;
                                            k[p >> 2] = j + 1;
                                            j = l[j >> 0] | 0;
                                          }
                                          k[a >> 2] = j;
                                        }
                                        break;
                                      }
                                    default:
                                      {}
                                  }
                                  p = (k[q >> 2] | 0) + 1 | 0;
                                  k[q >> 2] = p;
                                  if ((p | 0) == 2147483647) {
                                    p = 259;
                                    break d;
                                  } else {
                                    c = 10;
                                    p = 321;
                                  }
                                  break;
                                }
                              case 117:
                                {
                                  f = k[M >> 2] | 0;
                                  d = f + 4 | 0;
                                  h = k[d >> 2] | 0;
                                  j = f + 8 | 0;
                                  g = k[j >> 2] | 0;
                                  if ((h + 1 | 0) >>> 0 > g >>> 0) {
                                    if (g >>> 0 > 2147483646) {
                                      p = 169;
                                      break d;
                                    }
                                    h = g << 1;
                                    n = Kg(k[o >> 2] | 0, k[f >> 2] | 0, g, h) | 0;
                                    k[f >> 2] = n;
                                    k[j >> 2] = h;
                                    h = k[d >> 2] | 0;
                                    j = n;
                                  } else
                                    j = k[f >> 2] | 0;
                                  k[d >> 2] = h + 1;
                                  i[j + h >> 0] = 117;
                                  j = k[N >> 2] | 0;
                                  n = k[j >> 2] | 0;
                                  k[j >> 2] = n + -1;
                                  if (!n)
                                    c = Sh(j) | 0;
                                  else {
                                    n = j + 4 | 0;
                                    c = k[n >> 2] | 0;
                                    k[n >> 2] = c + 1;
                                    c = l[c >> 0] | 0;
                                  }
                                  k[a >> 2] = c;
                                  switch (c | 0) {
                                    case -1:
                                      {
                                        p = 184;
                                        break d;
                                      }
                                    case 123:
                                      break;
                                    default:
                                      {
                                        p = 175;
                                        break d;
                                      }
                                  }
                                  f = k[M >> 2] | 0;
                                  d = f + 4 | 0;
                                  h = k[d >> 2] | 0;
                                  j = f + 8 | 0;
                                  g = k[j >> 2] | 0;
                                  if ((h + 1 | 0) >>> 0 > g >>> 0) {
                                    if (g >>> 0 > 2147483646) {
                                      p = 188;
                                      break d;
                                    }
                                    h = g << 1;
                                    n = Kg(k[o >> 2] | 0, k[f >> 2] | 0, g, h) | 0;
                                    k[f >> 2] = n;
                                    k[j >> 2] = h;
                                    h = k[d >> 2] | 0;
                                    j = n;
                                  } else
                                    j = k[f >> 2] | 0;
                                  k[d >> 2] = h + 1;
                                  i[j + h >> 0] = 123;
                                  j = k[N >> 2] | 0;
                                  n = k[j >> 2] | 0;
                                  k[j >> 2] = n + -1;
                                  if (!n)
                                    c = Sh(j) | 0;
                                  else {
                                    n = j + 4 | 0;
                                    c = k[n >> 2] | 0;
                                    k[n >> 2] = c + 1;
                                    c = l[c >> 0] | 0;
                                  }
                                  k[a >> 2] = c;
                                  if (!(i[813362 + (c + 1) >> 0] & 16)) {
                                    p = 194;
                                    break d;
                                  }
                                  g = 4;
                                  h = Pg(c) | 0;
                                  while (1) {
                                    m = k[a >> 2] | 0;
                                    c = k[M >> 2] | 0;
                                    n = c + 4 | 0;
                                    f = k[n >> 2] | 0;
                                    j = c + 8 | 0;
                                    d = k[j >> 2] | 0;
                                    if ((f + 1 | 0) >>> 0 > d >>> 0) {
                                      if (d >>> 0 > 2147483646) {
                                        p = 209;
                                        break d;
                                      }
                                      f = d << 1;
                                      d = Kg(k[o >> 2] | 0, k[c >> 2] | 0, d, f) | 0;
                                      k[c >> 2] = d;
                                      k[j >> 2] = f;
                                      f = k[n >> 2] | 0;
                                      j = d;
                                    } else
                                      j = k[c >> 2] | 0;
                                    k[n >> 2] = f + 1;
                                    i[j + f >> 0] = m;
                                    j = k[N >> 2] | 0;
                                    n = k[j >> 2] | 0;
                                    k[j >> 2] = n + -1;
                                    if (!n)
                                      c = Sh(j) | 0;
                                    else {
                                      n = j + 4 | 0;
                                      c = k[n >> 2] | 0;
                                      k[n >> 2] = c + 1;
                                      c = l[c >> 0] | 0;
                                    }
                                    k[a >> 2] = c;
                                    if (!(i[813362 + (c + 1) >> 0] & 16))
                                      break;
                                    h = (Pg(c) | 0) + (h << 4) | 0;
                                    if (h >>> 0 >= 1114112) {
                                      p = 216;
                                      break d;
                                    } else
                                      g = g + 1 | 0;
                                  }
                                  switch (c | 0) {
                                    case -1:
                                      {
                                        p = 237;
                                        break d;
                                      }
                                    case 125:
                                      break;
                                    default:
                                      {
                                        p = 228;
                                        break d;
                                      }
                                  }
                                  j = k[N >> 2] | 0;
                                  n = k[j >> 2] | 0;
                                  k[j >> 2] = n + -1;
                                  if (!n)
                                    j = Sh(j) | 0;
                                  else {
                                    n = j + 4 | 0;
                                    j = k[n >> 2] | 0;
                                    k[n >> 2] = j + 1;
                                    j = l[j >> 0] | 0;
                                  }
                                  k[a >> 2] = j;
                                  j = (k[M >> 2] | 0) + 4 | 0;
                                  k[j >> 2] = (k[j >> 2] | 0) - g;
                                  j = Rg(s, h) | 0;
                                  if ((j | 0) > 0)
                                    while (1) {
                                      c = i[s + (8 - j) >> 0] | 0;
                                      d = k[M >> 2] | 0;
                                      m = d + 4 | 0;
                                      g = k[m >> 2] | 0;
                                      h = d + 8 | 0;
                                      f = k[h >> 2] | 0;
                                      if ((g + 1 | 0) >>> 0 > f >>> 0) {
                                        if (f >>> 0 > 2147483646) {
                                          p = 245;
                                          break d;
                                        }
                                        g = f << 1;
                                        n = Kg(k[o >> 2] | 0, k[d >> 2] | 0, f, g) | 0;
                                        k[d >> 2] = n;
                                        k[h >> 2] = g;
                                        g = k[m >> 2] | 0;
                                        h = n;
                                      } else
                                        h = k[d >> 2] | 0;
                                      k[m >> 2] = g + 1;
                                      i[h + g >> 0] = c;
                                      if ((j | 0) > 1)
                                        j = j + -1 | 0;
                                      else
                                        break;
                                    }
                                  break;
                                }
                              case 97:
                                {
                                  c = 7;
                                  p = 317;
                                  break;
                                }
                              default:
                                {
                                  if (!(i[813362 + (c + 1) >> 0] & 2)) {
                                    p = 283;
                                    break d;
                                  } else {
                                    h = 0;
                                    j = 0;
                                  }
                                  while (1) {
                                    if (!(i[813362 + (c + 1) >> 0] & 2))
                                      break;
                                    n = c + -48 + (j * 10 | 0) | 0;
                                    d = k[M >> 2] | 0;
                                    m = d + 4 | 0;
                                    g = k[m >> 2] | 0;
                                    j = d + 8 | 0;
                                    f = k[j >> 2] | 0;
                                    if ((g + 1 | 0) >>> 0 > f >>> 0) {
                                      if (f >>> 0 > 2147483646) {
                                        p = 298;
                                        break d;
                                      }
                                      g = f << 1;
                                      p = Kg(k[o >> 2] | 0, k[d >> 2] | 0, f, g) | 0;
                                      k[d >> 2] = p;
                                      k[j >> 2] = g;
                                      g = k[m >> 2] | 0;
                                      j = p;
                                    } else
                                      j = k[d >> 2] | 0;
                                    k[m >> 2] = g + 1;
                                    i[j + g >> 0] = c;
                                    j = k[N >> 2] | 0;
                                    p = k[j >> 2] | 0;
                                    k[j >> 2] = p + -1;
                                    if (!p)
                                      c = Sh(j) | 0;
                                    else {
                                      p = j + 4 | 0;
                                      c = k[p >> 2] | 0;
                                      k[p >> 2] = c + 1;
                                      c = l[c >> 0] | 0;
                                    }
                                    k[a >> 2] = c;
                                    j = h + 1 | 0;
                                    if ((j | 0) < 3) {
                                      h = j;
                                      j = n;
                                    } else {
                                      h = j;
                                      j = n;
                                      break;
                                    }
                                  }
                                  if ((j | 0) >= 256) {
                                    p = 305;
                                    break d;
                                  }
                                  c = (k[M >> 2] | 0) + 4 | 0;
                                  k[c >> 2] = (k[c >> 2] | 0) - h;
                                  c = j;
                                  p = 321;
                                }
                            }
 while (0);
                          if ((p | 0) == 317) {
                            j = k[N >> 2] | 0;
                            p = k[j >> 2] | 0;
                            k[j >> 2] = p + -1;
                            if (!p)
                              j = Sh(j) | 0;
                            else {
                              p = j + 4 | 0;
                              j = k[p >> 2] | 0;
                              k[p >> 2] = j + 1;
                              j = l[j >> 0] | 0;
                            }
                            k[a >> 2] = j;
                            p = 321;
                          }
                          if ((p | 0) == 321) {
                            p = 0;
                            f = k[M >> 2] | 0;
                            d = f + 4 | 0;
                            n = k[d >> 2] | 0;
                            h = n + -1 | 0;
                            k[d >> 2] = h;
                            j = f + 8 | 0;
                            g = k[j >> 2] | 0;
                            if (n >>> 0 > g >>> 0) {
                              if (g >>> 0 > 2147483646) {
                                p = 324;
                                break d;
                              }
                              h = g << 1;
                              n = Kg(k[o >> 2] | 0, k[f >> 2] | 0, g, h) | 0;
                              k[f >> 2] = n;
                              k[j >> 2] = h;
                              h = k[d >> 2] | 0;
                              j = n;
                            } else
                              j = k[f >> 2] | 0;
                            k[d >> 2] = h + 1;
                            i[j + h >> 0] = c;
                          }
                          j = k[a >> 2] | 0;
                          break;
                        }
                      default:
                        {
                          d = k[M >> 2] | 0;
                          c = d + 4 | 0;
                          g = k[c >> 2] | 0;
                          h = d + 8 | 0;
                          f = k[h >> 2] | 0;
                          if ((g + 1 | 0) >>> 0 > f >>> 0) {
                            if (f >>> 0 > 2147483646) {
                              p = 330;
                              break d;
                            }
                            g = f << 1;
                            n = Kg(k[o >> 2] | 0, k[d >> 2] | 0, f, g) | 0;
                            k[d >> 2] = n;
                            k[h >> 2] = g;
                            g = k[c >> 2] | 0;
                            h = n;
                          } else
                            h = k[d >> 2] | 0;
                          k[c >> 2] = g + 1;
                          i[h + g >> 0] = j;
                          j = k[N >> 2] | 0;
                          n = k[j >> 2] | 0;
                          k[j >> 2] = n + -1;
                          if (!n)
                            j = Sh(j) | 0;
                          else {
                            n = j + 4 | 0;
                            j = k[n >> 2] | 0;
                            k[n >> 2] = j + 1;
                            j = l[j >> 0] | 0;
                          }
                          k[a >> 2] = j;
                        }
                    }
 while (0);
                  if ((j | 0) == (e | 0))
                    break c;
                }
                switch (p | 0) {
                  case 107:
                    {
                      Jk(a, 1012408, 289);
                      break;
                    }
                  case 108:
                    {
                      Jk(a, 1012408, 293);
                      break;
                    }
                  case 112:
                    {
                      Jk(a, 1012383, 0);
                      break;
                    }
                  case 128:
                    {
                      Jk(a, 1012383, 0);
                      break;
                    }
                  case 134:
                    {
                      if ((c | 0) == -1)
                        Jk(a, 1012426, 293);
                      h = k[M >> 2] | 0;
                      g = h + 4 | 0;
                      f = k[g >> 2] | 0;
                      e = h + 8 | 0;
                      d = k[e >> 2] | 0;
                      do
                        if ((f + 1 | 0) >>> 0 > d >>> 0)
                          if (d >>> 0 > 2147483646)
                            Jk(a, 1012383, 0);
                          else {
                            t = d << 1;
                            u = Kg(k[o >> 2] | 0, k[h >> 2] | 0, d, t) | 0;
                            k[h >> 2] = u;
                            k[e >> 2] = t;
                            t = k[g >> 2] | 0;
                            break;
                          }
                        else {
                          t = f;
                          u = k[h >> 2] | 0;
                        }
 while (0);
                      k[g >> 2] = t + 1;
                      i[u + t >> 0] = c;
                      g = k[N >> 2] | 0;
                      I = k[g >> 2] | 0;
                      k[g >> 2] = I + -1;
                      if (!I)
                        g = Sh(g) | 0;
                      else {
                        I = g + 4 | 0;
                        g = k[I >> 2] | 0;
                        k[I >> 2] = g + 1;
                        g = l[g >> 0] | 0;
                      }
                      k[a >> 2] = g;
                      Jk(a, 1012426, 293);
                      break;
                    }
                  case 148:
                    {
                      Jk(a, 1012383, 0);
                      break;
                    }
                  case 154:
                    {
                      if ((c | 0) == -1)
                        Jk(a, 1012426, 293);
                      h = k[M >> 2] | 0;
                      g = h + 4 | 0;
                      f = k[g >> 2] | 0;
                      e = h + 8 | 0;
                      d = k[e >> 2] | 0;
                      do
                        if ((f + 1 | 0) >>> 0 > d >>> 0)
                          if (d >>> 0 > 2147483646)
                            Jk(a, 1012383, 0);
                          else {
                            v = d << 1;
                            w = Kg(k[o >> 2] | 0, k[h >> 2] | 0, d, v) | 0;
                            k[h >> 2] = w;
                            k[e >> 2] = v;
                            v = k[g >> 2] | 0;
                            break;
                          }
                        else {
                          v = f;
                          w = k[h >> 2] | 0;
                        }
 while (0);
                      k[g >> 2] = v + 1;
                      i[w + v >> 0] = c;
                      g = k[N >> 2] | 0;
                      I = k[g >> 2] | 0;
                      k[g >> 2] = I + -1;
                      if (!I)
                        g = Sh(g) | 0;
                      else {
                        I = g + 4 | 0;
                        g = k[I >> 2] | 0;
                        k[I >> 2] = g + 1;
                        g = l[g >> 0] | 0;
                      }
                      k[a >> 2] = g;
                      Jk(a, 1012426, 293);
                      break;
                    }
                  case 169:
                    {
                      Jk(a, 1012383, 0);
                      break;
                    }
                  case 175:
                    {
                      h = k[M >> 2] | 0;
                      g = h + 4 | 0;
                      f = k[g >> 2] | 0;
                      e = h + 8 | 0;
                      d = k[e >> 2] | 0;
                      do
                        if ((f + 1 | 0) >>> 0 > d >>> 0)
                          if (d >>> 0 > 2147483646)
                            Jk(a, 1012383, 0);
                          else {
                            x = d << 1;
                            y = Kg(k[o >> 2] | 0, k[h >> 2] | 0, d, x) | 0;
                            k[h >> 2] = y;
                            k[e >> 2] = x;
                            x = k[g >> 2] | 0;
                            break;
                          }
                        else {
                          x = f;
                          y = k[h >> 2] | 0;
                        }
 while (0);
                      k[g >> 2] = x + 1;
                      i[y + x >> 0] = c;
                      g = k[N >> 2] | 0;
                      I = k[g >> 2] | 0;
                      k[g >> 2] = I + -1;
                      if (!I)
                        g = Sh(g) | 0;
                      else {
                        I = g + 4 | 0;
                        g = k[I >> 2] | 0;
                        k[I >> 2] = g + 1;
                        g = l[g >> 0] | 0;
                      }
                      k[a >> 2] = g;
                      Jk(a, 1012453, 293);
                      break;
                    }
                  case 184:
                    {
                      Jk(a, 1012453, 293);
                      break;
                    }
                  case 188:
                    {
                      Jk(a, 1012383, 0);
                      break;
                    }
                  case 194:
                    {
                      if ((c | 0) == -1)
                        Jk(a, 1012426, 293);
                      h = k[M >> 2] | 0;
                      g = h + 4 | 0;
                      f = k[g >> 2] | 0;
                      e = h + 8 | 0;
                      d = k[e >> 2] | 0;
                      do
                        if ((f + 1 | 0) >>> 0 > d >>> 0)
                          if (d >>> 0 > 2147483646)
                            Jk(a, 1012383, 0);
                          else {
                            z = d << 1;
                            A = Kg(k[o >> 2] | 0, k[h >> 2] | 0, d, z) | 0;
                            k[h >> 2] = A;
                            k[e >> 2] = z;
                            z = k[g >> 2] | 0;
                            break;
                          }
                        else {
                          z = f;
                          A = k[h >> 2] | 0;
                        }
 while (0);
                      k[g >> 2] = z + 1;
                      i[A + z >> 0] = c;
                      g = k[N >> 2] | 0;
                      I = k[g >> 2] | 0;
                      k[g >> 2] = I + -1;
                      if (!I)
                        g = Sh(g) | 0;
                      else {
                        I = g + 4 | 0;
                        g = k[I >> 2] | 0;
                        k[I >> 2] = g + 1;
                        g = l[g >> 0] | 0;
                      }
                      k[a >> 2] = g;
                      Jk(a, 1012426, 293);
                      break;
                    }
                  case 209:
                    {
                      Jk(a, 1012383, 0);
                      break;
                    }
                  case 216:
                    {
                      h = k[a >> 2] | 0;
                      if ((h | 0) == -1)
                        Jk(a, 1012465, 293);
                      g = k[M >> 2] | 0;
                      f = g + 4 | 0;
                      e = k[f >> 2] | 0;
                      d = g + 8 | 0;
                      c = k[d >> 2] | 0;
                      do
                        if ((e + 1 | 0) >>> 0 > c >>> 0)
                          if (c >>> 0 > 2147483646)
                            Jk(a, 1012383, 0);
                          else {
                            B = c << 1;
                            C = Kg(k[o >> 2] | 0, k[g >> 2] | 0, c, B) | 0;
                            k[g >> 2] = C;
                            k[d >> 2] = B;
                            B = k[f >> 2] | 0;
                            break;
                          }
                        else {
                          B = e;
                          C = k[g >> 2] | 0;
                        }
 while (0);
                      k[f >> 2] = B + 1;
                      i[C + B >> 0] = h;
                      g = k[N >> 2] | 0;
                      I = k[g >> 2] | 0;
                      k[g >> 2] = I + -1;
                      if (!I)
                        g = Sh(g) | 0;
                      else {
                        I = g + 4 | 0;
                        g = k[I >> 2] | 0;
                        k[I >> 2] = g + 1;
                        g = l[g >> 0] | 0;
                      }
                      k[a >> 2] = g;
                      Jk(a, 1012465, 293);
                      break;
                    }
                  case 228:
                    {
                      h = k[M >> 2] | 0;
                      g = h + 4 | 0;
                      f = k[g >> 2] | 0;
                      e = h + 8 | 0;
                      d = k[e >> 2] | 0;
                      do
                        if ((f + 1 | 0) >>> 0 > d >>> 0)
                          if (d >>> 0 > 2147483646)
                            Jk(a, 1012383, 0);
                          else {
                            D = d << 1;
                            E = Kg(k[o >> 2] | 0, k[h >> 2] | 0, d, D) | 0;
                            k[h >> 2] = E;
                            k[e >> 2] = D;
                            D = k[g >> 2] | 0;
                            break;
                          }
                        else {
                          D = f;
                          E = k[h >> 2] | 0;
                        }
 while (0);
                      k[g >> 2] = D + 1;
                      i[E + D >> 0] = c;
                      g = k[N >> 2] | 0;
                      I = k[g >> 2] | 0;
                      k[g >> 2] = I + -1;
                      if (!I)
                        g = Sh(g) | 0;
                      else {
                        I = g + 4 | 0;
                        g = k[I >> 2] | 0;
                        k[I >> 2] = g + 1;
                        g = l[g >> 0] | 0;
                      }
                      k[a >> 2] = g;
                      Jk(a, 1012487, 293);
                      break;
                    }
                  case 237:
                    {
                      Jk(a, 1012487, 293);
                      break;
                    }
                  case 245:
                    {
                      Jk(a, 1012383, 0);
                      break;
                    }
                  case 259:
                    {
                      Jk(a, 1012328, 0);
                      break;
                    }
                  case 276:
                    {
                      Jk(a, 1012328, 0);
                      break;
                    }
                  case 283:
                    {
                      if ((c | 0) == -1)
                        Jk(a, 1012499, 293);
                      h = k[M >> 2] | 0;
                      g = h + 4 | 0;
                      f = k[g >> 2] | 0;
                      e = h + 8 | 0;
                      d = k[e >> 2] | 0;
                      do
                        if ((f + 1 | 0) >>> 0 > d >>> 0)
                          if (d >>> 0 > 2147483646)
                            Jk(a, 1012383, 0);
                          else {
                            F = d << 1;
                            G = Kg(k[o >> 2] | 0, k[h >> 2] | 0, d, F) | 0;
                            k[h >> 2] = G;
                            k[e >> 2] = F;
                            F = k[g >> 2] | 0;
                            break;
                          }
                        else {
                          F = f;
                          G = k[h >> 2] | 0;
                        }
 while (0);
                      k[g >> 2] = F + 1;
                      i[G + F >> 0] = c;
                      g = k[N >> 2] | 0;
                      I = k[g >> 2] | 0;
                      k[g >> 2] = I + -1;
                      if (!I)
                        g = Sh(g) | 0;
                      else {
                        I = g + 4 | 0;
                        g = k[I >> 2] | 0;
                        k[I >> 2] = g + 1;
                        g = l[g >> 0] | 0;
                      }
                      k[a >> 2] = g;
                      Jk(a, 1012499, 293);
                      break;
                    }
                  case 298:
                    {
                      Jk(a, 1012383, 0);
                      break;
                    }
                  case 305:
                    {
                      if ((c | 0) == -1)
                        Jk(a, 1012523, 293);
                      h = k[M >> 2] | 0;
                      g = h + 4 | 0;
                      f = k[g >> 2] | 0;
                      e = h + 8 | 0;
                      d = k[e >> 2] | 0;
                      do
                        if ((f + 1 | 0) >>> 0 > d >>> 0)
                          if (d >>> 0 > 2147483646)
                            Jk(a, 1012383, 0);
                          else {
                            H = d << 1;
                            I = Kg(k[o >> 2] | 0, k[h >> 2] | 0, d, H) | 0;
                            k[h >> 2] = I;
                            k[e >> 2] = H;
                            H = k[g >> 2] | 0;
                            break;
                          }
                        else {
                          H = f;
                          I = k[h >> 2] | 0;
                        }
 while (0);
                      k[g >> 2] = H + 1;
                      i[I + H >> 0] = c;
                      g = k[N >> 2] | 0;
                      I = k[g >> 2] | 0;
                      k[g >> 2] = I + -1;
                      if (!I)
                        g = Sh(g) | 0;
                      else {
                        I = g + 4 | 0;
                        g = k[I >> 2] | 0;
                        k[I >> 2] = g + 1;
                        g = l[g >> 0] | 0;
                      }
                      k[a >> 2] = g;
                      Jk(a, 1012523, 293);
                      break;
                    }
                  case 324:
                    {
                      Jk(a, 1012383, 0);
                      break;
                    }
                  case 330:
                    {
                      Jk(a, 1012383, 0);
                      break;
                    }
                }
              }
 while (0);
            g = k[M >> 2] | 0;
            f = g + 4 | 0;
            e = k[f >> 2] | 0;
            d = g + 8 | 0;
            c = k[d >> 2] | 0;
            do
              if ((e + 1 | 0) >>> 0 > c >>> 0)
                if (c >>> 0 > 2147483646)
                  Jk(a, 1012383, 0);
                else {
                  K = c << 1;
                  L = Kg(k[a + 52 >> 2] | 0, k[g >> 2] | 0, c, K) | 0;
                  k[g >> 2] = L;
                  k[d >> 2] = K;
                  K = k[f >> 2] | 0;
                  break;
                }
              else {
                K = e;
                L = k[g >> 2] | 0;
              }
 while (0);
            k[f >> 2] = K + 1;
            i[L + K >> 0] = J;
            c = k[N >> 2] | 0;
            N = k[c >> 2] | 0;
            k[c >> 2] = N + -1;
            if (!N)
              c = Sh(c) | 0;
            else {
              N = c + 4 | 0;
              c = k[N >> 2] | 0;
              k[N >> 2] = c + 1;
              c = l[c >> 0] | 0;
            }
            k[a >> 2] = c;
            c = k[M >> 2] | 0;
            f = k[a + 52 >> 2] | 0;
            c = hh(f, (k[c >> 2] | 0) + 1 | 0, (k[c + 4 >> 2] | 0) + -2 | 0) | 0;
            g = f + 8 | 0;
            e = k[g >> 2] | 0;
            k[g >> 2] = e + 16;
            k[e >> 2] = c;
            k[e + 8 >> 2] = l[c + 4 >> 0] | 64;
            e = nh(f, k[a + 64 >> 2] | 0, (k[g >> 2] | 0) + -16 | 0) | 0;
            d = e + 8 | 0;
            if (!(k[d >> 2] | 0)) {
              k[e >> 2] = 1;
              k[d >> 2] = 1;
              if ((k[(k[f + 12 >> 2] | 0) + 12 >> 2] | 0) > 0)
                zg(f);
            } else
              c = k[e + 16 >> 2] | 0;
            k[g >> 2] = (k[g >> 2] | 0) + -16;
            k[b >> 2] = c;
            a = 293;
            r = O;
            return a | 0;
          }
        case 349:
          {
            g = k[M >> 2] | 0;
            f = g + 4 | 0;
            e = k[f >> 2] | 0;
            d = g + 8 | 0;
            c = k[d >> 2] | 0;
            do
              if ((e + 1 | 0) >>> 0 > c >>> 0)
                if (c >>> 0 > 2147483646)
                  Jk(a, 1012383, 0);
                else {
                  n = c << 1;
                  m = Kg(k[a + 52 >> 2] | 0, k[g >> 2] | 0, c, n) | 0;
                  k[g >> 2] = m;
                  k[d >> 2] = n;
                  n = k[f >> 2] | 0;
                  break;
                }
              else {
                n = e;
                m = k[g >> 2] | 0;
              }
 while (0);
            k[f >> 2] = n + 1;
            i[m + n >> 0] = 46;
            c = k[N >> 2] | 0;
            M = k[c >> 2] | 0;
            k[c >> 2] = M + -1;
            if (!M)
              c = Sh(c) | 0;
            else {
              M = c + 4 | 0;
              c = k[M >> 2] | 0;
              k[M >> 2] = c + 1;
              c = l[c >> 0] | 0;
            }
            k[a >> 2] = c;
            if ((c | 0) != 46) {
              if (!(i[813362 + (c + 1) >> 0] & 2)) {
                a = 46;
                r = O;
                return a | 0;
              }
              a = tp(a, b) | 0;
              r = O;
              return a | 0;
            }
            c = k[N >> 2] | 0;
            b = k[c >> 2] | 0;
            k[c >> 2] = b + -1;
            if (!b)
              c = Sh(c) | 0;
            else {
              b = c + 4 | 0;
              c = k[b >> 2] | 0;
              k[b >> 2] = c + 1;
              c = l[c >> 0] | 0;
            }
            k[a >> 2] = c;
            if ((c | 0) != 46) {
              a = 280;
              r = O;
              return a | 0;
            }
            c = k[N >> 2] | 0;
            b = k[c >> 2] | 0;
            k[c >> 2] = b + -1;
            if (!b)
              c = Sh(c) | 0;
            else {
              b = c + 4 | 0;
              c = k[b >> 2] | 0;
              k[b >> 2] = c + 1;
              c = l[c >> 0] | 0;
            }
            k[a >> 2] = c;
            a = 281;
            r = O;
            return a | 0;
          }
        case 368:
          {
            a = tp(a, b) | 0;
            r = O;
            return a | 0;
          }
        case 369:
          {
            if (!(i[813362 + (e + 1) >> 0] & 1)) {
              c = k[N >> 2] | 0;
              b = k[c >> 2] | 0;
              k[c >> 2] = b + -1;
              if (!b)
                c = Sh(c) | 0;
              else {
                b = c + 4 | 0;
                c = k[b >> 2] | 0;
                k[b >> 2] = c + 1;
                c = l[c >> 0] | 0;
              }
              k[a >> 2] = c;
              a = e;
              r = O;
              return a | 0;
            }
            j = a + 52 | 0;
            do {
              c = k[M >> 2] | 0;
              h = c + 4 | 0;
              f = k[h >> 2] | 0;
              g = c + 8 | 0;
              d = k[g >> 2] | 0;
              if ((f + 1 | 0) >>> 0 > d >>> 0) {
                if (d >>> 0 > 2147483646) {
                  p = 374;
                  break;
                }
                f = d << 1;
                L = Kg(k[j >> 2] | 0, k[c >> 2] | 0, d, f) | 0;
                k[c >> 2] = L;
                k[g >> 2] = f;
                f = k[h >> 2] | 0;
                g = L;
              } else
                g = k[c >> 2] | 0;
              k[h >> 2] = f + 1;
              i[g + f >> 0] = e;
              e = k[N >> 2] | 0;
              L = k[e >> 2] | 0;
              k[e >> 2] = L + -1;
              if (!L)
                e = Sh(e) | 0;
              else {
                L = e + 4 | 0;
                e = k[L >> 2] | 0;
                k[L >> 2] = e + 1;
                e = l[e >> 0] | 0;
              }
              k[a >> 2] = e;
            } while ((i[813362 + (e + 1) >> 0] & 3) != 0);
            if ((p | 0) == 374)
              Jk(a, 1012383, 0);
            c = k[M >> 2] | 0;
            f = k[j >> 2] | 0;
            c = hh(f, k[c >> 2] | 0, k[c + 4 >> 2] | 0) | 0;
            g = f + 8 | 0;
            d = k[g >> 2] | 0;
            k[g >> 2] = d + 16;
            k[d >> 2] = c;
            k[d + 8 >> 2] = l[c + 4 >> 0] | 64;
            d = nh(f, k[a + 64 >> 2] | 0, (k[g >> 2] | 0) + -16 | 0) | 0;
            e = d + 8 | 0;
            if (!(k[e >> 2] | 0)) {
              k[d >> 2] = 1;
              k[e >> 2] = 1;
              if ((k[(k[f + 12 >> 2] | 0) + 12 >> 2] | 0) > 0)
                zg(f);
            } else
              c = k[d + 16 >> 2] | 0;
            k[g >> 2] = (k[g >> 2] | 0) + -16;
            k[b >> 2] = c;
            if ((i[c + 4 >> 0] | 0) != 4) {
              a = 292;
              r = O;
              return a | 0;
            }
            c = i[c + 6 >> 0] | 0;
            if (!(c << 24 >> 24)) {
              a = 292;
              r = O;
              return a | 0;
            }
            a = c & 255 | 256;
            r = O;
            return a | 0;
          }
        case 391:
          {
            r = O;
            return c | 0;
          }
      }
      return 0;
    }
    function Lk(a, b, c) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      var d = 0,
          e = 0,
          f = 0,
          g = 0,
          h = 0,
          j = 0,
          m = 0,
          n = 0,
          o = 0,
          p = 0,
          q = 0,
          s = 0,
          t = 0;
      q = r;
      r = r + 32 | 0;
      n = q + 8 | 0;
      m = q;
      o = k[a >> 2] | 0;
      f = o + 12 | 0;
      d = k[f >> 2] | 0;
      p = a + 43 | 0;
      h = l[p >> 0] | 0;
      if ((h + 1 | 0) >>> 0 > 255) {
        j = a + 8 | 0;
        e = k[(k[j >> 2] | 0) + 52 >> 2] | 0;
        g = k[o + 36 >> 2] | 0;
        if (!g) {
          t = 1011891;
          k[n >> 2] = 1012319;
          s = n + 4 | 0;
          k[s >> 2] = 255;
          s = n + 8 | 0;
          k[s >> 2] = t;
          s = Ug(e, 1011905, n) | 0;
          t = k[j >> 2] | 0;
          Dg(t, s);
        }
        k[m >> 2] = g;
        s = Ug(e, 1011871, m) | 0;
        k[n >> 2] = 1012319;
        t = n + 4 | 0;
        k[t >> 2] = 255;
        t = n + 8 | 0;
        k[t >> 2] = s;
        t = Ug(e, 1011905, n) | 0;
        s = k[j >> 2] | 0;
        Dg(s, t);
      }
      if ((h | 0) < (d | 0))
        e = d;
      else {
        e = o + 64 | 0;
        t = Ig(k[(k[a + 8 >> 2] | 0) + 52 >> 2] | 0, k[e >> 2] | 0, f, 8, 255, 1012319) | 0;
        k[e >> 2] = t;
        e = k[f >> 2] | 0;
      }
      f = k[o + 64 >> 2] | 0;
      if ((d | 0) < (e | 0))
        do {
          k[f + (d << 3) >> 2] = 0;
          d = d + 1 | 0;
        } while ((d | 0) < (e | 0));
      d = i[p >> 0] | 0;
      t = d & 255;
      i[f + (t << 3) + 4 >> 0] = (k[c >> 2] | 0) == 8 & 1;
      i[f + (t << 3) + 5 >> 0] = k[c + 8 >> 2];
      k[f + (t << 3) >> 2] = b;
      if (!(i[o + 5 >> 0] & 4)) {
        t = d;
        s = t + 1 << 24 >> 24;
        i[p >> 0] = s;
        t = t & 255;
        r = q;
        return t | 0;
      }
      if (!(i[b + 5 >> 0] & 3)) {
        t = d;
        s = t + 1 << 24 >> 24;
        i[p >> 0] = s;
        t = t & 255;
        r = q;
        return t | 0;
      }
      rg(k[(k[a + 8 >> 2] | 0) + 52 >> 2] | 0, o, b);
      t = i[p >> 0] | 0;
      s = t + 1 << 24 >> 24;
      i[p >> 0] = s;
      t = t & 255;
      r = q;
      return t | 0;
    }
    function Mk(a) {
      a = a | 0;
      var b = 0,
          c = 0,
          d = 0,
          e = 0,
          f = 0,
          g = 0,
          h = 0,
          m = 0,
          n = 0,
          o = 0,
          p = 0,
          q = 0,
          s = 0,
          t = 0,
          u = 0,
          v = 0,
          w = 0,
          x = 0,
          y = 0,
          z = 0,
          A = 0,
          B = 0,
          C = 0,
          D = 0,
          E = 0,
          F = 0;
      E = r;
      r = r + 192 | 0;
      t = E + 168 | 0;
      p = E + 80 | 0;
      v = E;
      o = E + 136 | 0;
      c = E + 152 | 0;
      b = E + 176 | 0;
      e = E + 64 | 0;
      f = E + 128 | 0;
      z = E + 96 | 0;
      s = E + 40 | 0;
      q = E + 16 | 0;
      x = a + 4 | 0;
      A = k[x >> 2] | 0;
      C = a + 48 | 0;
      w = k[C >> 2] | 0;
      D = a + 52 | 0;
      n = (k[D >> 2] | 0) + 106 | 0;
      B = (j[n >> 1] | 0) + 1 << 16 >> 16;
      j[n >> 1] = B;
      if ((B & 65535) > 200) {
        m = w + 8 | 0;
        h = k[(k[m >> 2] | 0) + 52 >> 2] | 0;
        n = k[(k[w >> 2] | 0) + 36 >> 2] | 0;
        if (!n) {
          F = 1011891;
          k[e >> 2] = 1011937;
          B = e + 4 | 0;
          k[B >> 2] = 200;
          B = e + 8 | 0;
          k[B >> 2] = F;
          B = Ug(h, 1011905, e) | 0;
          F = k[m >> 2] | 0;
          Dg(F, B);
        }
        k[f >> 2] = n;
        B = Ug(h, 1011871, f) | 0;
        k[e >> 2] = 1011937;
        F = e + 4 | 0;
        k[F >> 2] = 200;
        F = e + 8 | 0;
        k[F >> 2] = B;
        F = Ug(h, 1011905, e) | 0;
        B = k[m >> 2] | 0;
        Dg(B, F);
      }
      B = a + 16 | 0;
      do
        switch (k[B >> 2] | 0) {
          case 59:
            {
              Gg(a);
              F = k[C >> 2] | 0;
              C = F + 42 | 0;
              C = i[C >> 0] | 0;
              F = F + 44 | 0;
              i[F >> 0] = C;
              F = k[D >> 2] | 0;
              F = F + 106 | 0;
              D = j[F >> 1] | 0;
              D = D + -1 << 16 >> 16;
              j[F >> 1] = D;
              r = E;
              return ;
            }
          case 267:
            {
              k[s >> 2] = -1;
              ep(a, s);
              a: while (1) {
                g = k[B >> 2] | 0;
                switch (g | 0) {
                  case 260:
                    {
                      y = 10;
                      break a;
                    }
                  case 261:
                    break;
                  default:
                    break a;
                }
                ep(a, s);
              }
              if ((y | 0) == 10) {
                Gg(a);
                f = k[C >> 2] | 0;
                i[z + 14 >> 0] = 0;
                i[z + 12 >> 0] = i[f + 42 >> 0] | 0;
                F = k[(k[f + 8 >> 2] | 0) + 68 >> 2] | 0;
                k[z + 4 >> 2] = k[F + 28 >> 2];
                k[z + 8 >> 2] = k[F + 16 >> 2];
                i[z + 13 >> 0] = 0;
                F = f + 12 | 0;
                k[z >> 2] = k[F >> 2];
                k[F >> 2] = z;
                b: do {
                  g = k[B >> 2] | 0;
                  switch (g | 0) {
                    case 277:
                    case 289:
                    case 262:
                    case 261:
                    case 260:
                      break b;
                    default:
                      {}
                  }
                  Mk(a);
                } while ((g | 0) != 274);
                bp(f);
                g = k[B >> 2] | 0;
              }
              if ((g | 0) == 262) {
                Gg(a);
                gf(w, k[s >> 2] | 0);
                F = k[C >> 2] | 0;
                C = F + 42 | 0;
                C = i[C >> 0] | 0;
                F = F + 44 | 0;
                i[F >> 0] = C;
                F = k[D >> 2] | 0;
                F = F + 106 | 0;
                D = j[F >> 1] | 0;
                D = D + -1 << 16 >> 16;
                j[F >> 1] = D;
                r = E;
                return ;
              }
              if ((k[x >> 2] | 0) == (A | 0))
                Nk(a, 262);
              else {
                F = k[D >> 2] | 0;
                D = Cg(a, 262) | 0;
                E = Cg(a, 267) | 0;
                k[b >> 2] = D;
                k[b + 4 >> 2] = E;
                k[b + 8 >> 2] = A;
                Dg(a, Ug(F, 1011946, b) | 0);
              }
              break;
            }
          case 259:
            {
              Gg(a);
              f = k[C >> 2] | 0;
              i[z + 14 >> 0] = 0;
              i[z + 12 >> 0] = i[f + 42 >> 0] | 0;
              F = k[(k[f + 8 >> 2] | 0) + 68 >> 2] | 0;
              k[z + 4 >> 2] = k[F + 28 >> 2];
              k[z + 8 >> 2] = k[F + 16 >> 2];
              i[z + 13 >> 0] = 0;
              F = f + 12 | 0;
              k[z >> 2] = k[F >> 2];
              k[F >> 2] = z;
              c: do {
                d = k[B >> 2] | 0;
                switch (d | 0) {
                  case 277:
                  case 289:
                  case 262:
                  case 261:
                  case 260:
                    break c;
                  default:
                    {}
                }
                Mk(a);
              } while ((d | 0) != 274);
              bp(f);
              if ((k[B >> 2] | 0) == 262) {
                Gg(a);
                F = k[C >> 2] | 0;
                C = F + 42 | 0;
                C = i[C >> 0] | 0;
                F = F + 44 | 0;
                i[F >> 0] = C;
                F = k[D >> 2] | 0;
                F = F + 106 | 0;
                D = j[F >> 1] | 0;
                D = D + -1 << 16 >> 16;
                j[F >> 1] = D;
                r = E;
                return ;
              }
              if ((k[x >> 2] | 0) == (A | 0))
                Nk(a, 262);
              else {
                F = k[D >> 2] | 0;
                D = Cg(a, 262) | 0;
                E = Cg(a, 259) | 0;
                k[o >> 2] = D;
                k[o + 4 >> 2] = E;
                k[o + 8 >> 2] = A;
                Dg(a, Ug(F, 1011946, o) | 0);
              }
              break;
            }
          case 278:
            {
              Gg(a);
              e = ef(w) | 0;
              fp(a, z, 0) | 0;
              if ((k[z >> 2] | 0) == 1)
                k[z >> 2] = 3;
              yf(k[C >> 2] | 0, z);
              d = k[z + 20 >> 2] | 0;
              i[s + 14 >> 0] = 1;
              i[s + 12 >> 0] = i[w + 42 >> 0] | 0;
              F = k[(k[w + 8 >> 2] | 0) + 68 >> 2] | 0;
              k[s + 4 >> 2] = k[F + 28 >> 2];
              k[s + 8 >> 2] = k[F + 16 >> 2];
              i[s + 13 >> 0] = 0;
              F = w + 12 | 0;
              k[s >> 2] = k[F >> 2];
              k[F >> 2] = s;
              if ((k[B >> 2] | 0) != 259)
                Nk(a, 259);
              Gg(a);
              f = k[C >> 2] | 0;
              i[z + 14 >> 0] = 0;
              i[z + 12 >> 0] = i[f + 42 >> 0] | 0;
              F = k[(k[f + 8 >> 2] | 0) + 68 >> 2] | 0;
              k[z + 4 >> 2] = k[F + 28 >> 2];
              k[z + 8 >> 2] = k[F + 16 >> 2];
              i[z + 13 >> 0] = 0;
              F = f + 12 | 0;
              k[z >> 2] = k[F >> 2];
              k[F >> 2] = z;
              d: do {
                g = k[B >> 2] | 0;
                switch (g | 0) {
                  case 277:
                  case 289:
                  case 262:
                  case 261:
                  case 260:
                    break d;
                  default:
                    {}
                }
                Mk(a);
              } while ((g | 0) != 274);
              bp(f);
              ff(w, af(w) | 0, e);
              if ((k[B >> 2] | 0) == 262) {
                Gg(a);
                bp(w);
                gf(w, d);
                F = k[C >> 2] | 0;
                C = F + 42 | 0;
                C = i[C >> 0] | 0;
                F = F + 44 | 0;
                i[F >> 0] = C;
                F = k[D >> 2] | 0;
                F = F + 106 | 0;
                D = j[F >> 1] | 0;
                D = D + -1 << 16 >> 16;
                j[F >> 1] = D;
                r = E;
                return ;
              }
              if ((k[x >> 2] | 0) == (A | 0))
                Nk(a, 262);
              else {
                F = k[D >> 2] | 0;
                D = Cg(a, 262) | 0;
                E = Cg(a, 278) | 0;
                k[c >> 2] = D;
                k[c + 4 >> 2] = E;
                k[c + 8 >> 2] = A;
                Dg(a, Ug(F, 1011946, c) | 0);
              }
              break;
            }
          case 265:
            {
              Gg(a);
              if ((k[B >> 2] | 0) != 292)
                Nk(a, 292);
              g = k[a + 24 >> 2] | 0;
              Gg(a);
              f = k[C >> 2] | 0;
              if (!(ip(f, g, s, 1) | 0)) {
                ip(f, k[a + 76 >> 2] | 0, s, 1) | 0;
                F = mf(k[C >> 2] | 0, g) | 0;
                k[z + 16 >> 2] = -1;
                k[z + 20 >> 2] = -1;
                k[z >> 2] = 4;
                k[z + 8 >> 2] = F;
                Af(f, s, z);
              }
              e: while (1) {
                switch (k[B >> 2] | 0) {
                  case 46:
                    break;
                  case 58:
                    {
                      y = 92;
                      break e;
                    }
                  default:
                    {
                      d = 0;
                      break e;
                    }
                }
                jp(a, s);
              }
              if ((y | 0) == 92) {
                jp(a, s);
                d = 1;
              }
              kp(a, q, d, A);
              wf(k[C >> 2] | 0, s, q);
              Ef(k[C >> 2] | 0, A);
              F = k[C >> 2] | 0;
              C = F + 42 | 0;
              C = i[C >> 0] | 0;
              F = F + 44 | 0;
              i[F >> 0] = C;
              F = k[D >> 2] | 0;
              F = F + 106 | 0;
              D = j[F >> 1] | 0;
              D = D + -1 << 16 >> 16;
              j[F >> 1] = D;
              r = E;
              return ;
            }
          case 264:
            {
              i[s + 14 >> 0] = 1;
              i[s + 12 >> 0] = i[w + 42 >> 0] | 0;
              F = k[(k[w + 8 >> 2] | 0) + 68 >> 2] | 0;
              k[s + 4 >> 2] = k[F + 28 >> 2];
              k[s + 8 >> 2] = k[F + 16 >> 2];
              i[s + 13 >> 0] = 0;
              F = w + 12 | 0;
              k[s >> 2] = k[F >> 2];
              k[F >> 2] = s;
              Gg(a);
              if ((k[B >> 2] | 0) != 292)
                Nk(a, 292);
              d = a + 24 | 0;
              c = k[d >> 2] | 0;
              Gg(a);
              switch (k[B >> 2] | 0) {
                case 268:
                case 44:
                  {
                    o = k[C >> 2] | 0;
                    n = l[o + 44 >> 0] | 0;
                    gp(a, Eg(a, 1012018, 15) | 0);
                    gp(a, Eg(a, 1012034, 11) | 0);
                    gp(a, Eg(a, 1012046, 13) | 0);
                    gp(a, c);
                    f = k[B >> 2] | 0;
                    do
                      if ((f | 0) == 44) {
                        f = 4;
                        while (1) {
                          Gg(a);
                          if ((k[B >> 2] | 0) != 292) {
                            y = 52;
                            break;
                          }
                          e = k[d >> 2] | 0;
                          Gg(a);
                          gp(a, e);
                          e = k[B >> 2] | 0;
                          if ((e | 0) == 44)
                            f = f + 1 | 0;
                          else {
                            g = e;
                            y = 54;
                            break;
                          }
                        }
                        if ((y | 0) == 52)
                          Nk(a, 292);
                        else if ((y | 0) == 54) {
                          u = f + -2 | 0;
                          break;
                        }
                      } else {
                        g = f;
                        u = 1;
                      }
 while (0);
                    if ((g | 0) != 268)
                      Nk(a, 268);
                    Gg(a);
                    d = k[x >> 2] | 0;
                    fp(a, z, 0) | 0;
                    if ((k[B >> 2] | 0) == 44) {
                      g = 1;
                      do {
                        Gg(a);
                        rf(k[C >> 2] | 0, z);
                        fp(a, z, 0) | 0;
                        g = g + 1 | 0;
                      } while ((k[B >> 2] | 0) == 44);
                    } else
                      g = 1;
                    e = k[C >> 2] | 0;
                    f = 3 - g | 0;
                    switch (k[z >> 2] | 0) {
                      case 14:
                      case 13:
                        {
                          g = f + 1 | 0;
                          g = (g | 0) < 0 ? 0 : g;
                          of(e, z, g);
                          if ((g | 0) > 1)
                            lf(e, g + -1 | 0);
                          break;
                        }
                      case 0:
                        {
                          y = 63;
                          break;
                        }
                      default:
                        {
                          rf(e, z);
                          y = 63;
                        }
                    }
                    if ((y | 0) == 63 ? (f | 0) > 0 : 0) {
                      F = l[e + 44 >> 0] | 0;
                      lf(e, f);
                      _e(e, F, f);
                    }
                    kf(o, 3);
                    hp(a, n, d, u, 0);
                    break;
                  }
                case 61:
                  {
                    g = k[C >> 2] | 0;
                    f = g + 44 | 0;
                    e = l[f >> 0] | 0;
                    gp(a, Eg(a, 1011983, 11) | 0);
                    gp(a, Eg(a, 1011995, 11) | 0);
                    gp(a, Eg(a, 1012007, 10) | 0);
                    gp(a, c);
                    if ((k[B >> 2] | 0) != 61)
                      Nk(a, 61);
                    Gg(a);
                    fp(a, z, 0) | 0;
                    rf(k[C >> 2] | 0, z);
                    if ((k[B >> 2] | 0) != 44)
                      Nk(a, 44);
                    Gg(a);
                    fp(a, z, 0) | 0;
                    rf(k[C >> 2] | 0, z);
                    if ((k[B >> 2] | 0) == 44) {
                      Gg(a);
                      fp(a, z, 0) | 0;
                      rf(k[C >> 2] | 0, z);
                    } else {
                      F = l[f >> 0] | 0;
                      jf(g, F, nf(g, 1, 0) | 0) | 0;
                      lf(g, 1);
                    }
                    hp(a, e, A, 1, 1);
                    break;
                  }
                default:
                  Dg(a, 1012060);
              }
              if ((k[B >> 2] | 0) == 262) {
                Gg(a);
                bp(w);
                F = k[C >> 2] | 0;
                C = F + 42 | 0;
                C = i[C >> 0] | 0;
                F = F + 44 | 0;
                i[F >> 0] = C;
                F = k[D >> 2] | 0;
                F = F + 106 | 0;
                D = j[F >> 1] | 0;
                D = D + -1 << 16 >> 16;
                j[F >> 1] = D;
                r = E;
                return ;
              }
              if ((k[x >> 2] | 0) == (A | 0))
                Nk(a, 262);
              else {
                F = k[D >> 2] | 0;
                D = Cg(a, 262) | 0;
                E = Cg(a, 264) | 0;
                k[v >> 2] = D;
                k[v + 4 >> 2] = E;
                k[v + 8 >> 2] = A;
                Dg(a, Ug(F, 1011946, v) | 0);
              }
              break;
            }
          case 273:
            {
              f = ef(w) | 0;
              i[s + 14 >> 0] = 1;
              u = i[w + 42 >> 0] | 0;
              i[s + 12 >> 0] = u;
              c = k[(k[w + 8 >> 2] | 0) + 68 >> 2] | 0;
              v = k[c + 28 >> 2] | 0;
              k[s + 4 >> 2] = v;
              c = k[c + 16 >> 2] | 0;
              k[s + 8 >> 2] = c;
              i[s + 13 >> 0] = 0;
              F = w + 12 | 0;
              k[s >> 2] = k[F >> 2];
              i[q + 14 >> 0] = 0;
              e = q + 12 | 0;
              i[e >> 0] = u;
              k[q + 4 >> 2] = v;
              k[q + 8 >> 2] = c;
              c = q + 13 | 0;
              i[c >> 0] = 0;
              k[q >> 2] = s;
              k[F >> 2] = q;
              Gg(a);
              f: while (1) {
                g = k[B >> 2] | 0;
                switch (g | 0) {
                  case 277:
                  case 289:
                  case 262:
                  case 261:
                  case 260:
                    break f;
                  default:
                    {}
                }
                Mk(a);
                if ((g | 0) == 274) {
                  y = 75;
                  break;
                }
              }
              if ((y | 0) == 75)
                g = k[B >> 2] | 0;
              if ((g | 0) != 277)
                if ((k[x >> 2] | 0) == (A | 0))
                  Nk(a, 277);
                else {
                  F = k[D >> 2] | 0;
                  y = Cg(a, 277) | 0;
                  B = Cg(a, 273) | 0;
                  k[p >> 2] = y;
                  k[p + 4 >> 2] = B;
                  k[p + 8 >> 2] = A;
                  Dg(a, Ug(F, 1011946, p) | 0);
                }
              Gg(a);
              fp(a, z, 0) | 0;
              if ((k[z >> 2] | 0) == 1)
                k[z >> 2] = 3;
              yf(k[C >> 2] | 0, z);
              d = k[z + 20 >> 2] | 0;
              if (i[c >> 0] | 0)
                hf(w, d, l[e >> 0] | 0);
              bp(w);
              ff(w, d, f);
              bp(w);
              F = k[C >> 2] | 0;
              C = F + 42 | 0;
              C = i[C >> 0] | 0;
              F = F + 44 | 0;
              i[F >> 0] = C;
              F = k[D >> 2] | 0;
              F = F + 106 | 0;
              D = j[F >> 1] | 0;
              D = D + -1 << 16 >> 16;
              j[F >> 1] = D;
              r = E;
              return ;
            }
          case 269:
            {
              Gg(a);
              c = k[B >> 2] | 0;
              if ((c | 0) == 265) {
                Gg(a);
                d = k[C >> 2] | 0;
                if ((k[B >> 2] | 0) != 292)
                  Nk(a, 292);
                B = k[a + 24 >> 2] | 0;
                Gg(a);
                gp(a, B);
                B = k[C >> 2] | 0;
                A = B + 42 | 0;
                F = (l[A >> 0] | 0) + 1 | 0;
                i[A >> 0] = F;
                k[(k[(k[B >> 2] | 0) + 60 >> 2] | 0) + ((j[(k[k[(k[B + 8 >> 2] | 0) + 68 >> 2] >> 2] | 0) + ((k[B + 36 >> 2] | 0) + (F & 255) + -1 << 1) >> 1] | 0) * 12 | 0) + 4 >> 2] = k[B + 16 >> 2];
                kp(a, z, 0, k[x >> 2] | 0);
                k[(k[(k[d >> 2] | 0) + 60 >> 2] | 0) + ((j[(k[k[(k[d + 8 >> 2] | 0) + 68 >> 2] >> 2] | 0) + ((k[d + 36 >> 2] | 0) + (k[z + 8 >> 2] | 0) << 1) >> 1] | 0) * 12 | 0) + 4 >> 2] = k[d + 16 >> 2];
                F = k[C >> 2] | 0;
                C = F + 42 | 0;
                C = i[C >> 0] | 0;
                F = F + 44 | 0;
                i[F >> 0] = C;
                F = k[D >> 2] | 0;
                F = F + 106 | 0;
                D = j[F >> 1] | 0;
                D = D + -1 << 16 >> 16;
                j[F >> 1] = D;
                r = E;
                return ;
              }
              if ((c | 0) != 292)
                Nk(a, 292);
              c = a + 24 | 0;
              b = 0;
              g: while (1) {
                F = k[c >> 2] | 0;
                Gg(a);
                gp(a, F);
                b = b + 1 | 0;
                switch (k[B >> 2] | 0) {
                  case 44:
                    break;
                  case 61:
                    {
                      y = 103;
                      break g;
                    }
                  default:
                    {
                      y = 105;
                      break g;
                    }
                }
                Gg(a);
                if ((k[B >> 2] | 0) != 292) {
                  y = 100;
                  break;
                }
              }
              h: do
                if ((y | 0) == 100)
                  Nk(a, 292);
                else if ((y | 0) == 103) {
                  Gg(a);
                  fp(a, z, 0) | 0;
                  if ((k[B >> 2] | 0) == 44) {
                    d = 1;
                    do {
                      Gg(a);
                      rf(k[C >> 2] | 0, z);
                      fp(a, z, 0) | 0;
                      d = d + 1 | 0;
                    } while ((k[B >> 2] | 0) == 44);
                  } else
                    d = 1;
                  c = k[C >> 2] | 0;
                  d = b - d | 0;
                  switch (k[z >> 2] | 0) {
                    case 14:
                    case 13:
                      break;
                    case 0:
                      {
                        y = 110;
                        break h;
                      }
                    default:
                      {
                        rf(c, z);
                        y = 110;
                        break h;
                      }
                  }
                  d = d + 1 | 0;
                  d = (d | 0) < 0 ? 0 : d;
                  of(c, z, d);
                  if ((d | 0) > 1) {
                    lf(c, d + -1 | 0);
                    d = b;
                  } else
                    d = b;
                } else if ((y | 0) == 105) {
                  k[z >> 2] = 0;
                  d = b;
                  c = k[C >> 2] | 0;
                  y = 110;
                }
 while (0);
              if ((y | 0) == 110)
                if ((d | 0) > 0) {
                  F = l[c + 44 >> 0] | 0;
                  lf(c, d);
                  _e(c, F, d);
                  d = b;
                } else
                  d = b;
              b = k[C >> 2] | 0;
              F = b + 42 | 0;
              c = (l[F >> 0] | 0) + d | 0;
              i[F >> 0] = c;
              if (d) {
                g = k[b + 16 >> 2] | 0;
                e = k[(k[b >> 2] | 0) + 60 >> 2] | 0;
                f = k[k[(k[b + 8 >> 2] | 0) + 68 >> 2] >> 2] | 0;
                c = (k[b + 36 >> 2] | 0) + (c & 255) | 0;
                do {
                  k[e + ((j[f + (c - d << 1) >> 1] | 0) * 12 | 0) + 4 >> 2] = g;
                  d = d + -1 | 0;
                } while ((d | 0) != 0);
              }
              F = k[C >> 2] | 0;
              C = F + 42 | 0;
              C = i[C >> 0] | 0;
              F = F + 44 | 0;
              i[F >> 0] = C;
              F = k[D >> 2] | 0;
              F = F + 106 | 0;
              D = j[F >> 1] | 0;
              D = D + -1 << 16 >> 16;
              j[F >> 1] = D;
              r = E;
              return ;
            }
          case 288:
            {
              Gg(a);
              if ((k[B >> 2] | 0) != 292)
                Nk(a, 292);
              b = k[a + 24 >> 2] | 0;
              Gg(a);
              e = k[C >> 2] | 0;
              o = a + 68 | 0;
              c = k[o >> 2] | 0;
              m = c + 24 | 0;
              n = e + 12 | 0;
              g = k[(k[n >> 2] | 0) + 4 >> 2] | 0;
              h = c + 28 | 0;
              f = k[h >> 2] | 0;
              i: do
                if ((g | 0) < (f | 0)) {
                  d = k[m >> 2] | 0;
                  while (1) {
                    if ((k[d + (g << 4) >> 2] | 0) == (b | 0))
                      break;
                    g = g + 1 | 0;
                    if ((g | 0) >= (f | 0))
                      break i;
                  }
                  z = e + 8 | 0;
                  F = k[(k[z >> 2] | 0) + 52 >> 2] | 0;
                  y = k[d + (g << 4) + 8 >> 2] | 0;
                  k[t >> 2] = b + 24;
                  k[t + 4 >> 2] = y;
                  F = Ug(F, 1012081, t) | 0;
                  dp(k[z >> 2] | 0, F);
                }
 while (0);
              if ((k[B >> 2] | 0) != 288)
                Nk(a, 288);
              Gg(a);
              f = k[e + 16 >> 2] | 0;
              e = k[h >> 2] | 0;
              g = c + 32 | 0;
              if ((e | 0) < (k[g >> 2] | 0))
                g = k[m >> 2] | 0;
              else {
                g = Ig(k[D >> 2] | 0, k[m >> 2] | 0, g, 16, 32767, 1011712) | 0;
                k[m >> 2] = g;
              }
              k[g + (e << 4) >> 2] = b;
              k[g + (e << 4) + 8 >> 2] = A;
              i[g + (e << 4) + 12 >> 0] = i[(k[C >> 2] | 0) + 42 >> 0] | 0;
              k[g + (e << 4) + 4 >> 2] = f;
              k[h >> 2] = e + 1;
              j: while (1) {
                switch (k[B >> 2] | 0) {
                  case 288:
                  case 59:
                    break;
                  case 289:
                  case 262:
                  case 261:
                  case 260:
                    {
                      y = 132;
                      break j;
                    }
                  default:
                    {
                      y = 131;
                      break j;
                    }
                }
                Mk(a);
              }
              if ((y | 0) == 131)
                d = k[m >> 2] | 0;
              else if ((y | 0) == 132) {
                d = k[m >> 2] | 0;
                i[d + (e << 4) + 12 >> 0] = i[(k[n >> 2] | 0) + 12 >> 0] | 0;
              }
              b = d + (e << 4) | 0;
              d = k[o >> 2] | 0;
              g = k[(k[(k[C >> 2] | 0) + 12 >> 2] | 0) + 8 >> 2] | 0;
              e = d + 16 | 0;
              c = k[e >> 2] | 0;
              if ((g | 0) >= (c | 0)) {
                F = k[C >> 2] | 0;
                C = F + 42 | 0;
                C = i[C >> 0] | 0;
                F = F + 44 | 0;
                i[F >> 0] = C;
                F = k[D >> 2] | 0;
                F = F + 106 | 0;
                D = j[F >> 1] | 0;
                D = D + -1 << 16 >> 16;
                j[F >> 1] = D;
                r = E;
                return ;
              }
              f = d + 12 | 0;
              d = c;
              c = g;
              k: while (1) {
                while (1) {
                  if ((k[(k[f >> 2] | 0) + (c << 4) >> 2] | 0) != (k[b >> 2] | 0))
                    break;
                  cp(a, c, b);
                  d = k[e >> 2] | 0;
                  if ((c | 0) >= (d | 0)) {
                    y = 159;
                    break k;
                  }
                }
                c = c + 1 | 0;
                if ((c | 0) >= (d | 0)) {
                  y = 159;
                  break;
                }
              }
              if ((y | 0) == 159) {
                F = k[C >> 2] | 0;
                C = F + 42 | 0;
                C = i[C >> 0] | 0;
                F = F + 44 | 0;
                i[F >> 0] = C;
                F = k[D >> 2] | 0;
                F = F + 106 | 0;
                D = j[F >> 1] | 0;
                D = D + -1 << 16 >> 16;
                j[F >> 1] = D;
                r = E;
                return ;
              }
              break;
            }
          case 274:
            {
              Gg(a);
              g = k[C >> 2] | 0;
              l: do
                switch (k[B >> 2] | 0) {
                  case 59:
                  case 277:
                  case 289:
                  case 262:
                  case 261:
                  case 260:
                    {
                      c = 0;
                      d = 0;
                      break;
                    }
                  default:
                    {
                      fp(a, z, 0) | 0;
                      if ((k[B >> 2] | 0) == 44) {
                        d = 1;
                        do {
                          Gg(a);
                          rf(k[C >> 2] | 0, z);
                          fp(a, z, 0) | 0;
                          d = d + 1 | 0;
                        } while ((k[B >> 2] | 0) == 44);
                      } else
                        d = 1;
                      if (((k[z >> 2] | 0) + -13 | 0) >>> 0 >= 2)
                        if ((d | 0) == 1) {
                          c = sf(g, z) | 0;
                          d = 1;
                          break l;
                        } else {
                          rf(g, z);
                          c = l[g + 42 >> 0] | 0;
                          break l;
                        }
                      else {
                        of(g, z, -1);
                        if ((d | 0) == 1 & (k[z >> 2] | 0) == 13) {
                          F = (k[(k[g >> 2] | 0) + 48 >> 2] | 0) + (k[z + 8 >> 2] << 2) | 0;
                          k[F >> 2] = k[F >> 2] & -64 | 37;
                        }
                        c = l[g + 42 >> 0] | 0;
                        d = -1;
                        break l;
                      }
                    }
                }
 while (0);
              df(g, c, d);
              if ((k[B >> 2] | 0) == 59)
                Gg(a);
              F = k[C >> 2] | 0;
              C = F + 42 | 0;
              C = i[C >> 0] | 0;
              F = F + 44 | 0;
              i[F >> 0] = C;
              F = k[D >> 2] | 0;
              F = F + 106 | 0;
              D = j[F >> 1] | 0;
              D = D + -1 << 16 >> 16;
              j[F >> 1] = D;
              r = E;
              return ;
            }
          case 266:
          case 258:
            {
              lp(a, af(w) | 0);
              F = k[C >> 2] | 0;
              C = F + 42 | 0;
              C = i[C >> 0] | 0;
              F = F + 44 | 0;
              i[F >> 0] = C;
              F = k[D >> 2] | 0;
              F = F + 106 | 0;
              D = j[F >> 1] | 0;
              D = D + -1 << 16 >> 16;
              j[F >> 1] = D;
              r = E;
              return ;
            }
          default:
            {
              d = z + 8 | 0;
              mp(a, d);
              m: do
                switch (k[B >> 2] | 0) {
                  case 44:
                  case 61:
                    {
                      k[z >> 2] = 0;
                      np(a, z, 1);
                      break;
                    }
                  default:
                    if ((k[d >> 2] | 0) == 13) {
                      F = (k[(k[w >> 2] | 0) + 48 >> 2] | 0) + (k[z + 16 >> 2] << 2) | 0;
                      k[F >> 2] = k[F >> 2] & -8372225 | 16384;
                      break m;
                    } else
                      Dg(a, 1012119);
                }
 while (0);
              F = k[C >> 2] | 0;
              C = F + 42 | 0;
              C = i[C >> 0] | 0;
              F = F + 44 | 0;
              i[F >> 0] = C;
              F = k[D >> 2] | 0;
              F = F + 106 | 0;
              D = j[F >> 1] | 0;
              D = D + -1 << 16 >> 16;
              j[F >> 1] = D;
              r = E;
              return ;
            }
        }
 while (0);
    }
    function Nk(a, b) {
      a = a | 0;
      b = b | 0;
      var c = 0,
          d = 0;
      c = r;
      r = r + 16 | 0;
      d = k[a + 52 >> 2] | 0;
      b = Cg(a, b) | 0;
      k[c >> 2] = b;
      Dg(a, Ug(d, 1011859, c) | 0);
    }
    function Ok(a) {
      a = a | 0;
      var b = 0,
          c = 0,
          d = 0,
          e = 0,
          f = 0,
          g = 0,
          h = 0;
      g = k[a + 52 >> 2] | 0;
      d = a + 48 | 0;
      e = k[d >> 2] | 0;
      f = k[e >> 2] | 0;
      df(e, 0, 0);
      bp(e);
      c = e + 16 | 0;
      b = k[c >> 2] | 0;
      if ((b + 1 | 0) >>> 0 > 1073741823)
        Jg(g);
      a = f + 48 | 0;
      h = f + 20 | 0;
      b = Kg(g, k[a >> 2] | 0, k[h >> 2] << 2, b << 2) | 0;
      k[a >> 2] = b;
      a = k[c >> 2] | 0;
      k[h >> 2] = a;
      if ((a + 1 | 0) >>> 0 > 1073741823)
        Jg(g);
      h = f + 56 | 0;
      b = f + 24 | 0;
      a = Kg(g, k[h >> 2] | 0, k[b >> 2] << 2, a << 2) | 0;
      k[h >> 2] = a;
      k[b >> 2] = k[c >> 2];
      a = e + 28 | 0;
      b = k[a >> 2] | 0;
      if ((b + 1 | 0) >>> 0 > 268435455)
        Jg(g);
      c = f + 44 | 0;
      h = f + 16 | 0;
      b = Kg(g, k[c >> 2] | 0, k[h >> 2] << 4, b << 4) | 0;
      k[c >> 2] = b;
      k[h >> 2] = k[a >> 2];
      b = e + 32 | 0;
      a = k[b >> 2] | 0;
      if ((a + 1 | 0) >>> 0 > 1073741823)
        Jg(g);
      h = f + 52 | 0;
      c = f + 28 | 0;
      a = Kg(g, k[h >> 2] | 0, k[c >> 2] << 2, a << 2) | 0;
      k[h >> 2] = a;
      k[c >> 2] = k[b >> 2];
      b = f + 60 | 0;
      c = f + 32 | 0;
      h = e + 40 | 0;
      a = Kg(g, k[b >> 2] | 0, (k[c >> 2] | 0) * 12 | 0, (j[h >> 1] | 0) * 12 | 0) | 0;
      k[b >> 2] = a;
      k[c >> 2] = j[h >> 1];
      c = f + 64 | 0;
      h = f + 12 | 0;
      f = e + 43 | 0;
      b = Kg(g, k[c >> 2] | 0, k[h >> 2] << 3, l[f >> 0] << 3) | 0;
      k[c >> 2] = b;
      k[h >> 2] = l[f >> 0];
      k[d >> 2] = k[e + 4 >> 2];
      if ((k[(k[g + 12 >> 2] | 0) + 12 >> 2] | 0) <= 0)
        return ;
      zg(g);
      return ;
    }
    function Pk(a, b) {
      a = a | 0;
      b = b | 0;
      var c = 0,
          d = 0,
          e = 0,
          f = 0,
          g = 0;
      b = r;
      r = r + 16 | 0;
      d = b;
      c = k[a + 12 >> 2] | 0;
      f = Kg(a, 0, 0, 640) | 0;
      k[a + 28 >> 2] = f;
      k[a + 92 >> 2] = 40;
      g = f + 8 | 0;
      k[g >> 2] = 0;
      k[f + 24 >> 2] = 0;
      k[f + 40 >> 2] = 0;
      k[f + 56 >> 2] = 0;
      k[f + 72 >> 2] = 0;
      k[f + 88 >> 2] = 0;
      k[f + 104 >> 2] = 0;
      k[f + 120 >> 2] = 0;
      k[f + 136 >> 2] = 0;
      k[f + 152 >> 2] = 0;
      k[f + 168 >> 2] = 0;
      k[f + 184 >> 2] = 0;
      k[f + 200 >> 2] = 0;
      k[f + 216 >> 2] = 0;
      k[f + 232 >> 2] = 0;
      k[f + 248 >> 2] = 0;
      k[f + 264 >> 2] = 0;
      k[f + 280 >> 2] = 0;
      k[f + 296 >> 2] = 0;
      k[f + 312 >> 2] = 0;
      k[f + 328 >> 2] = 0;
      k[f + 344 >> 2] = 0;
      k[f + 360 >> 2] = 0;
      k[f + 376 >> 2] = 0;
      k[f + 392 >> 2] = 0;
      k[f + 408 >> 2] = 0;
      k[f + 424 >> 2] = 0;
      k[f + 440 >> 2] = 0;
      k[f + 456 >> 2] = 0;
      k[f + 472 >> 2] = 0;
      k[f + 488 >> 2] = 0;
      k[f + 504 >> 2] = 0;
      k[f + 520 >> 2] = 0;
      k[f + 536 >> 2] = 0;
      k[f + 552 >> 2] = 0;
      k[f + 568 >> 2] = 0;
      k[f + 584 >> 2] = 0;
      k[f + 600 >> 2] = 0;
      k[f + 616 >> 2] = 0;
      k[f + 632 >> 2] = 0;
      k[a + 24 >> 2] = f + 560;
      e = a + 48 | 0;
      k[a + 56 >> 2] = 0;
      k[a + 60 >> 2] = 0;
      i[a + 82 >> 0] = 0;
      k[e >> 2] = f;
      k[a + 8 >> 2] = f + 16;
      k[g >> 2] = 0;
      k[a + 52 >> 2] = f + 336;
      k[a + 16 >> 2] = e;
      e = ph(a) | 0;
      k[c + 40 >> 2] = e;
      k[c + 48 >> 2] = 69;
      lh(a, e, 2, 0);
      k[d >> 2] = a;
      f = d + 8 | 0;
      k[f >> 2] = 72;
      mh(a, e, 1, 0, d);
      g = ph(a) | 0;
      k[d >> 2] = g;
      k[f >> 2] = 69;
      mh(a, e, 2, 0, d);
      fh(a, 64);
      wh(a);
      Bg(a);
      d = hh(a, 1011694, 17) | 0;
      k[c + 144 >> 2] = d;
      ug(a, d);
      i[c + 63 >> 0] = 1;
      a = Md(0) | 0;
      k[c + 140 >> 2] = a;
      r = b;
      return ;
    }
    function Qk(a) {
      a = a | 0;
      var b = 0,
          c = 0,
          d = 0,
          e = 0,
          f = 0;
      c = a + 12 | 0;
      e = k[c >> 2] | 0;
      d = a + 28 | 0;
      ng(a, k[d >> 2] | 0);
      yg(a);
      c = k[c >> 2] | 0;
      Kg(a, k[c + 24 >> 2] | 0, k[c + 32 >> 2] << 2, 0) | 0;
      c = e + 108 | 0;
      b = e + 116 | 0;
      f = Kg(a, k[c >> 2] | 0, k[b >> 2] | 0, 0) | 0;
      k[c >> 2] = f;
      k[b >> 2] = 0;
      b = k[d >> 2] | 0;
      if (!b) {
        d = k[e >> 2] | 0;
        e = e + 4 | 0;
        e = k[e >> 2] | 0;
        f = a + -4 | 0;
        qd[d & 63](e, f, 400, 0) | 0;
        return ;
      }
      k[a + 16 >> 2] = a + 48;
      f = a + 60 | 0;
      c = k[f >> 2] | 0;
      k[f >> 2] = 0;
      if (c) {
        b = c;
        do {
          f = b;
          b = k[b + 12 >> 2] | 0;
          Kg(a, f, 36, 0) | 0;
        } while ((b | 0) != 0);
        b = k[d >> 2] | 0;
      }
      Kg(a, b, k[a + 92 >> 2] << 4, 0) | 0;
      d = k[e >> 2] | 0;
      e = e + 4 | 0;
      e = k[e >> 2] | 0;
      f = a + -4 | 0;
      qd[d & 63](e, f, 400, 0) | 0;
      return ;
    }
    function Rk(a, b) {
      a = a | 0;
      b = b | 0;
      var c = 0,
          d = 0,
          e = 0,
          f = 0;
      e = r;
      r = r + 16 | 0;
      d = e;
      switch (k[b + 8 >> 2] & 63 | 0) {
        case 1:
          {
            a = (k[a + 16 >> 2] | 0) + (((1 << l[a + 7 >> 0]) + -1 & k[b >> 2]) << 5) | 0;
            r = e;
            return a | 0;
          }
        case 3:
          {
            c = ~~(+Kq(+p[b >> 3], d) * 2147482623.0) + (k[d >> 2] | 0) | 0;
            k[d >> 2] = c;
            if ((c | 0) < 0) {
              if ((c | 0) == (0 - c | 0)) {
                k[d >> 2] = 0;
                c = 0;
              }
              c = 0 - c | 0;
              k[d >> 2] = c;
            }
            a = (k[a + 16 >> 2] | 0) + (((c | 0) % ((1 << l[a + 7 >> 0]) + -1 | 1 | 0) | 0) << 5) | 0;
            r = e;
            return a | 0;
          }
        case 2:
          {
            a = (k[a + 16 >> 2] | 0) + ((((k[b >> 2] | 0) >>> 0) % (((1 << l[a + 7 >> 0]) + -1 | 1) >>> 0) | 0) << 5) | 0;
            r = e;
            return a | 0;
          }
        case 4:
          {
            a = (k[a + 16 >> 2] | 0) + (((1 << l[a + 7 >> 0]) + -1 & k[(k[b >> 2] | 0) + 8 >> 2]) << 5) | 0;
            r = e;
            return a | 0;
          }
        case 19:
          {
            a = (k[a + 16 >> 2] | 0) + (((1 << l[a + 7 >> 0]) + -1 & k[b >> 2]) << 5) | 0;
            r = e;
            return a | 0;
          }
        case 20:
          {
            c = k[b >> 2] | 0;
            d = c + 6 | 0;
            if (!(i[d >> 0] | 0)) {
              f = c + 8 | 0;
              c = eh(c + 24 | 0, k[c + 12 >> 2] | 0, k[f >> 2] | 0) | 0;
              k[f >> 2] = c;
              i[d >> 0] = 1;
              c = k[b >> 2] | 0;
            }
            f = (k[a + 16 >> 2] | 0) + (((1 << l[a + 7 >> 0]) + -1 & k[c + 8 >> 2]) << 5) | 0;
            r = e;
            return f | 0;
          }
        case 22:
          {
            f = (k[a + 16 >> 2] | 0) + ((((k[b >> 2] | 0) >>> 0) % (((1 << l[a + 7 >> 0]) + -1 | 1) >>> 0) | 0) << 5) | 0;
            r = e;
            return f | 0;
          }
        default:
          {
            f = (k[a + 16 >> 2] | 0) + ((((k[b >> 2] | 0) >>> 0) % (((1 << l[a + 7 >> 0]) + -1 | 1) >>> 0) | 0) << 5) | 0;
            r = e;
            return f | 0;
          }
      }
      return 0;
    }
    function Sk(a, b) {
      a = a | 0;
      b = b | 0;
      var c = 0,
          d = 0;
      c = r;
      r = r + 16 | 0;
      d = k[a >> 2] | 0;
      k[c >> 2] = k[a + 12 >> 2];
      k[c + 4 >> 2] = b;
      Ug(d, 1011513, c) | 0;
      Wf(k[a >> 2] | 0, 3);
    }
    function Tk(a, b, c) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      var d = 0,
          e = 0,
          f = 0,
          g = 0,
          h = 0,
          j = 0,
          m = 0,
          n = 0,
          o = 0,
          q = 0;
      q = r;
      r = r + 16 | 0;
      o = q;
      n = ap(a) | 0;
      m = b + 72 | 0;
      k[m >> 2] = (n | 0) == 0 ? c : n;
      n = a + 4 | 0;
      if (Uh(k[n >> 2] | 0, o, 4) | 0)
        Sk(a, 1000282);
      k[b + 36 >> 2] = k[o >> 2];
      if (Uh(k[n >> 2] | 0, o, 4) | 0)
        Sk(a, 1000282);
      k[b + 40 >> 2] = k[o >> 2];
      if (Uh(k[n >> 2] | 0, o, 1) | 0)
        Sk(a, 1000282);
      i[b + 6 >> 0] = i[o >> 0] | 0;
      if (Uh(k[n >> 2] | 0, o, 1) | 0)
        Sk(a, 1000282);
      i[b + 7 >> 0] = i[o >> 0] | 0;
      if (Uh(k[n >> 2] | 0, o, 1) | 0)
        Sk(a, 1000282);
      i[b + 8 >> 0] = i[o >> 0] | 0;
      if (Uh(k[n >> 2] | 0, o, 4) | 0)
        Sk(a, 1000282);
      e = k[o >> 2] | 0;
      c = k[a >> 2] | 0;
      if ((e + 1 | 0) >>> 0 > 1073741823)
        Jg(c);
      g = e << 2;
      c = Kg(c, 0, 0, g) | 0;
      k[b + 48 >> 2] = c;
      k[b + 20 >> 2] = e;
      if (Uh(k[n >> 2] | 0, c, g) | 0)
        Sk(a, 1000282);
      if (Uh(k[n >> 2] | 0, o, 4) | 0)
        Sk(a, 1000282);
      g = k[o >> 2] | 0;
      e = k[a >> 2] | 0;
      if ((g + 1 | 0) >>> 0 > 268435455)
        Jg(e);
      e = Kg(e, 0, 0, g << 4) | 0;
      d = b + 44 | 0;
      k[d >> 2] = e;
      k[b + 16 >> 2] = g;
      a: do
        if ((g | 0) > 0) {
          c = 0;
          do {
            k[e + (c << 4) + 8 >> 2] = 0;
            c = c + 1 | 0;
          } while ((c | 0) != (g | 0));
          if (!(Uh(k[n >> 2] | 0, o, 1) | 0)) {
            j = e;
            h = e;
            f = 0;
          } else
            Sk(a, 1000282);
          b: while (1) {
            switch (l[o >> 0] | 0 | 0) {
              case 3:
                {
                  if (Uh(k[n >> 2] | 0, o, 8) | 0) {
                    c = 31;
                    break b;
                  }
                  p[h >> 3] = +p[o >> 3];
                  k[j + (f << 4) + 8 >> 2] = 3;
                  break;
                }
              case 0:
                {
                  k[j + (f << 4) + 8 >> 2] = 0;
                  break;
                }
              case 1:
                {
                  if (Uh(k[n >> 2] | 0, o, 1) | 0) {
                    c = 28;
                    break b;
                  }
                  k[h >> 2] = l[o >> 0];
                  k[j + (f << 4) + 8 >> 2] = 1;
                  break;
                }
              case 20:
              case 4:
                {
                  e = ap(a) | 0;
                  k[h >> 2] = e;
                  k[j + (f << 4) + 8 >> 2] = l[e + 4 >> 0] | 0 | 64;
                  break;
                }
              case 19:
                {
                  if (Uh(k[n >> 2] | 0, o, 8) | 0) {
                    c = 34;
                    break b;
                  }
                  c = o;
                  e = k[c + 4 >> 2] | 0;
                  k[h >> 2] = k[c >> 2];
                  k[h + 4 >> 2] = e;
                  k[j + (f << 4) + 8 >> 2] = 19;
                  break;
                }
              default:
                {}
            }
            f = f + 1 | 0;
            if ((f | 0) >= (g | 0))
              break a;
            c = k[d >> 2] | 0;
            if (!(Uh(k[n >> 2] | 0, o, 1) | 0)) {
              j = c;
              h = c + (f << 4) | 0;
            } else {
              c = 24;
              break;
            }
          }
          if ((c | 0) == 24)
            Sk(a, 1000282);
          else if ((c | 0) == 28)
            Sk(a, 1000282);
          else if ((c | 0) == 31)
            Sk(a, 1000282);
          else if ((c | 0) == 34)
            Sk(a, 1000282);
        }
 while (0);
      if (Uh(k[n >> 2] | 0, o, 4) | 0)
        Sk(a, 1000282);
      e = k[o >> 2] | 0;
      c = k[a >> 2] | 0;
      if ((e + 1 | 0) >>> 0 > 536870911)
        Jg(c);
      c = Kg(c, 0, 0, e << 3) | 0;
      j = b + 64 | 0;
      k[j >> 2] = c;
      k[b + 12 >> 2] = e;
      c: do
        if ((e | 0) > 0) {
          d = 0;
          do {
            k[c + (d << 3) >> 2] = 0;
            d = d + 1 | 0;
          } while ((d | 0) != (e | 0));
          c = 0;
          while (1) {
            if (Uh(k[n >> 2] | 0, o, 1) | 0) {
              c = 46;
              break;
            }
            i[(k[j >> 2] | 0) + (c << 3) + 4 >> 0] = i[o >> 0] | 0;
            if (Uh(k[n >> 2] | 0, o, 1) | 0) {
              c = 48;
              break;
            }
            i[(k[j >> 2] | 0) + (c << 3) + 5 >> 0] = i[o >> 0] | 0;
            c = c + 1 | 0;
            if ((c | 0) >= (e | 0))
              break c;
          }
          if ((c | 0) == 46)
            Sk(a, 1000282);
          else if ((c | 0) == 48)
            Sk(a, 1000282);
        }
 while (0);
      if (Uh(k[n >> 2] | 0, o, 4) | 0)
        Sk(a, 1000282);
      d = k[o >> 2] | 0;
      c = k[a >> 2] | 0;
      if ((d + 1 | 0) >>> 0 > 1073741823)
        Jg(c);
      c = Kg(c, 0, 0, d << 2) | 0;
      f = b + 52 | 0;
      k[f >> 2] = c;
      k[b + 28 >> 2] = d;
      e = (d | 0) > 0;
      if (e) {
        k[c >> 2] = 0;
        if ((d | 0) != 1) {
          c = 1;
          do {
            k[(k[f >> 2] | 0) + (c << 2) >> 2] = 0;
            c = c + 1 | 0;
          } while ((c | 0) != (d | 0));
        }
        if (e) {
          c = 0;
          do {
            h = og(k[a >> 2] | 0) | 0;
            k[(k[f >> 2] | 0) + (c << 2) >> 2] = h;
            Tk(a, k[(k[f >> 2] | 0) + (c << 2) >> 2] | 0, k[m >> 2] | 0);
            c = c + 1 | 0;
          } while ((c | 0) != (d | 0));
        }
      }
      if (Uh(k[n >> 2] | 0, o, 4) | 0)
        Sk(a, 1000282);
      c = k[o >> 2] | 0;
      d = k[a >> 2] | 0;
      if ((c + 1 | 0) >>> 0 > 1073741823)
        Jg(d);
      m = c << 2;
      h = Kg(d, 0, 0, m) | 0;
      k[b + 56 >> 2] = h;
      k[b + 24 >> 2] = c;
      if (Uh(k[n >> 2] | 0, h, m) | 0)
        Sk(a, 1000282);
      if (Uh(k[n >> 2] | 0, o, 4) | 0)
        Sk(a, 1000282);
      f = k[o >> 2] | 0;
      c = k[a >> 2] | 0;
      if ((f + 1 | 0) >>> 0 > 357913941)
        Jg(c);
      d = Kg(c, 0, 0, f * 12 | 0) | 0;
      e = b + 60 | 0;
      k[e >> 2] = d;
      k[b + 32 >> 2] = f;
      d: do
        if ((f | 0) > 0) {
          c = 0;
          do {
            k[d + (c * 12 | 0) >> 2] = 0;
            c = c + 1 | 0;
          } while ((c | 0) != (f | 0));
          c = 0;
          while (1) {
            b = ap(a) | 0;
            k[(k[e >> 2] | 0) + (c * 12 | 0) >> 2] = b;
            if (Uh(k[n >> 2] | 0, o, 4) | 0) {
              c = 73;
              break;
            }
            k[(k[e >> 2] | 0) + (c * 12 | 0) + 4 >> 2] = k[o >> 2];
            if (Uh(k[n >> 2] | 0, o, 4) | 0) {
              c = 75;
              break;
            }
            k[(k[e >> 2] | 0) + (c * 12 | 0) + 8 >> 2] = k[o >> 2];
            c = c + 1 | 0;
            if ((c | 0) >= (f | 0))
              break d;
          }
          if ((c | 0) == 73)
            Sk(a, 1000282);
          else if ((c | 0) == 75)
            Sk(a, 1000282);
        }
 while (0);
      if (Uh(k[n >> 2] | 0, o, 4) | 0)
        Sk(a, 1000282);
      d = k[o >> 2] | 0;
      if ((d | 0) > 0)
        c = 0;
      else {
        r = q;
        return ;
      }
      do {
        o = ap(a) | 0;
        k[(k[j >> 2] | 0) + (c << 3) >> 2] = o;
        c = c + 1 | 0;
      } while ((c | 0) != (d | 0));
      r = q;
      return ;
    }
    function Uk(a, b) {
      a = a | 0;
      b = b | 0;
      var c = 0,
          d = 0;
      c = Od(a) | 0;
      Nf(a, 1011507, b) | 0;
      ve(a, -1001e3, 1001722) | 0;
      d = c + 1 | 0;
      if (!($o(a, d, 2) | 0)) {
        Pd(a, c);
        a = 0;
        return a | 0;
      }
      b = de(a, -1, 0) | 0;
      if (!(er(b, 1011509, 3) | 0)) {
        me(a, b + 3 | 0) | 0;
        Qd(a, -2, -1);
        Pd(a, -2);
      }
      Rd(a, -1, d);
      Pd(a, -3);
      a = 1;
      return a | 0;
    }
    function Vk(a, b, c) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      var d = 0,
          e = 0,
          f = 0,
          g = 0;
      g = r;
      r = r + 16 | 0;
      e = g;
      do
        if (Be(a, b) | 0) {
          me(a, 1000950) | 0;
          d = xe(a, -2) | 0;
          if (!d) {
            Pd(a, -3);
            f = 6;
            break;
          }
          Qd(a, -2, -1);
          Pd(a, -2);
          if ((d | 0) == 4)
            d = de(a, -1, 0) | 0;
          else
            f = 6;
        } else
          f = 6;
 while (0);
      if ((f | 0) == 6)
        if ((Td(a, b) | 0) == 2)
          d = 1011472;
        else
          d = Ud(a, Td(a, b) | 0) | 0;
      k[e >> 2] = c;
      k[e + 4 >> 2] = d;
      Xh(a, b, oe(a, 1011487, e) | 0) | 0;
      r = g;
      return ;
    }
    function Wk(a, b) {
      a = a | 0;
      b = b | 0;
      var c = 0,
          d = 0,
          e = 0;
      k[a >> 2] = 0;
      d = a + 4 | 0;
      c = Uc(k[d >> 2] | 0) | 0;
      a: do
        switch (c | 0) {
          case -1:
            {
              e = 5;
              break;
            }
          case 239:
            {
              c = k[a >> 2] | 0;
              k[a >> 2] = c + 1;
              i[a + 8 + c >> 0] = -17;
              c = Uc(k[d >> 2] | 0) | 0;
              switch (c | 0) {
                case -1:
                  {
                    e = 5;
                    break a;
                  }
                case 187:
                  break;
                default:
                  break a;
              }
              c = k[a >> 2] | 0;
              k[a >> 2] = c + 1;
              i[a + 8 + c >> 0] = -69;
              c = Uc(k[d >> 2] | 0) | 0;
              switch (c | 0) {
                case 191:
                  break;
                case -1:
                  {
                    e = 5;
                    break a;
                  }
                default:
                  break a;
              }
              i[(k[a >> 2] | 0) + (a + 8) >> 0] = -65;
              k[a >> 2] = 0;
              c = Uc(k[d >> 2] | 0) | 0;
              break;
            }
          default:
            {}
        }
 while (0);
      if ((e | 0) == 5) {
        k[b >> 2] = -1;
        e = 0;
        return e | 0;
      }
      k[b >> 2] = c;
      if ((c | 0) != 35) {
        e = 0;
        return e | 0;
      }
      b: while (1)
        switch (Uc(k[d >> 2] | 0) | 0) {
          case 10:
          case -1:
            break b;
          default:
            {}
        }
      e = Uc(k[d >> 2] | 0) | 0;
      k[b >> 2] = e;
      e = 1;
      return e | 0;
    }
    function Xk(a, b, c) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      a = k[b >> 2] | 0;
      if ((a | 0) > 0) {
        k[c >> 2] = a;
        k[b >> 2] = 0;
        b = b + 8 | 0;
        return b | 0;
      }
      a = b + 4 | 0;
      if (Vc(k[a >> 2] | 0) | 0) {
        b = 0;
        return b | 0;
      }
      b = b + 8 | 0;
      a = Ua(b | 0, 1, 1024, k[a >> 2] | 0) | 0;
      k[c >> 2] = a;
      return b | 0;
    }
    function Yk(a, b, c) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      var d = 0;
      a = b + 4 | 0;
      d = k[a >> 2] | 0;
      if (!d) {
        b = 0;
        return b | 0;
      }
      k[c >> 2] = d;
      k[a >> 2] = 0;
      b = k[b >> 2] | 0;
      return b | 0;
    }
    function Zk(a) {
      a = a | 0;
      ji(a, 1);
      Sd(a, -1001001 - (Td(a, 1) | 0) | 0);
      return 1;
    }
    function _k(a) {
      a = a | 0;
      var b = 0;
      b = (di(a, 1, 1001313) | 0) + 4 | 0;
      k[b >> 2] = 207;
      ie(a);
      le(a, 1009977, 26) | 0;
      return 2;
    }
    function $k(a) {
      a = a | 0;
      var b = 0,
          c = 0,
          d = 0;
      b = Ci(a, 1) | 0;
      c = O;
      if (!((c | 0) > 0 | (c | 0) == 0 & b >>> 0 > 0))
        return 0;
      while (1) {
        ye(a, 1, b, c) | 0;
        Pd(a, -2);
        d = b;
        b = pr(b | 0, c | 0, -1, -1) | 0;
        if (!((c | 0) > 0 | (c | 0) == 0 & d >>> 0 > 1))
          break;
        else
          c = O;
      }
      return 0;
    }
    function al(a) {
      a = a | 0;
      var b = 0,
          c = 0,
          d = 0;
      d = r;
      r = r + 16 | 0;
      c = d;
      b = gi(a, 1, 0) | 0;
      ve(a, -1001e3, 1001737) | 0;
      if (ve(a, -1, b) | 0) {
        r = d;
        return 1;
      }
      k[c >> 2] = b;
      oe(a, 1007840, c) | 0;
      r = d;
      return 1;
    }
    function bl(a) {
      a = a | 0;
      var b = 0,
          c = 0,
          d = 0,
          e = 0,
          f = 0;
      f = r;
      r = r + 32 | 0;
      e = f + 8 | 0;
      d = f;
      b = gi(a, 1, 0) | 0;
      ve(a, -1001001, 1001427) | 0;
      c = de(a, -1, 0) | 0;
      if (!c) {
        k[d >> 2] = 1001427;
        Yh(a, 1007643, d) | 0;
      }
      b = bm(a, b, c, 1015609, 1007673) | 0;
      if (!b) {
        e = 1;
        r = f;
        return e | 0;
      }
      if (!(yi(a, b, 0) | 0)) {
        me(a, b) | 0;
        e = 2;
        r = f;
        return e | 0;
      } else {
        c = de(a, 1, 0) | 0;
        d = de(a, -1, 0) | 0;
        k[e >> 2] = c;
        k[e + 4 >> 2] = b;
        k[e + 8 >> 2] = d;
        e = Yh(a, 1007675, e) | 0;
        r = f;
        return e | 0;
      }
      return 0;
    }
    function cl(a) {
      a = a | 0;
      var b = 0,
          c = 0,
          d = 0,
          e = 0,
          f = 0;
      f = r;
      r = r + 32 | 0;
      e = f + 8 | 0;
      c = f;
      d = gi(a, 1, 0) | 0;
      ve(a, -1001001, 1001605) | 0;
      b = de(a, -1, 0) | 0;
      if (!b) {
        k[c >> 2] = 1001605;
        Yh(a, 1007643, c) | 0;
      }
      b = bm(a, d, b, 1015609, 1007673) | 0;
      if (!b) {
        e = 1;
        r = f;
        return e | 0;
      }
      if (!(cm(a, b, d) | 0)) {
        me(a, b) | 0;
        e = 2;
        r = f;
        return e | 0;
      } else {
        c = de(a, 1, 0) | 0;
        d = de(a, -1, 0) | 0;
        k[e >> 2] = c;
        k[e + 4 >> 2] = b;
        k[e + 8 >> 2] = d;
        e = Yh(a, 1007675, e) | 0;
        r = f;
        return e | 0;
      }
      return 0;
    }
    function dl(a) {
      a = a | 0;
      var b = 0,
          c = 0,
          d = 0,
          e = 0,
          f = 0,
          g = 0,
          h = 0;
      h = r;
      r = r + 32 | 0;
      g = h + 24 | 0;
      f = h + 8 | 0;
      d = h;
      e = gi(a, 1, 0) | 0;
      b = Op(e, 46) | 0;
      if (!b) {
        g = 0;
        r = h;
        return g | 0;
      }
      le(a, e, b - e | 0) | 0;
      b = de(a, -1, 0) | 0;
      ve(a, -1001001, 1001605) | 0;
      c = de(a, -1, 0) | 0;
      if (!c) {
        k[d >> 2] = 1001605;
        Yh(a, 1007643, d) | 0;
      }
      b = bm(a, b, c, 1015609, 1007673) | 0;
      if (!b) {
        g = 1;
        r = h;
        return g | 0;
      }
      switch (cm(a, b, e) | 0) {
        case 2:
          {
            k[g >> 2] = e;
            k[g + 4 >> 2] = b;
            oe(a, 1007721, g) | 0;
            g = 1;
            r = h;
            return g | 0;
          }
        case 0:
          {
            me(a, b) | 0;
            g = 2;
            r = h;
            return g | 0;
          }
        default:
          {
            e = de(a, 1, 0) | 0;
            g = de(a, -1, 0) | 0;
            k[f >> 2] = e;
            k[f + 4 >> 2] = b;
            k[f + 8 >> 2] = g;
            g = Yh(a, 1007675, f) | 0;
            r = h;
            return g | 0;
          }
      }
      return 0;
    }
    function el(a, b, c, d, e) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      d = d | 0;
      e = e | 0;
      var f = 0,
          g = 0;
      c = fc(c | 0) | 0;
      if (!c) {
        c = fc(d | 0) | 0;
        if (c) {
          f = c;
          g = 3;
        }
      } else {
        f = c;
        g = 3;
      }
      if ((g | 0) == 3 ? (ve(a, -1001e3, 1007624) | 0, g = ce(a, -1) | 0, Pd(a, -2), (g | 0) == 0) : 0) {
        Hi(a, Hi(a, f, 1007634, 1007637) | 0, 1007641, e) | 0;
        Qd(a, -2, -1);
        Pd(a, -2);
        Ee(a, -2, b);
        return ;
      }
      me(a, e) | 0;
      Ee(a, -2, b);
      return ;
    }
    function fl(a) {
      a = a | 0;
      return ;
    }
    function gl(a, b, c) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      var d = 0,
          e = 0,
          f = 0;
      b = k[b >> 2] | 0;
      if (!(i[b >> 0] | 0)) {
        f = -3;
        return f | 0;
      } else
        e = b;
      while (1) {
        d = ar(b + 124 | 0, 0, 8) | 0;
        if (!(dr(e, c) | 0))
          break;
        b = b + (((d + 511 | 0) / 512 | 0) + 1 << 9) | 0;
        if (!(i[b >> 0] | 0)) {
          b = -3;
          f = 5;
          break;
        } else
          e = b;
      }
      if ((f | 0) == 5)
        return b | 0;
      k[a >> 2] = e;
      k[a + 4 >> 2] = b + 512;
      k[a + 8 >> 2] = d;
      k[a + 16 >> 2] = b + 260;
      f = 0;
      return f | 0;
    }
    function hl(a, b) {
      a = a | 0;
      b = b | 0;
      var c = 0,
          d = 0,
          e = 0,
          f = 0,
          g = 0,
          h = 0,
          j = 0,
          l = 0,
          m = 0;
      m = r;
      r = r + 32 | 0;
      l = m;
      c = k[a >> 2] | 0;
      if (!(i[c >> 0] | 0)) {
        r = m;
        return ;
      }
      e = l + 4 | 0;
      f = l + 8 | 0;
      g = l + 16 | 0;
      h = l + 20 | 0;
      j = c;
      d = c;
      while (1) {
        c = ar(d + 124 | 0, 0, 8) | 0;
        k[l >> 2] = j;
        k[e >> 2] = d + 512;
        k[f >> 2] = c;
        k[g >> 2] = d + 260;
        k[h >> 2] = d + 264;
        if (!(sd[b & 63](l, a) | 0)) {
          c = 5;
          break;
        }
        c = d + (((c + 511 | 0) / 512 | 0) + 1 << 9) | 0;
        if (!(i[c >> 0] | 0)) {
          c = 5;
          break;
        } else {
          j = c;
          d = c;
        }
      }
      if ((c | 0) == 5) {
        r = m;
        return ;
      }
    }
    function il(a, b, c, d) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      d = d | 0;
      if (!d)
        if (!b)
          d = 0;
        else {
          jr(b);
          d = 0;
        }
      else
        d = kr(b, d) | 0;
      return d | 0;
    }
    function jl(a) {
      a = a | 0;
      var b = 0,
          c = 0,
          d = 0,
          e = 0,
          f = 0;
      f = r;
      r = r + 48 | 0;
      d = f;
      c = f + 16 | 0;
      e = fe(a, 1) | 0;
      Dj(a, e);
      b = k[e >> 2] | 0;
      b = id[k[b + 24 >> 2] & 63](c, b, 1005905) | 0;
      if (b) {
        e = Aj(b) | 0;
        k[d >> 2] = e;
        a = Yh(a, 1010231, d) | 0;
        r = f;
        return a | 0;
      }
      b = Cj(k[c + 4 >> 2] | 0) | 0;
      if (!b) {
        a = Yh(a, 1006111, f + 8 | 0) | 0;
        r = f;
        return a | 0;
      }
      d = (Ne(a, 51, b, 1005913, 1005922) | 0) == 0;
      jr(b);
      if (!d)
        Re(a) | 0;
      Le(a, 0, 1, 0, 0);
      Mj(a, -1, e + 52 | 0);
      a = 0;
      r = f;
      return a | 0;
    }
    function kl(a) {
      a = a | 0;
      Wh(a, a, de(a, -1, 0) | 0, 1);
      return 1;
    }
    function ll(a, b) {
      a = a | 0;
      b = b | 0;
      a = k[a >> 2] | 0;
      b = k[b >> 2] | 0;
      return (m[a + 4 >> 1] | 0 | (m[a + 6 >> 1] | 0) << 16) - (m[b + 4 >> 1] | 0 | (m[b + 6 >> 1] | 0) << 16) | 0;
    }
    function ml(a, b, c) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      return ir(ka(c, b) | 0) | 0;
    }
    function nl(a, b) {
      a = a | 0;
      b = b | 0;
      if (!b)
        return ;
      jr(b);
      return ;
    }
    function ol(a, b, c) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      return ;
    }
    function pl(a) {
      a = a | 0;
      var b = 0,
          c = 0;
      c = fe(a, -1001001) | 0;
      b = Ve(a, 32) | 0;
      k[b >> 2] = c;
      c = b + 8 | 0;
      k[c >> 2] = 0;
      k[c + 4 >> 2] = 0;
      k[c + 8 >> 2] = 0;
      k[c + 12 >> 2] = 0;
      k[c + 16 >> 2] = 0;
      k[b + 28 >> 2] = -2;
      if (!(ai(a, 1005726) | 0)) {
        Je(a, -2) | 0;
        return 1;
      }
      Ei(a, 16396, 0);
      Je(a, -2) | 0;
      return 1;
    }
    function ql(a) {
      a = a | 0;
      var b = 0,
          c = 0,
          d = 0,
          e = 0,
          f = 0;
      f = r;
      r = r + 16 | 0;
      e = f;
      b = fe(a, 1) | 0;
      c = gi(a, 2, 0) | 0;
      d = Jj(c) | 0;
      a: do
        if ((d | 0) < 1833301411)
          if ((d | 0) < 1780738448) {
            switch (d | 0) {
              case -1942728918:
                break;
              default:
                break a;
            }
            e = b + 8 | 0;
            e = Cr(k[e >> 2] | 0, k[e + 4 >> 2] | 0, 1e3, 0) | 0;
            ke(a, e, O);
            e = 1;
            r = f;
            return e | 0;
          } else {
            switch (d | 0) {
              case 1780738448:
                break;
              default:
                break a;
            }
            qe(a, k[b + 24 >> 2] | 0);
            e = 1;
            r = f;
            return e | 0;
          }
        else if ((d | 0) < 2090760016) {
          switch (d | 0) {
            case 1833301411:
              break;
            default:
              break a;
          }
          Pj(a, k[b + 28 >> 2] | 0);
          e = 1;
          r = f;
          return e | 0;
        } else {
          switch (d | 0) {
            case 2090760016:
              break;
            default:
              break a;
          }
          pe(a, 225, 0);
          e = 1;
          r = f;
          return e | 0;
        }
 while (0);
      k[e >> 2] = c;
      e = Yh(a, 1005741, e) | 0;
      r = f;
      return e | 0;
    }
    function rl(a) {
      a = a | 0;
      var b = 0,
          c = 0,
          d = 0,
          e = 0,
          f = 0;
      f = r;
      r = r + 16 | 0;
      e = f;
      b = fe(a, 1) | 0;
      c = gi(a, 2, 0) | 0;
      d = Jj(c) | 0;
      a: do
        if ((d | 0) < 1780738448) {
          if ((d | 0) >= 193507096) {
            switch (d | 0) {
              case 193507096:
                {
                  b = 0;
                  break;
                }
              default:
                break a;
            }
            r = f;
            return b | 0;
          }
          switch (d | 0) {
            case -1942728918:
              break;
            default:
              break a;
          }
          e = mi(a, 3) | 0;
          e = Er(e | 0, O | 0, 1e3, 0) | 0;
          a = O;
          d = b + 8 | 0;
          k[d >> 2] = e;
          k[d + 4 >> 2] = a;
          d = (k[b >> 2] | 0) + 24 | 0;
          a = pr(k[d >> 2] | 0, k[d + 4 >> 2] | 0, e | 0, a | 0) | 0;
          e = b + 16 | 0;
          k[e >> 2] = a;
          k[e + 4 >> 2] = O;
          e = 0;
          r = f;
          return e | 0;
        } else {
          if ((d | 0) < 1833301411) {
            switch (d | 0) {
              case 1780738448:
                break;
              default:
                break a;
            }
            a = ce(a, 3) | 0;
            k[b + 24 >> 2] = a;
            a = b + 8 | 0;
            e = (k[b >> 2] | 0) + 24 | 0;
            a = pr(k[e >> 2] | 0, k[e + 4 >> 2] | 0, k[a >> 2] | 0, k[a + 4 >> 2] | 0) | 0;
            e = b + 16 | 0;
            k[e >> 2] = a;
            k[e + 4 >> 2] = O;
            e = 0;
            r = f;
            return e | 0;
          }
          if ((d | 0) >= 2090468272) {
            switch (d | 0) {
              case 2090468272:
                {
                  b = 0;
                  break;
                }
              default:
                break a;
            }
            r = f;
            return b | 0;
          }
          switch (d | 0) {
            case 1833301411:
              break;
            default:
              break a;
          }
          if ((Td(a, 3) | 0) >= 1)
            ii(a, 3, 6);
          Oj(a, 3, b + 28 | 0);
          e = 0;
          r = f;
          return e | 0;
        }
 while (0);
      k[e >> 2] = c;
      e = Yh(a, 1005741, e) | 0;
      r = f;
      return e | 0;
    }
    function sl(a) {
      a = a | 0;
      var b = 0,
          c = 0,
          d = 0;
      b = r;
      r = r + 16 | 0;
      c = b;
      d = fe(a, 1) | 0;
      k[c >> 2] = d;
      oe(a, 1005732, c) | 0;
      r = b;
      return 1;
    }
    function tl(a) {
      a = a | 0;
      Nj(a, (fe(a, 1) | 0) + 28 | 0);
      return 0;
    }
    function ul(a) {
      a = a | 0;
      var b = 0,
          c = 0,
          d = 0,
          e = 0,
          f = 0,
          g = 0,
          h = 0,
          i = 0;
      b = di(a, 1, 1005726) | 0;
      if (!(k[b + 24 >> 2] | 0))
        return 0;
      g = k[b + 28 >> 2] | 0;
      if ((g | 0) == -2)
        return 0;
      d = b + 8 | 0;
      c = k[d >> 2] | 0;
      d = k[d + 4 >> 2] | 0;
      if ((c | 0) == 0 & (d | 0) == 0)
        return 0;
      f = (k[b >> 2] | 0) + 24 | 0;
      e = k[f >> 2] | 0;
      f = k[f + 4 >> 2] | 0;
      b = b + 16 | 0;
      h = b;
      i = k[h + 4 >> 2] | 0;
      if ((f | 0) < (i | 0) | ((f | 0) == (i | 0) ? e >>> 0 < (k[h >> 2] | 0) >>> 0 : 0))
        return 0;
      h = pr(e | 0, f | 0, c | 0, d | 0) | 0;
      i = b;
      k[i >> 2] = h;
      k[i + 4 >> 2] = O;
      Pj(a, g);
      Sd(a, 1);
      Le(a, 1, 0, 0, 0);
      return 0;
    }
    function vl(a) {
      a = a | 0;
      var b = 0;
      b = Ve(a, 4) | 0;
      k[b >> 2] = 0;
      if (ai(a, 1006125) | 0)
        Ei(a, 16436, 0);
      Je(a, -2) | 0;
      return 1;
    }
    function wl(a) {
      a = a | 0;
      var b = 0,
          c = 0,
          d = 0;
      b = r;
      r = r + 16 | 0;
      c = b;
      d = gi(a, 2, 0) | 0;
      k[c >> 2] = d;
      a = Yh(a, 1005781, c) | 0;
      r = b;
      return a | 0;
    }
    function xl(a) {
      a = a | 0;
      var b = 0,
          c = 0,
          d = 0,
          e = 0,
          f = 0;
      f = r;
      r = r + 16 | 0;
      e = f + 8 | 0;
      d = f + 12 | 0;
      b = fe(a, 1) | 0;
      c = gi(a, 2, 0) | 0;
      if ((Jj(c) | 0) != 2090176863) {
        k[e >> 2] = c;
        e = Yh(a, 1005781, e) | 0;
        r = f;
        return e | 0;
      }
      e = gi(a, 3, d) | 0;
      e = ak(e, k[d >> 2] | 0, 0) | 0;
      k[b >> 2] = e;
      if (e) {
        e = 0;
        r = f;
        return e | 0;
      }
      e = Yh(a, 1006111, f) | 0;
      r = f;
      return e | 0;
    }
    function yl(a) {
      a = a | 0;
      var b = 0,
          c = 0,
          d = 0;
      b = r;
      r = r + 16 | 0;
      c = b;
      d = fe(a, 1) | 0;
      k[c >> 2] = k[d >> 2];
      oe(a, 1005772, c) | 0;
      r = b;
      return 1;
    }
    function zl(a) {
      a = a | 0;
      a = fe(a, 1) | 0;
      jr(k[a >> 2] | 0);
      return 0;
    }
    function Al(a) {
      a = a | 0;
      var b = 0,
          c = 0,
          d = 0;
      c = r;
      r = r + 16 | 0;
      d = Ve(a, 4) | 0;
      b = ek() | 0;
      k[d >> 2] = b;
      if (!b) {
        d = Yh(a, 1005812, c) | 0;
        r = c;
        return d | 0;
      }
      j[b + 4 >> 1] = 100;
      if (ai(a, 1005833) | 0)
        Ei(a, 16476, 0);
      Je(a, -2) | 0;
      d = 1;
      r = c;
      return d | 0;
    }
    function Bl(a) {
      a = a | 0;
      var b = 0,
          c = 0,
          d = 0,
          e = 0,
          f = 0;
      f = r;
      r = r + 16 | 0;
      e = f;
      c = fe(a, 1) | 0;
      c = k[c >> 2] | 0;
      b = gi(a, 2, 0) | 0;
      d = Jj(b) | 0;
      a: do
        if ((d | 0) < 279163045)
          if ((d | 0) < 30836958) {
            switch (d | 0) {
              case -1385631103:
                break;
              default:
                break a;
            }
            e = Ve(a, 4) | 0;
            k[e >> 2] = c + 16;
            if (ai(a, 1006103) | 0)
              Ei(a, 16516, 0);
            Je(a, -2) | 0;
            a = 1;
            r = f;
            return a | 0;
          } else {
            switch (d | 0) {
              case 30836958:
                break;
              default:
                break a;
            }
            b = k[c + 16 >> 2] | 0;
            if (!b) {
              c = 0;
              b = 0;
            } else {
              b = k[b + 8 >> 2] | 0;
              c = b;
              b = ((b | 0) < 0) << 31 >> 31;
            }
            ke(a, c, b);
            a = 1;
            r = f;
            return a | 0;
          }
        else {
          if ((d | 0) < 2086767955) {
            switch (d | 0) {
              case 279163045:
                break;
              default:
                break a;
            }
            b = k[c + 16 >> 2] | 0;
            if (!b) {
              b = 0;
              c = 0;
            } else {
              c = k[b + 4 >> 2] | 0;
              b = c;
              c = ((c | 0) < 0) << 31 >> 31;
            }
            ke(a, b, c);
            a = 1;
            r = f;
            return a | 0;
          }
          if ((d | 0) < 2090329144) {
            switch (d | 0) {
              case 2086767955:
                break;
              default:
                break a;
            }
            qe(a, ((m[c + 6 >> 1] | 0) >>> 1 & 1 ^ 1) & 65535);
            a = 1;
            r = f;
            return a | 0;
          } else {
            switch (d | 0) {
              case 2090329144:
                break;
              default:
                break a;
            }
            le(a, 1008077, 0) | 0;
            a = 1;
            r = f;
            return a | 0;
          }
        }
 while (0);
      k[e >> 2] = b;
      a = Yh(a, 1005848, e) | 0;
      r = f;
      return a | 0;
    }
    function Cl(a) {
      a = a | 0;
      var b = 0,
          c = 0,
          d = 0,
          e = 0,
          f = 0,
          g = 0;
      g = r;
      r = r + 16 | 0;
      e = g;
      b = fe(a, 1) | 0;
      b = k[b >> 2] | 0;
      c = gi(a, 2, 0) | 0;
      d = Jj(c) | 0;
      a: do
        if ((d | 0) < 265852802) {
          if ((d | 0) >= -293638151) {
            if ((d | 0) < -145528541)
              if ((d | 0) < -164646266)
                switch (d | 0) {
                  case -293638151:
                    {
                      b = 0;
                      break a;
                    }
                  default:
                    {
                      f = 8;
                      break a;
                    }
                }
              else
                switch (d | 0) {
                  case -164646266:
                    {
                      b = 0;
                      break a;
                    }
                  default:
                    {
                      f = 8;
                      break a;
                    }
                }
            if ((d | 0) < 30836958)
              switch (d | 0) {
                case -145528541:
                  {
                    b = 0;
                    break a;
                  }
                default:
                  {
                    f = 8;
                    break a;
                  }
              }
            if ((d | 0) < 193507096)
              switch (d | 0) {
                case 30836958:
                  {
                    b = 0;
                    break a;
                  }
                default:
                  {
                    f = 8;
                    break a;
                  }
              }
            switch (d | 0) {
              case 193507096:
                break;
              default:
                {
                  f = 8;
                  break a;
                }
            }
            a = mi(a, 3) | 0;
            k[b + 12 >> 2] = a;
            b = 0;
            break;
          }
          if ((d | 0) >= -961965181) {
            if ((d | 0) < -961641790)
              switch (d | 0) {
                case -961965181:
                  {
                    b = 0;
                    break a;
                  }
                default:
                  {
                    f = 8;
                    break a;
                  }
              }
            if ((d | 0) < -900104592)
              switch (d | 0) {
                case -961641790:
                  {
                    b = 0;
                    break a;
                  }
                default:
                  {
                    f = 8;
                    break a;
                  }
              }
            else
              switch (d | 0) {
                case -900104592:
                  {
                    b = 0;
                    break a;
                  }
                default:
                  {
                    f = 8;
                    break a;
                  }
              }
          } else {
            if ((d | 0) >= -1358456990)
              switch (d | 0) {
                case -1358456990:
                  {
                    b = 0;
                    break a;
                  }
                default:
                  {
                    f = 8;
                    break a;
                  }
              }
            switch (d | 0) {
              case -1385631103:
                break;
              default:
                {
                  f = 8;
                  break a;
                }
            }
            b = b + 16 | 0;
            k[b >> 2] = 0;
            if ((Td(a, 3) | 0) < 1) {
              b = 0;
              break;
            }
            a = di(a, 3, 1006103) | 0;
            k[b >> 2] = k[k[a >> 2] >> 2];
            b = 0;
            break;
          }
        } else {
          if ((d | 0) < 1831770243) {
            if ((d | 0) < 374170081) {
              if ((d | 0) >= 279163045)
                switch (d | 0) {
                  case 279163045:
                    {
                      b = 0;
                      break a;
                    }
                  default:
                    {
                      f = 8;
                      break a;
                    }
                }
              switch (d | 0) {
                case 265852802:
                  break;
                default:
                  {
                    f = 8;
                    break a;
                  }
              }
              a = mi(a, 3) | 0;
              j[b + 4 >> 1] = a;
              b = 0;
              break;
            }
            if ((d | 0) < 1169333945)
              switch (d | 0) {
                case 374170081:
                  {
                    b = 0;
                    break a;
                  }
                default:
                  {
                    f = 8;
                    break a;
                  }
              }
            if ((d | 0) < 1813244136)
              switch (d | 0) {
                case 1169333945:
                  {
                    b = 0;
                    break a;
                  }
                default:
                  {
                    f = 8;
                    break a;
                  }
              }
            else
              switch (d | 0) {
                case 1813244136:
                  {
                    b = 0;
                    break a;
                  }
                default:
                  {
                    f = 8;
                    break a;
                  }
              }
          }
          if ((d | 0) < 2086767955)
            if ((d | 0) < 1851223447)
              switch (d | 0) {
                case 1831770243:
                  {
                    b = 0;
                    break a;
                  }
                default:
                  {
                    f = 8;
                    break a;
                  }
              }
            else
              switch (d | 0) {
                case 1851223447:
                  {
                    b = 0;
                    break a;
                  }
                default:
                  {
                    f = 8;
                    break a;
                  }
              }
          if ((d | 0) < 2090329144) {
            switch (d | 0) {
              case 2086767955:
                break;
              default:
                {
                  f = 8;
                  break a;
                }
            }
            e = (ce(a, 3) | 0) == 0;
            b = b + 6 | 0;
            a = m[b >> 1] | 0;
            j[b >> 1] = e ? a | 2 : a & 65533;
            b = 0;
            break;
          }
          if ((d | 0) < 2090468272)
            switch (d | 0) {
              case 2090329144:
                {
                  b = 0;
                  break a;
                }
              default:
                {
                  f = 8;
                  break a;
                }
            }
          switch (d | 0) {
            case 2090468272:
              break;
            default:
              {
                f = 8;
                break a;
              }
          }
          a = mi(a, 3) | 0;
          k[b + 8 >> 2] = a;
          b = 0;
        }
 while (0);
      if ((f | 0) == 8) {
        k[e >> 2] = c;
        b = Yh(a, 1005848, e) | 0;
      }
      r = g;
      return b | 0;
    }
    function Dl(a) {
      a = a | 0;
      var b = 0,
          c = 0,
          d = 0;
      b = r;
      r = r + 16 | 0;
      c = b;
      d = fe(a, 1) | 0;
      k[c >> 2] = k[d >> 2];
      oe(a, 1005839, c) | 0;
      r = b;
      return 1;
    }
    function El(a) {
      a = a | 0;
      a = fe(a, 1) | 0;
      a = (k[a >> 2] | 0) + 6 | 0;
      j[a >> 1] = m[a >> 1] | 0 | 4;
      return 0;
    }
    function Fl(a) {
      a = a | 0;
      var b = 0,
          c = 0,
          d = 0;
      b = r;
      r = r + 16 | 0;
      c = b;
      d = gi(a, 2, 0) | 0;
      k[c >> 2] = d;
      a = Yh(a, 1005881, c) | 0;
      r = b;
      return a | 0;
    }
    function Gl(a) {
      a = a | 0;
      var b = 0,
          c = 0,
          d = 0,
          e = 0,
          f = 0;
      f = r;
      r = r + 16 | 0;
      e = f + 8 | 0;
      d = f + 12 | 0;
      b = fe(a, 1) | 0;
      c = gi(a, 2, 0) | 0;
      if ((Jj(c) | 0) != 2090176863) {
        k[e >> 2] = c;
        e = Yh(a, 1005881, e) | 0;
        r = f;
        return e | 0;
      }
      e = gi(a, 3, d) | 0;
      e = Vj(e, k[d >> 2] | 0) | 0;
      k[k[b >> 2] >> 2] = e;
      if (k[k[b >> 2] >> 2] | 0) {
        e = 0;
        r = f;
        return e | 0;
      }
      e = Yh(a, 1006111, f) | 0;
      r = f;
      return e | 0;
    }
    function Hl(a) {
      a = a | 0;
      var b = 0,
          c = 0,
          d = 0;
      b = r;
      r = r + 16 | 0;
      c = b;
      d = fe(a, 1) | 0;
      k[c >> 2] = k[k[d >> 2] >> 2];
      oe(a, 1005870, c) | 0;
      r = b;
      return 1;
    }
    function Il(a) {
      a = a | 0;
      var b = 0;
      b = di(a, 1, 1006125) | 0;
      b = k[b >> 2] | 0;
      ck();
      bk(b, ce(a, 2) | 0, 0) | 0;
      return 0;
    }
    function Jl(a) {
      a = a | 0;
      ck();
      return 0;
    }
    function Kl(a) {
      a = a | 0;
      a = Hb(0) | 0;
      Zj(a, ((a | 0) < 0) << 31 >> 31);
      return 0;
    }
    function Ll(a) {
      a = a | 0;
      var b = 0;
      if (!(Xd(a, 1) | 0)) {
        je(a, +((_j() | 0) >>> 0) * 2.3283064365386963e-10);
        return 1;
      } else {
        b = be(a, 1, 0) | 0;
        b = pr(b | 0, O | 0, -1, 0) | 0;
        b = $j(0, b) | 0;
        ke(a, b, ((b | 0) < 0) << 31 >> 31);
        return 1;
      }
      return 0;
    }
    function Ml(a) {
      a = a | 0;
      var b = 0.0,
          c = 0.0,
          d = 0.0,
          e = 0.0;
      e = +ki(a, 1);
      b = +Y(+e);
      c = +ja(+e);
      d = e - b;
      e = c - e;
      if (d < e) {
        je(a, b);
        return 1;
      }
      if (d > e) {
        je(a, c);
        return 1;
      }
      if ((~~b >>> 0 & 1 | 0) == 0 & 0 == 0) {
        je(a, b);
        return 1;
      } else {
        je(a, c);
        return 1;
      }
      return 0;
    }
    function Nl(a) {
      a = a | 0;
      var b = 0;
      b = Hb(0) | 0;
      ke(a, b, ((b | 0) < 0) << 31 >> 31);
      return 1;
    }
    function Ol(a) {
      a = a | 0;
      var b = 0,
          c = 0,
          d = 0;
      b = r;
      r = r + 16 | 0;
      c = b;
      d = mi(a, 1) | 0;
      k[c >> 2] = d;
      c = Db(c | 0) | 0;
      d = k[c + 8 >> 2] | 0;
      ke(a, d, ((d | 0) < 0) << 31 >> 31);
      d = k[c + 4 >> 2] | 0;
      ke(a, d, ((d | 0) < 0) << 31 >> 31);
      d = k[c >> 2] | 0;
      ke(a, d, ((d | 0) < 0) << 31 >> 31);
      ke(a, 0, 0);
      d = k[c + 12 >> 2] | 0;
      ke(a, d, ((d | 0) < 0) << 31 >> 31);
      d = (k[c + 16 >> 2] | 0) + 1 | 0;
      ke(a, d, ((d | 0) < 0) << 31 >> 31);
      c = (k[c + 20 >> 2] | 0) + 1900 | 0;
      ke(a, c, ((c | 0) < 0) << 31 >> 31);
      r = b;
      return 7;
    }
    function Pl(a) {
      a = a | 0;
      de(a, 1, 0) | 0;
      Sd(a, 1);
      return 1;
    }
    function Ql(a) {
      a = a | 0;
      var b = 0,
          c = 0,
          d = 0;
      d = r;
      r = r + 16 | 0;
      c = d;
      b = fe(a, -1001001) | 0;
      b = Ui(b, gi(a, 1, 0) | 0, c) | 0;
      a: do
        if (!b)
          ie(a);
        else
          switch (k[c >> 2] | 0) {
            case 3:
              {
                me(a, b) | 0;
                break a;
              }
            case 1:
              {
                qe(a, (dr(b, 1012737) | 0) == 0 & 1);
                break a;
              }
            case 2:
              {
                if ($d(a, b) | 0)
                  break a;
                ke(a, 0, 0);
                break a;
              }
            default:
              {
                ie(a);
                break a;
              }
          }
 while (0);
      r = d;
      return 1;
    }
    function Rl(a) {
      a = a | 0;
      var b = 0,
          c = 0;
      b = fe(a, -1001001) | 0;
      c = gi(a, 1, 0) | 0;
      switch (Td(a, 2) | 0) {
        case 1:
          {
            a = (ce(a, 2) | 0) != 0;
            Vi(b, c, a ? 1012737 : 1012677, 1);
            return 1;
          }
        case 4:
          {
            Vi(b, c, de(a, 2, 0) | 0, 3);
            return 1;
          }
        case 3:
          {
            Vi(b, c, de(a, 2, 0) | 0, 2);
            return 1;
          }
        default:
          {
            Vi(b, c, 0, 0);
            return 1;
          }
      }
      return 0;
    }
    function Sl(a) {
      a = a | 0;
      var b = 0,
          c = 0,
          d = 0,
          e = 0,
          f = 0,
          g = 0;
      f = r;
      r = r + 16 | 0;
      c = fe(a, -1001001) | 0;
      d = di(a, 1, 1006103) | 0;
      d = k[k[d >> 2] >> 2] | 0;
      e = d + 4 | 0;
      b = k[e >> 2] | 0;
      b = (b | 0) > 480 ? b : 480;
      if (!(Sj(b, k[d + 8 >> 2] | 0) | 0)) {
        b = (b - (k[e >> 2] | 0) | 0) / 2 | 0;
        e = c + 4 | 0;
        a = c + 8 | 0;
        g = Uj(e, a) | 0;
        k[c + 12 >> 2] = g;
        Tj(0);
        Wj(d, b, 0);
        fk(b, 0);
        Wi(k[e >> 2] | 0, k[a >> 2] | 0) | 0;
        a = 0;
        r = f;
        return a | 0;
      } else {
        g = Yh(a, 1006111, f) | 0;
        r = f;
        return g | 0;
      }
      return 0;
    }
    function Tl(a) {
      a = a | 0;
      var b = 0,
          c = 0,
          d = 0,
          e = 0;
      b = fe(a, -1001001) | 0;
      if ((Td(a, 1) | 0) == 5) {
        we(a, 1, 1, 0) | 0;
        e = mi(a, -1) | 0;
        we(a, 1, 2, 0) | 0;
        d = mi(a, -1) | 0;
        we(a, 1, 3, 0) | 0;
        c = mi(a, -1) | 0;
        we(a, 1, 4, 0) | 0;
        a = mi(a, -1) | 0;
        Xi(b, e, d, c, a);
        return 0;
      } else {
        Xi(b, -1, -1, -1, -1);
        return 0;
      }
      return 0;
    }
    function Ul(a) {
      a = a | 0;
      var b = 0,
          c = 0,
          d = 0,
          e = 0;
      d = fe(a, -1001001) | 0;
      if ((Td(a, 1) | 0) == 5) {
        Sd(a, 1);
        b = 1;
      } else {
        Ae(a, 0, 17);
        b = 1;
      }
      a: while (1) {
        qe(a, i[d + (b + 32) >> 0] | 0);
        do
          switch (b | 0) {
            case 3:
              {
                c = 1006066;
                break;
              }
            case 16:
              break a;
            case 9:
              {
                c = 1006085;
                break;
              }
            case 6:
              {
                c = 1006079;
                break;
              }
            case 7:
              {
                c = 1006081;
                break;
              }
            case 4:
              {
                c = 1006071;
                break;
              }
            case 5:
              {
                c = 1006077;
                break;
              }
            case 15:
              {
                c = 1011083;
                break;
              }
            case 1:
              {
                c = 1006058;
                break;
              }
            case 2:
              {
                c = 1006061;
                break;
              }
            case 10:
              {
                c = 1006088;
                break;
              }
            case 14:
              {
                c = 1006100;
                break;
              }
            case 12:
              {
                c = 1006094;
                break;
              }
            case 13:
              {
                c = 1006097;
                break;
              }
            case 11:
              {
                c = 1006091;
                break;
              }
            case 8:
              {
                c = 1006083;
                break;
              }
            default:
              {
                Ee(a, -2, 1007823);
                b = b + 1 | 0;
                if ((b | 0) == 17) {
                  e = 22;
                  break a;
                } else
                  continue a;
              }
          }
 while (0);
        Ee(a, -2, c);
        b = b + 1 | 0;
      }
      if ((e | 0) == 22)
        return 1;
      Ee(a, -2, 1006052);
      return 1;
    }
    function Vl(a) {
      a = a | 0;
      var b = 0,
          c = 0,
          d = 0,
          e = 0,
          f = 0,
          g = 0,
          h = 0,
          j = 0,
          m = 0,
          n = 0;
      n = r;
      r = r + 32 | 0;
      f = n + 24 | 0;
      j = n;
      d = fe(a, -1001001) | 0;
      e = gi(a, 1, f) | 0;
      f = k[f >> 2] | 0;
      if ((f & -8 | 0) == 8) {
        switch (f | 0) {
          case 1:
            {
              c = 1;
              break;
            }
          case 2:
          case 3:
          case 4:
          case 5:
          case 6:
          case 7:
          case 8:
          case 9:
            {
              c = f;
              m = 5;
              break;
            }
          case 10:
            {
              c = 10;
              m = 4;
              break;
            }
          default:
            {
              c = (l[1002815 + ((l[e + 10 >> 0] | 0) + 6) >> 0] | 0) + f | 0;
              m = 4;
            }
        }
        if ((m | 0) == 4) {
          c = (l[1002815 + (l[e + 9 >> 0] | 0) >> 0] | 0) + c | 0;
          m = 5;
        }
        if ((m | 0) == 5)
          c = (l[1002815 + (l[e + 1 >> 0] | 0) >> 0] | 0) + c | 0;
        b = i[e >> 0] | 0;
        c = (l[1002815 + (b & 255) >> 0] | 0) + c | 0;
        if (((c >>> 0 < 119 ? (l[1002949 + c >> 0] | 0) == (f | 0) : 0) ? (g = 6428 + (c * 12 | 0) | 0, h = k[g >> 2] | 0, b << 24 >> 24 == (i[h >> 0] | 0)) : 0) ? !((g | 0) == 0 | (cr(e + 1 | 0, h + 1 | 0, f + -1 | 0) | 0) != 0) : 0) {
          h = k[6428 + (c * 12 | 0) + 4 >> 2] | 0;
          k[j + 4 >> 2] = h;
          b = k[6428 + (c * 12 | 0) + 8 >> 2] | 0;
          k[j + 8 >> 2] = b;
          c = h;
        } else
          m = 11;
      } else
        m = 11;
      do
        if ((m | 0) == 11) {
          m = k[d >> 2] | 0;
          if (!(id[k[m + 24 >> 2] & 63](j, m, e) | 0)) {
            c = k[j + 4 >> 2] | 0;
            b = k[j + 8 >> 2] | 0;
            break;
          } else {
            m = 0;
            r = n;
            return m | 0;
          }
        }
 while (0);
      le(a, c, b) | 0;
      m = 1;
      r = n;
      return m | 0;
    }
    function Wl(a) {
      a = a | 0;
      var b = 0,
          c = 0,
          d = 0,
          e = 0;
      c = r;
      r = r + 32 | 0;
      b = c;
      e = fe(a, -1001001) | 0;
      d = gi(a, 1, 0) | 0;
      e = k[e >> 2] | 0;
      if (id[k[e + 24 >> 2] & 63](b, e, d) | 0) {
        e = 0;
        r = c;
        return e | 0;
      }
      b = Cj(k[b + 4 >> 2] | 0) | 0;
      if (!b) {
        e = 0;
        r = c;
        return e | 0;
      }
      re(a, b);
      pe(a, 226, 1);
      e = 1;
      r = c;
      return e | 0;
    }
    function Xl(a) {
      a = a | 0;
      var b = 0,
          c = 0,
          d = 0,
          e = 0;
      e = r;
      r = r + 16 | 0;
      d = e;
      b = fe(a, -1001001) | 0;
      c = Bj(a, b, d) | 0;
      if (!c) {
        jr(b);
        d = 0;
        r = e;
        return d | 0;
      } else {
        le(a, c, k[d >> 2] | 0) | 0;
        d = 1;
        r = e;
        return d | 0;
      }
      return 0;
    }
    function Yl(a, b) {
      a = a | 0;
      b = b | 0;
      if ((i[a >> 0] | 0) != 66)
        return -1;
      if ((i[a + 1 >> 0] | 0) != 90)
        return -1;
      if ((i[a + 2 >> 0] | 0) == 104)
        return (((i[a + 3 >> 0] | 0) + -48 & 255) > 9) << 31 >> 31 | 0;
      else
        return -1;
      return 0;
    }
    function Zl(a, b, c, d) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      d = d | 0;
      var e = 0,
          f = 0,
          g = 0,
          h = 0,
          i = 0,
          j = 0,
          l = 0;
      l = r;
      r = r + 65600 | 0;
      h = l + 8 | 0;
      g = l + 56 | 0;
      j = l;
      k[h + 36 >> 2] = 52;
      k[h + 40 >> 2] = 52;
      if (lk(h, 0, 0) | 0) {
        d = -1;
        r = l;
        return d | 0;
      }
      k[h >> 2] = c;
      k[h + 4 >> 2] = d;
      f = h + 16 | 0;
      e = h + 20 | 0;
      a: while (1) {
        k[f >> 2] = g;
        k[e >> 2] = 65536;
        switch (nk(h) | 0) {
          case 0:
            break;
          case 4:
            break a;
          default:
            {
              i = 4;
              break a;
            }
        }
      }
      if ((i | 0) == 4) {
        ok(h) | 0;
        d = -1;
        r = l;
        return d | 0;
      }
      if (k[h + 28 >> 2] | 0) {
        ok(h) | 0;
        d = -2;
        r = l;
        return d | 0;
      }
      k[b >> 2] = k[h + 24 >> 2];
      ok(h) | 0;
      e = k[b >> 2] | 0;
      f = ir(e) | 0;
      k[a >> 2] = f;
      if (!f) {
        d = -2;
        r = l;
        return d | 0;
      }
      k[j >> 2] = e;
      d = ((pk(f, j, c, d, 0, 0) | 0) != 0) << 31 >> 31;
      r = l;
      return d | 0;
    }
    function _l(a, b) {
      a = a | 0;
      b = b | 0;
      return 0;
    }
    function $l(a, b, c, d) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      d = d | 0;
      k[a >> 2] = c;
      k[b >> 2] = d;
      return 0;
    }
    function am(a) {
      a = a | 0;
      var b = 0,
          c = 0,
          d = 0,
          e = 0,
          f = 0,
          g = 0;
      f = r;
      r = r + 4128 | 0;
      e = f + 8 | 0;
      d = f + 16 | 0;
      b = gi(a, 1, 0) | 0;
      Pd(a, 1);
      ve(a, -1001e3, 1001722) | 0;
      ve(a, 2, b) | 0;
      if (ce(a, -1) | 0) {
        r = f;
        return 1;
      }
      Pd(a, -2);
      ui(a, d);
      if ((ve(a, -1001001, 1001417) | 0) == 5)
        c = 1;
      else {
        Yh(a, 1007563, f) | 0;
        c = 1;
      }
      while (1) {
        if (!(ye(a, 3, c, ((c | 0) < 0) << 31 >> 31) | 0)) {
          Pd(a, -2);
          ri(d);
          g = de(a, -1, 0) | 0;
          k[e >> 2] = b;
          k[e + 4 >> 2] = g;
          Yh(a, 1007599, e) | 0;
        }
        me(a, b) | 0;
        Le(a, 1, 2, 0, 0);
        if ((Td(a, -2) | 0) == 6)
          break;
        if (!(Yd(a, -2) | 0))
          Pd(a, -3);
        else {
          Pd(a, -2);
          ti(d);
        }
        c = c + 1 | 0;
      }
      me(a, b) | 0;
      Qd(a, -2, 1);
      Le(a, 2, 1, 0, 0);
      if (Td(a, -1) | 0)
        Ee(a, 2, b);
      if (ve(a, 2, b) | 0) {
        r = f;
        return 1;
      }
      qe(a, 1);
      Sd(a, -1);
      Ee(a, 2, b);
      r = f;
      return 1;
    }
    function bm(a, b, c, d, e) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      d = d | 0;
      e = e | 0;
      var f = 0,
          g = 0,
          h = 0;
      h = r;
      r = r + 4128 | 0;
      f = h;
      g = h + 8 | 0;
      ui(a, g);
      if (!(i[d >> 0] | 0))
        d = b;
      else
        d = Hi(a, b, d, e) | 0;
      a: while (1) {
        switch (i[c >> 0] | 0) {
          case 0:
            {
              e = 12;
              break a;
            }
          case 59:
            {
              c = c + 1 | 0;
              continue a;
            }
          default:
            {}
        }
        e = Op(c, 59) | 0;
        if (!e)
          e = c + (yr(c | 0) | 0) | 0;
        le(a, c, e - c | 0) | 0;
        if (!e) {
          e = 12;
          break;
        }
        c = Hi(a, de(a, -1, 0) | 0, 1007823, d) | 0;
        Qd(a, -2, -1);
        Pd(a, -2);
        b = uc(c | 0, 1010315) | 0;
        if (b) {
          e = 10;
          break;
        }
        k[f >> 2] = c;
        oe(a, 1007825, f) | 0;
        Qd(a, -2, -1);
        Pd(a, -2);
        ti(g);
        c = e;
      }
      if ((e | 0) == 10) {
        gc(b | 0) | 0;
        g = c;
        r = h;
        return g | 0;
      } else if ((e | 0) == 12) {
        ri(g);
        g = 0;
        r = h;
        return g | 0;
      }
      return 0;
    }
    function cm(a, b, c) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      var d = 0,
          e = 0,
          f = 0,
          g = 0;
      g = r;
      r = r + 16 | 0;
      f = g + 8 | 0;
      e = g;
      c = Hi(a, c, 1015609, 1007751) | 0;
      d = Op(c, 45) | 0;
      do
        if (d) {
          c = le(a, c, d - c | 0) | 0;
          k[e >> 2] = c;
          c = dm(a, b, oe(a, 1007753, e) | 0) | 0;
          if ((c | 0) == 2) {
            c = d + 1 | 0;
            break;
          } else {
            f = c;
            r = g;
            return f | 0;
          }
        }
 while (0);
      k[f >> 2] = c;
      f = dm(a, b, oe(a, 1007753, f) | 0) | 0;
      r = g;
      return f | 0;
    }
    function dm(a, b, c) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      ze(a, -1001e3, 5220) | 0;
      ve(a, -1, b) | 0;
      b = fe(a, -1) | 0;
      Pd(a, -3);
      if (!b) {
        le(a, 1007764, 58) | 0;
        c = 1;
        return c | 0;
      }
      if ((i[c >> 0] | 0) == 42) {
        qe(a, 1);
        c = 0;
        return c | 0;
      } else {
        le(a, 1007764, 58) | 0;
        c = 2;
        return c | 0;
      }
      return 0;
    }
    function em(a) {
      a = a | 0;
      var b = 0;
      b = gi(a, 1, 0) | 0;
      b = dm(a, b, gi(a, 2, 0) | 0) | 0;
      if (!b) {
        a = 1;
        return a | 0;
      }
      ie(a);
      Qd(a, -2, 1);
      me(a, (b | 0) == 1 ? 1007892 : 1007899) | 0;
      a = 3;
      return a | 0;
    }
    function fm(a) {
      a = a | 0;
      var b = 0,
          c = 0,
          d = 0;
      d = gi(a, 1, 0) | 0;
      c = gi(a, 2, 0) | 0;
      b = fi(a, 3, 1015609, 0) | 0;
      if (bm(a, d, c, b, fi(a, 4, 1007673, 0) | 0) | 0) {
        d = 1;
        return d | 0;
      }
      ie(a);
      Qd(a, -2, 1);
      d = 2;
      return d | 0;
    }
    function gm(a) {
      a = a | 0;
      var b = 0,
          c = 0,
          d = 0,
          e = 0,
          f = 0,
          g = 0,
          h = 0,
          j = 0,
          l = 0,
          m = 0,
          n = 0,
          o = 0,
          p = 0,
          q = 0;
      q = r;
      r = r + 16 | 0;
      n = q;
      o = q + 4 | 0;
      p = gi(a, 1, o) | 0;
      d = mi(a, 2) | 0;
      c = O;
      j = (c | 0) > -1 | (c | 0) == -1 & d >>> 0 > 4294967295;
      j = ni(a, 3, j ? 1 : (k[o >> 2] | 0) + 1 | 0, j ? 0 : 0) | 0;
      g = O;
      l = k[o >> 2] | 0;
      if (!((g | 0) > -1 | (g | 0) == -1 & j >>> 0 > 4294967295))
        if (l >>> 0 < (0 - j | 0) >>> 0) {
          j = 0;
          g = 0;
          m = 6;
        } else {
          j = pr(j | 0, g | 0, 1, 0) | 0;
          j = pr(j | 0, O | 0, l | 0, 0) | 0;
          g = O;
          m = 4;
        }
      else
        m = 4;
      if ((m | 0) == 4)
        if ((g | 0) > 0 | (g | 0) == 0 & j >>> 0 > 0) {
          j = pr(j | 0, g | 0, -1, -1) | 0;
          g = O;
          if ((g | 0) > 0 | (g | 0) == 0 & j >>> 0 > l >>> 0)
            m = 6;
        } else
          m = 6;
      if ((m | 0) == 6)
        Xh(a, 3, 1007991) | 0;
      a: do
        if ((d | 0) == 0 & (c | 0) == 0)
          if ((g | 0) > 0 | (g | 0) == 0 & j >>> 0 > 0) {
            d = j;
            b = g;
            while (1) {
              if ((i[p + d >> 0] & -64) << 24 >> 24 != -128) {
                c = d;
                break a;
              }
              c = pr(d | 0, b | 0, -1, -1) | 0;
              e = O;
              if ((b | 0) > 0 | (b | 0) == 0 & d >>> 0 > 1) {
                d = c;
                b = e;
              } else {
                b = e;
                break;
              }
            }
          } else {
            c = j;
            b = g;
          }
        else {
          if ((i[p + j >> 0] & -64) << 24 >> 24 == -128)
            Yh(a, 1008013, n) | 0;
          b: do
            if ((c | 0) < 0) {
              if ((g | 0) > 0 | (g | 0) == 0 & j >>> 0 > 0) {
                f = j;
                b = g;
                c: while (1) {
                  e = b;
                  while (1) {
                    g = pr(f | 0, e | 0, -1, -1) | 0;
                    b = O;
                    e = (e | 0) > 0 | (e | 0) == 0 & f >>> 0 > 1;
                    if (!e) {
                      f = g;
                      break c;
                    }
                    if ((i[p + g >> 0] & -64) << 24 >> 24 == -128) {
                      f = g;
                      e = b;
                    } else {
                      f = g;
                      break;
                    }
                  }
                  g = pr(d | 0, c | 0, 1, 0) | 0;
                  h = O;
                  if (((c | 0) < -1 | (c | 0) == -1 & d >>> 0 < 4294967295) & e) {
                    d = g;
                    c = h;
                  } else {
                    e = g;
                    m = 25;
                    break b;
                  }
                }
                e = pr(d | 0, c | 0, 1, 0) | 0;
                h = O;
                m = 25;
              }
            } else {
              e = pr(d | 0, c | 0, -1, -1) | 0;
              h = O;
              if ((c | 0) > 0 | (c | 0) == 0 & d >>> 0 > 1) {
                l = k[o >> 2] | 0;
                c = e;
                b = g;
                d = j;
                while (1) {
                  if (!((b | 0) < 0 | (b | 0) == 0 & d >>> 0 < l >>> 0)) {
                    e = c;
                    f = d;
                    m = 25;
                    break b;
                  }
                  do {
                    d = pr(d | 0, b | 0, 1, 0) | 0;
                    b = O;
                  } while ((i[p + d >> 0] & -64) << 24 >> 24 == -128);
                  e = pr(c | 0, h | 0, -1, -1) | 0;
                  f = O;
                  if ((h | 0) > 0 | (h | 0) == 0 & c >>> 0 > 1) {
                    c = e;
                    h = f;
                  } else {
                    h = f;
                    f = d;
                    m = 25;
                    break;
                  }
                }
              } else {
                f = j;
                b = g;
                m = 25;
              }
            }
 while (0);
          if ((m | 0) == 25 ? (e | 0) == 0 & (h | 0) == 0 : 0) {
            c = f;
            break;
          }
          ie(a);
          r = q;
          return 1;
        }
 while (0);
      p = pr(c | 0, b | 0, 1, 0) | 0;
      ke(a, p, O);
      r = q;
      return 1;
    }
    function hm(a) {
      a = a | 0;
      var b = 0,
          c = 0,
          d = 0,
          e = 0,
          f = 0,
          g = 0,
          h = 0,
          j = 0,
          m = 0,
          n = 0,
          o = 0,
          p = 0;
      o = r;
      r = r + 16 | 0;
      m = o + 8 | 0;
      h = o;
      g = o + 12 | 0;
      j = gi(a, 1, g) | 0;
      d = ni(a, 2, 1, 0) | 0;
      e = O;
      c = k[g >> 2] | 0;
      if (!((e | 0) > -1 | (e | 0) == -1 & d >>> 0 > 4294967295))
        if (c >>> 0 < (0 - d | 0) >>> 0) {
          d = 0;
          e = 0;
        } else {
          d = pr(d | 0, e | 0, 1, 0) | 0;
          d = pr(d | 0, O | 0, c | 0, 0) | 0;
          e = O;
        }
      b = ni(a, 3, d, e) | 0;
      f = O;
      c = k[g >> 2] | 0;
      if (!((f | 0) > -1 | (f | 0) == -1 & b >>> 0 > 4294967295))
        if (c >>> 0 < (0 - b | 0) >>> 0) {
          f = 0;
          b = 0;
        } else {
          b = pr(b | 0, f | 0, 1, 0) | 0;
          b = pr(b | 0, O | 0, c | 0, 0) | 0;
          f = O;
        }
      if (!((e | 0) > 0 | (e | 0) == 0 & d >>> 0 > 0)) {
        Xh(a, 2, 1007978) | 0;
        c = k[g >> 2] | 0;
      }
      if ((f | 0) > 0 | (f | 0) == 0 & b >>> 0 > c >>> 0)
        Xh(a, 3, 1007978) | 0;
      if ((f | 0) < (e | 0) | (f | 0) == (e | 0) & b >>> 0 < d >>> 0) {
        n = 0;
        r = o;
        return n | 0;
      }
      c = or(1, 0, d | 0, e | 0) | 0;
      c = pr(c | 0, O | 0, b | 0, f | 0) | 0;
      g = pr(c | 0, ((c | 0) < 0) << 31 >> 31 | 0, d | 0, e | 0) | 0;
      p = O;
      if (!((p | 0) > (f | 0) | (p | 0) == (f | 0) & g >>> 0 > b >>> 0)) {
        p = Yh(a, 1009424, h) | 0;
        r = o;
        return p | 0;
      }
      hi(a, c, 1009424);
      h = j + b | 0;
      d = pr(d | 0, e | 0, -1, 0) | 0;
      if ((d | 0) >= (b | 0)) {
        p = 0;
        r = o;
        return p | 0;
      }
      b = 0;
      d = j + d | 0;
      a: while (1) {
        p = i[d >> 0] | 0;
        c = p & 255;
        if (p << 24 >> 24 <= -1) {
          if (!(c & 64)) {
            f = 0;
            e = 0;
          } else {
            f = 0;
            e = 0;
            while (1) {
              g = f + 1 | 0;
              f = l[d + g >> 0] | 0;
              if ((f & 192 | 0) != 128)
                break a;
              e = f & 63 | e << 6;
              c = c << 1;
              if (!(c & 64)) {
                f = g;
                break;
              } else
                f = g;
            }
          }
          c = (c & 127) << f * 5 | e;
          if ((f | 0) > 3 | c >>> 0 > 1114111)
            break;
          if (c >>> 0 <= (k[18076 + (f << 2) >> 2] | 0) >>> 0)
            break;
          d = d + f | 0;
        }
        d = d + 1 | 0;
        ke(a, c, ((c | 0) < 0) << 31 >> 31);
        b = b + 1 | 0;
        if (d >>> 0 >= h >>> 0) {
          n = 25;
          break;
        }
      }
      if ((n | 0) == 25) {
        r = o;
        return b | 0;
      }
      p = Yh(a, 1007927, m) | 0;
      r = o;
      return p | 0;
    }
    function im(a) {
      a = a | 0;
      var b = 0,
          c = 0,
          d = 0,
          e = 0,
          f = 0,
          g = 0,
          h = 0;
      g = r;
      r = r + 4128 | 0;
      f = g + 8 | 0;
      c = g;
      e = g + 16 | 0;
      d = Od(a) | 0;
      if ((d | 0) == 1) {
        b = mi(a, 1) | 0;
        f = O;
        if (!(f >>> 0 < 0 | (f | 0) == 0 & b >>> 0 < 1114112))
          Xh(a, 1, 1009405) | 0;
        k[c >> 2] = b;
        oe(a, 1007975, c) | 0;
        r = g;
        return 1;
      }
      ui(a, e);
      if ((d | 0) >= 1) {
        c = 1;
        while (1) {
          b = mi(a, c) | 0;
          h = O;
          if (!(h >>> 0 < 0 | (h | 0) == 0 & b >>> 0 < 1114112))
            Xh(a, c, 1009405) | 0;
          k[f >> 2] = b;
          oe(a, 1007975, f) | 0;
          ti(e);
          if ((c | 0) == (d | 0))
            break;
          else
            c = c + 1 | 0;
        }
      }
      ri(e);
      r = g;
      return 1;
    }
    function jm(a) {
      a = a | 0;
      var b = 0,
          c = 0,
          d = 0,
          e = 0,
          f = 0,
          g = 0,
          h = 0,
          j = 0,
          m = 0,
          n = 0,
          o = 0,
          p = 0;
      p = r;
      r = r + 16 | 0;
      h = p;
      n = gi(a, 1, h) | 0;
      d = ni(a, 2, 1, 0) | 0;
      c = O;
      b = k[h >> 2] | 0;
      if (!((c | 0) > -1 | (c | 0) == -1 & d >>> 0 > 4294967295))
        if (b >>> 0 < (0 - d | 0) >>> 0) {
          c = 0;
          d = 0;
        } else {
          d = pr(d | 0, c | 0, 1, 0) | 0;
          d = pr(d | 0, O | 0, b | 0, 0) | 0;
          c = O;
        }
      b = ni(a, 3, -1, -1) | 0;
      e = O;
      g = k[h >> 2] | 0;
      if (!((e | 0) > -1 | (e | 0) == -1 & b >>> 0 > 4294967295))
        if (g >>> 0 < (0 - b | 0) >>> 0) {
          b = 0;
          e = 0;
        } else {
          b = pr(b | 0, e | 0, 1, 0) | 0;
          b = pr(b | 0, O | 0, g | 0, 0) | 0;
          e = O;
        }
      if ((c | 0) > 0 | (c | 0) == 0 & d >>> 0 > 0) {
        d = pr(d | 0, c | 0, -1, -1) | 0;
        c = O;
        if ((c | 0) > 0 | (c | 0) == 0 & d >>> 0 > g >>> 0)
          o = 9;
      } else
        o = 9;
      if ((o | 0) == 9) {
        Xh(a, 2, 1008383) | 0;
        g = k[h >> 2] | 0;
      }
      j = pr(b | 0, e | 0, -1, -1) | 0;
      m = O;
      if ((e | 0) > 0 | (e | 0) == 0 & b >>> 0 > g >>> 0)
        Xh(a, 3, 1007946) | 0;
      do
        if ((c | 0) > (m | 0) | (c | 0) == (m | 0) & d >>> 0 > j >>> 0) {
          c = 0;
          b = 0;
        } else {
          b = 0;
          a: while (1) {
            h = i[n + d >> 0] | 0;
            e = h & 255;
            if (h << 24 >> 24 > -1)
              f = d;
            else {
              if (!(e & 64)) {
                g = 0;
                f = 0;
              } else {
                g = 0;
                f = 0;
                while (1) {
                  h = g + 1 | 0;
                  g = l[n + (h + d) >> 0] | 0;
                  if ((g & 192 | 0) != 128) {
                    b = d;
                    break a;
                  }
                  f = g & 63 | f << 6;
                  e = e << 1;
                  if (!(e & 64)) {
                    g = h;
                    break;
                  } else
                    g = h;
                }
              }
              e = (e & 127) << g * 5 | f;
              if ((g | 0) > 3 | e >>> 0 > 1114111) {
                b = d;
                break;
              }
              if (e >>> 0 <= (k[18076 + (g << 2) >> 2] | 0) >>> 0) {
                b = d;
                break;
              }
              f = g + d | 0;
            }
            e = d;
            d = f + 1 | 0;
            if (!(n + d | 0)) {
              b = e;
              break;
            }
            c = ((d | 0) < 0) << 31 >> 31;
            b = b + 1 | 0;
            if ((c | 0) > (m | 0) | (c | 0) == (m | 0) & d >>> 0 > j >>> 0) {
              o = 23;
              break;
            }
          }
          if ((o | 0) == 23) {
            c = b;
            b = ((b | 0) < 0) << 31 >> 31;
            break;
          }
          ie(a);
          o = pr(b | 0, c | 0, 1, 0) | 0;
          ke(a, o, O);
          a = 2;
          r = p;
          return a | 0;
        }
 while (0);
      ke(a, c, b);
      a = 1;
      r = p;
      return a | 0;
    }
    function km(a) {
      a = a | 0;
      gi(a, 1, 0) | 0;
      pe(a, 227, 0);
      Sd(a, 1);
      ke(a, 0, 0);
      return 3;
    }
    function lm(a) {
      a = a | 0;
      var b = 0,
          c = 0,
          d = 0,
          e = 0,
          f = 0,
          g = 0,
          h = 0,
          j = 0,
          m = 0,
          n = 0,
          o = 0,
          p = 0,
          q = 0;
      q = r;
      r = r + 16 | 0;
      o = q;
      f = q + 4 | 0;
      h = gi(a, 1, f) | 0;
      d = be(a, 2, 0) | 0;
      c = O;
      if (!((c | 0) < 0 | (c | 0) == 0 & d >>> 0 < 1)) {
        e = pr(d | 0, c | 0, -1, -1) | 0;
        b = k[f >> 2] | 0;
        if ((c | 0) > 0 | (c | 0) == 0 & d >>> 0 > b >>> 0)
          c = O;
        else {
          e = d;
          while (1) {
            g = (i[h + e >> 0] & -64) << 24 >> 24 == -128;
            d = pr(e | 0, c | 0, 1, 0) | 0;
            if (g) {
              e = d;
              c = O;
            } else
              break;
          }
        }
      } else {
        c = 0;
        e = 0;
        b = k[f >> 2] | 0;
      }
      if (!((c | 0) < 0 | (c | 0) == 0 & e >>> 0 < b >>> 0)) {
        p = 0;
        r = q;
        return p | 0;
      }
      g = i[h + e >> 0] | 0;
      b = g & 255;
      a: do
        if (g << 24 >> 24 <= -1) {
          if (!(b & 64)) {
            f = 0;
            d = 0;
          } else {
            f = 0;
            d = 0;
            while (1) {
              g = f + 1 | 0;
              f = l[h + (g + e) >> 0] | 0;
              if ((f & 192 | 0) != 128)
                break a;
              d = f & 63 | d << 6;
              b = b << 1;
              if (!(b & 64)) {
                f = g;
                break;
              } else
                f = g;
            }
          }
          d = (b & 127) << f * 5 | d;
          if (!((f | 0) > 3 | d >>> 0 > 1114111) ? d >>> 0 > (k[18076 + (f << 2) >> 2] | 0) >>> 0 : 0) {
            j = f + e | 0;
            n = d;
            p = 13;
          }
        } else {
          j = e;
          n = b;
          p = 13;
        }
 while (0);
      if (((p | 0) == 13 ? (m = h + (j + 1) | 0, (m | 0) != 0) : 0) ? (i[m >> 0] & -64) << 24 >> 24 != -128 : 0) {
        p = pr(e | 0, c | 0, 1, 0) | 0;
        ke(a, p, O);
        ke(a, n, ((n | 0) < 0) << 31 >> 31);
        p = 2;
        r = q;
        return p | 0;
      }
      p = Yh(a, 1007927, o) | 0;
      r = q;
      return p | 0;
    }
    function mm(a) {
      a = a | 0;
      var b = 0,
          c = 0,
          d = 0,
          e = 0,
          f = 0,
          g = 0,
          h = 0,
          i = 0,
          j = 0,
          l = 0,
          m = 0,
          n = 0,
          o = 0;
      n = r;
      r = r + 4160 | 0;
      m = n + 16 | 0;
      l = n;
      i = n + 4152 | 0;
      g = n + 40 | 0;
      h = n + 32 | 0;
      d = fi(a, 2, 1008077, h) | 0;
      tm(a, i);
      b = ni(a, 3, 1, 0) | 0;
      c = O;
      if ((Td(a, 4) | 0) < 1) {
        f = Ci(a, 1) | 0;
        e = O;
      } else {
        f = mi(a, 4) | 0;
        e = O;
      }
      ui(a, g);
      if (!((c | 0) < (e | 0) | (c | 0) == (e | 0) & b >>> 0 < f >>> 0)) {
        if (!((b | 0) == (f | 0) & (c | 0) == (e | 0))) {
          ri(g);
          r = n;
          return 1;
        }
      } else {
        j = k[i >> 2] | 0;
        do {
          qd[j & 63](a, 1, b, c) | 0;
          if (!(Yd(a, -1) | 0)) {
            o = Ud(a, Td(a, -1) | 0) | 0;
            k[l >> 2] = o;
            o = l + 8 | 0;
            k[o >> 2] = b;
            k[o + 4 >> 2] = c;
            Yh(a, 1008237, l) | 0;
          }
          ti(g);
          pi(g, d, k[h >> 2] | 0);
          b = pr(b | 0, c | 0, 1, 0) | 0;
          c = O;
        } while ((c | 0) < (e | 0) | (c | 0) == (e | 0) & b >>> 0 < f >>> 0);
      }
      qd[k[i >> 2] & 63](a, 1, f, e) | 0;
      if (!(Yd(a, -1) | 0)) {
        o = Ud(a, Td(a, -1) | 0) | 0;
        k[m >> 2] = o;
        o = m + 8 | 0;
        k[o >> 2] = f;
        k[o + 4 >> 2] = e;
        Yh(a, 1008237, m) | 0;
      }
      ti(g);
      ri(g);
      r = n;
      return 1;
    }
    function nm(a) {
      a = a | 0;
      var b = 0,
          c = 0,
          d = 0,
          e = 0,
          f = 0,
          g = 0,
          h = 0,
          i = 0,
          j = 0,
          l = 0;
      j = r;
      r = r + 16 | 0;
      i = j + 8 | 0;
      tm(a, i);
      e = Ci(a, 1) | 0;
      f = O;
      h = pr(e | 0, f | 0, 1, 0) | 0;
      d = O;
      switch (Od(a) | 0) {
        case 3:
          {
            g = 2;
            break;
          }
        case 2:
          {
            c = h;
            b = d;
            break;
          }
        default:
          {
            i = Yh(a, 1008199, j) | 0;
            r = j;
            return i | 0;
          }
      }
      if ((g | 0) == 2) {
        c = mi(a, 2) | 0;
        b = O;
        if ((b | 0) < 0 | (b | 0) == 0 & c >>> 0 < 1 | ((b | 0) > (d | 0) | (b | 0) == (d | 0) & c >>> 0 > h >>> 0))
          Xh(a, 2, 1008147) | 0;
        if (!((f | 0) < (b | 0) | (f | 0) == (b | 0) & e >>> 0 < c >>> 0)) {
          g = k[i >> 2] | 0;
          e = k[i + 4 >> 2] | 0;
          f = h;
          do {
            l = f;
            f = pr(f | 0, d | 0, -1, -1) | 0;
            h = d;
            d = O;
            qd[g & 63](a, 1, f, d) | 0;
            td[e & 63](a, 1, l, h);
          } while ((d | 0) > (b | 0) | (d | 0) == (b | 0) & f >>> 0 > c >>> 0);
        }
      }
      td[k[i + 4 >> 2] & 63](a, 1, c, b);
      l = 0;
      r = j;
      return l | 0;
    }
    function om(a) {
      a = a | 0;
      var b = 0,
          c = 0;
      b = Od(a) | 0;
      Ae(a, b, 1);
      Qd(a, 1, 1);
      if ((b | 0) > 0) {
        c = b;
        while (1) {
          He(a, 1, c, ((c | 0) < 0) << 31 >> 31);
          if ((c | 0) > 1)
            c = c + -1 | 0;
          else
            break;
        }
      }
      ke(a, b, ((b | 0) < 0) << 31 >> 31);
      Ee(a, 1, 1008197);
      return 1;
    }
    function pm(a) {
      a = a | 0;
      var b = 0,
          c = 0,
          d = 0,
          e = 0,
          f = 0,
          g = 0,
          h = 0,
          i = 0,
          j = 0,
          l = 0;
      l = r;
      r = r + 16 | 0;
      h = l;
      g = l + 8 | 0;
      tm(a, g);
      d = ni(a, 2, 1, 0) | 0;
      c = O;
      if ((Td(a, 3) | 0) < 1) {
        i = Ci(a, 1) | 0;
        j = O;
      } else {
        i = mi(a, 3) | 0;
        j = O;
      }
      if ((j | 0) < (c | 0) | (j | 0) == (c | 0) & i >>> 0 < d >>> 0) {
        a = 0;
        r = l;
        return a | 0;
      }
      e = or(i | 0, j | 0, d | 0, c | 0) | 0;
      f = O;
      if (!(f >>> 0 > 0 | (f | 0) == 0 & e >>> 0 > 2147483646) ? (b = pr(e | 0, f | 0, 1, 0) | 0, (Kd(a, b) | 0) != 0) : 0) {
        e = k[g >> 2] | 0;
        while (1) {
          qd[e & 63](a, 1, d, c) | 0;
          h = d;
          d = pr(d | 0, c | 0, 1, 0) | 0;
          if (!((c | 0) < (j | 0) | (c | 0) == (j | 0) & h >>> 0 < i >>> 0))
            break;
          else
            c = O;
        }
        r = l;
        return b | 0;
      }
      a = Yh(a, 1008170, h) | 0;
      r = l;
      return a | 0;
    }
    function qm(a) {
      a = a | 0;
      var b = 0,
          c = 0,
          d = 0,
          e = 0,
          f = 0,
          g = 0,
          h = 0,
          i = 0,
          j = 0;
      h = r;
      r = r + 16 | 0;
      e = h;
      tm(a, e);
      c = Ci(a, 1) | 0;
      b = O;
      f = ni(a, 2, c, b) | 0;
      d = O;
      if (!((f | 0) == (c | 0) & (d | 0) == (b | 0)) ? (g = pr(c | 0, b | 0, 1, 0) | 0, i = O, (d | 0) < 0 | (d | 0) == 0 & f >>> 0 < 1 | ((d | 0) > (i | 0) | (d | 0) == (i | 0) & f >>> 0 > g >>> 0)) : 0)
        Xh(a, 1, 1008147) | 0;
      g = k[e >> 2] | 0;
      qd[g & 63](a, 1, f, d) | 0;
      e = k[e + 4 >> 2] | 0;
      if (!((d | 0) < (b | 0) | (d | 0) == (b | 0) & f >>> 0 < c >>> 0)) {
        g = f;
        i = d;
        ie(a);
        td[e & 63](a, 1, g, i);
        r = h;
        return 1;
      }
      do {
        j = f;
        f = pr(f | 0, d | 0, 1, 0) | 0;
        i = d;
        d = O;
        qd[g & 63](a, 1, f, d) | 0;
        td[e & 63](a, 1, j, i);
      } while ((d | 0) < (b | 0) | (d | 0) == (b | 0) & f >>> 0 < c >>> 0);
      ie(a);
      td[e & 63](a, 1, c, b);
      r = h;
      return 1;
    }
    function rm(a) {
      a = a | 0;
      var b = 0,
          c = 0,
          d = 0,
          e = 0,
          f = 0,
          g = 0,
          h = 0,
          i = 0,
          j = 0,
          k = 0,
          l = 0,
          m = 0;
      f = mi(a, 2) | 0;
      g = O;
      b = mi(a, 3) | 0;
      c = O;
      i = mi(a, 4) | 0;
      k = O;
      l = (Td(a, 5) | 0) > 0;
      l = l ? 5 : 1;
      if (!((g | 0) > 0 | (g | 0) == 0 & f >>> 0 > 0))
        Xh(a, 2, 1008113) | 0;
      if ((c | 0) < (g | 0) | (c | 0) == (g | 0) & b >>> 0 < f >>> 0) {
        Sd(a, l);
        return 1;
      }
      if (!(Ai(a, 1, 1011538) | 0)) {
        ii(a, 1, 5);
        h = 47;
      } else
        h = 46;
      if (!(Ai(a, l, 1011546) | 0)) {
        ii(a, l, 5);
        j = 47;
      } else
        j = 46;
      e = or(b | 0, c | 0, f | 0, g | 0) | 0;
      c = O;
      b = (c | 0) > -1 | (c | 0) == -1 & e >>> 0 > 4294967295;
      if ((k | 0) > (g | 0) | (k | 0) == (g | 0) & i >>> 0 > f >>> 0) {
        if (b)
          b = e;
        else {
          Sd(a, l);
          return 1;
        }
        while (1) {
          e = pr(b | 0, c | 0, f | 0, g | 0) | 0;
          qd[h & 63](a, 1, e, O) | 0;
          e = pr(b | 0, c | 0, i | 0, k | 0) | 0;
          td[j & 63](a, l, e, O);
          e = b;
          b = pr(b | 0, c | 0, -1, -1) | 0;
          if (!((c | 0) > 0 | (c | 0) == 0 & e >>> 0 > 0))
            break;
          else
            c = O;
        }
        Sd(a, l);
        return 1;
      } else {
        if (b) {
          b = 0;
          d = 0;
        } else {
          Sd(a, l);
          return 1;
        }
        while (1) {
          m = pr(b | 0, d | 0, f | 0, g | 0) | 0;
          qd[h & 63](a, 1, m, O) | 0;
          m = pr(b | 0, d | 0, i | 0, k | 0) | 0;
          td[j & 63](a, l, m, O);
          m = b;
          b = pr(b | 0, d | 0, 1, 0) | 0;
          if (!((d | 0) < (c | 0) | (d | 0) == (c | 0) & m >>> 0 < e >>> 0))
            break;
          else
            d = O;
        }
        Sd(a, l);
        return 1;
      }
      return 0;
    }
    function sm(a) {
      a = a | 0;
      var b = 0,
          c = 0,
          d = 0;
      d = r;
      r = r + 16 | 0;
      c = d;
      tm(a, c);
      b = Ci(a, 1) | 0;
      hi(a, 50, 1008077);
      if ((Td(a, 2) | 0) >= 1)
        ii(a, 2, 6);
      Pd(a, 2);
      um(a, c, 1, b);
      r = d;
      return 0;
    }
    function tm(a, b) {
      a = a | 0;
      b = b | 0;
      var c = 0;
      k[b >> 2] = 0;
      c = b + 4 | 0;
      k[c >> 2] = 0;
      if (Be(a, 1) | 0) {
        le(a, 1011538, 7) | 0;
        if (xe(a, -2) | 0)
          k[b >> 2] = 46;
        le(a, 1011546, 10) | 0;
        if (xe(a, -3) | 0)
          k[c >> 2] = 46;
        Pd(a, -4);
      }
      if ((k[b >> 2] | 0) != 0 ? (k[c >> 2] | 0) != 0 : 0)
        return ;
      ii(a, 1, 5);
      if (!(k[b >> 2] | 0))
        k[b >> 2] = 47;
      if (k[c >> 2] | 0)
        return ;
      k[c >> 2] = 47;
      return ;
    }
    function um(a, b, c, d) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      d = d | 0;
      var e = 0,
          f = 0,
          g = 0,
          h = 0,
          i = 0,
          j = 0,
          l = 0,
          m = 0,
          n = 0,
          o = 0,
          p = 0,
          q = 0,
          s = 0,
          t = 0,
          u = 0;
      u = r;
      r = r + 16 | 0;
      t = u + 8 | 0;
      s = u;
      if ((d | 0) <= (c | 0)) {
        r = u;
        return ;
      }
      q = b + 4 | 0;
      while (1) {
        f = ((c | 0) < 0) << 31 >> 31;
        qd[k[b >> 2] & 63](a, 1, c, f) | 0;
        g = ((d | 0) < 0) << 31 >> 31;
        qd[k[b >> 2] & 63](a, 1, d, g) | 0;
        if (!(vm(a, -1, -2) | 0))
          Pd(a, -3);
        else {
          td[k[q >> 2] & 63](a, 1, c, f);
          td[k[q >> 2] & 63](a, 1, d, g);
        }
        e = d - c | 0;
        if ((e | 0) == 1) {
          c = 25;
          break;
        }
        h = (d + c | 0) / 2 | 0;
        i = ((h | 0) < 0) << 31 >> 31;
        qd[k[b >> 2] & 63](a, 1, h, i) | 0;
        qd[k[b >> 2] & 63](a, 1, c, f) | 0;
        do
          if (!(vm(a, -2, -1) | 0)) {
            Pd(a, -2);
            qd[k[b >> 2] & 63](a, 1, d, g) | 0;
            if (!(vm(a, -1, -2) | 0)) {
              Pd(a, -3);
              break;
            } else {
              td[k[q >> 2] & 63](a, 1, h, i);
              td[k[q >> 2] & 63](a, 1, d, g);
              break;
            }
          } else {
            td[k[q >> 2] & 63](a, 1, h, i);
            td[k[q >> 2] & 63](a, 1, c, f);
          }
 while (0);
        if ((e | 0) == 2) {
          c = 25;
          break;
        }
        qd[k[b >> 2] & 63](a, 1, h, i) | 0;
        Sd(a, -1);
        o = d + -1 | 0;
        p = ((o | 0) < 0) << 31 >> 31;
        qd[k[b >> 2] & 63](a, 1, o, p) | 0;
        td[k[q >> 2] & 63](a, 1, h, i);
        td[k[q >> 2] & 63](a, 1, o, p);
        h = c;
        j = o;
        while (1) {
          g = h + 1 | 0;
          i = ((g | 0) < 0) << 31 >> 31;
          qd[k[b >> 2] & 63](a, 1, g, i) | 0;
          if (!(vm(a, -1, -2) | 0)) {
            f = g;
            n = g;
            g = h;
          } else
            while (1) {
              if ((d | 0) <= (g | 0))
                Yh(a, 1008078, s) | 0;
              Pd(a, -2);
              i = g + 1 | 0;
              h = ((i | 0) < 0) << 31 >> 31;
              qd[k[b >> 2] & 63](a, 1, i, h) | 0;
              if (!(vm(a, -1, -2) | 0)) {
                f = i;
                n = i;
                i = h;
                break;
              } else
                g = i;
            }
          h = j + -1 | 0;
          e = ((h | 0) < 0) << 31 >> 31;
          qd[k[b >> 2] & 63](a, 1, h, e) | 0;
          if (!(vm(a, -3, -1) | 0)) {
            m = h;
            l = h;
            h = j;
          } else
            while (1) {
              if ((h | 0) <= (c | 0))
                Yh(a, 1008078, t) | 0;
              Pd(a, -2);
              e = h + -1 | 0;
              j = ((e | 0) < 0) << 31 >> 31;
              qd[k[b >> 2] & 63](a, 1, e, j) | 0;
              if (!(vm(a, -3, -1) | 0)) {
                m = e;
                l = e;
                e = j;
                break;
              } else
                h = e;
            }
          if ((h | 0) <= (f | 0)) {
            h = n;
            break;
          }
          td[k[q >> 2] & 63](a, 1, n, i);
          td[k[q >> 2] & 63](a, 1, l, e);
          h = f;
          j = m;
        }
        Pd(a, -4);
        qd[k[b >> 2] & 63](a, 1, o, p) | 0;
        qd[k[b >> 2] & 63](a, 1, h, i) | 0;
        td[k[q >> 2] & 63](a, 1, o, p);
        td[k[q >> 2] & 63](a, 1, h, i);
        o = (f - c | 0) < (d - f | 0);
        n = g + 2 | 0;
        m = c;
        c = o ? n : c;
        p = d;
        d = o ? d : g;
        um(a, b, o ? m : n, o ? g : p);
        if ((d | 0) <= (c | 0)) {
          c = 25;
          break;
        }
      }
      if ((c | 0) == 25) {
        r = u;
        return ;
      }
    }
    function vm(a, b, c) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      if (!(Td(a, 2) | 0)) {
        c = _d(a, b, c, 1) | 0;
        return c | 0;
      } else {
        Sd(a, 2);
        Sd(a, b + -1 | 0);
        Sd(a, c + -2 | 0);
        Le(a, 2, 1, 0, 0);
        c = ce(a, -1) | 0;
        Pd(a, -2);
        return c | 0;
      }
      return 0;
    }
    function wm(a) {
      a = a | 0;
      var b = 0,
          c = 0,
          d = 0,
          e = 0,
          f = 0,
          g = 0,
          h = 0,
          i = 0,
          j = 0,
          m = 0,
          n = 0,
          o = 0,
          p = 0,
          q = 0,
          s = 0;
      p = r;
      r = r + 16 | 0;
      n = p;
      e = p + 4 | 0;
      o = gi(a, 1, e) | 0;
      b = ni(a, 2, 1, 0) | 0;
      d = O;
      c = k[e >> 2] | 0;
      if (!((d | 0) > -1 | (d | 0) == -1 & b >>> 0 > 4294967295))
        if (c >>> 0 < (0 - b | 0) >>> 0) {
          m = 0;
          d = 0;
        } else {
          m = pr(b | 0, d | 0, 1, 0) | 0;
          m = pr(m | 0, O | 0, c | 0, 0) | 0;
          d = O;
        }
      else
        m = b;
      b = ni(a, 3, m, d) | 0;
      c = O;
      j = k[e >> 2] | 0;
      if (!((c | 0) > -1 | (c | 0) == -1 & b >>> 0 > 4294967295))
        if (j >>> 0 < (0 - b | 0) >>> 0) {
          c = 0;
          i = 0;
        } else {
          i = pr(b | 0, c | 0, 1, 0) | 0;
          i = pr(i | 0, O | 0, j | 0, 0) | 0;
          c = O;
        }
      else
        i = b;
      e = (d | 0) < 0 | (d | 0) == 0 & m >>> 0 < 1;
      f = e ? 1 : m;
      e = e ? 0 : d;
      h = (c | 0) > 0 | (c | 0) == 0 & i >>> 0 > j >>> 0;
      g = h ? j : i;
      h = h ? 0 : c;
      if ((h | 0) < (e | 0) | (h | 0) == (e | 0) & g >>> 0 < f >>> 0) {
        a = 0;
        r = p;
        return a | 0;
      }
      b = or(1, 0, f | 0, e | 0) | 0;
      b = pr(b | 0, O | 0, g | 0, h | 0) | 0;
      q = pr(b | 0, ((b | 0) < 0) << 31 >> 31 | 0, f | 0, e | 0) | 0;
      s = O;
      if (!((s | 0) > (h | 0) | (s | 0) == (h | 0) & q >>> 0 > g >>> 0)) {
        s = Yh(a, 1009424, n) | 0;
        r = p;
        return s | 0;
      }
      hi(a, b, 1009424);
      if ((b | 0) <= 0) {
        s = b;
        r = p;
        return s | 0;
      }
      e = pr(f | 0, e | 0, -1, 0) | 0;
      f = O;
      s = 0 > (c | 0) | 0 == (c | 0) & j >>> 0 > i >>> 0;
      s = pr((s ? i : j) | 0, (s ? c : 0) | 0, 1, 0) | 0;
      c = (d | 0) > 0 | (d | 0) == 0 & m >>> 0 > 1;
      c = or(s | 0, O | 0, (c ? m : 1) | 0, (c ? d : 0) | 0) | 0;
      d = 0;
      do {
        s = pr(e | 0, f | 0, d | 0, 0) | 0;
        ke(a, l[o + s >> 0] | 0, 0);
        d = d + 1 | 0;
      } while ((d | 0) != (c | 0));
      r = p;
      return b | 0;
    }
    function xm(a) {
      a = a | 0;
      var b = 0,
          c = 0,
          d = 0,
          e = 0,
          f = 0,
          g = 0;
      g = r;
      r = r + 4112 | 0;
      e = g;
      b = Od(a) | 0;
      c = vi(a, e, b) | 0;
      if ((b | 0) < 1) {
        si(e, b);
        r = g;
        return 1;
      } else
        f = 1;
      while (1) {
        d = mi(a, f) | 0;
        if (!((d & 255 | 0) == (d | 0) & 0 == (O | 0)))
          Xh(a, f, 1009405) | 0;
        i[c + (f + -1) >> 0] = d;
        if ((f | 0) == (b | 0))
          break;
        else
          f = f + 1 | 0;
      }
      si(e, b);
      r = g;
      return 1;
    }
    function ym(a) {
      a = a | 0;
      var b = 0,
          c = 0,
          d = 0;
      c = r;
      r = r + 4128 | 0;
      b = c + 8 | 0;
      d = ce(a, 2) | 0;
      ii(a, 1, 6);
      Pd(a, 1);
      ui(a, b);
      if (!(Oe(a, 48, b, d) | 0)) {
        ri(b);
        d = 1;
        r = c;
        return d | 0;
      } else {
        d = Yh(a, 1009375, c) | 0;
        r = c;
        return d | 0;
      }
      return 0;
    }
    function zm(a) {
      a = a | 0;
      return Qm(a, 1) | 0;
    }
    function Am(a) {
      a = a | 0;
      var b = 0,
          c = 0,
          d = 0,
          e = 0,
          f = 0,
          g = 0,
          h = 0,
          j = 0,
          m = 0,
          n = 0,
          o = 0,
          q = 0,
          s = 0,
          t = 0,
          u = 0,
          v = 0,
          w = 0,
          x = 0,
          y = 0,
          z = 0,
          A = 0,
          B = 0,
          C = 0,
          D = 0,
          E = 0,
          F = 0,
          G = 0,
          H = 0,
          I = 0,
          J = 0,
          K = 0.0;
      J = r;
      r = r + 4224 | 0;
      I = J + 64 | 0;
      D = J + 16 | 0;
      C = J + 8 | 0;
      B = J + 32 | 0;
      G = J + 56 | 0;
      F = J;
      E = J + 24 | 0;
      A = J + 48 | 0;
      z = J + 40 | 0;
      y = J + 4188 | 0;
      v = J + 4210 | 0;
      t = J + 4184 | 0;
      u = J + 72 | 0;
      w = J + 4192 | 0;
      x = J + 68 | 0;
      m = Od(a) | 0;
      b = gi(a, 1, t) | 0;
      t = k[t >> 2] | 0;
      n = b + t | 0;
      ui(a, u);
      a: do
        if ((t | 0) > 0) {
          o = u + 8 | 0;
          q = u + 4 | 0;
          s = w + 1 | 0;
          t = 1;
          h = b;
          b: while (1) {
            b = h;
            while (1) {
              d = i[b >> 0] | 0;
              if (d << 24 >> 24 == 37) {
                c = b + 1 | 0;
                if ((i[c >> 0] | 0) != 37)
                  break;
                d = k[o >> 2] | 0;
                if (d >>> 0 < (k[q >> 2] | 0) >>> 0)
                  c = 37;
                else {
                  oi(u, 1) | 0;
                  d = k[o >> 2] | 0;
                  c = i[c >> 0] | 0;
                }
                k[o >> 2] = d + 1;
                i[(k[u >> 2] | 0) + d >> 0] = c;
                b = b + 2 | 0;
              } else {
                c = k[o >> 2] | 0;
                if (c >>> 0 >= (k[q >> 2] | 0) >>> 0) {
                  oi(u, 1) | 0;
                  c = k[o >> 2] | 0;
                  d = i[b >> 0] | 0;
                }
                k[o >> 2] = c + 1;
                i[(k[u >> 2] | 0) + c >> 0] = d;
                b = b + 1 | 0;
              }
              if (b >>> 0 >= n >>> 0)
                break a;
            }
            j = oi(u, 512) | 0;
            h = t;
            t = t + 1 | 0;
            if ((h | 0) >= (m | 0))
              Xh(a, t, 1009236) | 0;
            d = i[c >> 0] | 0;
            c: do
              if (!(d << 24 >> 24)) {
                d = 0;
                b = c;
              } else {
                b = c;
                while (1) {
                  if (!(br(1009245, d << 24 >> 24, 6) | 0))
                    break c;
                  b = b + 1 | 0;
                  d = i[b >> 0] | 0;
                  if (!(d << 24 >> 24)) {
                    d = 0;
                    break;
                  }
                }
              }
 while (0);
            h = c;
            if ((b - h | 0) >>> 0 > 5) {
              Yh(a, 1009251, z) | 0;
              d = i[b >> 0] | 0;
            }
            g = ((d & 255) + -48 | 0) >>> 0 < 10 ? b + 1 | 0 : b;
            g = ((l[g >> 0] | 0) + -48 | 0) >>> 0 < 10 ? g + 1 | 0 : g;
            d = i[g >> 0] | 0;
            if (d << 24 >> 24 == 46) {
              e = g + 1 | 0;
              f = ((l[e >> 0] | 0) + -48 | 0) >>> 0 < 10;
              b = f ? g + 2 | 0 : e;
              d = i[b >> 0] | 0;
              if (((d & 255) + -48 | 0) >>> 0 < 10) {
                b = (f ? e : g) + 2 | 0;
                d = i[b >> 0] | 0;
              }
            } else
              b = g;
            if (((d & 255) + -48 | 0) >>> 0 < 10)
              Yh(a, 1009283, A) | 0;
            i[w >> 0] = 37;
            h = b - h | 0;
            rr(s | 0, c | 0, h + 1 | 0) | 0;
            i[w + (h + 2) >> 0] = 0;
            h = b + 1 | 0;
            b = i[b >> 0] | 0;
            d: do
              switch (b | 0) {
                case 99:
                  {
                    b = mi(a, t) | 0;
                    k[E >> 2] = b;
                    b = Xq(j, w, E) | 0;
                    break;
                  }
                case 88:
                case 120:
                case 117:
                case 111:
                case 105:
                case 100:
                  {
                    f = mi(a, t) | 0;
                    g = O;
                    b = yr(w | 0) | 0;
                    d = w + (b + -1) | 0;
                    e = i[d >> 0] | 0;
                    i[d >> 0] = i[1009328] | 0;
                    i[d + 1 >> 0] = i[1009329] | 0;
                    i[d + 2 >> 0] = i[1009330] | 0;
                    i[w + (b + 1) >> 0] = e;
                    i[w + (b + 2) >> 0] = 0;
                    b = F;
                    k[b >> 2] = f;
                    k[b + 4 >> 2] = g;
                    b = Xq(j, w, F) | 0;
                    break;
                  }
                case 71:
                case 103:
                case 102:
                case 69:
                case 101:
                case 65:
                case 97:
                  {
                    b = w + (yr(w | 0) | 0) | 0;
                    i[b >> 0] = 0;
                    K = +ki(a, t);
                    p[G >> 3] = K;
                    b = Xq(j, w, G) | 0;
                    break;
                  }
                case 113:
                  {
                    c = gi(a, t, y) | 0;
                    d = k[o >> 2] | 0;
                    if (d >>> 0 >= (k[q >> 2] | 0) >>> 0) {
                      oi(u, 1) | 0;
                      d = k[o >> 2] | 0;
                    }
                    k[o >> 2] = d + 1;
                    i[(k[u >> 2] | 0) + d >> 0] = 34;
                    j = k[y >> 2] | 0;
                    k[y >> 2] = j + -1;
                    e: do
                      if (j) {
                        g = c;
                        while (1) {
                          c = i[g >> 0] | 0;
                          f: do
                            switch (c << 24 >> 24) {
                              case 10:
                              case 92:
                              case 34:
                                {
                                  c = k[o >> 2] | 0;
                                  if (c >>> 0 >= (k[q >> 2] | 0) >>> 0) {
                                    oi(u, 1) | 0;
                                    c = k[o >> 2] | 0;
                                  }
                                  k[o >> 2] = c + 1;
                                  i[(k[u >> 2] | 0) + c >> 0] = 92;
                                  c = k[o >> 2] | 0;
                                  if (c >>> 0 >= (k[q >> 2] | 0) >>> 0) {
                                    oi(u, 1) | 0;
                                    c = k[o >> 2] | 0;
                                  }
                                  j = i[g >> 0] | 0;
                                  k[o >> 2] = c + 1;
                                  i[(k[u >> 2] | 0) + c >> 0] = j;
                                  break;
                                }
                              case 0:
                                {
                                  c = 0;
                                  H = 40;
                                  break;
                                }
                              default:
                                {
                                  if (Hp(c & 255) | 0) {
                                    c = i[g >> 0] | 0;
                                    H = 40;
                                    break f;
                                  }
                                  c = k[o >> 2] | 0;
                                  if (c >>> 0 >= (k[q >> 2] | 0) >>> 0) {
                                    oi(u, 1) | 0;
                                    c = k[o >> 2] | 0;
                                  }
                                  j = i[g >> 0] | 0;
                                  k[o >> 2] = c + 1;
                                  i[(k[u >> 2] | 0) + c >> 0] = j;
                                }
                            }
 while (0);
                          if ((H | 0) == 40) {
                            H = 0;
                            c = c & 255;
                            if (((l[g + 1 >> 0] | 0) + -48 | 0) >>> 0 < 10) {
                              k[C >> 2] = c;
                              Xq(v, 1009335, C) | 0;
                            } else {
                              k[B >> 2] = c;
                              Xq(v, 1009331, B) | 0;
                            }
                            qi(u, v);
                          }
                          j = k[y >> 2] | 0;
                          k[y >> 2] = j + -1;
                          if (!j)
                            break e;
                          else
                            g = g + 1 | 0;
                        }
                      }
 while (0);
                    b = k[o >> 2] | 0;
                    if (b >>> 0 >= (k[q >> 2] | 0) >>> 0) {
                      oi(u, 1) | 0;
                      b = k[o >> 2] | 0;
                    }
                    k[o >> 2] = b + 1;
                    i[(k[u >> 2] | 0) + b >> 0] = 34;
                    b = 0;
                    break;
                  }
                case 115:
                  {
                    c = Di(a, t, x) | 0;
                    g = (Op(w, 46) | 0) == 0;
                    if (g & (k[x >> 2] | 0) >>> 0 > 99) {
                      ti(u);
                      b = 0;
                      break d;
                    } else {
                      k[D >> 2] = c;
                      b = Xq(j, w, D) | 0;
                      Pd(a, -2);
                      break d;
                    }
                  }
                default:
                  break b;
              }
 while (0);
            k[o >> 2] = (k[o >> 2] | 0) + b;
            if (h >>> 0 >= n >>> 0)
              break a;
          }
          k[I >> 2] = b;
          I = Yh(a, 1009341, I) | 0;
          r = J;
          return I | 0;
        }
 while (0);
      ri(u);
      I = 1;
      r = J;
      return I | 0;
    }
    function Bm(a) {
      a = a | 0;
      gi(a, 1, 0) | 0;
      gi(a, 2, 0) | 0;
      Pd(a, 2);
      ke(a, 0, 0);
      pe(a, 228, 3);
      return 1;
    }
    function Cm(a) {
      a = a | 0;
      var b = 0,
          c = 0,
          d = 0,
          e = 0,
          f = 0,
          g = 0,
          h = 0,
          j = 0,
          l = 0,
          m = 0,
          n = 0,
          o = 0,
          p = 0,
          q = 0,
          s = 0,
          t = 0,
          u = 0,
          v = 0,
          w = 0,
          x = 0,
          y = 0,
          z = 0,
          A = 0,
          B = 0,
          C = 0,
          D = 0,
          E = 0,
          F = 0,
          G = 0,
          H = 0,
          I = 0,
          J = 0;
      J = r;
      r = r + 4432 | 0;
      G = J + 16 | 0;
      F = J + 8 | 0;
      E = J;
      C = J + 24 | 0;
      e = J + 312 | 0;
      d = J + 20 | 0;
      D = J + 32 | 0;
      I = J + 320 | 0;
      b = gi(a, 1, e) | 0;
      c = gi(a, 2, d) | 0;
      y = Td(a, 3) | 0;
      z = ni(a, 4, (k[e >> 2] | 0) + 1 | 0, 0) | 0;
      A = O;
      B = (i[c >> 0] | 0) == 94;
      if ((y + -3 | 0) >>> 0 >= 4)
        Xh(a, 3, 1009130) | 0;
      ui(a, I);
      if (B) {
        x = (k[d >> 2] | 0) + -1 | 0;
        k[d >> 2] = x;
        d = x;
        x = c + 1 | 0;
      } else {
        d = k[d >> 2] | 0;
        x = c;
      }
      v = D + 16 | 0;
      k[v >> 2] = a;
      k[D >> 2] = 200;
      w = D + 4 | 0;
      k[w >> 2] = b;
      H = D + 8 | 0;
      k[H >> 2] = b + (k[e >> 2] | 0);
      k[D + 12 >> 2] = x + d;
      o = D + 20 | 0;
      p = I + 8 | 0;
      q = I + 4 | 0;
      s = D + 28 | 0;
      t = D + 24 | 0;
      c = 0;
      d = 0;
      while (1) {
        if (!((c | 0) < (A | 0) | (c | 0) == (A | 0) & d >>> 0 < z >>> 0)) {
          u = 49;
          break;
        }
        k[o >> 2] = 0;
        n = Rm(D, b, x) | 0;
        if (n) {
          d = pr(d | 0, c | 0, 1, 0) | 0;
          c = O;
          m = k[v >> 2] | 0;
          switch (y | 0) {
            case 6:
              {
                Sd(m, 3);
                e = k[o >> 2] | 0;
                e = (b | 0) != 0 & (e | 0) == 0 ? 1 : e;
                hi(k[v >> 2] | 0, e, 1008873);
                if ((e | 0) > 0) {
                  f = 0;
                  do {
                    Sm(D, f, b, n);
                    f = f + 1 | 0;
                  } while ((f | 0) != (e | 0));
                }
                Le(m, e, 1, 0, 0);
                u = 38;
                break;
              }
            case 5:
              {
                do
                  if ((k[o >> 2] | 0) > 0) {
                    e = k[s >> 2] | 0;
                    if ((e | 0) != -1) {
                      f = k[t >> 2] | 0;
                      if ((e | 0) == -2) {
                        u = f + 1 - (k[w >> 2] | 0) | 0;
                        ke(m, u, ((u | 0) < 0) << 31 >> 31);
                        break;
                      } else
                        g = m;
                    } else {
                      Yh(m, 1008918, E) | 0;
                      g = k[v >> 2] | 0;
                      f = k[t >> 2] | 0;
                    }
                    le(g, f, e) | 0;
                  } else
                    le(m, b, n - b | 0) | 0;
 while (0);
                ue(m, 3) | 0;
                u = 38;
                break;
              }
            default:
              {
                j = de(m, 3, C) | 0;
                if (k[C >> 2] | 0) {
                  l = n - b | 0;
                  g = 0;
                  do {
                    h = j + g | 0;
                    f = i[h >> 0] | 0;
                    do
                      if (f << 24 >> 24 == 37) {
                        g = g + 1 | 0;
                        h = j + g | 0;
                        f = i[h >> 0] | 0;
                        e = f << 24 >> 24;
                        if (((f & 255) + -48 | 0) >>> 0 < 10)
                          if (f << 24 >> 24 == 48) {
                            pi(I, b, l);
                            break;
                          } else {
                            Sm(D, e + -49 | 0, b, n);
                            Di(m, -1, 0) | 0;
                            Qd(m, -2, -1);
                            Pd(m, -2);
                            ti(I);
                            break;
                          }
                        if (f << 24 >> 24 != 37) {
                          k[F >> 2] = 37;
                          Yh(m, 1009161, F) | 0;
                        }
                        f = k[p >> 2] | 0;
                        if (f >>> 0 >= (k[q >> 2] | 0) >>> 0) {
                          oi(I, 1) | 0;
                          f = k[p >> 2] | 0;
                        }
                        h = i[h >> 0] | 0;
                        k[p >> 2] = f + 1;
                        i[(k[I >> 2] | 0) + f >> 0] = h;
                      } else {
                        e = k[p >> 2] | 0;
                        if (e >>> 0 >= (k[q >> 2] | 0) >>> 0) {
                          oi(I, 1) | 0;
                          e = k[p >> 2] | 0;
                          f = i[h >> 0] | 0;
                        }
                        k[p >> 2] = e + 1;
                        i[(k[I >> 2] | 0) + e >> 0] = f;
                      }
 while (0);
                    g = g + 1 | 0;
                  } while (g >>> 0 < (k[C >> 2] | 0) >>> 0);
                }
              }
          }
          if ((u | 0) == 38) {
            u = 0;
            if (ce(m, -1) | 0) {
              if (!(Yd(m, -1) | 0)) {
                l = Ud(m, Td(m, -1) | 0) | 0;
                k[G >> 2] = l;
                Yh(m, 1009203, G) | 0;
              }
            } else {
              Pd(m, -2);
              le(m, b, n - b | 0) | 0;
            }
            ti(I);
          }
          if (n >>> 0 > b >>> 0)
            b = n;
          else
            u = 44;
        } else
          u = 44;
        if ((u | 0) == 44) {
          u = 0;
          if (b >>> 0 >= (k[H >> 2] | 0) >>> 0) {
            u = 49;
            break;
          }
          e = k[p >> 2] | 0;
          if (e >>> 0 >= (k[q >> 2] | 0) >>> 0) {
            oi(I, 1) | 0;
            e = k[p >> 2] | 0;
          }
          n = i[b >> 0] | 0;
          k[p >> 2] = e + 1;
          i[(k[I >> 2] | 0) + e >> 0] = n;
          b = b + 1 | 0;
        }
        if (B) {
          u = 49;
          break;
        }
      }
      if ((u | 0) == 49) {
        pi(I, b, (k[H >> 2] | 0) - b | 0);
        ri(I);
        ke(a, d, c);
        r = J;
        return 2;
      }
      return 0;
    }
    function Dm(a) {
      a = a | 0;
      var b = 0,
          c = 0;
      b = r;
      r = r + 16 | 0;
      c = b;
      gi(a, 1, c) | 0;
      ke(a, k[c >> 2] | 0, 0);
      r = b;
      return 1;
    }
    function Em(a) {
      a = a | 0;
      var b = 0,
          c = 0,
          d = 0,
          e = 0,
          f = 0,
          g = 0;
      g = r;
      r = r + 4128 | 0;
      e = g + 4112 | 0;
      f = g;
      d = gi(a, 1, e) | 0;
      b = vi(a, f, k[e >> 2] | 0) | 0;
      if (!(k[e >> 2] | 0)) {
        e = 0;
        si(f, e);
        r = g;
        return 1;
      } else
        c = 0;
      do {
        a = (Bq(l[d + c >> 0] | 0) | 0) & 255;
        i[b + c >> 0] = a;
        c = c + 1 | 0;
        a = k[e >> 2] | 0;
      } while (c >>> 0 < a >>> 0);
      si(f, a);
      r = g;
      return 1;
    }
    function Fm(a) {
      a = a | 0;
      return Qm(a, 0) | 0;
    }
    function Gm(a) {
      a = a | 0;
      var b = 0,
          c = 0,
          d = 0,
          e = 0,
          f = 0,
          g = 0,
          h = 0,
          i = 0,
          j = 0,
          l = 0,
          m = 0,
          n = 0,
          o = 0,
          p = 0;
      o = r;
      r = r + 4128 | 0;
      e = o;
      m = o + 4124 | 0;
      n = o + 4120 | 0;
      l = o + 8 | 0;
      i = gi(a, 1, m) | 0;
      f = mi(a, 2) | 0;
      g = O;
      j = fi(a, 3, 1008077, n) | 0;
      if ((g | 0) < 0 | (g | 0) == 0 & f >>> 0 < 1) {
        le(a, 1008077, 0) | 0;
        n = 1;
        r = o;
        return n | 0;
      }
      d = k[m >> 2] | 0;
      b = k[n >> 2] | 0;
      c = b + d | 0;
      if (c >>> 0 >= d >>> 0 ? (h = Cr(2147483647, 0, f | 0, g | 0) | 0, p = O, !(0 > (p | 0) | 0 == (p | 0) & c >>> 0 > h >>> 0)) : 0) {
        h = ka(d, f) | 0;
        p = pr(f | 0, g | 0, -1, 0) | 0;
        h = (ka(b, p) | 0) + h | 0;
        b = vi(a, l, h) | 0;
        rr(b | 0, i | 0, k[m >> 2] | 0) | 0;
        if ((g | 0) > 0 | (g | 0) == 0 & f >>> 0 > 1)
          do {
            f = pr(f | 0, g | 0, -1, -1) | 0;
            g = O;
            e = k[m >> 2] | 0;
            d = b + e | 0;
            c = k[n >> 2] | 0;
            if (!c) {
              c = e;
              b = d;
            } else {
              rr(d | 0, j | 0, c | 0) | 0;
              c = k[m >> 2] | 0;
              b = b + ((k[n >> 2] | 0) + e) | 0;
            }
            rr(b | 0, i | 0, c | 0) | 0;
          } while ((g | 0) > 0 | (g | 0) == 0 & f >>> 0 > 1);
        si(l, h);
        p = 1;
        r = o;
        return p | 0;
      }
      p = Yh(a, 1008835, e) | 0;
      r = o;
      return p | 0;
    }
    function Hm(a) {
      a = a | 0;
      var b = 0,
          c = 0,
          d = 0,
          e = 0,
          f = 0,
          g = 0;
      g = r;
      r = r + 4128 | 0;
      e = g + 4112 | 0;
      f = g;
      d = gi(a, 1, e) | 0;
      c = vi(a, f, k[e >> 2] | 0) | 0;
      a = k[e >> 2] | 0;
      if (!a) {
        e = 0;
        si(f, e);
        r = g;
        return 1;
      } else
        b = 0;
      do {
        i[c + b >> 0] = i[d + (a + ~b) >> 0] | 0;
        b = b + 1 | 0;
        a = k[e >> 2] | 0;
      } while (a >>> 0 > b >>> 0);
      si(f, a);
      r = g;
      return 1;
    }
    function Im(a) {
      a = a | 0;
      var b = 0,
          c = 0,
          d = 0,
          e = 0,
          f = 0,
          g = 0,
          h = 0,
          i = 0,
          j = 0;
      i = r;
      r = r + 16 | 0;
      f = i;
      h = gi(a, 1, f) | 0;
      d = mi(a, 2) | 0;
      b = O;
      c = k[f >> 2] | 0;
      if (!((b | 0) > -1 | (b | 0) == -1 & d >>> 0 > 4294967295))
        if (c >>> 0 < (0 - d | 0) >>> 0) {
          b = 0;
          d = 0;
        } else {
          d = pr(d | 0, b | 0, 1, 0) | 0;
          d = pr(d | 0, O | 0, c | 0, 0) | 0;
          b = O;
        }
      e = ni(a, 3, -1, -1) | 0;
      c = O;
      g = k[f >> 2] | 0;
      if (!((c | 0) > -1 | (c | 0) == -1 & e >>> 0 > 4294967295))
        if (g >>> 0 < (0 - e | 0) >>> 0) {
          c = 0;
          e = 0;
        } else {
          e = pr(e | 0, c | 0, 1, 0) | 0;
          e = pr(e | 0, O | 0, g | 0, 0) | 0;
          c = O;
        }
      j = (b | 0) < 0 | (b | 0) == 0 & d >>> 0 < 1;
      f = j ? 1 : d;
      b = j ? 0 : b;
      j = (c | 0) > 0 | (c | 0) == 0 & e >>> 0 > g >>> 0;
      d = j ? g : e;
      c = j ? 0 : c;
      if ((c | 0) < (b | 0) | (c | 0) == (b | 0) & d >>> 0 < f >>> 0) {
        le(a, 1008077, 0) | 0;
        r = i;
        return 1;
      } else {
        j = or(1, 0, f | 0, b | 0) | 0;
        j = pr(j | 0, O | 0, d | 0, c | 0) | 0;
        le(a, h + (f + -1) | 0, j) | 0;
        r = i;
        return 1;
      }
      return 0;
    }
    function Jm(a) {
      a = a | 0;
      var b = 0,
          c = 0,
          d = 0,
          e = 0,
          f = 0,
          g = 0;
      g = r;
      r = r + 4128 | 0;
      e = g + 4112 | 0;
      f = g;
      d = gi(a, 1, e) | 0;
      b = vi(a, f, k[e >> 2] | 0) | 0;
      if (!(k[e >> 2] | 0)) {
        e = 0;
        si(f, e);
        r = g;
        return 1;
      } else
        c = 0;
      do {
        a = (Lp(l[d + c >> 0] | 0) | 0) & 255;
        i[b + c >> 0] = a;
        c = c + 1 | 0;
        a = k[e >> 2] | 0;
      } while (c >>> 0 < a >>> 0);
      si(f, a);
      r = g;
      return 1;
    }
    function Km(a) {
      a = a | 0;
      var b = 0,
          c = 0,
          d = 0,
          e = 0.0,
          f = 0,
          g = 0,
          h = 0,
          j = 0,
          l = 0,
          m = 0,
          n = 0,
          q = 0,
          s = 0,
          t = 0,
          u = 0,
          v = 0,
          w = 0,
          x = 0,
          y = 0,
          z = 0,
          A = 0,
          B = 0,
          C = 0,
          D = 0,
          E = 0;
      E = r;
      r = r + 4192 | 0;
      v = E + 72 | 0;
      x = E + 52 | 0;
      w = E + 40 | 0;
      C = E + 44 | 0;
      B = E + 4184 | 0;
      D = E;
      y = E + 48 | 0;
      z = E + 68 | 0;
      A = E + 64 | 0;
      u = gi(a, 1, 0) | 0;
      k[w >> 2] = u;
      k[x >> 2] = a;
      s = x + 4 | 0;
      k[s >> 2] = 1;
      k[x + 8 >> 2] = 1;
      ie(a);
      ui(a, v);
      if (!(i[u >> 0] | 0)) {
        ri(v);
        r = E;
        return 1;
      }
      t = v + 8 | 0;
      u = v + 4 | 0;
      l = 1;
      c = 0;
      while (1) {
        h = Nm(x, c, w, C, B) | 0;
        b = k[B >> 2] | 0;
        m = k[C >> 2] | 0;
        c = b + c + m | 0;
        f = b + -1 | 0;
        k[B >> 2] = f;
        if ((b | 0) > 0) {
          g = (0 - b | 0) > -1;
          while (1) {
            d = k[t >> 2] | 0;
            if (d >>> 0 >= (k[u >> 2] | 0) >>> 0) {
              oi(v, 1) | 0;
              d = k[t >> 2] | 0;
            }
            k[t >> 2] = d + 1;
            i[(k[v >> 2] | 0) + d >> 0] = 0;
            if ((f | 0) > 0)
              f = f + -1 | 0;
            else
              break;
          }
          k[B >> 2] = g ? b + -2 | 0 : -1;
        }
        n = l + 1 | 0;
        switch (h | 0) {
          case 4:
            {
              h = gi(a, n, z) | 0;
              if ((m | 0) <= 3 ? (k[z >> 2] | 0) >>> 0 >= 1 << (m << 3) >>> 0 : 0)
                Xh(a, n, 1008772) | 0;
              f = k[z >> 2] | 0;
              d = k[s >> 2] | 0;
              j = oi(v, m) | 0;
              d = (d | 0) != 0;
              b = m + -1 | 0;
              i[j + (d ? 0 : b) >> 0] = f;
              if ((m | 0) > 1)
                if (d) {
                  d = 0;
                  g = 1;
                  while (1) {
                    f = tr(f | 0, d | 0, 8) | 0;
                    i[j + g >> 0] = f;
                    g = g + 1 | 0;
                    if ((g | 0) == (m | 0))
                      break;
                    else
                      d = O;
                  }
                } else {
                  d = 0;
                  g = 1;
                  while (1) {
                    f = tr(f | 0, d | 0, 8) | 0;
                    i[j + (b - g) >> 0] = f;
                    g = g + 1 | 0;
                    if ((g | 0) == (m | 0))
                      break;
                    else
                      d = O;
                  }
                }
              k[t >> 2] = (k[t >> 2] | 0) + m;
              pi(v, h, k[z >> 2] | 0);
              b = n;
              c = (k[z >> 2] | 0) + c | 0;
              break;
            }
          case 3:
            {
              b = gi(a, n, y) | 0;
              if ((k[y >> 2] | 0) != (m | 0))
                Xh(a, n, 1008759) | 0;
              pi(v, b, m);
              b = n;
              break;
            }
          case 5:
            {
              d = gi(a, n, A) | 0;
              b = yr(d | 0) | 0;
              if ((b | 0) != (k[A >> 2] | 0)) {
                Xh(a, n, 1008813) | 0;
                b = k[A >> 2] | 0;
              }
              pi(v, d, b);
              b = k[t >> 2] | 0;
              if (b >>> 0 >= (k[u >> 2] | 0) >>> 0) {
                oi(v, 1) | 0;
                b = k[t >> 2] | 0;
              }
              k[t >> 2] = b + 1;
              i[(k[v >> 2] | 0) + b >> 0] = 0;
              b = n;
              c = c + 1 + (k[A >> 2] | 0) | 0;
              break;
            }
          case 6:
            {
              b = k[t >> 2] | 0;
              if (b >>> 0 >= (k[u >> 2] | 0) >>> 0) {
                oi(v, 1) | 0;
                b = k[t >> 2] | 0;
              }
              k[t >> 2] = b + 1;
              i[(k[v >> 2] | 0) + b >> 0] = 0;
              q = 60;
              break;
            }
          case 8:
          case 7:
            {
              q = 60;
              break;
            }
          case 1:
            {
              f = mi(a, n) | 0;
              g = O;
              if ((m | 0) < 8 ? (l = xr(1, 0, m << 3 | 0) | 0, j = O, !(g >>> 0 < j >>> 0 | (g | 0) == (j | 0) & f >>> 0 < l >>> 0)) : 0)
                Xh(a, n, 1008741) | 0;
              d = k[s >> 2] | 0;
              j = oi(v, m) | 0;
              d = (d | 0) != 0;
              b = m + -1 | 0;
              i[j + (d ? 0 : b) >> 0] = f;
              if ((m | 0) > 1)
                if (d) {
                  d = 1;
                  while (1) {
                    f = tr(f | 0, g | 0, 8) | 0;
                    i[j + d >> 0] = f;
                    d = d + 1 | 0;
                    if ((d | 0) == (m | 0))
                      break;
                    else
                      g = O;
                  }
                } else {
                  d = 1;
                  while (1) {
                    f = tr(f | 0, g | 0, 8) | 0;
                    i[j + (b - d) >> 0] = f;
                    d = d + 1 | 0;
                    if ((d | 0) == (m | 0))
                      break;
                    else
                      g = O;
                  }
                }
              k[t >> 2] = (k[t >> 2] | 0) + m;
              b = n;
              break;
            }
          case 0:
            {
              f = mi(a, n) | 0;
              j = O;
              if ((m | 0) < 8 ? (l = xr(1, 0, (m << 3) + -1 | 0) | 0, h = O, d = or(0, 0, l | 0, h | 0) | 0, g = O, !(((j | 0) > (g | 0) | (j | 0) == (g | 0) & f >>> 0 >= d >>> 0) & ((j | 0) < (h | 0) | (j | 0) == (h | 0) & f >>> 0 < l >>> 0))) : 0)
                Xh(a, n, 1008724) | 0;
              h = k[s >> 2] | 0;
              b = oi(v, m) | 0;
              h = (h | 0) != 0;
              l = m + -1 | 0;
              i[b + (h ? 0 : l) >> 0] = f;
              do
                if ((m | 0) > 1) {
                  if (h) {
                    d = j;
                    g = 1;
                    while (1) {
                      f = tr(f | 0, d | 0, 8) | 0;
                      i[b + g >> 0] = f;
                      g = g + 1 | 0;
                      if ((g | 0) == (m | 0))
                        break;
                      else
                        d = O;
                    }
                  } else {
                    d = j;
                    g = 1;
                    while (1) {
                      f = tr(f | 0, d | 0, 8) | 0;
                      i[b + (l - g) >> 0] = f;
                      g = g + 1 | 0;
                      if ((g | 0) == (m | 0))
                        break;
                      else
                        d = O;
                    }
                  }
                  if ((j | 0) < 0 & (m | 0) > 8)
                    if (h) {
                      wr(b + 8 | 0, -1, m + -8 | 0) | 0;
                      break;
                    } else {
                      f = 8;
                      do {
                        i[b + (l - f) >> 0] = -1;
                        f = f + 1 | 0;
                      } while ((f | 0) != (m | 0));
                    }
                }
 while (0);
              k[t >> 2] = (k[t >> 2] | 0) + m;
              b = n;
              break;
            }
          case 2:
            {
              b = oi(v, m) | 0;
              e = +ki(a, n);
              if ((m | 0) == 4)
                o[D >> 2] = e;
              else
                p[D >> 3] = e;
              g = k[C >> 2] | 0;
              d = (g | 0) == 0;
              if ((k[s >> 2] | 0) == 1) {
                if (!d) {
                  d = g;
                  f = D;
                  while (1) {
                    d = d + -1 | 0;
                    i[b >> 0] = i[f >> 0] | 0;
                    if (!d)
                      break;
                    else {
                      f = f + 1 | 0;
                      b = b + 1 | 0;
                    }
                  }
                }
              } else if (!d) {
                f = b + (g + -1) | 0;
                b = g;
                d = D;
                while (1) {
                  b = b + -1 | 0;
                  i[f >> 0] = i[d >> 0] | 0;
                  if (!b)
                    break;
                  else {
                    f = f + -1 | 0;
                    d = d + 1 | 0;
                  }
                }
              }
              k[t >> 2] = (k[t >> 2] | 0) + (k[C >> 2] | 0);
              b = n;
              break;
            }
          default:
            b = n;
        }
        if ((q | 0) == 60) {
          q = 0;
          b = l;
        }
        if (!(i[k[w >> 2] >> 0] | 0))
          break;
        else
          l = b;
      }
      ri(v);
      r = E;
      return 1;
    }
    function Lm(a) {
      a = a | 0;
      var b = 0,
          c = 0,
          d = 0,
          e = 0,
          f = 0,
          g = 0,
          h = 0,
          j = 0;
      j = r;
      r = r + 32 | 0;
      f = j + 12 | 0;
      e = j + 8 | 0;
      h = j + 4 | 0;
      g = j;
      d = gi(a, 1, 0) | 0;
      k[e >> 2] = d;
      k[f >> 2] = a;
      k[f + 4 >> 2] = 1;
      k[f + 8 >> 2] = 1;
      if (!(i[d >> 0] | 0)) {
        g = 0;
        h = 0;
        ke(a, g, h);
        r = j;
        return 1;
      } else
        b = 0;
      do {
        d = Nm(f, b, e, h, g) | 0;
        c = (k[h >> 2] | 0) + (k[g >> 2] | 0) | 0;
        k[h >> 2] = c;
        if (b >>> 0 > (2147483647 - c | 0) >>> 0)
          Xh(a, 1, 1008677) | 0;
        b = c + b | 0;
        if ((d & -2 | 0) == 4)
          Xh(a, 1, 1008701) | 0;
      } while ((i[k[e >> 2] >> 0] | 0) != 0);
      g = b;
      h = 0;
      ke(a, g, h);
      r = j;
      return 1;
    }
    function Mm(a) {
      a = a | 0;
      var b = 0,
          c = 0,
          d = 0.0,
          e = 0,
          f = 0,
          g = 0,
          h = 0,
          j = 0,
          l = 0,
          m = 0,
          n = 0,
          q = 0,
          s = 0,
          t = 0,
          u = 0,
          v = 0,
          w = 0,
          x = 0;
      x = r;
      r = r + 80 | 0;
      s = x + 56 | 0;
      q = x + 52 | 0;
      t = x + 48 | 0;
      v = x + 44 | 0;
      u = x + 40 | 0;
      w = x;
      f = gi(a, 1, 0) | 0;
      k[q >> 2] = f;
      m = gi(a, 2, t) | 0;
      c = ni(a, 3, 1, 0) | 0;
      b = O;
      e = k[t >> 2] | 0;
      if (!((b | 0) > -1 | (b | 0) == -1 & c >>> 0 > 4294967295))
        if (e >>> 0 < (0 - c | 0) >>> 0)
          c = 0;
        else {
          c = pr(c | 0, b | 0, 1, 0) | 0;
          c = pr(c | 0, O | 0, e | 0, 0) | 0;
        }
      b = c + -1 | 0;
      if (b >>> 0 > e >>> 0)
        Xh(a, 3, 1008383) | 0;
      k[s >> 2] = a;
      l = s + 4 | 0;
      k[l >> 2] = 1;
      k[s + 8 >> 2] = 1;
      if (!(i[f >> 0] | 0)) {
        w = 0;
        v = b;
        v = v + 1 | 0;
        ke(a, v, 0);
        a = w + 1 | 0;
        r = x;
        return a | 0;
      }
      c = 0;
      do {
        f = Nm(s, b, q, v, u) | 0;
        e = k[u >> 2] | 0;
        g = k[v >> 2] | 0;
        if ((g + e | 0) >>> 0 <= ~b >>> 0 ? (n = e + b | 0, (n + g | 0) >>> 0 <= (k[t >> 2] | 0) >>> 0) : 0)
          j = n;
        else {
          Xh(a, 2, 1008414) | 0;
          j = e + b | 0;
        }
        hi(a, 2, 1008436);
        h = c + 1 | 0;
        switch (f | 0) {
          case 4:
            {
              e = Om(a, m + j | 0, k[l >> 2] | 0, g, 0) | 0;
              b = e + j | 0;
              if ((b + g | 0) >>> 0 > (k[t >> 2] | 0) >>> 0)
                Xh(a, 2, 1008414) | 0;
              le(a, m + (g + j) | 0, e) | 0;
              f = g;
              c = h;
              break;
            }
          case 5:
            {
              f = m + j | 0;
              b = yr(f | 0) | 0;
              le(a, f, b) | 0;
              f = g;
              c = h;
              b = j + 1 + b | 0;
              break;
            }
          case 3:
            {
              le(a, m + j | 0, g) | 0;
              f = g;
              c = h;
              b = j;
              break;
            }
          case 1:
          case 0:
            {
              ke(a, Om(a, m + j | 0, k[l >> 2] | 0, g, (f | 0) == 0 & 1) | 0, O);
              f = g;
              c = h;
              b = j;
              break;
            }
          case 2:
            {
              c = m + j | 0;
              e = (g | 0) == 0;
              if ((k[l >> 2] | 0) == 1) {
                if (!e) {
                  e = g;
                  b = w;
                  while (1) {
                    e = e + -1 | 0;
                    i[b >> 0] = i[c >> 0] | 0;
                    if (!e)
                      break;
                    else {
                      c = c + 1 | 0;
                      b = b + 1 | 0;
                    }
                  }
                }
              } else if (!e) {
                f = w + (g + -1) | 0;
                e = g;
                while (1) {
                  e = e + -1 | 0;
                  i[f >> 0] = i[c >> 0] | 0;
                  if (!e)
                    break;
                  else {
                    f = f + -1 | 0;
                    c = c + 1 | 0;
                  }
                }
              }
              c = k[v >> 2] | 0;
              if ((c | 0) == 4)
                d = +o[w >> 2];
              else
                d = +p[w >> 3];
              je(a, d);
              f = c;
              c = h;
              b = j;
              break;
            }
          case 8:
          case 6:
          case 7:
            {
              f = g;
              b = j;
              break;
            }
          default:
            {
              f = g;
              c = h;
              b = j;
            }
        }
        b = f + b | 0;
      } while ((i[k[q >> 2] >> 0] | 0) != 0);
      w = b + 1 | 0;
      ke(a, w, 0);
      a = c + 1 | 0;
      r = x;
      return a | 0;
    }
    function Nm(a, b, c, d, e) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      d = d | 0;
      e = e | 0;
      var f = 0,
          g = 0,
          h = 0;
      h = r;
      r = r + 16 | 0;
      f = h;
      g = Pm(a, c, d) | 0;
      d = k[d >> 2] | 0;
      k[f >> 2] = d;
      do
        if ((g | 0) == 7) {
          if (i[k[c >> 2] >> 0] | 0) {
            c = (Pm(a, c, f) | 0) == 3;
            d = k[f >> 2] | 0;
            if (!(c | (d | 0) == 0))
              break;
          }
          Xh(k[a >> 2] | 0, 1, 1008499) | 0;
        }
 while (0);
      if ((g | 0) == 3 | (d | 0) < 2) {
        b = 0;
        k[e >> 2] = b;
        r = h;
        return g | 0;
      }
      c = k[a + 8 >> 2] | 0;
      if ((d | 0) > (c | 0)) {
        k[f >> 2] = c;
        d = c;
      }
      c = d + -1 | 0;
      if (c & d)
        Xh(k[a >> 2] | 0, 1, 1008534) | 0;
      b = d - (c & b) & c;
      k[e >> 2] = b;
      r = h;
      return g | 0;
    }
    function Om(a, b, c, d, e) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      d = d | 0;
      e = e | 0;
      var f = 0,
          g = 0,
          h = 0,
          i = 0,
          j = 0,
          m = 0,
          n = 0,
          o = 0,
          p = 0;
      p = r;
      r = r + 16 | 0;
      o = p + 8 | 0;
      n = p;
      m = (d | 0) > 8;
      h = m ? 8 : d;
      j = h + -1 | 0;
      if ((h | 0) > 0) {
        i = d + -1 | 0;
        if (!c) {
          f = 0;
          g = 0;
          while (1) {
            f = xr(f | 0, g | 0, 8) | 0;
            g = O;
            f = l[b + (i - j) >> 0] | 0 | f;
            if ((j | 0) > 0)
              j = j + -1 | 0;
            else
              break;
          }
        } else {
          f = 0;
          g = 0;
          while (1) {
            f = xr(f | 0, g | 0, 8) | 0;
            g = O;
            f = l[b + j >> 0] | 0 | f;
            if ((j | 0) > 0)
              j = j + -1 | 0;
            else
              break;
          }
        }
      } else {
        f = 0;
        g = 0;
      }
      if ((d | 0) < 8) {
        if (!e) {
          d = g;
          b = f;
          O = d;
          r = p;
          return b | 0;
        }
        d = xr(1, 0, (d << 3) + -1 | 0) | 0;
        b = O;
        b = or(f ^ d | 0, g ^ b | 0, d | 0, b | 0) | 0;
        d = O;
        O = d;
        r = p;
        return b | 0;
      }
      if (!m) {
        d = g;
        b = f;
        O = d;
        r = p;
        return b | 0;
      }
      j = (e | 0) == 0 | ((g | 0) > -1 | (g | 0) == -1 & f >>> 0 > 4294967295) ? 0 : 255;
      i = d + -1 | 0;
      if (!c) {
        do {
          if ((l[b + (i - h) >> 0] | 0 | 0) != (j | 0)) {
            k[n >> 2] = d;
            Yh(a, 1008453, n) | 0;
          }
          h = h + 1 | 0;
        } while ((h | 0) < (d | 0));
        O = g;
        r = p;
        return f | 0;
      } else {
        do {
          if ((l[b + h >> 0] | 0 | 0) != (j | 0)) {
            k[o >> 2] = d;
            Yh(a, 1008453, o) | 0;
          }
          h = h + 1 | 0;
        } while ((h | 0) < (d | 0));
        O = g;
        r = p;
        return f | 0;
      }
      return 0;
    }
    function Pm(a, b, c) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      var d = 0,
          e = 0,
          f = 0,
          g = 0,
          h = 0,
          j = 0,
          l = 0,
          m = 0,
          n = 0;
      n = r;
      r = r + 48 | 0;
      f = n + 40 | 0;
      j = n + 32 | 0;
      h = n + 24 | 0;
      m = n + 16 | 0;
      l = n + 8 | 0;
      g = n;
      d = k[b >> 2] | 0;
      e = d + 1 | 0;
      k[b >> 2] = e;
      d = i[d >> 0] | 0;
      k[c >> 2] = 0;
      do
        switch (d | 0) {
          case 98:
            {
              k[c >> 2] = 1;
              a = 0;
              r = n;
              return a | 0;
            }
          case 66:
            {
              k[c >> 2] = 1;
              a = 1;
              r = n;
              return a | 0;
            }
          case 104:
            {
              k[c >> 2] = 2;
              a = 0;
              r = n;
              return a | 0;
            }
          case 72:
            {
              k[c >> 2] = 2;
              a = 1;
              r = n;
              return a | 0;
            }
          case 108:
            {
              k[c >> 2] = 4;
              a = 0;
              r = n;
              return a | 0;
            }
          case 76:
            {
              k[c >> 2] = 4;
              a = 1;
              r = n;
              return a | 0;
            }
          case 106:
            {
              k[c >> 2] = 8;
              a = 0;
              r = n;
              return a | 0;
            }
          case 74:
            {
              k[c >> 2] = 8;
              a = 1;
              r = n;
              return a | 0;
            }
          case 84:
            {
              k[c >> 2] = 4;
              a = 1;
              r = n;
              return a | 0;
            }
          case 102:
            {
              k[c >> 2] = 4;
              a = 2;
              r = n;
              return a | 0;
            }
          case 100:
            {
              k[c >> 2] = 8;
              a = 2;
              r = n;
              return a | 0;
            }
          case 110:
            {
              k[c >> 2] = 8;
              a = 2;
              r = n;
              return a | 0;
            }
          case 105:
            {
              if (((i[e >> 0] | 0) + -48 | 0) >>> 0 < 10) {
                d = 0;
                do {
                  m = e;
                  e = e + 1 | 0;
                  k[b >> 2] = e;
                  d = (d * 10 | 0) + -48 + (i[m >> 0] | 0) | 0;
                } while ((d | 0) < 214748364 & ((i[e >> 0] | 0) + -48 | 0) >>> 0 < 10);
                if ((d + -1 | 0) >>> 0 > 15) {
                  a = k[a >> 2] | 0;
                  k[g >> 2] = d;
                  k[g + 4 >> 2] = 16;
                  Yh(a, 1008575, g) | 0;
                }
              } else
                d = 4;
              k[c >> 2] = d;
              a = 0;
              r = n;
              return a | 0;
            }
          case 73:
            {
              if (((i[e >> 0] | 0) + -48 | 0) >>> 0 < 10) {
                d = 0;
                do {
                  m = e;
                  e = e + 1 | 0;
                  k[b >> 2] = e;
                  d = (d * 10 | 0) + -48 + (i[m >> 0] | 0) | 0;
                } while ((d | 0) < 214748364 & ((i[e >> 0] | 0) + -48 | 0) >>> 0 < 10);
                if ((d + -1 | 0) >>> 0 > 15) {
                  a = k[a >> 2] | 0;
                  k[l >> 2] = d;
                  k[l + 4 >> 2] = 16;
                  Yh(a, 1008575, l) | 0;
                }
              } else
                d = 4;
              k[c >> 2] = d;
              a = 1;
              r = n;
              return a | 0;
            }
          case 115:
            {
              if (((i[e >> 0] | 0) + -48 | 0) >>> 0 < 10) {
                d = 0;
                do {
                  l = e;
                  e = e + 1 | 0;
                  k[b >> 2] = e;
                  d = (d * 10 | 0) + -48 + (i[l >> 0] | 0) | 0;
                } while ((d | 0) < 214748364 & ((i[e >> 0] | 0) + -48 | 0) >>> 0 < 10);
                if ((d + -1 | 0) >>> 0 > 15) {
                  a = k[a >> 2] | 0;
                  k[m >> 2] = d;
                  k[m + 4 >> 2] = 16;
                  Yh(a, 1008575, m) | 0;
                }
              } else
                d = 4;
              k[c >> 2] = d;
              a = 4;
              r = n;
              return a | 0;
            }
          case 99:
            {
              if (((i[e >> 0] | 0) + -48 | 0) >>> 0 < 10) {
                d = 0;
                do {
                  m = e;
                  e = e + 1 | 0;
                  k[b >> 2] = e;
                  d = (d * 10 | 0) + -48 + (i[m >> 0] | 0) | 0;
                } while ((d | 0) < 214748364 & ((i[e >> 0] | 0) + -48 | 0) >>> 0 < 10);
                k[c >> 2] = d;
                if ((d | 0) != -1) {
                  a = 3;
                  r = n;
                  return a | 0;
                }
              } else
                k[c >> 2] = -1;
              Yh(k[a >> 2] | 0, 1008615, h) | 0;
              a = 3;
              r = n;
              return a | 0;
            }
          case 120:
            {
              k[c >> 2] = 1;
              a = 6;
              r = n;
              return a | 0;
            }
          case 88:
            {
              a = 7;
              r = n;
              return a | 0;
            }
          case 60:
            {
              k[a + 4 >> 2] = 1;
              break;
            }
          case 62:
            {
              k[a + 4 >> 2] = 0;
              break;
            }
          case 61:
            {
              k[a + 4 >> 2] = 1;
              break;
            }
          case 33:
            {
              if (((i[e >> 0] | 0) + -48 | 0) >>> 0 < 10) {
                d = 0;
                do {
                  c = e;
                  e = e + 1 | 0;
                  k[b >> 2] = e;
                  d = (d * 10 | 0) + -48 + (i[c >> 0] | 0) | 0;
                } while ((d | 0) < 214748364 & ((i[e >> 0] | 0) + -48 | 0) >>> 0 < 10);
                if ((d + -1 | 0) >>> 0 > 15) {
                  c = k[a >> 2] | 0;
                  k[j >> 2] = d;
                  k[j + 4 >> 2] = 16;
                  Yh(c, 1008575, j) | 0;
                }
              } else
                d = 8;
              k[a + 8 >> 2] = d;
              break;
            }
          case 32:
            break;
          case 122:
            {
              a = 5;
              r = n;
              return a | 0;
            }
          default:
            {
              a = k[a >> 2] | 0;
              k[f >> 2] = d;
              Yh(a, 1008650, f) | 0;
            }
        }
 while (0);
      a = 8;
      r = n;
      return a | 0;
    }
    function Qm(a, b) {
      a = a | 0;
      b = b | 0;
      var c = 0,
          d = 0,
          e = 0,
          f = 0,
          g = 0,
          h = 0,
          j = 0,
          l = 0,
          m = 0,
          n = 0,
          o = 0,
          p = 0,
          q = 0;
      q = r;
      r = r + 288 | 0;
      f = q + 284 | 0;
      l = q + 280 | 0;
      n = q;
      p = gi(a, 1, f) | 0;
      j = gi(a, 2, l) | 0;
      d = ni(a, 3, 1, 0) | 0;
      c = O;
      e = k[f >> 2] | 0;
      if (!((c | 0) > -1 | (c | 0) == -1 & d >>> 0 > 4294967295))
        if (e >>> 0 < (0 - d | 0) >>> 0)
          d = 1;
        else {
          d = pr(d | 0, c | 0, 1, 0) | 0;
          d = pr(d | 0, O | 0, e | 0, 0) | 0;
          c = O;
          o = 4;
        }
      else
        o = 4;
      if ((o | 0) == 4)
        if (!((c | 0) < 0 | (c | 0) == 0 & d >>> 0 < 1)) {
          m = pr(e | 0, 0, 1, 0) | 0;
          h = O;
          if ((c | 0) > (h | 0) | (c | 0) == (h | 0) & d >>> 0 > m >>> 0) {
            ie(a);
            a = 1;
            r = q;
            return a | 0;
          }
        } else
          d = 1;
      m = (b | 0) != 0;
      a: do
        if (m) {
          h = (ce(a, 4) | 0) == 0;
          e = k[l >> 2] | 0;
          if (h) {
            c = 0;
            do {
              b = j + c | 0;
              if (Sp(b, 1008862) | 0) {
                o = 20;
                break a;
              }
              c = c + 1 + (yr(b | 0) | 0) | 0;
            } while (c >>> 0 <= e >>> 0);
          }
          c = p + (d + -1) | 0;
          d = (k[f >> 2] | 0) - d + 1 | 0;
          b: do
            if (!e) {
              if (!c)
                break a;
            } else {
              if (e >>> 0 > d >>> 0)
                break a;
              g = e + -1 | 0;
              if ((d | 0) == (g | 0))
                break a;
              h = i[j >> 0] | 0;
              f = j + 1 | 0;
              d = d - g | 0;
              e = c;
              while (1) {
                c = br(e, h, d) | 0;
                if (!c)
                  break a;
                b = e;
                e = c + 1 | 0;
                if (!(cr(e, f, g) | 0))
                  break b;
                c = e;
                d = b + d | 0;
                if ((d | 0) == (c | 0))
                  break a;
                else
                  d = d - c | 0;
              }
            }
 while (0);
          p = c - p | 0;
          o = p + 1 | 0;
          ke(a, o, ((o | 0) < 0) << 31 >> 31);
          ke(a, p + (k[l >> 2] | 0) | 0, 0);
          a = 2;
          r = q;
          return a | 0;
        } else
          o = 20;
 while (0);
      do
        if ((o | 0) == 20) {
          d = p + (d + -1) | 0;
          h = (i[j >> 0] | 0) == 94;
          if (h) {
            e = (k[l >> 2] | 0) + -1 | 0;
            k[l >> 2] = e;
            j = j + 1 | 0;
          } else
            e = k[l >> 2] | 0;
          l = n + 16 | 0;
          k[l >> 2] = a;
          k[n >> 2] = 200;
          k[n + 4 >> 2] = p;
          g = n + 8 | 0;
          k[g >> 2] = p + (k[f >> 2] | 0);
          k[n + 12 >> 2] = j + e;
          f = n + 20 | 0;
          k[f >> 2] = 0;
          e = Rm(n, d, j) | 0;
          b = (e | 0) == 0;
          c: do
            if (h)
              if (b)
                o = 35;
              else
                b = d;
            else if (b)
              while (1) {
                if (d >>> 0 >= (k[g >> 2] | 0) >>> 0) {
                  o = 35;
                  break c;
                }
                d = d + 1 | 0;
                k[f >> 2] = 0;
                c = Rm(n, d, j) | 0;
                if (c) {
                  e = c;
                  b = d;
                  break;
                }
              }
            else
              b = d;
 while (0);
          if ((o | 0) == 35)
            break;
          if (!m) {
            c = k[f >> 2] | 0;
            c = (b | 0) != 0 & (c | 0) == 0 ? 1 : c;
            hi(k[l >> 2] | 0, c, 1008873);
            if ((c | 0) > 0) {
              d = 0;
              do {
                Sm(n, d, b, e);
                d = d + 1 | 0;
              } while ((d | 0) != (c | 0));
            }
          } else {
            d = p;
            p = 1 - d + b | 0;
            ke(a, p, ((p | 0) < 0) << 31 >> 31);
            d = e - d | 0;
            ke(a, d, ((d | 0) < 0) << 31 >> 31);
            d = k[f >> 2] | 0;
            hi(k[l >> 2] | 0, d, 1008873);
            if ((d | 0) > 0) {
              c = 0;
              do {
                Sm(n, c, 0, 0);
                c = c + 1 | 0;
              } while ((c | 0) != (d | 0));
            }
            c = d + 2 | 0;
          }
          a = c;
          r = q;
          return a | 0;
        }
 while (0);
      ie(a);
      a = 1;
      r = q;
      return a | 0;
    }
    function Rm(a, b, c) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      var d = 0,
          e = 0,
          f = 0,
          g = 0,
          h = 0,
          j = 0,
          m = 0,
          n = 0,
          o = 0,
          p = 0,
          q = 0,
          s = 0,
          t = 0,
          u = 0,
          v = 0,
          w = 0,
          x = 0,
          y = 0,
          z = 0,
          A = 0,
          B = 0,
          C = 0,
          D = 0,
          E = 0,
          F = 0,
          G = 0,
          H = 0,
          I = 0,
          J = 0,
          K = 0,
          L = 0,
          M = 0,
          N = 0,
          O = 0,
          P = 0,
          Q = 0,
          R = 0,
          S = 0;
      S = r;
      r = r + 96 | 0;
      G = S + 72 | 0;
      F = S + 32 | 0;
      E = S;
      D = S + 56 | 0;
      C = S + 64 | 0;
      I = S + 80 | 0;
      H = S + 24 | 0;
      L = S + 48 | 0;
      K = S + 40 | 0;
      J = S + 16 | 0;
      R = k[a >> 2] | 0;
      k[a >> 2] = R + -1;
      if (!R)
        Yh(k[a + 16 >> 2] | 0, 1008937, S + 8 | 0) | 0;
      A = a + 12 | 0;
      s = k[A >> 2] | 0;
      a: do
        if ((s | 0) != (c | 0)) {
          R = a + 8 | 0;
          N = a + 16 | 0;
          B = a + 4 | 0;
          M = a + 20 | 0;
          b: while (1) {
            p = b + 1 | 0;
            v = b + -1 | 0;
            t = s;
            c: while (1) {
              s = i[c >> 0] | 0;
              d: do
                switch (s << 24 >> 24 | 0) {
                  case 40:
                    {
                      P = 7;
                      break b;
                    }
                  case 41:
                    {
                      P = 16;
                      break b;
                    }
                  case 36:
                    {
                      s = c + 1 | 0;
                      if ((s | 0) == (t | 0)) {
                        P = 23;
                        break b;
                      } else {
                        e = s;
                        d = s;
                        P = 89;
                      }
                      break;
                    }
                  case 37:
                    {
                      d = c + 1 | 0;
                      q = i[d >> 0] | 0;
                      switch (q << 24 >> 24 | 0) {
                        case 102:
                          break;
                        case 98:
                          {
                            s = t;
                            P = 25;
                            break c;
                          }
                        case 57:
                        case 56:
                        case 55:
                        case 54:
                        case 53:
                        case 52:
                        case 51:
                        case 50:
                        case 49:
                        case 48:
                          {
                            P = 70;
                            break c;
                          }
                        default:
                          {
                            if ((d | 0) == (t | 0))
                              Yh(k[N >> 2] | 0, 1009063, F) | 0;
                            e = c + 2 | 0;
                            P = 89;
                            break d;
                          }
                      }
                      u = c + 2 | 0;
                      if ((i[u >> 0] | 0) == 91)
                        s = 91;
                      else {
                        Yh(k[N >> 2] | 0, 1009028, I) | 0;
                        s = i[u >> 0] | 0;
                      }
                      e = c + 3 | 0;
                      switch (s << 24 >> 24 | 0) {
                        case 37:
                          {
                            if ((e | 0) == (k[A >> 2] | 0))
                              Yh(k[N >> 2] | 0, 1009063, C) | 0;
                            c = c + 4 | 0;
                            break;
                          }
                        case 91:
                          {
                            s = (i[e >> 0] | 0) == 94 ? c + 4 | 0 : e;
                            do {
                              if ((s | 0) == (k[A >> 2] | 0))
                                Yh(k[N >> 2] | 0, 1009098, D) | 0;
                              q = s + 1 | 0;
                              if ((i[s >> 0] | 0) == 37)
                                s = q >>> 0 < (k[A >> 2] | 0) >>> 0 ? s + 2 | 0 : q;
                              else
                                s = q;
                            } while ((i[s >> 0] | 0) != 93);
                            c = s + 1 | 0;
                            break;
                          }
                        default:
                          c = e;
                      }
                      if ((b | 0) == (k[B >> 2] | 0))
                        t = 0;
                      else
                        t = i[v >> 0] | 0;
                      g = t & 255;
                      d = c + -1 | 0;
                      f = (i[e >> 0] | 0) == 94;
                      q = f ? e : u;
                      f = f & 1;
                      s = f ^ 1;
                      o = q + 1 | 0;
                      e: do
                        if (o >>> 0 < d >>> 0) {
                          h = t & 255;
                          while (1) {
                            t = i[o >> 0] | 0;
                            n = q + 2 | 0;
                            j = i[n >> 0] | 0;
                            do
                              if (t << 24 >> 24 == 37)
                                if (!(Tm(g, j & 255) | 0))
                                  q = n;
                                else
                                  break e;
                              else {
                                if (j << 24 >> 24 == 45 ? (w = q + 3 | 0, w >>> 0 < d >>> 0) : 0) {
                                  if ((t & 255) >>> 0 > g >>> 0) {
                                    q = w;
                                    break;
                                  }
                                  if ((l[w >> 0] | 0) >>> 0 < g >>> 0) {
                                    q = w;
                                    break;
                                  } else
                                    break e;
                                }
                                if (t << 24 >> 24 == h << 24 >> 24)
                                  break e;
                                else
                                  q = o;
                              }
 while (0);
                            o = q + 1 | 0;
                            if (o >>> 0 >= d >>> 0) {
                              s = f;
                              break;
                            }
                          }
                        } else
                          s = f;
 while (0);
                      if (s) {
                        b = 0;
                        break a;
                      }
                      g = i[b >> 0] | 0;
                      f = g & 255;
                      h = (i[e >> 0] | 0) == 94;
                      q = h ? e : u;
                      h = h & 1;
                      s = h ^ 1;
                      o = q + 1 | 0;
                      f: do
                        if (o >>> 0 < d >>> 0)
                          while (1) {
                            t = i[o >> 0] | 0;
                            n = q + 2 | 0;
                            j = i[n >> 0] | 0;
                            do
                              if (t << 24 >> 24 == 37)
                                if (!(Tm(f, j & 255) | 0))
                                  q = n;
                                else
                                  break f;
                              else {
                                if (j << 24 >> 24 == 45 ? (x = q + 3 | 0, x >>> 0 < d >>> 0) : 0) {
                                  if ((t & 255) > (g & 255)) {
                                    q = x;
                                    break;
                                  }
                                  if ((l[x >> 0] | 0) < (g & 255)) {
                                    q = x;
                                    break;
                                  } else
                                    break f;
                                }
                                if (t << 24 >> 24 == g << 24 >> 24)
                                  break f;
                                else
                                  q = o;
                              }
 while (0);
                            o = q + 1 | 0;
                            if (o >>> 0 >= d >>> 0) {
                              s = h;
                              break;
                            }
                          }
                        else
                          s = h;
 while (0);
                      if (!s) {
                        b = 0;
                        break a;
                      }
                      break;
                    }
                  default:
                    {
                      d = c + 1 | 0;
                      if (s << 24 >> 24 == 91) {
                        s = (i[d >> 0] | 0) == 94 ? c + 2 | 0 : d;
                        q = t;
                        while (1) {
                          if ((s | 0) == (q | 0))
                            Yh(k[N >> 2] | 0, 1009098, G) | 0;
                          q = s + 1 | 0;
                          if ((i[s >> 0] | 0) == 37)
                            s = q >>> 0 < (k[A >> 2] | 0) >>> 0 ? s + 2 | 0 : q;
                          else
                            s = q;
                          if ((i[s >> 0] | 0) == 93)
                            break;
                          q = k[A >> 2] | 0;
                        }
                        e = s + 1 | 0;
                        P = 89;
                      } else {
                        e = d;
                        P = 89;
                      }
                    }
                }
 while (0);
              g: do
                if ((P | 0) == 89) {
                  P = 0;
                  do
                    if ((k[R >> 2] | 0) >>> 0 > b >>> 0) {
                      f = i[b >> 0] | 0;
                      u = f & 255;
                      s = i[c >> 0] | 0;
                      h: do
                        switch (s << 24 >> 24 | 0) {
                          case 46:
                            {
                              s = i[e >> 0] | 0;
                              break;
                            }
                          case 37:
                            {
                              q = Tm(u, l[d >> 0] | 0) | 0;
                              P = 104;
                              break;
                            }
                          case 91:
                            {
                              h = e + -1 | 0;
                              g = (i[d >> 0] | 0) == 94;
                              s = g ? d : c;
                              g = g & 1;
                              q = g ^ 1;
                              t = s + 1 | 0;
                              if (t >>> 0 < h >>> 0)
                                while (1) {
                                  o = i[t >> 0] | 0;
                                  n = s + 2 | 0;
                                  j = i[n >> 0] | 0;
                                  do
                                    if (o << 24 >> 24 == 37)
                                      if (!(Tm(u, j & 255) | 0))
                                        s = n;
                                      else {
                                        P = 104;
                                        break h;
                                      }
                                    else {
                                      if (j << 24 >> 24 == 45 ? (z = s + 3 | 0, z >>> 0 < h >>> 0) : 0) {
                                        if ((o & 255) > (f & 255)) {
                                          s = z;
                                          break;
                                        }
                                        if ((l[z >> 0] | 0) < (f & 255)) {
                                          s = z;
                                          break;
                                        } else {
                                          P = 104;
                                          break h;
                                        }
                                      }
                                      if (o << 24 >> 24 == f << 24 >> 24) {
                                        P = 104;
                                        break h;
                                      } else
                                        s = t;
                                    }
 while (0);
                                  t = s + 1 | 0;
                                  if (t >>> 0 >= h >>> 0) {
                                    q = g;
                                    P = 104;
                                    break;
                                  }
                                }
                              else {
                                q = g;
                                P = 104;
                              }
                              break;
                            }
                          default:
                            {
                              q = s << 24 >> 24 == f << 24 >> 24 & 1;
                              P = 104;
                            }
                        }
 while (0);
                      if ((P | 0) == 104) {
                        P = 0;
                        s = i[e >> 0] | 0;
                        if (!q)
                          break;
                      }
                      switch (s << 24 >> 24 | 0) {
                        case 45:
                          {
                            P = 109;
                            break b;
                          }
                        case 63:
                          break;
                        case 43:
                          {
                            b = p;
                            P = 112;
                            break b;
                          }
                        case 42:
                          {
                            t = e;
                            s = d;
                            break b;
                          }
                        default:
                          {
                            b = p;
                            c = e;
                            break c;
                          }
                      }
                      c = e + 1 | 0;
                      s = Rm(a, p, c) | 0;
                      if (!s)
                        break g;
                      else {
                        b = s;
                        break a;
                      }
                    } else
                      s = i[e >> 0] | 0;
 while (0);
                  switch (s << 24 >> 24) {
                    case 45:
                    case 63:
                    case 42:
                      break;
                    default:
                      {
                        b = 0;
                        break a;
                      }
                  }
                  c = e + 1 | 0;
                }
 while (0);
              t = k[A >> 2] | 0;
              if ((c | 0) == (t | 0))
                break a;
            }
            if ((P | 0) == 25) {
              P = 0;
              q = c + 2 | 0;
              if ((s + -1 | 0) >>> 0 <= q >>> 0)
                Yh(k[N >> 2] | 0, 1008981, H) | 0;
              n = i[b >> 0] | 0;
              if (n << 24 >> 24 != (i[q >> 0] | 0)) {
                b = 0;
                break a;
              }
              t = i[c + 3 >> 0] | 0;
              o = k[R >> 2] | 0;
              if (p >>> 0 < o >>> 0)
                s = 1;
              else {
                b = 0;
                break a;
              }
              while (1) {
                q = i[p >> 0] | 0;
                if (q << 24 >> 24 == t << 24 >> 24) {
                  s = s + -1 | 0;
                  if (!s)
                    break;
                } else
                  s = (q << 24 >> 24 == n << 24 >> 24 & 1) + s | 0;
                q = p + 1 | 0;
                if (q >>> 0 < o >>> 0) {
                  b = p;
                  p = q;
                } else {
                  b = 0;
                  break a;
                }
              }
              b = b + 2 | 0;
              c = c + 4 | 0;
            } else if ((P | 0) == 70) {
              P = 0;
              p = q & 255;
              s = p + -49 | 0;
              if (((q & 255) >= 49 ? (s | 0) < (k[M >> 2] | 0) : 0) ? (y = k[a + 24 + (s << 3) + 4 >> 2] | 0, (y | 0) != -1) : 0)
                q = y;
              else {
                q = k[N >> 2] | 0;
                k[E >> 2] = p + -48;
                q = Yh(q, 1008891, E) | 0;
                s = q;
                q = k[a + 24 + (q << 3) + 4 >> 2] | 0;
              }
              if (((k[R >> 2] | 0) - b | 0) >>> 0 < q >>> 0) {
                b = 0;
                break a;
              }
              p = b + q | 0;
              if ((p | 0) == 0 | (cr(k[a + 24 + (s << 3) >> 2] | 0, b, q) | 0) != 0) {
                b = 0;
                break a;
              }
              b = p;
              c = c + 2 | 0;
            }
            s = k[A >> 2] | 0;
            if ((c | 0) == (s | 0))
              break a;
          }
          if ((P | 0) == 7) {
            e = c + 1 | 0;
            if ((i[e >> 0] | 0) == 41) {
              e = k[M >> 2] | 0;
              if ((e | 0) > 31)
                Yh(k[N >> 2] | 0, 1008873, J) | 0;
              k[a + 24 + (e << 3) >> 2] = b;
              k[a + 24 + (e << 3) + 4 >> 2] = -2;
              k[M >> 2] = e + 1;
              b = Rm(a, b, c + 2 | 0) | 0;
              if (b)
                break;
              k[M >> 2] = (k[M >> 2] | 0) + -1;
              b = 0;
              break;
            } else {
              c = k[M >> 2] | 0;
              if ((c | 0) > 31)
                Yh(k[N >> 2] | 0, 1008873, K) | 0;
              k[a + 24 + (c << 3) >> 2] = b;
              k[a + 24 + (c << 3) + 4 >> 2] = -1;
              k[M >> 2] = c + 1;
              b = Rm(a, b, e) | 0;
              if (b)
                break;
              k[M >> 2] = (k[M >> 2] | 0) + -1;
              b = 0;
              break;
            }
          } else if ((P | 0) == 16) {
            f = c + 1 | 0;
            c = k[M >> 2] | 0;
            while (1) {
              e = c + -1 | 0;
              if ((c | 0) <= 0) {
                P = 19;
                break;
              }
              if ((k[a + 24 + (e << 3) + 4 >> 2] | 0) == -1)
                break;
              else
                c = e;
            }
            if ((P | 0) == 19)
              e = Yh(k[N >> 2] | 0, 1008957, L) | 0;
            c = a + 24 + (e << 3) + 4 | 0;
            k[c >> 2] = b - (k[a + 24 + (e << 3) >> 2] | 0);
            b = Rm(a, b, f) | 0;
            if (b)
              break;
            k[c >> 2] = -1;
            b = 0;
            break;
          } else if ((P | 0) == 23) {
            b = (b | 0) == (k[R >> 2] | 0) ? b : 0;
            break;
          } else if ((P | 0) == 109) {
            s = e + 1 | 0;
            f = Rm(a, b, s) | 0;
            if (f) {
              b = f;
              break;
            }
            q = e + -1 | 0;
            p = b;
            while (1) {
              if ((k[R >> 2] | 0) >>> 0 <= p >>> 0) {
                b = 0;
                break a;
              }
              n = i[p >> 0] | 0;
              o = n & 255;
              f = i[c >> 0] | 0;
              i: do
                switch (f << 24 >> 24 | 0) {
                  case 37:
                    {
                      m = Tm(o, l[d >> 0] | 0) | 0;
                      P = 147;
                      break;
                    }
                  case 91:
                    {
                      j = (i[d >> 0] | 0) == 94;
                      f = j ? d : c;
                      j = j & 1;
                      m = j ^ 1;
                      e = f + 1 | 0;
                      if (e >>> 0 < q >>> 0)
                        while (1) {
                          g = i[e >> 0] | 0;
                          b = f + 2 | 0;
                          h = i[b >> 0] | 0;
                          do
                            if (g << 24 >> 24 == 37)
                              if (!(Tm(o, h & 255) | 0))
                                f = b;
                              else {
                                P = 147;
                                break i;
                              }
                            else {
                              if (h << 24 >> 24 == 45 ? (O = f + 3 | 0, O >>> 0 < q >>> 0) : 0) {
                                if ((g & 255) > (n & 255)) {
                                  f = O;
                                  break;
                                }
                                if ((l[O >> 0] | 0) < (n & 255)) {
                                  f = O;
                                  break;
                                } else {
                                  P = 147;
                                  break i;
                                }
                              }
                              if (g << 24 >> 24 == n << 24 >> 24) {
                                P = 147;
                                break i;
                              } else
                                f = e;
                            }
 while (0);
                          e = f + 1 | 0;
                          if (e >>> 0 >= q >>> 0) {
                            m = j;
                            P = 147;
                            break;
                          }
                        }
                      else {
                        m = j;
                        P = 147;
                      }
                      break;
                    }
                  case 46:
                    break;
                  default:
                    {
                      m = f << 24 >> 24 == n << 24 >> 24 & 1;
                      P = 147;
                    }
                }
 while (0);
              if ((P | 0) == 147 ? (P = 0, (m | 0) == 0) : 0) {
                b = 0;
                break a;
              }
              p = p + 1 | 0;
              b = Rm(a, p, s) | 0;
              if (b)
                break a;
            }
          } else if ((P | 0) == 112) {
            t = e;
            s = d;
          }
          f = k[R >> 2] | 0;
          if (f >>> 0 > b >>> 0) {
            q = t + -1 | 0;
            e = b;
            d = 0;
            do {
              p = i[e >> 0] | 0;
              o = p & 255;
              e = i[c >> 0] | 0;
              j: do
                switch (e << 24 >> 24 | 0) {
                  case 37:
                    {
                      e = Tm(o, l[s >> 0] | 0) | 0;
                      P = 129;
                      break;
                    }
                  case 91:
                    {
                      n = (i[s >> 0] | 0) == 94;
                      f = n ? s : c;
                      n = n & 1;
                      e = n ^ 1;
                      g = f + 1 | 0;
                      if (g >>> 0 < q >>> 0)
                        while (1) {
                          h = i[g >> 0] | 0;
                          j = f + 2 | 0;
                          m = i[j >> 0] | 0;
                          do
                            if (h << 24 >> 24 == 37)
                              if (!(Tm(o, m & 255) | 0))
                                f = j;
                              else {
                                P = 129;
                                break j;
                              }
                            else {
                              if (m << 24 >> 24 == 45 ? (Q = f + 3 | 0, Q >>> 0 < q >>> 0) : 0) {
                                if ((h & 255) > (p & 255)) {
                                  f = Q;
                                  break;
                                }
                                if ((l[Q >> 0] | 0) < (p & 255)) {
                                  f = Q;
                                  break;
                                } else {
                                  P = 129;
                                  break j;
                                }
                              }
                              if (h << 24 >> 24 == p << 24 >> 24) {
                                P = 129;
                                break j;
                              } else
                                f = g;
                            }
 while (0);
                          g = f + 1 | 0;
                          if (g >>> 0 >= q >>> 0) {
                            e = n;
                            P = 129;
                            break;
                          }
                        }
                      else {
                        e = n;
                        P = 129;
                      }
                      break;
                    }
                  case 46:
                    break;
                  default:
                    {
                      e = e << 24 >> 24 == p << 24 >> 24 & 1;
                      P = 129;
                    }
                }
 while (0);
              if ((P | 0) == 129) {
                P = 0;
                if (!e)
                  break;
                f = k[R >> 2] | 0;
              }
              d = d + 1 | 0;
              e = b + d | 0;
            } while (f >>> 0 > e >>> 0);
            if ((d | 0) <= -1) {
              b = 0;
              break;
            }
          } else
            d = 0;
          c = t + 1 | 0;
          while (1) {
            e = Rm(a, b + d | 0, c) | 0;
            if (e) {
              b = e;
              break a;
            }
            if ((d | 0) > 0)
              d = d + -1 | 0;
            else {
              b = 0;
              break;
            }
          }
        }
 while (0);
      k[a >> 2] = (k[a >> 2] | 0) + 1;
      r = S;
      return b | 0;
    }
    function Sm(a, b, c, d) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      d = d | 0;
      var e = 0,
          f = 0,
          g = 0;
      g = r;
      r = r + 16 | 0;
      e = g + 8 | 0;
      f = g;
      if ((k[a + 20 >> 2] | 0) <= (b | 0)) {
        e = k[a + 16 >> 2] | 0;
        if (!b) {
          le(e, c, d - c | 0) | 0;
          r = g;
          return ;
        } else {
          k[f >> 2] = b + 1;
          Yh(e, 1008891, f) | 0;
          r = g;
          return ;
        }
      }
      f = k[a + 24 + (b << 3) + 4 >> 2] | 0;
      if ((f | 0) != -1) {
        e = k[a + 16 >> 2] | 0;
        d = k[a + 24 + (b << 3) >> 2] | 0;
        if ((f | 0) == -2) {
          a = d + 1 - (k[a + 4 >> 2] | 0) | 0;
          ke(e, a, ((a | 0) < 0) << 31 >> 31);
          r = g;
          return ;
        }
      } else {
        d = a + 16 | 0;
        Yh(k[d >> 2] | 0, 1008918, e) | 0;
        e = k[d >> 2] | 0;
        d = k[a + 24 + (b << 3) >> 2] | 0;
      }
      le(e, d, f) | 0;
      r = g;
      return ;
    }
    function Tm(a, b) {
      a = a | 0;
      b = b | 0;
      do
        switch (Bq(b) | 0) {
          case 97:
            {
              a = Gp(a) | 0;
              break;
            }
          case 99:
            {
              a = Hp(a) | 0;
              break;
            }
          case 100:
            {
              a = (a + -48 | 0) >>> 0 < 10 & 1;
              break;
            }
          case 103:
            {
              a = Ip(a) | 0;
              break;
            }
          case 108:
            {
              a = Jp(a) | 0;
              break;
            }
          case 112:
            {
              a = Kp(a) | 0;
              break;
            }
          case 115:
            {
              a = yq(a) | 0;
              break;
            }
          case 117:
            {
              a = zq(a) | 0;
              break;
            }
          case 119:
            {
              a = Fp(a) | 0;
              break;
            }
          case 120:
            {
              a = Aq(a) | 0;
              break;
            }
          case 122:
            {
              a = (a | 0) == 0 & 1;
              break;
            }
          default:
            {
              b = (b | 0) == (a | 0) & 1;
              return b | 0;
            }
        }
 while (0);
      b = (Jp(b) | 0) == 0;
      b = b ? (a | 0) == 0 & 1 : a;
      return b | 0;
    }
    function Um(a) {
      a = a | 0;
      var b = 0,
          c = 0,
          d = 0,
          e = 0,
          f = 0,
          g = 0,
          h = 0,
          i = 0,
          j = 0,
          l = 0;
      l = r;
      r = r + 288 | 0;
      j = l + 8 | 0;
      g = l + 4 | 0;
      c = l;
      f = de(a, -1001001, g) | 0;
      e = de(a, -1001002, c) | 0;
      h = j + 16 | 0;
      k[h >> 2] = a;
      k[j >> 2] = 200;
      k[j + 4 >> 2] = f;
      g = k[g >> 2] | 0;
      b = j + 8 | 0;
      k[b >> 2] = f + g;
      k[j + 12 >> 2] = e + (k[c >> 2] | 0);
      c = be(a, -1001003, 0) | 0;
      if ((c | 0) > (g | 0)) {
        j = 0;
        r = l;
        return j | 0;
      }
      g = j + 20 | 0;
      d = f + c | 0;
      while (1) {
        k[g >> 2] = 0;
        c = Rm(j, d, e) | 0;
        if (c) {
          e = c;
          break;
        }
        d = d + 1 | 0;
        if (d >>> 0 > (k[b >> 2] | 0) >>> 0) {
          b = 0;
          i = 7;
          break;
        }
      }
      if ((i | 0) == 7) {
        r = l;
        return b | 0;
      }
      b = e - f | 0;
      b = pr(b | 0, ((b | 0) < 0) << 31 >> 31 | 0, (e | 0) == (d | 0) | 0, 0) | 0;
      ke(a, b, O);
      Rd(a, -1, -1001003);
      Pd(a, -2);
      b = k[g >> 2] | 0;
      b = (d | 0) != 0 & (b | 0) == 0 ? 1 : b;
      hi(k[h >> 2] | 0, b, 1008873);
      if ((b | 0) > 0)
        c = 0;
      else {
        j = b;
        r = l;
        return j | 0;
      }
      do {
        Sm(j, c, d, e);
        c = c + 1 | 0;
      } while ((c | 0) != (b | 0));
      r = l;
      return b | 0;
    }
    function Vm(a, b, c, d) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      d = d | 0;
      pi(d, b, c);
      return 0;
    }
    function Wm(a) {
      a = a | 0;
      je(a, +(db() | 0) / 1.0e6);
      return 1;
    }
    function Xm(a) {
      a = a | 0;
      var b = 0,
          c = 0,
          d = 0,
          e = 0,
          f = 0,
          g = 0,
          h = 0,
          j = 0,
          l = 0,
          m = 0,
          n = 0,
          o = 0,
          p = 0,
          q = 0,
          s = 0,
          t = 0,
          u = 0,
          v = 0;
      v = r;
      r = r + 4336 | 0;
      t = v;
      d = v + 4120 | 0;
      s = v + 4328 | 0;
      p = v + 8 | 0;
      q = v + 4128 | 0;
      b = fi(a, 1, 1009658, 0) | 0;
      if ((Td(a, 2) | 0) < 1)
        c = Hb(0) | 0;
      else
        c = mi(a, 2) | 0;
      k[d >> 2] = c;
      if ((i[b >> 0] | 0) == 33) {
        b = b + 1 | 0;
        n = Ab(d | 0) | 0;
      } else
        n = Db(d | 0) | 0;
      if (!n) {
        ie(a);
        r = v;
        return 1;
      }
      if (!(dr(b, 1009661) | 0)) {
        Ae(a, 0, 9);
        b = k[n >> 2] | 0;
        ke(a, b, ((b | 0) < 0) << 31 >> 31);
        Ee(a, -2, 1009560);
        b = k[n + 4 >> 2] | 0;
        ke(a, b, ((b | 0) < 0) << 31 >> 31);
        Ee(a, -2, 1009842);
        b = k[n + 8 >> 2] | 0;
        ke(a, b, ((b | 0) < 0) << 31 >> 31);
        Ee(a, -2, 1009564);
        b = k[n + 12 >> 2] | 0;
        ke(a, b, ((b | 0) < 0) << 31 >> 31);
        Ee(a, -2, 1009569);
        b = (k[n + 16 >> 2] | 0) + 1 | 0;
        ke(a, b, ((b | 0) < 0) << 31 >> 31);
        Ee(a, -2, 1009606);
        b = (k[n + 20 >> 2] | 0) + 1900 | 0;
        ke(a, b, ((b | 0) < 0) << 31 >> 31);
        Ee(a, -2, 1009612);
        b = (k[n + 24 >> 2] | 0) + 1 | 0;
        ke(a, b, ((b | 0) < 0) << 31 >> 31);
        Ee(a, -2, 1009664);
        b = (k[n + 28 >> 2] | 0) + 1 | 0;
        ke(a, b, ((b | 0) < 0) << 31 >> 31);
        Ee(a, -2, 1009669);
        b = k[n + 32 >> 2] | 0;
        if ((b | 0) < 0) {
          r = v;
          return 1;
        }
        qe(a, b);
        Ee(a, -2, 1009617);
        r = v;
        return 1;
      }
      i[s >> 0] = 37;
      ui(a, p);
      g = p + 8 | 0;
      h = p + 4 | 0;
      j = s + 1 | 0;
      l = s + 2 | 0;
      m = s + 3 | 0;
      a: while (1) {
        c = i[b >> 0] | 0;
        switch (c << 24 >> 24) {
          case 0:
            break a;
          case 37:
            break;
          default:
            {
              d = k[g >> 2] | 0;
              if (d >>> 0 >= (k[h >> 2] | 0) >>> 0) {
                oi(p, 1) | 0;
                d = k[g >> 2] | 0;
                c = i[b >> 0] | 0;
              }
              k[g >> 2] = d + 1;
              i[(k[p >> 2] | 0) + d >> 0] = c;
              b = b + 1 | 0;
              continue a;
            }
        }
        f = b + 1 | 0;
        e = b + 2 | 0;
        d = i[f >> 0] | 0;
        do
          if (!(d << 24 >> 24))
            u = 28;
          else {
            c = d << 24 >> 24;
            if (br(1009674, c, 38) | 0) {
              i[j >> 0] = d;
              i[l >> 0] = 0;
              b = e;
              break;
            }
            if (((br(1009712, c, 2) | 0) != 0 ? (i[j >> 0] = d, o = i[e >> 0] | 0, o << 24 >> 24 != 0) : 0) ? (br(1009714, o << 24 >> 24, 7) | 0) != 0 : 0)
              d = o;
            else {
              d = i[f >> 0] | 0;
              if (!(d << 24 >> 24)) {
                u = 28;
                break;
              }
              if (!(br(1009721, d << 24 >> 24, 2) | 0)) {
                u = 28;
                break;
              }
              i[j >> 0] = d;
              d = i[e >> 0] | 0;
              if (!(d << 24 >> 24)) {
                u = 28;
                break;
              }
              if (!(br(1009723, d << 24 >> 24, 14) | 0)) {
                u = 28;
                break;
              }
            }
            i[l >> 0] = d;
            i[m >> 0] = 0;
            b = b + 3 | 0;
          }
 while (0);
        if ((u | 0) == 28) {
          u = 0;
          k[t >> 2] = f;
          Xh(a, 1, oe(a, 1009737, t) | 0) | 0;
          b = f;
        }
        pi(p, q, bc(q | 0, 200, s | 0, n | 0) | 0);
      }
      ri(p);
      r = v;
      return 1;
    }
    function Ym(a) {
      a = a | 0;
      var b = 0,
          c = 0;
      c = mi(a, 1) | 0;
      b = mi(a, 2) | 0;
      je(a, +Bc(c | 0, b | 0));
      return 1;
    }
    function Zm(a) {
      a = a | 0;
      var b = 0,
          c = 0;
      c = fi(a, 1, 0, 0) | 0;
      b = Gc(c | 0) | 0;
      if (!c) {
        qe(a, b);
        c = 1;
        return c | 0;
      } else {
        c = $h(a, b) | 0;
        return c | 0;
      }
      return 0;
    }
    function _m(a) {
      a = a | 0;
      var b = 0;
      if ((Td(a, 1) | 0) == 1)
        b = (ce(a, 1) | 0) == 0 & 1;
      else
        b = ni(a, 1, 0, 0) | 0;
      if (ce(a, 2) | 0)
        ch(a);
      if (!a)
        return 0;
      else
        Kb(b | 0);
      return 0;
    }
    function $m(a) {
      a = a | 0;
      me(a, fc(gi(a, 1, 0) | 0) | 0) | 0;
      return 1;
    }
    function an(a) {
      a = a | 0;
      var b = 0;
      b = gi(a, 1, 0) | 0;
      return _h(a, (_b(b | 0) | 0) == 0 & 1, b) | 0;
    }
    function bn(a) {
      a = a | 0;
      var b = 0;
      b = gi(a, 1, 0) | 0;
      return _h(a, (Qb(b | 0, gi(a, 2, 0) | 0) | 0) == 0 & 1, 0) | 0;
    }
    function cn(a) {
      a = a | 0;
      var b = 0,
          c = 0;
      b = fi(a, 1, 0, 0) | 0;
      c = 18120 + ((ei(a, 2, 1009623, 18092) | 0) << 2) | 0;
      me(a, rb(k[c >> 2] | 0, b | 0) | 0) | 0;
      return 1;
    }
    function dn(a) {
      a = a | 0;
      var b = 0,
          c = 0,
          d = 0,
          e = 0,
          f = 0,
          g = 0,
          h = 0;
      h = r;
      r = r + 80 | 0;
      f = h + 16 | 0;
      d = h + 8 | 0;
      c = h;
      e = h + 64 | 0;
      g = h + 20 | 0;
      if ((Td(a, 1) | 0) < 1)
        b = Hb(0) | 0;
      else {
        ii(a, 1, 5);
        Pd(a, 1);
        ve(a, -1, 1009560) | 0;
        b = be(a, -1, e) | 0;
        b = (k[e >> 2] | 0) == 0 ? 0 : b;
        Pd(a, -2);
        k[g >> 2] = b;
        ve(a, -1, 1009842) | 0;
        b = be(a, -1, e) | 0;
        b = (k[e >> 2] | 0) == 0 ? 0 : b;
        Pd(a, -2);
        k[g + 4 >> 2] = b;
        ve(a, -1, 1009564) | 0;
        b = be(a, -1, e) | 0;
        b = (k[e >> 2] | 0) == 0 ? 12 : b;
        Pd(a, -2);
        k[g + 8 >> 2] = b;
        ve(a, -1, 1009569) | 0;
        b = be(a, -1, e) | 0;
        if (!(k[e >> 2] | 0)) {
          k[c >> 2] = 1009569;
          b = Yh(a, 1009573, c) | 0;
        } else
          Pd(a, -2);
        k[g + 12 >> 2] = b;
        ve(a, -1, 1009606) | 0;
        b = be(a, -1, e) | 0;
        if (!(k[e >> 2] | 0)) {
          k[d >> 2] = 1009606;
          b = Yh(a, 1009573, d) | 0;
        } else
          Pd(a, -2);
        k[g + 16 >> 2] = b + -1;
        ve(a, -1, 1009612) | 0;
        b = be(a, -1, e) | 0;
        if (!(k[e >> 2] | 0)) {
          k[f >> 2] = 1009612;
          b = Yh(a, 1009573, f) | 0;
        } else
          Pd(a, -2);
        k[g + 20 >> 2] = b + -1900;
        if (!(ve(a, -1, 1009617) | 0))
          b = -1;
        else
          b = ce(a, -1) | 0;
        Pd(a, -2);
        k[g + 32 >> 2] = b;
        b = xb(g | 0) | 0;
      }
      if ((b | 0) == -1) {
        ie(a);
        r = h;
        return 1;
      } else {
        ke(a, b, ((b | 0) < 0) << 31 >> 31);
        r = h;
        return 1;
      }
      return 0;
    }
    function en(a) {
      a = a | 0;
      var b = 0,
          c = 0;
      c = r;
      r = r + 32 | 0;
      b = c + 4 | 0;
      if (!(mb(b | 0) | 0)) {
        b = Yh(a, 1009523, c) | 0;
        r = c;
        return b | 0;
      } else {
        me(a, b) | 0;
        b = 1;
        r = c;
        return b | 0;
      }
      return 0;
    }
    function fn(a) {
      a = a | 0;
      var b = 0,
          c = 0,
          d = 0,
          e = 0;
      if (!(Wd(a, 1) | 0)) {
        je(a, +Z(+(+ki(a, 1))));
        return 1;
      } else {
        d = be(a, 1, 0) | 0;
        b = O;
        c = (b | 0) < 0;
        e = or(0, 0, d | 0, b | 0) | 0;
        ke(a, c ? e : d, c ? O : b);
        return 1;
      }
      return 0;
    }
    function gn(a) {
      a = a | 0;
      je(a, +da(+(+ki(a, 1))));
      return 1;
    }
    function hn(a) {
      a = a | 0;
      je(a, +ea(+(+ki(a, 1))));
      return 1;
    }
    function jn(a) {
      a = a | 0;
      var b = 0.0;
      b = +ki(a, 1);
      je(a, +ga(+b, +(+li(a, 2, 1.0))));
      return 1;
    }
    function kn(a) {
      a = a | 0;
      var b = 0.0;
      if (Wd(a, 1) | 0) {
        Pd(a, 1);
        return 1;
      }
      b = +ja(+(+ki(a, 1)));
      if (b >= -9223372036854775808.0 & b < 9223372036854775808.0) {
        ke(a, ~~b >>> 0, +Z(b) >= 1.0 ? (b > 0.0 ? ~~+la(+Y(b / 4294967296.0), 4294967295.0) >>> 0 : ~~+ja((b - +(~~b >>> 0)) / 4294967296.0) >>> 0) : 0);
        return 1;
      } else {
        je(a, b);
        return 1;
      }
      return 0;
    }
    function ln(a) {
      a = a | 0;
      je(a, +aa(+(+ki(a, 1))));
      return 1;
    }
    function mn(a) {
      a = a | 0;
      je(a, +ki(a, 1) * 57.29577951308232);
      return 1;
    }
    function nn(a) {
      a = a | 0;
      je(a, +ha(+(+ki(a, 1))));
      return 1;
    }
    function on(a) {
      a = a | 0;
      var b = 0,
          c = 0,
          d = 0,
          e = 0;
      d = r;
      r = r + 16 | 0;
      e = d;
      b = be(a, 1, e) | 0;
      c = O;
      if (!(k[e >> 2] | 0)) {
        ji(a, 1);
        ie(a);
        r = d;
        return 1;
      } else {
        ke(a, b, c);
        r = d;
        return 1;
      }
      return 0;
    }
    function pn(a) {
      a = a | 0;
      var b = 0.0;
      if (Wd(a, 1) | 0) {
        Pd(a, 1);
        return 1;
      }
      b = +Y(+(+ki(a, 1)));
      if (b >= -9223372036854775808.0 & b < 9223372036854775808.0) {
        ke(a, ~~b >>> 0, +Z(b) >= 1.0 ? (b > 0.0 ? ~~+la(+Y(b / 4294967296.0), 4294967295.0) >>> 0 : ~~+ja((b - +(~~b >>> 0)) / 4294967296.0) >>> 0) : 0);
        return 1;
      } else {
        je(a, b);
        return 1;
      }
      return 0;
    }
    function qn(a) {
      a = a | 0;
      var b = 0,
          c = 0,
          d = 0,
          e = 0,
          f = 0.0;
      if ((Wd(a, 1) | 0) != 0 ? (Wd(a, 2) | 0) != 0 : 0) {
        b = be(a, 2, 0) | 0;
        c = O;
        d = pr(b | 0, c | 0, 1, 0) | 0;
        e = O;
        if (!(e >>> 0 < 0 | (e | 0) == 0 & d >>> 0 < 2)) {
          e = be(a, 1, 0) | 0;
          e = Dr(e | 0, O | 0, b | 0, c | 0) | 0;
          ke(a, e, O);
          return 1;
        }
        if ((b | 0) == 0 & (c | 0) == 0)
          Xh(a, 2, 1009972) | 0;
        ke(a, 0, 0);
        return 1;
      }
      f = +ki(a, 1);
      je(a, +Iq(f, +ki(a, 2)));
      return 1;
    }
    function rn(a) {
      a = a | 0;
      var b = 0,
          c = 0,
          d = 0,
          e = 0;
      c = mi(a, 1) | 0;
      e = O;
      b = mi(a, 2) | 0;
      d = O;
      qe(a, (e >>> 0 < d >>> 0 | (e | 0) == (d | 0) & c >>> 0 < b >>> 0) & 1);
      return 1;
    }
    function sn(a) {
      a = a | 0;
      var b = 0.0,
          c = 0.0;
      b = +ki(a, 1);
      do
        if ((Td(a, 2) | 0) >= 1) {
          c = +ki(a, 2);
          if (c == 10.0) {
            b = +Mq(b);
            break;
          } else {
            b = +ia(+b) / +ia(+c);
            break;
          }
        } else
          b = +ia(+b);
 while (0);
      je(a, b);
      return 1;
    }
    function tn(a) {
      a = a | 0;
      var b = 0,
          c = 0,
          d = 0,
          e = 0;
      c = Od(a) | 0;
      if ((c | 0) > 0)
        if ((c | 0) < 2)
          b = 1;
        else {
          d = 2;
          b = 1;
          while (1) {
            e = (_d(a, b, d, 1) | 0) == 0;
            b = e ? b : d;
            if ((d | 0) == (c | 0))
              break;
            else
              d = d + 1 | 0;
          }
        }
      else {
        Xh(a, 1, 1009957) | 0;
        b = 1;
      }
      Sd(a, b);
      return 1;
    }
    function un(a) {
      a = a | 0;
      var b = 0,
          c = 0,
          d = 0,
          e = 0;
      c = Od(a) | 0;
      if ((c | 0) > 0)
        if ((c | 0) < 2)
          b = 1;
        else {
          d = 2;
          b = 1;
          while (1) {
            e = (_d(a, d, b, 1) | 0) == 0;
            b = e ? b : d;
            if ((d | 0) == (c | 0))
              break;
            else
              d = d + 1 | 0;
          }
        }
      else {
        Xh(a, 1, 1009957) | 0;
        b = 1;
      }
      Sd(a, b);
      return 1;
    }
    function vn(a) {
      a = a | 0;
      var b = 0.0,
          c = 0.0;
      if (Wd(a, 1) | 0) {
        Pd(a, 1);
        je(a, 0.0);
        return 2;
      }
      b = +ki(a, 1);
      if (b < 0.0)
        c = +ja(+b);
      else
        c = +Y(+b);
      if (c >= -9223372036854775808.0 & c < 9223372036854775808.0)
        ke(a, ~~c >>> 0, +Z(c) >= 1.0 ? (c > 0.0 ? ~~+la(+Y(c / 4294967296.0), 4294967295.0) >>> 0 : ~~+ja((c - +(~~c >>> 0)) / 4294967296.0) >>> 0) : 0);
      else
        je(a, c);
      je(a, b == c ? 0.0 : b - c);
      return 2;
    }
    function wn(a) {
      a = a | 0;
      je(a, +ki(a, 1) * .017453292519943295);
      return 1;
    }
    function xn(a) {
      a = a | 0;
      var b = 0,
          c = 0,
          d = 0,
          e = 0,
          f = 0.0,
          g = 0,
          h = 0,
          i = 0;
      g = r;
      r = r + 16 | 0;
      f = +(Sq() | 0) * 4.656612873077393e-10;
      switch (Od(a) | 0) {
        case 2:
          {
            e = mi(a, 1) | 0;
            c = O;
            d = mi(a, 2) | 0;
            b = O;
            break;
          }
        case 0:
          {
            je(a, f);
            e = 1;
            r = g;
            return e | 0;
          }
        case 1:
          {
            d = mi(a, 1) | 0;
            b = O;
            c = 0;
            e = 1;
            break;
          }
        default:
          {
            e = Yh(a, 1009894, g) | 0;
            r = g;
            return e | 0;
          }
      }
      if ((b | 0) < (c | 0) | (b | 0) == (c | 0) & d >>> 0 < e >>> 0)
        Xh(a, 1, 1009920) | 0;
      h = pr(e | 0, c | 0, -1, 2147483647) | 0;
      i = O;
      if ((c | 0) < 0 & ((b | 0) > (i | 0) | (b | 0) == (i | 0) & d >>> 0 > h >>> 0))
        Xh(a, 1, 1009938) | 0;
      i = or(d | 0, b | 0, e | 0, c | 0) | 0;
      f = f * (+(i >>> 0) + 4294967296.0 * +(O | 0) + 1.0);
      i = pr(~~f >>> 0 | 0, (+Z(f) >= 1.0 ? (f > 0.0 ? ~~+la(+Y(f / 4294967296.0), 4294967295.0) >>> 0 : ~~+ja((f - +(~~f >>> 0)) / 4294967296.0) >>> 0) : 0) | 0, e | 0, c | 0) | 0;
      ke(a, i, O);
      i = 1;
      r = g;
      return i | 0;
    }
    function yn(a) {
      a = a | 0;
      a = ~~+ki(a, 1) >>> 0;
      Rq(a);
      Sq() | 0;
      return 0;
    }
    function zn(a) {
      a = a | 0;
      je(a, +ba(+(+ki(a, 1))));
      return 1;
    }
    function An(a) {
      a = a | 0;
      je(a, +_(+(+ki(a, 1))));
      return 1;
    }
    function Bn(a) {
      a = a | 0;
      je(a, +ca(+(+ki(a, 1))));
      return 1;
    }
    function Cn(a) {
      a = a | 0;
      if ((Td(a, 1) | 0) != 3) {
        ji(a, 1);
        ie(a);
        return 1;
      }
      if (!(Wd(a, 1) | 0)) {
        le(a, 1013163, 5) | 0;
        return 1;
      } else {
        le(a, 1009886, 7) | 0;
        return 1;
      }
      return 0;
    }
    function Dn(a) {
      a = a | 0;
      var b = 0,
          c = 0,
          d = 0;
      c = r;
      r = r + 16 | 0;
      b = c + 4 | 0;
      if ((Td(a, 1) | 0) == -1)
        ve(a, -1001e3, 1001335) | 0;
      d = (di(a, 1, 1001313) | 0) + 4 | 0;
      if (!(k[d >> 2] | 0))
        Yh(a, 1010081, c) | 0;
      d = (di(a, 1, 1001313) | 0) + 4 | 0;
      k[b >> 2] = k[d >> 2];
      k[d >> 2] = 0;
      d = nd[k[b >> 2] & 255](a) | 0;
      r = c;
      return d | 0;
    }
    function En(a) {
      a = a | 0;
      var b = 0,
          c = 0;
      c = r;
      r = r + 16 | 0;
      b = di(a, 1, 1001313) | 0;
      if (!(k[b + 4 >> 2] | 0))
        Yh(a, 1010081, c) | 0;
      a = _h(a, (Wc(k[b >> 2] | 0) | 0) == 0 & 1, 0) | 0;
      r = c;
      return a | 0;
    }
    function Fn(a) {
      a = a | 0;
      var b = 0,
          c = 0,
          d = 0;
      b = r;
      r = r + 16 | 0;
      c = (di(a, 1, 1001313) | 0) + 4 | 0;
      if (!(k[c >> 2] | 0))
        Yh(a, 1010081, b) | 0;
      c = Od(a) | 0;
      d = c + -1 | 0;
      ke(a, d, ((d | 0) < 0) << 31 >> 31);
      qe(a, 0);
      Qd(a, 2, 2);
      pe(a, 229, c + 2 | 0);
      r = b;
      return 1;
    }
    function Gn(a) {
      a = a | 0;
      var b = 0,
          c = 0;
      c = r;
      r = r + 16 | 0;
      b = di(a, 1, 1001313) | 0;
      if (!(k[b + 4 >> 2] | 0))
        Yh(a, 1010081, c) | 0;
      a = Nn(a, k[b >> 2] | 0, 2) | 0;
      r = c;
      return a | 0;
    }
    function Hn(a) {
      a = a | 0;
      var b = 0,
          c = 0,
          d = 0,
          e = 0;
      e = r;
      r = r + 16 | 0;
      b = di(a, 1, 1001313) | 0;
      if (!(k[b + 4 >> 2] | 0))
        Yh(a, 1010081, e) | 0;
      b = k[b >> 2] | 0;
      c = ei(a, 2, 1010129, 18172) | 0;
      d = ni(a, 3, 0, 0) | 0;
      if (!((d | 0) == (d | 0) & (((d | 0) < 0) << 31 >> 31 | 0) == (O | 0)))
        Xh(a, 3, 1010133) | 0;
      if (!(cc(b | 0, d | 0, k[18188 + (c << 2) >> 2] | 0) | 0)) {
        d = jb(b | 0) | 0;
        ke(a, d, ((d | 0) < 0) << 31 >> 31);
        a = 1;
        r = e;
        return a | 0;
      } else {
        a = _h(a, 0, 0) | 0;
        r = e;
        return a | 0;
      }
      return 0;
    }
    function In(a) {
      a = a | 0;
      var b = 0,
          c = 0,
          d = 0,
          e = 0;
      c = r;
      r = r + 16 | 0;
      b = di(a, 1, 1001313) | 0;
      if (!(k[b + 4 >> 2] | 0))
        Yh(a, 1010081, c) | 0;
      e = k[b >> 2] | 0;
      d = ei(a, 2, 0, 18144) | 0;
      b = ni(a, 3, 4096, 0) | 0;
      a = _h(a, (pb(e | 0, 0, k[18160 + (d << 2) >> 2] | 0, b | 0) | 0) == 0 & 1, 0) | 0;
      r = c;
      return a | 0;
    }
    function Jn(a) {
      a = a | 0;
      var b = 0,
          c = 0;
      c = r;
      r = r + 16 | 0;
      b = di(a, 1, 1001313) | 0;
      if (!(k[b + 4 >> 2] | 0))
        Yh(a, 1010081, c) | 0;
      b = k[b >> 2] | 0;
      Sd(a, 1);
      a = Mn(a, b, 2) | 0;
      r = c;
      return a | 0;
    }
    function Kn(a) {
      a = a | 0;
      var b = 0,
          c = 0,
          d = 0;
      d = r;
      r = r + 16 | 0;
      c = d;
      b = di(a, 1, 1001313) | 0;
      if (!(k[b + 4 >> 2] | 0)) {
        r = d;
        return 0;
      }
      if (!(k[b >> 2] | 0)) {
        r = d;
        return 0;
      }
      b = (di(a, 1, 1001313) | 0) + 4 | 0;
      k[c >> 2] = k[b >> 2];
      k[b >> 2] = 0;
      nd[k[c >> 2] & 255](a) | 0;
      r = d;
      return 0;
    }
    function Ln(a) {
      a = a | 0;
      var b = 0,
          c = 0,
          d = 0;
      d = r;
      r = r + 16 | 0;
      c = d;
      b = di(a, 1, 1001313) | 0;
      if (!(k[b + 4 >> 2] | 0)) {
        le(a, 1010057, 13) | 0;
        r = d;
        return 1;
      } else {
        k[c >> 2] = k[b >> 2];
        oe(a, 1010071, c) | 0;
        r = d;
        return 1;
      }
      return 0;
    }
    function Mn(a, b, c) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      var d = 0,
          e = 0,
          f = 0,
          g = 0,
          h = 0,
          i = 0,
          j = 0,
          l = 0.0,
          m = 0;
      j = r;
      r = r + 32 | 0;
      i = j + 8 | 0;
      h = j;
      g = j + 16 | 0;
      d = Od(a) | 0;
      if ((d | 0) == (c | 0)) {
        i = 1;
        r = j;
        return i | 0;
      }
      f = c;
      e = d - c | 0;
      d = 1;
      while (1) {
        e = e + -1 | 0;
        if ((Td(a, f) | 0) != 3) {
          c = gi(a, f, g) | 0;
          if (!d)
            d = 0;
          else {
            d = Ec(c | 0, 1, k[g >> 2] | 0, b | 0) | 0;
            d = (d | 0) == (k[g >> 2] | 0);
          }
        } else {
          if (!(Wd(a, f) | 0)) {
            l = +ae(a, f, 0);
            p[i >> 3] = l;
            c = Ib(b | 0, 1010115, i | 0) | 0;
          } else {
            m = be(a, f, 0) | 0;
            c = h;
            k[c >> 2] = m;
            k[c + 4 >> 2] = O;
            c = Ib(b | 0, 1010110, h | 0) | 0;
          }
          d = (d | 0) != 0 & (c | 0) > 0;
        }
        if (!e)
          break;
        else {
          f = f + 1 | 0;
          d = d & 1;
        }
      }
      if (d) {
        i = 1;
        r = j;
        return i | 0;
      }
      i = _h(a, 0, 0) | 0;
      r = j;
      return i | 0;
    }
    function Nn(a, b, c) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      var d = 0,
          e = 0,
          f = 0,
          g = 0,
          h = 0,
          j = 0,
          l = 0,
          m = 0,
          n = 0,
          o = 0,
          p = 0,
          q = 0,
          s = 0,
          t = 0,
          u = 0,
          v = 0,
          w = 0,
          x = 0,
          y = 0,
          z = 0;
      z = r;
      r = r + 4112 | 0;
      y = z;
      h = Od(a) | 0;
      Zc(b | 0);
      a: do
        if ((h | 0) == 1) {
          ui(a, y);
          h = y + 8 | 0;
          e = 0;
          b: while (1) {
            switch (e | 0) {
              case 10:
              case -1:
                break b;
              default:
                {}
            }
            f = oi(y, 4096) | 0;
            g = 0;
            c: while (1) {
              e = Uc(b | 0) | 0;
              switch (e | 0) {
                case 10:
                case -1:
                  {
                    d = g;
                    break c;
                  }
                default:
                  {}
              }
              d = g + 1 | 0;
              i[f + g >> 0] = e;
              if ((d | 0) < 4096)
                g = d;
              else
                break;
            }
            k[h >> 2] = (k[h >> 2] | 0) + d;
          }
          ri(y);
          if ((e | 0) == 10)
            e = 1;
          else
            e = (ee(a, -1) | 0) != 0;
          d = c + 1 | 0;
          e = e & 1;
        } else {
          hi(a, h + 19 | 0, 1010168);
          p = y + 8 | 0;
          q = y + 8 | 0;
          s = y + 4 | 0;
          t = y + 12 | 0;
          u = y + 8 | 0;
          v = y + 8 | 0;
          w = y + 4 | 0;
          x = y + 8 | 0;
          o = h + -2 | 0;
          d = c;
          d: while (1) {
            e: do
              if ((Td(a, d) | 0) == 3) {
                h = mi(a, d) | 0;
                if (!h) {
                  e = Uc(b | 0) | 0;
                  Dc(e | 0, b | 0) | 0;
                  le(a, 0, 0) | 0;
                  e = (e | 0) != -1 & 1;
                  break;
                } else {
                  ui(a, y);
                  e = Ua(oi(y, h) | 0, 1, h | 0, b | 0) | 0;
                  k[p >> 2] = (k[p >> 2] | 0) + e;
                  ri(y);
                  e = (e | 0) != 0 & 1;
                  break;
                }
              } else {
                m = gi(a, d, 0) | 0;
                switch (i[((i[m >> 0] | 0) == 42 ? m + 1 | 0 : m) >> 0] | 0) {
                  case 110:
                    {
                      k[y >> 2] = b;
                      k[q >> 2] = 0;
                      m = Cb() | 0;
                      m = i[k[m >> 2] >> 0] | 0;
                      do
                        h = Uc(b | 0) | 0;
 while ((yq(h) | 0) != 0);
                      k[s >> 2] = h;
                      switch (h | 0) {
                        case 43:
                        case 45:
                          {
                            k[q >> 2] = 1;
                            i[t >> 0] = h;
                            h = Uc(b | 0) | 0;
                            k[s >> 2] = h;
                            f = 1;
                            break;
                          }
                        default:
                          f = 0;
                      }
                      f: do
                        if ((h | 0) == 48) {
                          g = f + 1 | 0;
                          k[q >> 2] = g;
                          i[y + 12 + f >> 0] = 48;
                          h = Uc(b | 0) | 0;
                          k[s >> 2] = h;
                          switch (h | 0) {
                            case 88:
                            case 120:
                              break;
                            default:
                              {
                                l = 1;
                                n = 24;
                                break f;
                              }
                          }
                          f = f | 2;
                          k[q >> 2] = f;
                          i[y + 12 + g >> 0] = h;
                          h = Uc(b | 0) | 0;
                          k[s >> 2] = h;
                          if (!(Aq(h) | 0)) {
                            g = b;
                            j = 0;
                            e = 0;
                            f = 0;
                            l = 1;
                          } else {
                            e = 0;
                            while (1) {
                              k[q >> 2] = f + 1;
                              i[y + 12 + f >> 0] = h;
                              g = k[y >> 2] | 0;
                              h = Uc(g | 0) | 0;
                              k[s >> 2] = h;
                              e = e + 1 | 0;
                              if (!(Aq(h) | 0)) {
                                j = 0;
                                f = 0;
                                l = 1;
                                break f;
                              }
                              f = k[q >> 2] | 0;
                              if ((f | 0) > 199) {
                                j = 0;
                                f = 0;
                                l = 1;
                                n = 28;
                                break;
                              }
                            }
                          }
                        } else {
                          g = f;
                          l = 0;
                          n = 24;
                        }
 while (0);
                      g: do
                        if ((n | 0) == 24) {
                          n = 0;
                          if ((h + -48 | 0) >>> 0 < 10)
                            if ((g | 0) > 199) {
                              g = b;
                              j = 1;
                              e = 0;
                              f = l;
                              l = 0;
                              n = 28;
                            } else {
                              f = g;
                              e = 0;
                              while (1) {
                                k[q >> 2] = f + 1;
                                i[y + 12 + f >> 0] = h;
                                g = k[y >> 2] | 0;
                                h = Uc(g | 0) | 0;
                                k[s >> 2] = h;
                                e = e + 1 | 0;
                                if ((h + -48 | 0) >>> 0 >= 10) {
                                  j = 1;
                                  f = l;
                                  l = 0;
                                  break g;
                                }
                                f = k[q >> 2] | 0;
                                if ((f | 0) > 199) {
                                  j = 1;
                                  f = l;
                                  l = 0;
                                  n = 28;
                                  break;
                                }
                              }
                            }
                          else {
                            g = b;
                            j = 1;
                            e = 0;
                            f = l;
                            l = 0;
                          }
                        }
 while (0);
                      if ((n | 0) == 28) {
                        n = 0;
                        i[t >> 0] = 0;
                      }
                      f = e + f | 0;
                      do
                        if ((h | 0) == (m << 24 >> 24 | 0)) {
                          e = k[q >> 2] | 0;
                          if ((e | 0) > 199) {
                            i[t >> 0] = 0;
                            break;
                          }
                          k[q >> 2] = e + 1;
                          i[y + 12 + e >> 0] = h;
                          g = k[y >> 2] | 0;
                          h = Uc(g | 0) | 0;
                          k[s >> 2] = h;
                          h: do
                            if (j)
                              if ((h + -48 | 0) >>> 0 < 10) {
                                j = 0;
                                while (1) {
                                  e = k[q >> 2] | 0;
                                  if ((e | 0) > 199) {
                                    e = j;
                                    n = 40;
                                    break h;
                                  }
                                  k[q >> 2] = e + 1;
                                  i[y + 12 + e >> 0] = h;
                                  g = k[y >> 2] | 0;
                                  h = Uc(g | 0) | 0;
                                  k[s >> 2] = h;
                                  e = j + 1 | 0;
                                  if ((h + -48 | 0) >>> 0 < 10)
                                    j = e;
                                  else
                                    break;
                                }
                              } else
                                e = 0;
                            else if (!(Aq(h) | 0))
                              e = 0;
                            else {
                              j = 0;
                              while (1) {
                                e = k[q >> 2] | 0;
                                if ((e | 0) > 199) {
                                  e = j;
                                  n = 40;
                                  break h;
                                }
                                k[q >> 2] = e + 1;
                                i[y + 12 + e >> 0] = h;
                                g = k[y >> 2] | 0;
                                h = Uc(g | 0) | 0;
                                k[s >> 2] = h;
                                e = j + 1 | 0;
                                if (!(Aq(h) | 0))
                                  break;
                                else
                                  j = e;
                              }
                            }
 while (0);
                          if ((n | 0) == 40) {
                            n = 0;
                            i[t >> 0] = 0;
                          }
                          f = e + f | 0;
                        }
 while (0);
                      i: do
                        if ((f | 0) > 0) {
                          m = (l | 0) != 0 ? 1010187 : 1010190;
                          if ((h | 0) != (i[m >> 0] | 0) ? ((h | 0) == 0 ? 1 : (h | 0) != (i[m + 1 >> 0] | 0)) : 0)
                            break;
                          f = k[q >> 2] | 0;
                          if ((f | 0) > 199) {
                            i[t >> 0] = 0;
                            break;
                          }
                          k[q >> 2] = f + 1;
                          i[y + 12 + f >> 0] = h;
                          g = k[y >> 2] | 0;
                          h = Uc(g | 0) | 0;
                          k[s >> 2] = h;
                          j: do
                            switch (h | 0) {
                              case 43:
                              case 45:
                                {
                                  f = k[q >> 2] | 0;
                                  if ((f | 0) > 199) {
                                    i[t >> 0] = 0;
                                    break j;
                                  } else {
                                    k[q >> 2] = f + 1;
                                    i[y + 12 + f >> 0] = h;
                                    g = k[y >> 2] | 0;
                                    h = Uc(g | 0) | 0;
                                    k[s >> 2] = h;
                                    break j;
                                  }
                                }
                              default:
                                {}
                            }
 while (0);
                          if ((h + -48 | 0) >>> 0 < 10) {
                            while (1) {
                              f = k[q >> 2] | 0;
                              if ((f | 0) > 199)
                                break;
                              k[q >> 2] = f + 1;
                              i[y + 12 + f >> 0] = h;
                              g = k[y >> 2] | 0;
                              h = Uc(g | 0) | 0;
                              k[s >> 2] = h;
                              if ((h + -48 | 0) >>> 0 >= 10)
                                break i;
                            }
                            i[t >> 0] = 0;
                          }
                        }
 while (0);
                      Dc(h | 0, g | 0) | 0;
                      i[(k[q >> 2] | 0) + (y + 12) >> 0] = 0;
                      if (!($d(a, t) | 0)) {
                        ie(a);
                        e = 0;
                      } else
                        e = 1;
                      break e;
                    }
                  case 108:
                    {
                      ui(a, y);
                      h = 0;
                      k: while (1) {
                        switch (h | 0) {
                          case 10:
                          case -1:
                            break k;
                          default:
                            {}
                        }
                        f = oi(y, 4096) | 0;
                        e = 0;
                        l: while (1) {
                          h = Uc(b | 0) | 0;
                          switch (h | 0) {
                            case 10:
                            case -1:
                              {
                                g = e;
                                break l;
                              }
                            default:
                              {}
                          }
                          g = e + 1 | 0;
                          i[f + e >> 0] = h;
                          if ((g | 0) < 4096)
                            e = g;
                          else
                            break;
                        }
                        k[u >> 2] = (k[u >> 2] | 0) + g;
                      }
                      ri(y);
                      if ((h | 0) == 10)
                        h = 1;
                      else
                        h = (ee(a, -1) | 0) != 0;
                      e = h & 1;
                      break e;
                    }
                  case 76:
                    {
                      ui(a, y);
                      h = 0;
                      m: while (1) {
                        switch (h | 0) {
                          case 10:
                            {
                              n = 74;
                              break m;
                            }
                          case -1:
                            {
                              n = 77;
                              break m;
                            }
                          default:
                            {}
                        }
                        f = oi(y, 4096) | 0;
                        e = 0;
                        n: while (1) {
                          h = Uc(b | 0) | 0;
                          switch (h | 0) {
                            case 10:
                            case -1:
                              {
                                g = e;
                                break n;
                              }
                            default:
                              {}
                          }
                          g = e + 1 | 0;
                          i[f + e >> 0] = h;
                          if ((g | 0) < 4096)
                            e = g;
                          else
                            break;
                        }
                        k[v >> 2] = (k[v >> 2] | 0) + g;
                      }
                      if ((n | 0) == 74) {
                        n = 0;
                        h = k[v >> 2] | 0;
                        if (h >>> 0 >= (k[w >> 2] | 0) >>> 0) {
                          oi(y, 1) | 0;
                          h = k[v >> 2] | 0;
                        }
                        k[v >> 2] = h + 1;
                        i[(k[y >> 2] | 0) + h >> 0] = 10;
                        ri(y);
                        h = 1;
                      } else if ((n | 0) == 77) {
                        n = 0;
                        ri(y);
                        h = (ee(a, -1) | 0) != 0;
                      }
                      e = h & 1;
                      break e;
                    }
                  case 97:
                    {
                      ui(a, y);
                      do {
                        m = Ua(oi(y, 4096) | 0, 1, 4096, b | 0) | 0;
                        k[x >> 2] = (k[x >> 2] | 0) + m;
                      } while ((m | 0) == 4096);
                      ri(y);
                      e = 1;
                      break e;
                    }
                  default:
                    break d;
                }
              }
 while (0);
            d = d + 1 | 0;
            if ((o | 0) != 0 & (e | 0) != 0)
              o = o + -1 | 0;
            else
              break a;
          }
          a = Xh(a, d, 1010193) | 0;
          r = z;
          return a | 0;
        }
 while (0);
      if (cb(b | 0) | 0) {
        a = _h(a, 0, 0) | 0;
        r = z;
        return a | 0;
      }
      if (!e) {
        Pd(a, -2);
        ie(a);
      }
      a = d - c | 0;
      r = z;
      return a | 0;
    }
    function On(a) {
      a = a | 0;
      var b = 0,
          c = 0,
          d = 0,
          e = 0,
          f = 0,
          g = 0;
      g = r;
      r = r + 16 | 0;
      f = g + 8 | 0;
      e = g + 12 | 0;
      b = fe(a, -1001001) | 0;
      c = be(a, -1001002, 0) | 0;
      if (!(k[b + 4 >> 2] | 0)) {
        f = Yh(a, 1010208, g) | 0;
        r = g;
        return f | 0;
      }
      Pd(a, 1);
      hi(a, c, 1010168);
      if ((c | 0) >= 1) {
        d = 1;
        while (1) {
          Sd(a, -1001003 - d | 0);
          if ((d | 0) == (c | 0))
            break;
          else
            d = d + 1 | 0;
        }
      }
      b = Nn(a, k[b >> 2] | 0, 2) | 0;
      if (ce(a, 0 - b | 0) | 0) {
        f = b;
        r = g;
        return f | 0;
      }
      if ((b | 0) > 1) {
        e = de(a, 1 - b | 0, 0) | 0;
        k[f >> 2] = e;
        f = Yh(a, 1010231, f) | 0;
        r = g;
        return f | 0;
      }
      if (!(ce(a, -1001003) | 0)) {
        f = 0;
        r = g;
        return f | 0;
      }
      Pd(a, 0);
      Sd(a, -1001001);
      f = (di(a, 1, 1001313) | 0) + 4 | 0;
      k[e >> 2] = k[f >> 2];
      k[f >> 2] = 0;
      nd[k[e >> 2] & 255](a) | 0;
      f = 0;
      r = g;
      return f | 0;
    }
    function Pn(a) {
      a = a | 0;
      var b = 0,
          c = 0,
          d = 0;
      d = r;
      r = r + 16 | 0;
      c = d;
      ve(a, -1001e3, 1001335) | 0;
      b = fe(a, -1) | 0;
      if (!(k[b + 4 >> 2] | 0)) {
        k[c >> 2] = 1001339;
        Yh(a, 1010271, c) | 0;
      }
      c = _h(a, (Wc(k[b >> 2] | 0) | 0) == 0 & 1, 0) | 0;
      r = d;
      return c | 0;
    }
    function Qn(a) {
      a = a | 0;
      $n(a, 1001319, 1010315);
      return 1;
    }
    function Rn(a) {
      a = a | 0;
      var b = 0,
          c = 0,
          d = 0,
          e = 0,
          f = 0;
      d = r;
      r = r + 16 | 0;
      c = d + 8 | 0;
      b = d;
      if ((Td(a, 1) | 0) == -1)
        ie(a);
      if (!(Td(a, 1) | 0)) {
        ve(a, -1001e3, 1001319) | 0;
        Rd(a, -1, 1);
        Pd(a, -2);
        c = (di(a, 1, 1001313) | 0) + 4 | 0;
        if (!(k[c >> 2] | 0)) {
          Yh(a, 1010081, b) | 0;
          b = 0;
        } else
          b = 0;
      } else {
        b = gi(a, 1, 0) | 0;
        f = Ve(a, 8) | 0;
        e = f + 4 | 0;
        k[e >> 2] = 0;
        bi(a, 1001313);
        k[f >> 2] = 0;
        k[e >> 2] = 230;
        e = uc(b | 0, 1010315) | 0;
        k[f >> 2] = e;
        if (!e) {
          f = Yc() | 0;
          f = cd(k[f >> 2] | 0) | 0;
          k[c >> 2] = b;
          k[c + 4 >> 2] = f;
          Yh(a, 1010341, c) | 0;
        }
        Rd(a, -1, 1);
        Pd(a, -2);
        b = 1;
      }
      f = Od(a) | 0;
      e = f + -1 | 0;
      ke(a, e, ((e | 0) < 0) << 31 >> 31);
      qe(a, b);
      Qd(a, 2, 2);
      pe(a, 229, f + 2 | 0);
      r = d;
      return 1;
    }
    function Sn(a) {
      a = a | 0;
      var b = 0,
          c = 0,
          d = 0,
          e = 0,
          f = 0;
      b = gi(a, 1, 0) | 0;
      c = fi(a, 2, 1010315, 0) | 0;
      d = Ve(a, 8) | 0;
      e = d + 4 | 0;
      k[e >> 2] = 0;
      bi(a, 1001313);
      k[d >> 2] = 0;
      k[e >> 2] = 230;
      e = i[c >> 0] | 0;
      if (!((e << 24 >> 24 != 0 ? (f = c + 1 | 0, (br(1010368, e << 24 >> 24, 4) | 0) != 0) : 0) ? (e = (i[f >> 0] | 0) == 43, f = e ? c + 2 | 0 : f, (i[((i[f >> 0] | 0) == 98 ? c + (e ? 3 : 2) | 0 : f) >> 0] | 0) == 0) : 0))
        Xh(a, 2, 1010372) | 0;
      f = uc(b | 0, c | 0) | 0;
      k[d >> 2] = f;
      if (f) {
        a = 1;
        return a | 0;
      }
      a = _h(a, 0, b) | 0;
      return a | 0;
    }
    function Tn(a) {
      a = a | 0;
      $n(a, 1001335, 1010339);
      return 1;
    }
    function Un(a) {
      a = a | 0;
      var b = 0,
          c = 0,
          d = 0,
          e = 0;
      b = r;
      r = r + 16 | 0;
      c = gi(a, 1, 0) | 0;
      fi(a, 2, 1010315, 0) | 0;
      e = Ve(a, 8) | 0;
      d = e + 4 | 0;
      k[d >> 2] = 0;
      bi(a, 1001313);
      Yh(a, 1010317, b) | 0;
      k[e >> 2] = 0;
      k[d >> 2] = 231;
      a = _h(a, 0, c) | 0;
      r = b;
      return a | 0;
    }
    function Vn(a) {
      a = a | 0;
      var b = 0,
          c = 0,
          d = 0;
      d = r;
      r = r + 16 | 0;
      c = d;
      ve(a, -1001e3, 1001319) | 0;
      b = fe(a, -1) | 0;
      if (!(k[b + 4 >> 2] | 0)) {
        k[c >> 2] = 1001323;
        Yh(a, 1010271, c) | 0;
      }
      c = Nn(a, k[b >> 2] | 0, 1) | 0;
      r = d;
      return c | 0;
    }
    function Wn(a) {
      a = a | 0;
      var b = 0,
          c = 0;
      c = Ve(a, 8) | 0;
      b = c + 4 | 0;
      k[b >> 2] = 0;
      bi(a, 1001313);
      k[c >> 2] = 0;
      k[b >> 2] = 230;
      b = nb() | 0;
      k[c >> 2] = b;
      if (b) {
        c = 1;
        return c | 0;
      }
      c = _h(a, 0, 0) | 0;
      return c | 0;
    }
    function Xn(a) {
      a = a | 0;
      var b = 0;
      ji(a, 1);
      b = ci(a, 1, 1001313) | 0;
      if (!b) {
        ie(a);
        return 1;
      }
      if (!(k[b + 4 >> 2] | 0)) {
        le(a, 1010298, 11) | 0;
        return 1;
      } else {
        le(a, 1010310, 4) | 0;
        return 1;
      }
      return 0;
    }
    function Yn(a) {
      a = a | 0;
      var b = 0,
          c = 0,
          d = 0;
      d = r;
      r = r + 16 | 0;
      c = d;
      ve(a, -1001e3, 1001335) | 0;
      b = fe(a, -1) | 0;
      if (!(k[b + 4 >> 2] | 0)) {
        k[c >> 2] = 1001339;
        Yh(a, 1010271, c) | 0;
      }
      c = Mn(a, k[b >> 2] | 0, 1) | 0;
      r = d;
      return c | 0;
    }
    function Zn(a) {
      a = a | 0;
      var b = 0;
      b = di(a, 1, 1001313) | 0;
      return _h(a, (gc(k[b >> 2] | 0) | 0) == 0 & 1, 0) | 0;
    }
    function _n(a) {
      a = a | 0;
      di(a, 1, 1001313) | 0;
      return $h(a, -1) | 0;
    }
    function $n(a, b, c) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      var d = 0,
          e = 0,
          f = 0,
          g = 0,
          h = 0;
      g = r;
      r = r + 16 | 0;
      f = g + 8 | 0;
      e = g;
      if ((Td(a, 1) | 0) < 1) {
        ve(a, -1001e3, b) | 0;
        r = g;
        return ;
      }
      d = de(a, 1, 0) | 0;
      if (d) {
        h = Ve(a, 8) | 0;
        f = h + 4 | 0;
        k[f >> 2] = 0;
        bi(a, 1001313);
        k[h >> 2] = 0;
        k[f >> 2] = 230;
        f = uc(d | 0, c | 0) | 0;
        k[h >> 2] = f;
        if (!f) {
          h = Yc() | 0;
          h = cd(k[h >> 2] | 0) | 0;
          k[e >> 2] = d;
          k[e + 4 >> 2] = h;
          Yh(a, 1010341, e) | 0;
        }
      } else {
        h = (di(a, 1, 1001313) | 0) + 4 | 0;
        if (!(k[h >> 2] | 0))
          Yh(a, 1010081, f) | 0;
        Sd(a, 1);
      }
      Ee(a, -1001e3, b);
      ve(a, -1001e3, b) | 0;
      r = g;
      return ;
    }
    function ao(a) {
      a = a | 0;
      var b = 0,
          c = 0,
          d = 0,
          e = 0,
          f = 0,
          g = 0;
      f = r;
      r = r + 256 | 0;
      e = f;
      d = f + 4 | 0;
      b = k[w >> 2] | 0;
      Ec(1010776, 11, 1, b | 0) | 0;
      Wc(b | 0) | 0;
      c = k[x >> 2] | 0;
      if (!(ed(d | 0, 250, c | 0) | 0)) {
        r = f;
        return 0;
      }
      while (1) {
        if (!(dr(d, 1010788) | 0)) {
          b = 7;
          break;
        }
        if (!((zi(a, d, yr(d | 0) | 0, 1010794, 0) | 0) == 0 ? (Me(a, 0, 0, 0, 0, 0) | 0) == 0 : 0)) {
          g = de(a, -1, 0) | 0;
          k[e >> 2] = g;
          Ib(b | 0, 1010811, e | 0) | 0;
          Wc(b | 0) | 0;
        }
        Pd(a, 0);
        Ec(1010776, 11, 1, b | 0) | 0;
        Wc(b | 0) | 0;
        if (!(ed(d | 0, 250, c | 0) | 0)) {
          b = 7;
          break;
        }
      }
      if ((b | 0) == 7) {
        r = f;
        return 0;
      }
      return 0;
    }
    function bo(a) {
      a = a | 0;
      if ((Td(a, 1) | 0) == 7) {
        Ce(a, 1) | 0;
        return 1;
      } else {
        ie(a);
        return 1;
      }
      return 0;
    }
    function co(a) {
      a = a | 0;
      var b = 0,
          c = 0,
          d = 0,
          e = 0,
          f = 0;
      f = r;
      r = r + 16 | 0;
      e = f;
      if ((Td(a, 1) | 0) == 8)
        d = ge(a, 1) | 0;
      else
        d = a;
      c = If(d) | 0;
      b = Hf(d) | 0;
      do
        if (b)
          if ((b | 0) == 53) {
            ze(a, -1001e3, 18200) | 0;
            se(d) | 0;
            Ld(d, a, 1);
            xe(a, -2) | 0;
            Qd(a, -2, -1);
            Pd(a, -2);
            break;
          } else {
            le(a, 1010762, 13) | 0;
            break;
          }
        else
          ie(a);
 while (0);
      if (!(c & 1))
        b = 0;
      else {
        i[e >> 0] = 99;
        b = 1;
      }
      if (c & 2) {
        i[e + b >> 0] = 114;
        b = b + 1 | 0;
      }
      if (c & 4) {
        i[e + b >> 0] = 108;
        b = b + 1 | 0;
      }
      i[e + b >> 0] = 0;
      me(a, e) | 0;
      e = Jf(d) | 0;
      ke(a, e, ((e | 0) < 0) << 31 >> 31);
      r = f;
      return 3;
    }
    function eo(a) {
      a = a | 0;
      var b = 0,
          c = 0,
          d = 0,
          e = 0,
          f = 0,
          g = 0,
          h = 0;
      h = r;
      r = r + 112 | 0;
      d = h;
      g = h + 4 | 0;
      if ((Td(a, 1) | 0) == 8) {
        e = ge(a, 1) | 0;
        c = 1;
      } else {
        e = a;
        c = 0;
      }
      f = c | 2;
      b = fi(a, f, 1010610, 0) | 0;
      c = c + 1 | 0;
      if ((Td(a, c) | 0) != 6) {
        d = mi(a, c) | 0;
        if (!(Kf(e, d, g) | 0)) {
          ie(a);
          g = 1;
          r = h;
          return g | 0;
        }
      } else {
        k[d >> 2] = b;
        b = oe(a, 1010617, d) | 0;
        Sd(a, c);
        Ld(a, e, 1);
      }
      if (!(Nf(e, b, g) | 0)) {
        g = Xh(a, f, 1010621) | 0;
        r = h;
        return g | 0;
      }
      Ae(a, 0, 0);
      if (Op(b, 83) | 0) {
        me(a, k[g + 16 >> 2] | 0) | 0;
        Ee(a, -2, 1010636);
        me(a, g + 36 | 0) | 0;
        Ee(a, -2, 1010643);
        f = k[g + 24 >> 2] | 0;
        ke(a, f, ((f | 0) < 0) << 31 >> 31);
        Ee(a, -2, 1010653);
        f = k[g + 28 >> 2] | 0;
        ke(a, f, ((f | 0) < 0) << 31 >> 31);
        Ee(a, -2, 1010665);
        me(a, k[g + 12 >> 2] | 0) | 0;
        Ee(a, -2, 1010681);
      }
      if (Op(b, 108) | 0) {
        f = k[g + 20 >> 2] | 0;
        ke(a, f, ((f | 0) < 0) << 31 >> 31);
        Ee(a, -2, 1010686);
      }
      if (Op(b, 117) | 0) {
        ke(a, l[g + 32 >> 0] | 0, 0);
        Ee(a, -2, 1010698);
        ke(a, l[g + 33 >> 0] | 0, 0);
        Ee(a, -2, 1010703);
        qe(a, i[g + 34 >> 0] | 0);
        Ee(a, -2, 1010711);
      }
      if (Op(b, 110) | 0) {
        me(a, k[g + 4 >> 2] | 0) | 0;
        Ee(a, -2, 1010720);
        me(a, k[g + 8 >> 2] | 0) | 0;
        Ee(a, -2, 1010725);
      }
      if (Op(b, 116) | 0) {
        qe(a, i[g + 35 >> 0] | 0);
        Ee(a, -2, 1010734);
      }
      if (Op(b, 76) | 0) {
        if ((e | 0) == (a | 0))
          Qd(a, -2, 1);
        else
          Ld(e, a, 1);
        Ee(a, -2, 1010745);
      }
      if (!(Op(b, 102) | 0)) {
        g = 1;
        r = h;
        return g | 0;
      }
      if ((e | 0) == (a | 0))
        Qd(a, -2, 1);
      else
        Ld(e, a, 1);
      Ee(a, -2, 1010757);
      g = 1;
      r = h;
      return g | 0;
    }
    function fo(a) {
      a = a | 0;
      var b = 0,
          c = 0,
          d = 0,
          e = 0,
          f = 0,
          g = 0;
      f = r;
      r = r + 112 | 0;
      d = f;
      if ((Td(a, 1) | 0) == 8) {
        e = ge(a, 1) | 0;
        b = 1;
      } else {
        e = a;
        b = 0;
      }
      c = mi(a, b | 2) | 0;
      b = b + 1 | 0;
      if ((Td(a, b) | 0) == 6) {
        Sd(a, b);
        me(a, Lf(a, 0, c) | 0) | 0;
        a = 1;
        r = f;
        return a | 0;
      }
      g = mi(a, b) | 0;
      if (!(Kf(e, g, d) | 0)) {
        g = Xh(a, b, 1010525) | 0;
        r = f;
        return g | 0;
      }
      b = Lf(e, d, c) | 0;
      if (!b) {
        ie(a);
        g = 1;
        r = f;
        return g | 0;
      } else {
        Ld(e, a, 1);
        me(a, b) | 0;
        Qd(a, -2, 1);
        g = 2;
        r = f;
        return g | 0;
      }
      return 0;
    }
    function go(a) {
      a = a | 0;
      Sd(a, -1001e3);
      return 1;
    }
    function ho(a) {
      a = a | 0;
      ji(a, 1);
      if (Be(a, 1) | 0)
        return 1;
      ie(a);
      return 1;
    }
    function io(a) {
      a = a | 0;
      var b = 0;
      b = mi(a, 2) | 0;
      ii(a, 1, 6);
      b = We(a, 1, b) | 0;
      if (!b) {
        a = 0;
        return a | 0;
      }
      me(a, b) | 0;
      Qd(a, -2, 1);
      a = 2;
      return a | 0;
    }
    function jo(a) {
      a = a | 0;
      var b = 0,
          c = 0;
      b = mi(a, 2) | 0;
      ii(a, 1, 6);
      if (!(We(a, 1, b) | 0))
        Xh(a, 2, 1010566) | 0;
      c = mi(a, 4) | 0;
      ii(a, 3, 6);
      if (!(We(a, 3, c) | 0))
        Xh(a, 4, 1010566) | 0;
      if (Vd(a, 1) | 0)
        Xh(a, 1, 1010588) | 0;
      if (!(Vd(a, 3) | 0)) {
        Ze(a, 1, b, 3, c);
        return 0;
      }
      Xh(a, 3, 1010588) | 0;
      Ze(a, 1, b, 3, c);
      return 0;
    }
    function ko(a) {
      a = a | 0;
      var b = 0;
      b = mi(a, 2) | 0;
      ii(a, 1, 6);
      if (!(We(a, 1, b) | 0))
        Xh(a, 2, 1010566) | 0;
      re(a, Ye(a, 1, b) | 0);
      return 1;
    }
    function lo(a) {
      a = a | 0;
      ii(a, 1, 7);
      ji(a, 2);
      Pd(a, 2);
      Ke(a, 1);
      return 1;
    }
    function mo(a) {
      a = a | 0;
      var b = 0,
          c = 0,
          d = 0,
          e = 0,
          f = 0,
          g = 0;
      if ((Td(a, 1) | 0) == 8) {
        e = ge(a, 1) | 0;
        b = 1;
      } else {
        e = a;
        b = 0;
      }
      f = b + 1 | 0;
      if ((Td(a, f) | 0) < 1) {
        Pd(a, f);
        b = 0;
        c = 0;
        d = 0;
      } else {
        c = gi(a, b | 2, 0) | 0;
        ii(a, f, 6);
        g = ni(a, b + 3 | 0, 0, 0) | 0;
        d = (Op(c, 99) | 0) != 0 & 1;
        b = (Op(c, 114) | 0) == 0;
        d = b ? d : d | 2;
        b = (Op(c, 108) | 0) == 0;
        d = b ? d : d | 4;
        b = g;
        c = 53;
        d = (g | 0) > 0 ? d | 8 : d;
      }
      if (ze(a, -1001e3, 18200) | 0) {
        se(e) | 0;
        Ld(e, a, 1);
        Sd(a, f);
        Ge(a, -3);
        Gf(e, c, d, b);
        return 0;
      }
      Ae(a, 0, 2);
      Sd(a, -1);
      Ie(a, -1001e3, 18200);
      me(a, 1010544) | 0;
      Ee(a, -2, 1011562);
      Sd(a, -1);
      Je(a, -2) | 0;
      se(e) | 0;
      Ld(e, a, 1);
      Sd(a, f);
      Ge(a, -3);
      Gf(e, c, d, b);
      return 0;
    }
    function no(a) {
      a = a | 0;
      var b = 0,
          c = 0,
          d = 0,
          e = 0,
          f = 0,
          g = 0,
          h = 0;
      g = r;
      r = r + 112 | 0;
      e = g;
      if ((Td(a, 1) | 0) == 8) {
        f = ge(a, 1) | 0;
        c = 1;
      } else {
        f = a;
        c = 0;
      }
      b = c + 1 | 0;
      h = mi(a, b) | 0;
      d = mi(a, c | 2) | 0;
      if (!(Kf(f, h, e) | 0)) {
        h = Xh(a, b, 1010525) | 0;
        r = g;
        return h | 0;
      }
      b = c + 3 | 0;
      ji(a, b);
      Pd(a, b);
      Ld(a, f, 1);
      b = Mf(f, e, d) | 0;
      if (!b)
        Pd(f, -2);
      me(a, b) | 0;
      h = 1;
      r = g;
      return h | 0;
    }
    function oo(a) {
      a = a | 0;
      switch (Td(a, 2) | 0) {
        case 0:
        case 5:
          break;
        default:
          Xh(a, 2, 1011153) | 0;
      }
      Pd(a, 2);
      Je(a, 1) | 0;
      return 1;
    }
    function po(a) {
      a = a | 0;
      var b = 0;
      ji(a, 3);
      b = mi(a, 2) | 0;
      ii(a, 1, 6);
      b = Xe(a, 1, b) | 0;
      if (!b) {
        a = 0;
        return a | 0;
      }
      me(a, b) | 0;
      Qd(a, -1, 1);
      a = 1;
      return a | 0;
    }
    function qo(a) {
      a = a | 0;
      var b = 0,
          c = 0,
          d = 0,
          e = 0;
      if ((Td(a, 1) | 0) == 8) {
        b = ge(a, 1) | 0;
        d = 1;
      } else {
        b = a;
        d = 0;
      }
      c = d + 1 | 0;
      e = de(a, c, 0) | 0;
      if ((e | 0) == 0 ? (Td(a, c) | 0) >= 1 : 0) {
        Sd(a, c);
        return 1;
      }
      d = ni(a, d | 2, (b | 0) == (a | 0) & 1, 0) | 0;
      Wh(a, b, e, d);
      return 1;
    }
    function ro(a, b) {
      a = a | 0;
      b = b | 0;
      ze(a, -1001e3, 18200) | 0;
      se(a) | 0;
      if ((xe(a, -2) | 0) != 6)
        return ;
      me(a, k[18204 + (k[b >> 2] << 2) >> 2] | 0) | 0;
      b = k[b + 20 >> 2] | 0;
      if ((b | 0) > -1)
        ke(a, b, ((b | 0) < 0) << 31 >> 31);
      else
        ie(a);
      Le(a, 2, 0, 0, 0);
      return ;
    }
    function so(a) {
      a = a | 0;
      var b = 0;
      ii(a, 1, 6);
      b = $g(a) | 0;
      Sd(a, 1);
      Ld(a, b, 1);
      return 1;
    }
    function to(a) {
      a = a | 0;
      var b = 0;
      b = ge(a, 1) | 0;
      if (!b)
        Xh(a, 1, 1010923) | 0;
      b = Ao(a, b, (Od(a) | 0) + -1 | 0) | 0;
      if ((b | 0) < 0) {
        qe(a, 0);
        Qd(a, -2, 1);
        a = 2;
        return a | 0;
      } else {
        qe(a, 1);
        Qd(a, ~b, 1);
        a = b + 1 | 0;
        return a | 0;
      }
      return 0;
    }
    function uo(a) {
      a = a | 0;
      qe(a, se(a) | 0);
      return 2;
    }
    function vo(a) {
      a = a | 0;
      var b = 0,
          c = 0;
      c = r;
      r = r + 112 | 0;
      b = ge(a, 1) | 0;
      if (!b)
        Xh(a, 1, 1010923) | 0;
      if ((b | 0) == (a | 0)) {
        le(a, 1010829, 7) | 0;
        r = c;
        return 1;
      }
      switch (Pe(b) | 0) {
        case 1:
          {
            le(a, 1010939, 9) | 0;
            r = c;
            return 1;
          }
        case 0:
          {
            do
              if ((Kf(b, 0, c) | 0) <= 0)
                if (!(Od(b) | 0)) {
                  le(a, 1010956, 4) | 0;
                  break;
                } else {
                  le(a, 1010939, 9) | 0;
                  break;
                }
              else
                le(a, 1010949, 6) | 0;
 while (0);
            r = c;
            return 1;
          }
        default:
          {
            le(a, 1010956, 4) | 0;
            r = c;
            return 1;
          }
      }
      return 0;
    }
    function wo(a) {
      a = a | 0;
      var b = 0;
      ii(a, 1, 6);
      b = $g(a) | 0;
      Sd(a, 1);
      Ld(a, b, 1);
      pe(a, 232, 1);
      return 1;
    }
    function xo(a) {
      a = a | 0;
      return fg(a, Od(a) | 0, 0, 0) | 0;
    }
    function yo(a) {
      a = a | 0;
      qe(a, eg(a) | 0);
      return 1;
    }
    function zo(a) {
      a = a | 0;
      var b = 0;
      b = ge(a, -1001001) | 0;
      b = Ao(a, b, Od(a) | 0) | 0;
      if ((b | 0) >= 0)
        return b | 0;
      if (!(Yd(a, -1) | 0))
        Re(a) | 0;
      Zh(a, 1);
      Qd(a, -2, 1);
      Te(a, 2);
      Re(a) | 0;
      return 0;
    }
    function Ao(a, b, c) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      if (!(Kd(b, c) | 0)) {
        le(a, 1010867, 28) | 0;
        b = -1;
        return b | 0;
      }
      if ((Pe(b) | 0) == 0 ? (Od(b) | 0) == 0 : 0) {
        le(a, 1012959, 28) | 0;
        b = -1;
        return b | 0;
      }
      Ld(a, b, c);
      if ((dg(b, a, c) | 0) >>> 0 >= 2) {
        Ld(b, a, 1);
        b = -1;
        return b | 0;
      }
      c = Od(b) | 0;
      if (!(Kd(a, c + 1 | 0) | 0)) {
        Pd(b, ~c);
        le(a, 1010896, 26) | 0;
        b = -1;
        return b | 0;
      } else {
        Ld(b, a, c);
        b = c;
        return b | 0;
      }
      return 0;
    }
    function Bo(a) {
      a = a | 0;
      if (!(ce(a, 1) | 0)) {
        ji(a, 1);
        Qd(a, 1, -1);
        Pd(a, -2);
        le(a, 1011454, 17) | 0;
        Pd(a, 1);
        a = Eo(a) | 0;
        return a | 0;
      } else {
        a = Od(a) | 0;
        return a | 0;
      }
      return 0;
    }
    function Co(a) {
      a = a | 0;
      var b = 0,
          c = 0;
      c = 18260 + ((ei(a, 1, 1011392, 18224) | 0) << 2) | 0;
      c = k[c >> 2] | 0;
      b = ni(a, 2, 0, 0) | 0;
      b = Qe(a, c, b) | 0;
      switch (c | 0) {
        case 3:
          {
            je(a, +(b | 0) + +(Qe(a, 4, 0) | 0) * .0009765625);
            return 1;
          }
        case 9:
        case 5:
          {
            qe(a, b);
            return 1;
          }
        default:
          {
            ke(a, b, ((b | 0) < 0) << 31 >> 31);
            return 1;
          }
      }
      return 0;
    }
    function Do(a) {
      a = a | 0;
      var b = 0;
      b = fi(a, 1, 0, 0) | 0;
      Pd(a, 1);
      if (!(yi(a, b, 0) | 0)) {
        Le(a, 0, -1, 0, 53);
        return (Od(a) | 0) + -1 | 0;
      } else
        Re(a) | 0;
      return 0;
    }
    function Eo(a) {
      a = a | 0;
      var b = 0;
      b = ni(a, 2, 1, 0) | 0;
      Pd(a, 1);
      if (!((b | 0) > 0 & (Yd(a, 1) | 0) != 0))
        Re(a) | 0;
      Zh(a, b);
      Sd(a, 1);
      Te(a, 2);
      Re(a) | 0;
      return 0;
    }
    function Fo(a) {
      a = a | 0;
      ji(a, 1);
      if (!(Be(a, 1) | 0)) {
        ie(a);
        return 1;
      } else {
        Ai(a, 1, 1011175) | 0;
        return 1;
      }
      return 0;
    }
    function Go(a) {
      a = a | 0;
      var b = 0;
      b = (Ai(a, 1, 1011538) | 0) != 0;
      ji(a, 1);
      pe(a, b ? 233 : 234, 0);
      Sd(a, 1);
      ke(a, 0, 0);
      return 3;
    }
    function Ho(a) {
      a = a | 0;
      var b = 0,
          c = 0,
          d = 0;
      d = fi(a, 1, 0, 0) | 0;
      c = fi(a, 2, 0, 0) | 0;
      b = (Td(a, 3) | 0) != -1;
      if (yi(a, d, c) | 0) {
        ie(a);
        Qd(a, -2, 1);
        d = 2;
        return d | 0;
      }
      if (!b) {
        d = 1;
        return d | 0;
      }
      Sd(a, b ? 3 : 0);
      if (Xe(a, -2, 1) | 0) {
        d = 1;
        return d | 0;
      }
      Pd(a, -2);
      d = 1;
      return d | 0;
    }
    function Io(a) {
      a = a | 0;
      var b = 0,
          c = 0,
          d = 0,
          e = 0,
          f = 0,
          g = 0;
      f = r;
      r = r + 16 | 0;
      d = f;
      b = de(a, 1, d) | 0;
      c = fi(a, 3, 1011318, 0) | 0;
      e = (Td(a, 4) | 0) != -1;
      if (!b) {
        b = fi(a, 2, 1011321, 0) | 0;
        ii(a, 1, 6);
        Pd(a, 5);
        b = Ne(a, 54, 0, b, c) | 0;
      } else {
        g = fi(a, 2, b, 0) | 0;
        b = zi(a, b, k[d >> 2] | 0, g, c) | 0;
      }
      if (b) {
        ie(a);
        Qd(a, -2, 1);
        g = 2;
        r = f;
        return g | 0;
      }
      if (!e) {
        g = 1;
        r = f;
        return g | 0;
      }
      Sd(a, e ? 4 : 0);
      if (Xe(a, -2, 1) | 0) {
        g = 1;
        r = f;
        return g | 0;
      }
      Pd(a, -2);
      g = 1;
      r = f;
      return g | 0;
    }
    function Jo(a) {
      a = a | 0;
      ii(a, 1, 5);
      Pd(a, 2);
      if (Se(a, 1) | 0) {
        a = 2;
        return a | 0;
      }
      ie(a);
      a = 1;
      return a | 0;
    }
    function Ko(a) {
      a = a | 0;
      if (!(Ai(a, 1, 1011310) | 0)) {
        ii(a, 1, 5);
        pe(a, 50, 0);
        Sd(a, 1);
        ie(a);
        return 3;
      } else {
        Sd(a, 1);
        Le(a, 1, 3, 0, 0);
        return 3;
      }
      return 0;
    }
    function Lo(a) {
      a = a | 0;
      ji(a, 1);
      qe(a, 1);
      Qd(a, 1, 1);
      if ((Me(a, (Od(a) | 0) + -2 | 0, -1, 0, 0, 55) | 0) >>> 0 > 1) {
        qe(a, 0);
        Sd(a, -2);
        a = 2;
        return a | 0;
      } else {
        a = Od(a) | 0;
        return a | 0;
      }
      return 0;
    }
    function Mo(a) {
      a = a | 0;
      var b = 0,
          c = 0,
          d = 0,
          e = 0,
          f = 0,
          g = 0,
          h = 0;
      h = r;
      r = r + 16 | 0;
      g = h;
      f = h + 4 | 0;
      c = Od(a) | 0;
      te(a, 1011112) | 0;
      b = k[y >> 2] | 0;
      a: do
        if ((c | 0) >= 1) {
          e = 1;
          while (1) {
            Sd(a, -1);
            Sd(a, e);
            Le(a, 1, 1, 0, 0);
            d = de(a, -1, f) | 0;
            if (!d)
              break;
            if ((e | 0) > 1)
              _c(9, b | 0) | 0;
            Ec(d | 0, 1, k[f >> 2] | 0, b | 0) | 0;
            Pd(a, -2);
            if ((e | 0) < (c | 0))
              e = e + 1 | 0;
            else
              break a;
          }
          g = Yh(a, 1011267, g) | 0;
          r = h;
          return g | 0;
        }
 while (0);
      _c(10, b | 0) | 0;
      Wc(b | 0) | 0;
      g = 0;
      r = h;
      return g | 0;
    }
    function No(a) {
      a = a | 0;
      ji(a, 1);
      ji(a, 2);
      qe(a, Zd(a, 1, 2) | 0);
      return 1;
    }
    function Oo(a) {
      a = a | 0;
      if (((Td(a, 1) | 0) & -2 | 0) != 4)
        Xh(a, 1, 1011242) | 0;
      ke(a, ee(a, 1) | 0, 0);
      return 1;
    }
    function Po(a) {
      a = a | 0;
      ii(a, 1, 5);
      ji(a, 2);
      Pd(a, 2);
      xe(a, 1) | 0;
      return 1;
    }
    function Qo(a) {
      a = a | 0;
      ii(a, 1, 5);
      ji(a, 2);
      ji(a, 3);
      Pd(a, 3);
      Ge(a, 1);
      return 1;
    }
    function Ro(a) {
      a = a | 0;
      var b = 0,
          c = 0,
          d = 0,
          e = 0,
          f = 0,
          g = 0,
          h = 0;
      b = Od(a) | 0;
      if ((Td(a, 1) | 0) == 4 ? (c = de(a, 1, 0) | 0, (i[c >> 0] | 0) == 35) : 0) {
        c = b + -1 | 0;
        ke(a, c, ((c | 0) < 0) << 31 >> 31);
        a = 1;
        return a | 0;
      }
      c = mi(a, 1) | 0;
      d = O;
      g = (d | 0) < 0;
      e = ((b | 0) < 0) << 31 >> 31;
      h = pr(c | 0, d | 0, b | 0, e | 0) | 0;
      f = (d | 0) > (e | 0) | (d | 0) == (e | 0) & c >>> 0 > b >>> 0;
      c = g ? h : f ? b : c;
      d = g ? O : f ? e : d;
      if (!((d | 0) > 0 | (d | 0) == 0 & c >>> 0 > 0))
        Xh(a, 1, 1011223) | 0;
      h = b - c | 0;
      return h | 0;
    }
    function So(a) {
      a = a | 0;
      var b = 0,
          c = 0,
          d = 0;
      c = r;
      r = r + 16 | 0;
      b = c;
      d = Td(a, 2) | 0;
      ii(a, 1, 5);
      switch (d | 0) {
        case 0:
        case 5:
          break;
        default:
          Xh(a, 2, 1011153) | 0;
      }
      if (!(Ai(a, 1, 1011175) | 0)) {
        Pd(a, 2);
        Je(a, 1) | 0;
        d = 1;
        r = c;
        return d | 0;
      } else {
        d = Yh(a, 1011187, b) | 0;
        r = c;
        return d | 0;
      }
      return 0;
    }
    function To(a) {
      a = a | 0;
      var b = 0,
          c = 0,
          d = 0,
          e = 0,
          f = 0,
          g = 0,
          h = 0,
          j = 0,
          m = 0,
          n = 0,
          o = 0;
      o = r;
      r = r + 16 | 0;
      c = o + 4 | 0;
      n = o;
      if ((Td(a, 2) | 0) < 1) {
        ji(a, 1);
        if ((Td(a, 1) | 0) == 3) {
          Pd(a, 1);
          r = o;
          return 1;
        }
        b = de(a, 1, c) | 0;
        if ((b | 0) != 0 ? (n = $d(a, b) | 0, (n | 0) == ((k[c >> 2] | 0) + 1 | 0)) : 0) {
          r = o;
          return 1;
        }
      } else {
        h = mi(a, 2) | 0;
        j = O;
        ii(a, 1, 4);
        m = gi(a, 1, n) | 0;
        j = pr(h | 0, j | 0, -2, -1) | 0;
        g = O;
        if (!(g >>> 0 < 0 | (g | 0) == 0 & j >>> 0 < 35))
          Xh(a, 2, 1011128) | 0;
        c = Tp(m, 1011146) | 0;
        b = m + c | 0;
        switch (i[b >> 0] | 0) {
          case 45:
            {
              b = m + (c + 1) | 0;
              j = 1;
              break;
            }
          case 43:
            {
              b = m + (c + 1) | 0;
              j = 0;
              break;
            }
          default:
            j = 0;
        }
        a: do
          if (!(Fp(l[b >> 0] | 0) | 0)) {
            d = 0;
            b = 0;
            c = 0;
          } else {
            g = ((h | 0) < 0) << 31 >> 31;
            c = 0;
            e = 0;
            while (1) {
              d = i[b >> 0] | 0;
              f = d & 255;
              if ((f + -48 | 0) >>> 0 < 10)
                d = (d << 24 >> 24) + -48 | 0;
              else
                d = (Lp(f) | 0) + -55 | 0;
              if ((d | 0) >= (h | 0)) {
                d = 0;
                b = 0;
                c = 0;
                break a;
              }
              c = Er(c | 0, e | 0, h | 0, g | 0) | 0;
              c = pr(d | 0, ((d | 0) < 0) << 31 >> 31 | 0, c | 0, O | 0) | 0;
              e = O;
              d = b + 1 | 0;
              if (!(Fp(l[d >> 0] | 0) | 0))
                break;
              else
                b = d;
            }
            d = b + ((Tp(d, 1011146) | 0) + 1) | 0;
            j = (j | 0) != 0;
            b = or(0, 0, c | 0, e | 0) | 0;
            b = j ? b : c;
            c = j ? O : e;
          }
 while (0);
        if ((d | 0) == (m + (k[n >> 2] | 0) | 0)) {
          ke(a, b, c);
          r = o;
          return 1;
        }
      }
      ie(a);
      r = o;
      return 1;
    }
    function Uo(a) {
      a = a | 0;
      ji(a, 1);
      Di(a, 1, 0) | 0;
      return 1;
    }
    function Vo(a) {
      a = a | 0;
      var b = 0;
      b = Od(a) | 0;
      ii(a, 2, 6);
      qe(a, 1);
      Sd(a, 1);
      Qd(a, 3, 2);
      if ((Me(a, b + -2 | 0, -1, 2, 2, 55) | 0) >>> 0 > 1) {
        qe(a, 0);
        Sd(a, -2);
        b = 2;
        return b | 0;
      } else {
        b = (Od(a) | 0) + -2 | 0;
        return b | 0;
      }
      return 0;
    }
    function Wo(a, b, c) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      if (b >>> 0 > 1) {
        qe(a, 0);
        Sd(a, -2);
        b = 2;
        return b | 0;
      } else {
        b = (Od(a) | 0) - c | 0;
        return b | 0;
      }
      return 0;
    }
    function Xo(a, b, c) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      b = r;
      r = r + 16 | 0;
      hi(a, 2, 1011329);
      Sd(a, 1);
      Le(a, 0, 1, 0, 0);
      if (!(Td(a, -1) | 0)) {
        Pd(a, -2);
        k[c >> 2] = 0;
        c = 0;
        r = b;
        return c | 0;
      }
      if (!(Yd(a, -1) | 0))
        Yh(a, 1011355, b) | 0;
      Rd(a, -1, 5);
      Pd(a, -2);
      c = de(a, 5, c) | 0;
      r = b;
      return c | 0;
    }
    function Yo(a) {
      a = a | 0;
      var b = 0,
          c = 0;
      c = mi(a, 2) | 0;
      c = pr(c | 0, O | 0, 1, 0) | 0;
      b = O;
      ke(a, c, b);
      a = (we(a, 1, c, b) | 0) == 0;
      return (a ? 1 : 2) | 0;
    }
    function Zo(a) {
      a = a | 0;
      var b = 0,
          c = 0;
      c = mi(a, 2) | 0;
      c = pr(c | 0, O | 0, 1, 0) | 0;
      b = O;
      ii(a, 1, 5);
      ke(a, c, b);
      a = (ye(a, 1, c, b) | 0) == 0;
      return (a ? 1 : 2) | 0;
    }
    function _o(a, b, c) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      return (Od(a) | 0) + -1 | 0;
    }
    function $o(a, b, c) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      if (!c) {
        a = 0;
        return a | 0;
      }
      if ((Td(a, -1) | 0) != 5) {
        a = 0;
        return a | 0;
      }
      ie(a);
      if (!(Se(a, -2) | 0)) {
        a = 0;
        return a | 0;
      }
      c = c + -1 | 0;
      while (1) {
        if ((Td(a, -2) | 0) == 4) {
          if (Zd(a, b, -1) | 0) {
            b = 7;
            break;
          }
          if ($o(a, b, c) | 0) {
            b = 9;
            break;
          }
        }
        Pd(a, -2);
        if (!(Se(a, -2) | 0)) {
          c = 0;
          b = 11;
          break;
        }
      }
      if ((b | 0) == 7) {
        Pd(a, -2);
        a = 1;
        return a | 0;
      } else if ((b | 0) == 9) {
        Qd(a, -2, -1);
        Pd(a, -2);
        le(a, 1015609, 1) | 0;
        Qd(a, -2, 1);
        Te(a, 3);
        a = 1;
        return a | 0;
      } else if ((b | 0) == 11)
        return c | 0;
      return 0;
    }
    function ap(a) {
      a = a | 0;
      var b = 0,
          c = 0,
          d = 0,
          e = 0,
          f = 0,
          g = 0,
          h = 0;
      f = r;
      r = r + 16 | 0;
      b = f + 4 | 0;
      e = f;
      d = a + 4 | 0;
      if (Uh(k[d >> 2] | 0, b, 1) | 0)
        Sk(a, 1000282);
      g = i[b >> 0] | 0;
      b = g & 255;
      k[e >> 2] = b;
      do
        if (g << 24 >> 24 == -1)
          if (!(Uh(k[d >> 2] | 0, e, 4) | 0)) {
            c = k[e >> 2] | 0;
            break;
          } else
            Sk(a, 1000282);
        else
          c = b;
 while (0);
      if (!c) {
        g = 0;
        r = f;
        return g | 0;
      }
      h = k[a >> 2] | 0;
      g = k[a + 8 >> 2] | 0;
      b = c + -1 | 0;
      k[e >> 2] = b;
      b = Vh(h, g, b) | 0;
      if (Uh(k[d >> 2] | 0, b, k[e >> 2] | 0) | 0)
        Sk(a, 1000282);
      h = hh(k[a >> 2] | 0, b, k[e >> 2] | 0) | 0;
      r = f;
      return h | 0;
    }
    function bp(a) {
      a = a | 0;
      var b = 0,
          c = 0,
          d = 0,
          e = 0,
          f = 0,
          g = 0,
          h = 0,
          m = 0,
          n = 0,
          o = 0,
          p = 0,
          q = 0,
          s = 0,
          t = 0,
          u = 0,
          v = 0,
          w = 0,
          x = 0;
      x = r;
      r = r + 16 | 0;
      u = x;
      q = a + 12 | 0;
      v = k[q >> 2] | 0;
      w = a + 8 | 0;
      s = k[w >> 2] | 0;
      if ((k[v >> 2] | 0) != 0 ? (i[v + 13 >> 0] | 0) != 0 : 0) {
        t = af(a) | 0;
        hf(a, t, l[v + 12 >> 0] | 0);
        gf(a, t);
      }
      a: do
        if (i[v + 14 >> 0] | 0) {
          g = s + 52 | 0;
          o = ih(k[g >> 2] | 0, 1012652) | 0;
          c = s + 68 | 0;
          b = k[c >> 2] | 0;
          f = b + 24 | 0;
          h = s + 48 | 0;
          e = k[h >> 2] | 0;
          n = k[e + 16 >> 2] | 0;
          m = b + 28 | 0;
          p = k[m >> 2] | 0;
          d = b + 32 | 0;
          if ((p | 0) < (k[d >> 2] | 0)) {
            g = k[f >> 2] | 0;
            f = b;
          } else {
            g = Ig(k[g >> 2] | 0, k[f >> 2] | 0, d, 16, 32767, 1011712) | 0;
            k[f >> 2] = g;
            e = k[h >> 2] | 0;
            f = k[c >> 2] | 0;
          }
          k[g + (p << 4) >> 2] = o;
          k[g + (p << 4) + 8 >> 2] = 0;
          i[g + (p << 4) + 12 >> 0] = i[e + 42 >> 0] | 0;
          k[g + (p << 4) + 4 >> 2] = n;
          k[m >> 2] = p + 1;
          h = (k[f + 24 >> 2] | 0) + (p << 4) | 0;
          d = k[(k[e + 12 >> 2] | 0) + 8 >> 2] | 0;
          g = f + 16 | 0;
          c = k[g >> 2] | 0;
          if ((d | 0) < (c | 0)) {
            e = f + 12 | 0;
            do {
              while (1) {
                if ((k[(k[e >> 2] | 0) + (d << 4) >> 2] | 0) != (k[h >> 2] | 0))
                  break;
                cp(s, d, h);
                c = k[g >> 2] | 0;
                if ((d | 0) >= (c | 0))
                  break a;
              }
              d = d + 1 | 0;
            } while ((d | 0) < (c | 0));
          }
        }
 while (0);
      p = k[v >> 2] | 0;
      k[q >> 2] = p;
      t = v + 12 | 0;
      e = i[t >> 0] | 0;
      h = a + 42 | 0;
      b = i[h >> 0] | 0;
      d = b & 255;
      o = k[(k[w >> 2] | 0) + 68 >> 2] | 0;
      q = o + 4 | 0;
      k[q >> 2] = (e & 255) - d + (k[q >> 2] | 0);
      if ((e & 255) < (b & 255)) {
        c = k[a + 16 >> 2] | 0;
        g = k[a + 36 >> 2] | 0;
        b = k[(k[a >> 2] | 0) + 60 >> 2] | 0;
        f = k[o >> 2] | 0;
        while (1) {
          q = (d & 255) + -1 << 24 >> 24;
          k[b + ((j[f + ((q & 255) + g << 1) >> 1] | 0) * 12 | 0) + 8 >> 2] = c;
          if ((q & 255) > (e & 255))
            d = d + -1 | 0;
          else
            break;
        }
        i[h >> 0] = e;
        b = e;
      }
      i[a + 44 >> 0] = b;
      c = k[s + 68 >> 2] | 0;
      k[c + 28 >> 2] = k[v + 4 >> 2];
      h = k[v + 8 >> 2] | 0;
      if (!p) {
        if ((h | 0) >= (k[c + 16 >> 2] | 0)) {
          r = x;
          return ;
        }
        c = k[c + 12 >> 2] | 0;
        b = k[c + (h << 4) >> 2] | 0;
        if ((i[b + 4 >> 0] | 0) != 4) {
          q = 1011759;
          p = s + 52 | 0;
          p = k[p >> 2] | 0;
          n = b + 24 | 0;
          m = c + (h << 4) + 8 | 0;
          m = k[m >> 2] | 0;
          k[u >> 2] = n;
          n = u + 4 | 0;
          k[n >> 2] = m;
          q = Ug(p, q, u) | 0;
          dp(s, q);
        }
        q = (i[b + 6 >> 0] | 0) != 0 ? 1011725 : 1011759;
        p = s + 52 | 0;
        p = k[p >> 2] | 0;
        n = b + 24 | 0;
        m = c + (h << 4) + 8 | 0;
        m = k[m >> 2] | 0;
        k[u >> 2] = n;
        n = u + 4 | 0;
        k[n >> 2] = m;
        u = Ug(p, q, u) | 0;
        dp(s, u);
      }
      s = o + 16 | 0;
      if ((h | 0) >= (k[s >> 2] | 0)) {
        r = x;
        return ;
      }
      q = o + 12 | 0;
      p = v + 13 | 0;
      while (1) {
        b = k[q >> 2] | 0;
        d = b + (h << 4) + 12 | 0;
        c = e & 255;
        if ((l[d >> 0] | 0) > (e & 255)) {
          if (!(i[p >> 0] | 0))
            b = e;
          else {
            hf(a, k[b + (h << 4) + 4 >> 2] | 0, c);
            b = i[t >> 0] | 0;
          }
          i[d >> 0] = b;
        }
        m = k[w >> 2] | 0;
        n = k[m + 48 >> 2] | 0;
        e = k[m + 68 >> 2] | 0;
        o = k[e + 12 >> 2] | 0;
        d = k[(k[n + 12 >> 2] | 0) + 4 >> 2] | 0;
        g = k[e + 28 >> 2] | 0;
        b: do
          if ((d | 0) < (g | 0)) {
            f = k[e + 24 >> 2] | 0;
            b = k[o + (h << 4) >> 2] | 0;
            e = d;
            while (1) {
              c = f + (e << 4) | 0;
              if ((k[c >> 2] | 0) == (b | 0))
                break;
              e = e + 1 | 0;
              if ((e | 0) >= (g | 0)) {
                b = 1;
                break b;
              }
            }
            d = i[f + (e << 4) + 12 >> 0] | 0;
            if ((l[o + (h << 4) + 12 >> 0] | 0) > (d & 255))
              hf(n, k[o + (h << 4) + 4 >> 2] | 0, d & 255);
            cp(m, h, c);
            b = 0;
          } else
            b = 1;
 while (0);
        b = b + h | 0;
        if ((b | 0) >= (k[s >> 2] | 0))
          break;
        e = i[t >> 0] | 0;
        h = b;
      }
      r = x;
      return ;
    }
    function cp(a, b, c) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      var d = 0,
          e = 0,
          f = 0,
          g = 0,
          h = 0,
          m = 0,
          n = 0,
          o = 0,
          p = 0;
      n = r;
      r = r + 16 | 0;
      h = n;
      e = k[a + 48 >> 2] | 0;
      d = k[a + 68 >> 2] | 0;
      m = d + 12 | 0;
      f = k[m >> 2] | 0;
      g = i[f + (b << 4) + 12 >> 0] | 0;
      if ((g & 255) < (l[c + 12 >> 0] | 0)) {
        o = k[a + 52 >> 2] | 0;
        p = k[f + (b << 4) + 8 >> 2] | 0;
        g = (k[(k[(k[e >> 2] | 0) + 60 >> 2] | 0) + ((j[(k[k[(k[e + 8 >> 2] | 0) + 68 >> 2] >> 2] | 0) + ((k[e + 36 >> 2] | 0) + (g & 255) << 1) >> 1] | 0) * 12 | 0) >> 2] | 0) + 24 | 0;
        k[h >> 2] = (k[f + (b << 4) >> 2] | 0) + 24;
        k[h + 4 >> 2] = p;
        k[h + 8 >> 2] = g;
        dp(a, Ug(o, 1011803, h) | 0);
      }
      ff(e, k[f + (b << 4) + 4 >> 2] | 0, k[c + 4 >> 2] | 0);
      e = d + 16 | 0;
      d = (k[e >> 2] | 0) + -1 | 0;
      if ((d | 0) <= (b | 0)) {
        p = d;
        k[e >> 2] = p;
        r = n;
        return ;
      }
      do {
        p = k[m >> 2] | 0;
        d = p + (b << 4) | 0;
        b = b + 1 | 0;
        p = p + (b << 4) | 0;
        k[d >> 2] = k[p >> 2];
        k[d + 4 >> 2] = k[p + 4 >> 2];
        k[d + 8 >> 2] = k[p + 8 >> 2];
        k[d + 12 >> 2] = k[p + 12 >> 2];
        d = (k[e >> 2] | 0) + -1 | 0;
      } while ((b | 0) < (d | 0));
      k[e >> 2] = d;
      r = n;
      return ;
    }
    function dp(a, b) {
      a = a | 0;
      b = b | 0;
      k[a + 16 >> 2] = 0;
      Dg(a, b);
    }
    function ep(a, b) {
      a = a | 0;
      b = b | 0;
      var c = 0,
          d = 0,
          e = 0,
          f = 0,
          g = 0,
          h = 0,
          j = 0;
      j = r;
      r = r + 48 | 0;
      c = j + 24 | 0;
      e = j;
      d = a + 48 | 0;
      g = k[d >> 2] | 0;
      Gg(a);
      fp(a, e, 0) | 0;
      h = a + 16 | 0;
      if ((k[h >> 2] | 0) != 275)
        Nk(a, 275);
      Gg(a);
      a: do
        switch (k[h >> 2] | 0) {
          case 258:
          case 266:
            {
              zf(k[d >> 2] | 0, e);
              i[c + 14 >> 0] = 0;
              i[c + 12 >> 0] = i[g + 42 >> 0] | 0;
              d = k[(k[g + 8 >> 2] | 0) + 68 >> 2] | 0;
              k[c + 4 >> 2] = k[d + 28 >> 2];
              k[c + 8 >> 2] = k[d + 16 >> 2];
              i[c + 13 >> 0] = 0;
              d = g + 12 | 0;
              k[c >> 2] = k[d >> 2];
              k[d >> 2] = c;
              lp(a, k[e + 16 >> 2] | 0);
              b: while (1) {
                switch (k[h >> 2] | 0) {
                  case 288:
                  case 59:
                    break;
                  case 289:
                  case 262:
                  case 261:
                  case 260:
                    break b;
                  default:
                    {
                      f = 8;
                      break b;
                    }
                }
                Mk(a);
              }
              if ((f | 0) == 8) {
                c = af(g) | 0;
                break a;
              }
              bp(g);
              r = j;
              return ;
            }
          default:
            {
              yf(k[d >> 2] | 0, e);
              i[c + 14 >> 0] = 0;
              i[c + 12 >> 0] = i[g + 42 >> 0] | 0;
              f = k[(k[g + 8 >> 2] | 0) + 68 >> 2] | 0;
              k[c + 4 >> 2] = k[f + 28 >> 2];
              k[c + 8 >> 2] = k[f + 16 >> 2];
              i[c + 13 >> 0] = 0;
              f = g + 12 | 0;
              k[c >> 2] = k[f >> 2];
              k[f >> 2] = c;
              c = k[e + 20 >> 2] | 0;
            }
        }
 while (0);
      c: do {
        d = k[h >> 2] | 0;
        switch (d | 0) {
          case 277:
          case 289:
          case 262:
          case 261:
          case 260:
            break c;
          default:
            {}
        }
        Mk(a);
      } while ((d | 0) != 274);
      bp(g);
      if ((k[h >> 2] & -2 | 0) == 260)
        cf(g, b, af(g) | 0);
      gf(g, c);
      r = j;
      return ;
    }
    function fp(a, b, c) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      var d = 0,
          e = 0,
          f = 0,
          g = 0,
          h = 0,
          m = 0,
          n = 0,
          o = 0,
          q = 0,
          s = 0,
          t = 0,
          u = 0,
          v = 0;
      t = r;
      r = r + 48 | 0;
      h = t + 32 | 0;
      g = t + 24 | 0;
      q = t;
      o = a + 48 | 0;
      m = k[o >> 2] | 0;
      s = a + 52 | 0;
      e = (k[s >> 2] | 0) + 106 | 0;
      f = (j[e >> 1] | 0) + 1 << 16 >> 16;
      j[e >> 1] = f;
      if ((f & 65535) > 200) {
        d = m + 8 | 0;
        f = k[(k[d >> 2] | 0) + 52 >> 2] | 0;
        e = k[(k[m >> 2] | 0) + 36 >> 2] | 0;
        if (!e) {
          v = 1011891;
          k[h >> 2] = 1011937;
          u = h + 4 | 0;
          k[u >> 2] = 200;
          u = h + 8 | 0;
          k[u >> 2] = v;
          u = Ug(f, 1011905, h) | 0;
          v = k[d >> 2] | 0;
          Dg(v, u);
        }
        k[g >> 2] = e;
        u = Ug(f, 1011871, g) | 0;
        k[h >> 2] = 1011937;
        v = h + 4 | 0;
        k[v >> 2] = 200;
        v = h + 8 | 0;
        k[v >> 2] = u;
        v = Ug(f, 1011905, h) | 0;
        u = k[d >> 2] | 0;
        Dg(u, v);
      }
      e = a + 16 | 0;
      a: do
        switch (k[e >> 2] | 0) {
          case 45:
            {
              d = 0;
              n = 9;
              break;
            }
          case 126:
            {
              d = 1;
              n = 9;
              break;
            }
          case 35:
            {
              d = 3;
              n = 9;
              break;
            }
          case 271:
            {
              d = 2;
              n = 9;
              break;
            }
          case 290:
            {
              k[b + 16 >> 2] = -1;
              k[b + 20 >> 2] = -1;
              k[b >> 2] = 5;
              k[b + 8 >> 2] = 0;
              p[b + 8 >> 3] = +p[a + 24 >> 3];
              n = 22;
              break;
            }
          case 291:
            {
              k[b + 16 >> 2] = -1;
              k[b + 20 >> 2] = -1;
              k[b >> 2] = 6;
              n = b + 8 | 0;
              k[n >> 2] = 0;
              u = a + 24 | 0;
              v = k[u + 4 >> 2] | 0;
              k[n >> 2] = k[u >> 2];
              k[n + 4 >> 2] = v;
              n = 22;
              break;
            }
          case 293:
            {
              n = mf(m, k[a + 24 >> 2] | 0) | 0;
              k[b + 16 >> 2] = -1;
              k[b + 20 >> 2] = -1;
              k[b >> 2] = 4;
              k[b + 8 >> 2] = n;
              n = 22;
              break;
            }
          case 270:
            {
              k[b + 16 >> 2] = -1;
              k[b + 20 >> 2] = -1;
              k[b >> 2] = 1;
              k[b + 8 >> 2] = 0;
              n = 22;
              break;
            }
          case 276:
            {
              k[b + 16 >> 2] = -1;
              k[b + 20 >> 2] = -1;
              k[b >> 2] = 2;
              k[b + 8 >> 2] = 0;
              n = 22;
              break;
            }
          case 263:
            {
              k[b + 16 >> 2] = -1;
              k[b + 20 >> 2] = -1;
              k[b >> 2] = 3;
              k[b + 8 >> 2] = 0;
              n = 22;
              break;
            }
          case 281:
            {
              if (!(i[(k[m >> 2] | 0) + 7 >> 0] | 0))
                Dg(a, 1012234);
              else {
                n = $e(m, 45, 0, 1, 0) | 0;
                k[b + 16 >> 2] = -1;
                k[b + 20 >> 2] = -1;
                k[b >> 2] = 14;
                k[b + 8 >> 2] = n;
                n = 22;
                break a;
              }
              break;
            }
          case 123:
            {
              pp(a, b);
              break;
            }
          case 265:
            {
              Gg(a);
              kp(a, b, 0, k[a + 4 >> 2] | 0);
              break;
            }
          default:
            mp(a, b);
        }
 while (0);
      if ((n | 0) == 9) {
        v = k[a + 4 >> 2] | 0;
        Gg(a);
        fp(a, b, 12) | 0;
        Bf(k[o >> 2] | 0, d, b, v);
      } else if ((n | 0) == 22)
        Gg(a);
      do
        switch (k[e >> 2] | 0) {
          case 282:
            {
              d = 13;
              break;
            }
          case 60:
            {
              d = 14;
              break;
            }
          case 284:
            {
              d = 15;
              break;
            }
          case 62:
            {
              d = 17;
              break;
            }
          case 283:
            {
              d = 18;
              break;
            }
          case 257:
            {
              d = 19;
              break;
            }
          case 272:
            {
              d = 20;
              break;
            }
          case 43:
            {
              d = 0;
              break;
            }
          case 45:
            {
              d = 1;
              break;
            }
          case 42:
            {
              d = 2;
              break;
            }
          case 37:
            {
              d = 3;
              break;
            }
          case 94:
            {
              d = 4;
              break;
            }
          case 47:
            {
              d = 5;
              break;
            }
          case 279:
            {
              d = 6;
              break;
            }
          case 38:
            {
              d = 7;
              break;
            }
          case 124:
            {
              d = 8;
              break;
            }
          case 126:
            {
              d = 9;
              break;
            }
          case 286:
            {
              d = 10;
              break;
            }
          case 287:
            {
              d = 11;
              break;
            }
          case 280:
            {
              d = 12;
              break;
            }
          case 285:
            {
              d = 16;
              break;
            }
          default:
            {
              v = 21;
              u = k[s >> 2] | 0;
              u = u + 106 | 0;
              s = j[u >> 1] | 0;
              s = s + -1 << 16 >> 16;
              j[u >> 1] = s;
              r = t;
              return v | 0;
            }
        }
 while (0);
      e = a + 4 | 0;
      while (1) {
        if ((l[1012277 + (d << 1) >> 0] | 0) <= (c | 0)) {
          n = 47;
          break;
        }
        v = k[e >> 2] | 0;
        Gg(a);
        Cf(k[o >> 2] | 0, d, b);
        u = d;
        d = fp(a, q, l[1012277 + (d << 1) + 1 >> 0] | 0) | 0;
        Df(k[o >> 2] | 0, u, b, q, v);
        if ((d | 0) == 21) {
          d = 21;
          n = 47;
          break;
        }
      }
      if ((n | 0) == 47) {
        v = k[s >> 2] | 0;
        v = v + 106 | 0;
        u = j[v >> 1] | 0;
        u = u + -1 << 16 >> 16;
        j[v >> 1] = u;
        r = t;
        return d | 0;
      }
      return 0;
    }
    function gp(a, b) {
      a = a | 0;
      b = b | 0;
      var c = 0,
          d = 0,
          e = 0,
          f = 0,
          g = 0,
          h = 0,
          l = 0,
          m = 0,
          n = 0,
          o = 0,
          p = 0;
      p = r;
      r = r + 32 | 0;
      n = p + 8 | 0;
      m = p;
      l = k[a + 48 >> 2] | 0;
      o = k[a + 68 >> 2] | 0;
      g = k[l >> 2] | 0;
      c = g + 32 | 0;
      e = k[c >> 2] | 0;
      h = l + 40 | 0;
      if ((j[h >> 1] | 0) < (e | 0)) {
        d = e;
        f = k[g + 60 >> 2] | 0;
      } else {
        d = g + 60 | 0;
        f = Ig(k[a + 52 >> 2] | 0, k[d >> 2] | 0, c, 12, 32767, 1012218) | 0;
        k[d >> 2] = f;
        d = k[c >> 2] | 0;
      }
      if ((e | 0) < (d | 0))
        do {
          k[f + (e * 12 | 0) >> 2] = 0;
          e = e + 1 | 0;
        } while ((e | 0) != (d | 0));
      c = j[h >> 1] | 0;
      k[f + ((c << 16 >> 16) * 12 | 0) >> 2] = b;
      if ((i[g + 5 >> 0] & 4) != 0 ? (i[b + 5 >> 0] & 3) != 0 : 0) {
        rg(k[a + 52 >> 2] | 0, g, b);
        g = j[h >> 1] | 0;
      } else
        g = c;
      j[h >> 1] = g + 1 << 16 >> 16;
      b = o + 4 | 0;
      f = k[b >> 2] | 0;
      if ((f + 1 - (k[l + 36 >> 2] | 0) | 0) > 200) {
        d = l + 8 | 0;
        e = k[(k[d >> 2] | 0) + 52 >> 2] | 0;
        c = k[(k[l >> 2] | 0) + 36 >> 2] | 0;
        if (!c) {
          h = 1011891;
          k[n >> 2] = 1012218;
          l = n + 4 | 0;
          k[l >> 2] = 200;
          l = n + 8 | 0;
          k[l >> 2] = h;
          l = Ug(e, 1011905, n) | 0;
          h = k[d >> 2] | 0;
          Dg(h, l);
        }
        k[m >> 2] = c;
        l = Ug(e, 1011871, m) | 0;
        k[n >> 2] = 1012218;
        m = n + 4 | 0;
        k[m >> 2] = 200;
        m = n + 8 | 0;
        k[m >> 2] = l;
        n = Ug(e, 1011905, n) | 0;
        m = k[d >> 2] | 0;
        Dg(m, n);
      }
      c = o + 8 | 0;
      if ((f + 2 | 0) > (k[c >> 2] | 0)) {
        n = Ig(k[a + 52 >> 2] | 0, k[o >> 2] | 0, c, 2, 2147483647, 1012218) | 0;
        k[o >> 2] = n;
        a = k[b >> 2] | 0;
        o = n;
        n = a + 1 | 0;
        k[b >> 2] = n;
        a = o + (a << 1) | 0;
        j[a >> 1] = g;
        r = p;
        return ;
      } else {
        a = f;
        o = k[o >> 2] | 0;
        n = a + 1 | 0;
        k[b >> 2] = n;
        a = o + (a << 1) | 0;
        j[a >> 1] = g;
        r = p;
        return ;
      }
    }
    function hp(a, b, c, d, e) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      d = d | 0;
      e = e | 0;
      var f = 0,
          g = 0,
          h = 0,
          m = 0,
          n = 0,
          o = 0,
          p = 0,
          q = 0,
          s = 0,
          t = 0,
          u = 0;
      u = r;
      r = r + 32 | 0;
      q = u + 16 | 0;
      h = u;
      n = a + 48 | 0;
      s = k[n >> 2] | 0;
      g = s + 42 | 0;
      t = (l[g >> 0] | 0) + 3 | 0;
      i[g >> 0] = t;
      m = k[s + 16 >> 2] | 0;
      f = s + 8 | 0;
      o = k[(k[s >> 2] | 0) + 60 >> 2] | 0;
      p = k[k[(k[f >> 2] | 0) + 68 >> 2] >> 2] | 0;
      t = (k[s + 36 >> 2] | 0) + (t & 255) | 0;
      k[o + ((j[p + (t + -3 << 1) >> 1] | 0) * 12 | 0) + 4 >> 2] = m;
      k[o + ((j[p + (t + -2 << 1) >> 1] | 0) * 12 | 0) + 4 >> 2] = m;
      k[o + ((j[p + (t + -1 << 1) >> 1] | 0) * 12 | 0) + 4 >> 2] = m;
      t = a + 16 | 0;
      if ((k[t >> 2] | 0) != 259)
        Nk(a, 259);
      Gg(a);
      o = (e | 0) != 0;
      if (o)
        p = bf(s, 40, b, 131070) | 0;
      else
        p = af(s) | 0;
      i[h + 14 >> 0] = 0;
      i[h + 12 >> 0] = i[g >> 0] | 0;
      g = k[(k[f >> 2] | 0) + 68 >> 2] | 0;
      k[h + 4 >> 2] = k[g + 28 >> 2];
      k[h + 8 >> 2] = k[g + 16 >> 2];
      i[h + 13 >> 0] = 0;
      g = s + 12 | 0;
      k[h >> 2] = k[g >> 2];
      k[g >> 2] = h;
      g = k[n >> 2] | 0;
      m = g + 42 | 0;
      h = (l[m >> 0] | 0) + d | 0;
      i[m >> 0] = h;
      if (d) {
        m = k[g + 16 >> 2] | 0;
        e = k[(k[g >> 2] | 0) + 60 >> 2] | 0;
        f = k[k[(k[g + 8 >> 2] | 0) + 68 >> 2] >> 2] | 0;
        g = (k[g + 36 >> 2] | 0) + (h & 255) | 0;
        h = d;
        do {
          k[e + ((j[f + (g - h << 1) >> 1] | 0) * 12 | 0) + 4 >> 2] = m;
          h = h + -1 | 0;
        } while ((h | 0) != 0);
      }
      lf(s, d);
      e = k[n >> 2] | 0;
      i[q + 14 >> 0] = 0;
      i[q + 12 >> 0] = i[e + 42 >> 0] | 0;
      n = k[(k[e + 8 >> 2] | 0) + 68 >> 2] | 0;
      k[q + 4 >> 2] = k[n + 28 >> 2];
      k[q + 8 >> 2] = k[n + 16 >> 2];
      i[q + 13 >> 0] = 0;
      n = e + 12 | 0;
      k[q >> 2] = k[n >> 2];
      k[n >> 2] = q;
      a: do {
        f = k[t >> 2] | 0;
        switch (f | 0) {
          case 277:
          case 289:
          case 262:
          case 261:
          case 260:
            break a;
          default:
            {}
        }
        Mk(a);
      } while ((f | 0) != 274);
      bp(e);
      bp(s);
      gf(s, p);
      if (o) {
        a = bf(s, 39, b, 131070) | 0;
        d = p + 1 | 0;
        ff(s, a, d);
        Ef(s, c);
        r = u;
        return ;
      } else {
        $e(s, 41, b, 0, d) | 0;
        Ef(s, c);
        a = bf(s, 42, b + 2 | 0, 131070) | 0;
        d = p + 1 | 0;
        ff(s, a, d);
        Ef(s, c);
        r = u;
        return ;
      }
    }
    function ip(a, b, c, d) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      d = d | 0;
      var e = 0,
          f = 0,
          g = 0,
          h = 0,
          m = 0,
          n = 0,
          o = 0;
      if (!a) {
        o = 0;
        return o | 0;
      }
      h = a + 8 | 0;
      m = a + 36 | 0;
      e = k[a >> 2] | 0;
      g = e + 60 | 0;
      n = l[a + 42 >> 0] | 0;
      while (1) {
        f = n + -1 | 0;
        if ((n | 0) <= 0)
          break;
        if ((k[(k[g >> 2] | 0) + ((j[(k[k[(k[h >> 2] | 0) + 68 >> 2] >> 2] | 0) + ((k[m >> 2] | 0) + f << 1) >> 1] | 0) * 12 | 0) >> 2] | 0) == (b | 0)) {
          o = 5;
          break;
        } else
          n = f;
      }
      if ((o | 0) == 5) {
        k[c + 16 >> 2] = -1;
        k[c + 20 >> 2] = -1;
        k[c >> 2] = 8;
        k[c + 8 >> 2] = f;
        if (d) {
          o = 8;
          return o | 0;
        }
        e = a + 12 | 0;
        do
          e = k[e >> 2] | 0;
 while ((l[e + 12 >> 0] | 0) > (f | 0));
        i[e + 13 >> 0] = 1;
        o = 8;
        return o | 0;
      }
      g = k[e + 64 >> 2] | 0;
      e = i[a + 43 >> 0] | 0;
      a: do
        if (e << 24 >> 24) {
          f = e & 255;
          e = 0;
          while (1) {
            if ((k[g + (e << 3) >> 2] | 0) == (b | 0))
              break;
            e = e + 1 | 0;
            if ((e | 0) >= (f | 0)) {
              o = 14;
              break a;
            }
          }
          if ((e | 0) < 0)
            o = 14;
        } else
          o = 14;
 while (0);
      do
        if ((o | 0) == 14)
          if (!(ip(k[a + 4 >> 2] | 0, b, c, 0) | 0)) {
            o = 0;
            return o | 0;
          } else {
            e = Lk(a, b, c) | 0;
            break;
          }
 while (0);
      k[c + 16 >> 2] = -1;
      k[c + 20 >> 2] = -1;
      k[c >> 2] = 9;
      k[c + 8 >> 2] = e;
      o = 9;
      return o | 0;
    }
    function jp(a, b) {
      a = a | 0;
      b = b | 0;
      var c = 0,
          d = 0,
          e = 0,
          f = 0,
          g = 0;
      f = r;
      r = r + 32 | 0;
      e = f;
      c = a + 48 | 0;
      d = k[c >> 2] | 0;
      tf(d, b);
      Gg(a);
      if ((k[a + 16 >> 2] | 0) == 292) {
        g = k[a + 24 >> 2] | 0;
        Gg(a);
        a = mf(k[c >> 2] | 0, g) | 0;
        k[e + 16 >> 2] = -1;
        k[e + 20 >> 2] = -1;
        k[e >> 2] = 4;
        k[e + 8 >> 2] = a;
        Af(d, b, e);
        r = f;
        return ;
      } else
        Nk(a, 292);
    }
    function kp(a, b, c, d) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      d = d | 0;
      var e = 0,
          f = 0,
          g = 0,
          h = 0,
          m = 0,
          n = 0,
          o = 0,
          p = 0,
          q = 0,
          s = 0,
          t = 0,
          u = 0,
          v = 0,
          w = 0,
          x = 0,
          y = 0,
          z = 0;
      z = r;
      r = r + 80 | 0;
      y = z;
      x = z + 32 | 0;
      s = z + 16 | 0;
      v = a + 48 | 0;
      q = k[v >> 2] | 0;
      w = a + 52 | 0;
      t = k[w >> 2] | 0;
      p = k[q >> 2] | 0;
      q = q + 32 | 0;
      n = p + 28 | 0;
      m = k[n >> 2] | 0;
      o = p + 52 | 0;
      if (((k[q >> 2] | 0) >= (m | 0) ? (h = Ig(t, k[o >> 2] | 0, n, 4, 262143, 1012178) | 0, k[o >> 2] = h, e = k[n >> 2] | 0, (m | 0) < (e | 0)) : 0) ? (g = m + 1 | 0, k[h + (m << 2) >> 2] = 0, (g | 0) < (e | 0)) : 0)
        do {
          k[(k[o >> 2] | 0) + (g << 2) >> 2] = 0;
          g = g + 1 | 0;
        } while ((g | 0) != (e | 0));
      e = og(t) | 0;
      n = k[q >> 2] | 0;
      k[q >> 2] = n + 1;
      k[(k[o >> 2] | 0) + (n << 2) >> 2] = e;
      if ((i[p + 5 >> 0] & 4) != 0 ? (i[e + 5 >> 0] & 3) != 0 : 0)
        rg(t, p, e);
      k[x >> 2] = e;
      k[e + 36 >> 2] = d;
      k[x + 4 >> 2] = k[v >> 2];
      k[x + 8 >> 2] = a;
      k[v >> 2] = x;
      k[x + 16 >> 2] = 0;
      k[x + 20 >> 2] = 0;
      k[x + 24 >> 2] = -1;
      k[x + 28 >> 2] = 0;
      k[x + 32 >> 2] = 0;
      t = x + 40 | 0;
      k[t >> 2] = 0;
      i[t + 4 >> 0] = 0;
      t = k[a + 68 >> 2] | 0;
      k[x + 36 >> 2] = k[t + 4 >> 2];
      k[e + 72 >> 2] = k[a + 72 >> 2];
      i[e + 8 >> 0] = 2;
      i[s + 14 >> 0] = 0;
      i[s + 12 >> 0] = 0;
      k[s + 4 >> 2] = k[t + 28 >> 2];
      k[s + 8 >> 2] = k[t + 16 >> 2];
      i[s + 13 >> 0] = 0;
      k[s >> 2] = 0;
      k[x + 12 >> 2] = s;
      s = a + 16 | 0;
      if ((k[s >> 2] | 0) != 40)
        Nk(a, 40);
      Gg(a);
      if (!c) {
        t = k[v >> 2] | 0;
        c = t;
        t = k[t >> 2] | 0;
      } else {
        gp(a, Eg(a, 1012188, 4) | 0);
        c = k[v >> 2] | 0;
        t = c + 42 | 0;
        q = (l[t >> 0] | 0) + 1 | 0;
        i[t >> 0] = q;
        t = k[c >> 2] | 0;
        k[(k[t + 60 >> 2] | 0) + ((j[(k[k[(k[c + 8 >> 2] | 0) + 68 >> 2] >> 2] | 0) + ((k[c + 36 >> 2] | 0) + (q & 255) + -1 << 1) >> 1] | 0) * 12 | 0) + 4 >> 2] = k[c + 16 >> 2];
      }
      m = t + 7 | 0;
      i[m >> 0] = 0;
      e = k[s >> 2] | 0;
      a: do
        if ((e | 0) != 41) {
          h = a + 24 | 0;
          g = 0;
          b: while (1) {
            switch (e | 0) {
              case 281:
                {
                  f = g;
                  u = 17;
                  break b;
                }
              case 292:
                break;
              default:
                {
                  u = 18;
                  break b;
                }
            }
            q = k[h >> 2] | 0;
            Gg(a);
            gp(a, q);
            g = g + 1 | 0;
            if (i[m >> 0] | 0) {
              f = g;
              break a;
            }
            if ((k[s >> 2] | 0) != 44) {
              f = g;
              break a;
            }
            Gg(a);
            e = k[s >> 2] | 0;
          }
          if ((u | 0) == 17) {
            Gg(a);
            i[m >> 0] = 1;
            break;
          } else if ((u | 0) == 18)
            Dg(a, 1012193);
        } else
          f = 0;
 while (0);
      e = k[v >> 2] | 0;
      q = e + 42 | 0;
      g = (l[q >> 0] | 0) + f | 0;
      i[q >> 0] = g;
      if (f) {
        n = k[e + 16 >> 2] | 0;
        h = k[(k[e >> 2] | 0) + 60 >> 2] | 0;
        m = k[k[(k[e + 8 >> 2] | 0) + 68 >> 2] >> 2] | 0;
        g = (k[e + 36 >> 2] | 0) + (g & 255) | 0;
        do {
          k[h + ((j[m + (g - f << 1) >> 1] | 0) * 12 | 0) + 4 >> 2] = n;
          f = f + -1 | 0;
        } while ((f | 0) != 0);
      }
      q = i[c + 42 >> 0] | 0;
      i[t + 6 >> 0] = q;
      lf(c, q & 255);
      if ((k[s >> 2] | 0) != 41)
        Nk(a, 41);
      Gg(a);
      c: while (1) {
        f = k[s >> 2] | 0;
        switch (f | 0) {
          case 277:
          case 289:
          case 262:
          case 261:
          case 260:
            break c;
          default:
            {}
        }
        Mk(a);
        if ((f | 0) == 274) {
          u = 29;
          break;
        }
      }
      if ((u | 0) == 29)
        f = k[s >> 2] | 0;
      e = k[a + 4 >> 2] | 0;
      k[(k[x >> 2] | 0) + 40 >> 2] = e;
      if ((f | 0) == 262) {
        Gg(a);
        y = k[(k[v >> 2] | 0) + 4 >> 2] | 0;
        x = bf(y, 44, 0, (k[y + 32 >> 2] | 0) + -1 | 0) | 0;
        k[b + 16 >> 2] = -1;
        k[b + 20 >> 2] = -1;
        k[b >> 2] = 12;
        k[b + 8 >> 2] = x;
        rf(y, b);
        Ok(a);
        r = z;
        return ;
      }
      if ((e | 0) == (d | 0))
        Nk(a, 262);
      else {
        z = k[w >> 2] | 0;
        w = Cg(a, 262) | 0;
        x = Cg(a, 265) | 0;
        k[y >> 2] = w;
        k[y + 4 >> 2] = x;
        k[y + 8 >> 2] = d;
        Dg(a, Ug(z, 1011946, y) | 0);
      }
    }
    function lp(a, b) {
      a = a | 0;
      b = b | 0;
      var c = 0,
          d = 0,
          e = 0,
          f = 0,
          g = 0,
          h = 0,
          j = 0,
          m = 0,
          n = 0,
          o = 0;
      g = k[a + 4 >> 2] | 0;
      c = a + 16 | 0;
      n = (k[c >> 2] | 0) == 266;
      Gg(a);
      do
        if (n)
          if ((k[c >> 2] | 0) == 292) {
            j = k[a + 24 >> 2] | 0;
            Gg(a);
            break;
          } else
            Nk(a, 292);
        else
          j = ih(k[a + 52 >> 2] | 0, 1012652) | 0;
 while (0);
      e = a + 68 | 0;
      f = k[e >> 2] | 0;
      d = f + 12 | 0;
      h = f + 16 | 0;
      n = k[h >> 2] | 0;
      c = f + 20 | 0;
      if ((n | 0) < (k[c >> 2] | 0))
        d = k[d >> 2] | 0;
      else {
        f = Ig(k[a + 52 >> 2] | 0, k[d >> 2] | 0, c, 16, 32767, 1011712) | 0;
        k[d >> 2] = f;
        d = f;
        f = k[e >> 2] | 0;
      }
      k[d + (n << 4) >> 2] = j;
      k[d + (n << 4) + 8 >> 2] = g;
      m = k[a + 48 >> 2] | 0;
      i[d + (n << 4) + 12 >> 0] = i[m + 42 >> 0] | 0;
      k[d + (n << 4) + 4 >> 2] = b;
      k[h >> 2] = n + 1;
      j = k[f + 12 >> 2] | 0;
      c = k[(k[m + 12 >> 2] | 0) + 4 >> 2] | 0;
      g = k[f + 28 >> 2] | 0;
      if ((c | 0) >= (g | 0))
        return ;
      f = k[f + 24 >> 2] | 0;
      e = k[j + (n << 4) >> 2] | 0;
      while (1) {
        d = f + (c << 4) | 0;
        if ((k[d >> 2] | 0) == (e | 0))
          break;
        c = c + 1 | 0;
        if ((c | 0) >= (g | 0)) {
          o = 16;
          break;
        }
      }
      if ((o | 0) == 16)
        return ;
      c = i[f + (c << 4) + 12 >> 0] | 0;
      if ((l[j + (n << 4) + 12 >> 0] | 0) > (c & 255))
        hf(m, k[j + (n << 4) + 4 >> 2] | 0, c & 255);
      cp(a, n, d);
      return ;
    }
    function mp(a, b) {
      a = a | 0;
      b = b | 0;
      var c = 0,
          d = 0,
          e = 0,
          f = 0,
          g = 0,
          h = 0,
          i = 0,
          j = 0,
          l = 0,
          m = 0,
          n = 0,
          o = 0;
      o = r;
      r = r + 96 | 0;
      f = o + 72 | 0;
      g = o + 48 | 0;
      m = o + 24 | 0;
      n = o;
      h = a + 48 | 0;
      i = k[h >> 2] | 0;
      e = a + 4 | 0;
      j = k[e >> 2] | 0;
      l = a + 16 | 0;
      a: do
        switch (k[l >> 2] | 0) {
          case 40:
            {
              Gg(a);
              fp(a, b, 0) | 0;
              if ((k[l >> 2] | 0) == 41) {
                Gg(a);
                qf(k[h >> 2] | 0, b);
                c = a + 24 | 0;
                break a;
              }
              if ((k[e >> 2] | 0) == (j | 0))
                Nk(a, 41);
              else {
                g = k[a + 52 >> 2] | 0;
                d = Cg(a, 41) | 0;
                e = Cg(a, 40) | 0;
                k[f >> 2] = d;
                k[f + 4 >> 2] = e;
                k[f + 8 >> 2] = j;
                Dg(a, Ug(g, 1011946, f) | 0);
              }
              break;
            }
          case 292:
            {
              c = a + 24 | 0;
              d = k[c >> 2] | 0;
              Gg(a);
              e = k[h >> 2] | 0;
              if (!(ip(e, d, b, 1) | 0)) {
                ip(e, k[a + 76 >> 2] | 0, b, 1) | 0;
                f = mf(k[h >> 2] | 0, d) | 0;
                k[g + 16 >> 2] = -1;
                k[g + 20 >> 2] = -1;
                k[g >> 2] = 4;
                k[g + 8 >> 2] = f;
                Af(e, b, g);
              }
              break;
            }
          default:
            Dg(a, 1012132);
        }
 while (0);
      e = n + 16 | 0;
      d = n + 20 | 0;
      f = n + 8 | 0;
      b: while (1)
        switch (k[l >> 2] | 0) {
          case 46:
            {
              jp(a, b);
              continue b;
            }
          case 91:
            {
              tf(i, b);
              Gg(a);
              fp(a, m, 0) | 0;
              uf(k[h >> 2] | 0, m);
              if ((k[l >> 2] | 0) != 93) {
                c = 15;
                break b;
              }
              Gg(a);
              Af(i, b, m);
              continue b;
            }
          case 58:
            {
              Gg(a);
              if ((k[l >> 2] | 0) != 292) {
                c = 18;
                break b;
              }
              g = k[c >> 2] | 0;
              Gg(a);
              g = mf(k[h >> 2] | 0, g) | 0;
              k[e >> 2] = -1;
              k[d >> 2] = -1;
              k[n >> 2] = 4;
              k[f >> 2] = g;
              xf(i, b, n);
              op(a, b, j);
              continue b;
            }
          case 123:
          case 293:
          case 40:
            {
              rf(i, b);
              op(a, b, j);
              continue b;
            }
          default:
            {
              c = 21;
              break b;
            }
        }
      if ((c | 0) == 15)
        Nk(a, 93);
      else if ((c | 0) == 18)
        Nk(a, 292);
      else if ((c | 0) == 21) {
        r = o;
        return ;
      }
    }
    function np(a, b, c) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      var d = 0,
          e = 0,
          f = 0,
          g = 0,
          h = 0,
          n = 0,
          o = 0,
          p = 0,
          q = 0,
          s = 0,
          t = 0,
          u = 0,
          v = 0,
          w = 0,
          x = 0,
          y = 0,
          z = 0,
          A = 0,
          B = 0,
          C = 0,
          D = 0;
      D = r;
      r = r + 80 | 0;
      z = D + 64 | 0;
      y = D + 56 | 0;
      C = D + 32 | 0;
      x = D;
      B = b + 8 | 0;
      if (((k[B >> 2] | 0) + -8 | 0) >>> 0 >= 3)
        Dg(a, 1012119);
      f = a + 16 | 0;
      a: do
        switch (k[f >> 2] | 0) {
          case 44:
            {
              Gg(a);
              k[x >> 2] = b;
              h = x + 8 | 0;
              mp(a, h);
              h = k[h >> 2] | 0;
              w = a + 48 | 0;
              if ((h | 0) != 10) {
                v = k[w >> 2] | 0;
                q = i[v + 44 >> 0] | 0;
                s = q & 255;
                o = q & 255;
                t = k[x + 16 >> 2] | 0;
                u = (h | 0) == 8;
                if (u) {
                  d = b;
                  f = 0;
                  do {
                    if ((k[d + 8 >> 2] | 0) == 10) {
                      e = d + 16 | 0;
                      b = e + 3 | 0;
                      if ((i[b >> 0] | 0) == 8 ? (p = e + 2 | 0, (l[p >> 0] | 0) == (t | 0)) : 0) {
                        i[b >> 0] = 8;
                        i[p >> 0] = q;
                        f = 1;
                      }
                      if ((j[e >> 1] | 0) == (t | 0)) {
                        j[e >> 1] = o;
                        f = 1;
                      }
                    }
                    d = k[d >> 2] | 0;
                  } while ((d | 0) != 0);
                } else {
                  f = 0;
                  do {
                    if (((k[b + 8 >> 2] | 0) == 10 ? (e = b + 16 | 0, d = e + 3 | 0, (l[d >> 0] | 0) == (h | 0)) : 0) ? (n = e + 2 | 0, (l[n >> 0] | 0) == (t | 0)) : 0) {
                      i[d >> 0] = 8;
                      i[n >> 0] = q;
                      f = 1;
                    }
                    b = k[b >> 2] | 0;
                  } while ((b | 0) != 0);
                }
                if (f) {
                  $e(v, u ? 0 : 5, s, t, 0) | 0;
                  lf(v, 1);
                }
              }
              e = k[w >> 2] | 0;
              if (((m[(k[a + 52 >> 2] | 0) + 106 >> 1] | 0) + c | 0) <= 200) {
                np(a, x, c + 1 | 0);
                A = C;
                g = w;
                break a;
              }
              f = e + 8 | 0;
              b = k[(k[f >> 2] | 0) + 52 >> 2] | 0;
              e = k[(k[e >> 2] | 0) + 36 >> 2] | 0;
              if (!e) {
                a = 1011891;
                k[z >> 2] = 1011937;
                c = z + 4 | 0;
                k[c >> 2] = 200;
                c = z + 8 | 0;
                k[c >> 2] = a;
                c = Ug(b, 1011905, z) | 0;
                a = k[f >> 2] | 0;
                Dg(a, c);
              }
              k[y >> 2] = e;
              y = Ug(b, 1011871, y) | 0;
              k[z >> 2] = 1011937;
              c = z + 4 | 0;
              k[c >> 2] = 200;
              c = z + 8 | 0;
              k[c >> 2] = y;
              c = Ug(b, 1011905, z) | 0;
              z = k[f >> 2] | 0;
              Dg(z, c);
              break;
            }
          case 61:
            {
              Gg(a);
              fp(a, C, 0) | 0;
              g = a + 48 | 0;
              if ((k[f >> 2] | 0) == 44) {
                d = 1;
                do {
                  Gg(a);
                  rf(k[g >> 2] | 0, C);
                  fp(a, C, 0) | 0;
                  d = d + 1 | 0;
                } while ((k[f >> 2] | 0) == 44);
              } else
                d = 1;
              b = k[g >> 2] | 0;
              if ((d | 0) == (c | 0)) {
                pf(b, C);
                wf(k[g >> 2] | 0, B, C);
                r = D;
                return ;
              }
              f = c - d | 0;
              switch (k[C >> 2] | 0) {
                case 14:
                case 13:
                  {
                    e = f + 1 | 0;
                    e = (e | 0) < 0 ? 0 : e;
                    of(b, C, e);
                    if ((e | 0) > 1)
                      lf(b, e + -1 | 0);
                    break;
                  }
                case 0:
                  {
                    h = 33;
                    break;
                  }
                default:
                  {
                    rf(b, C);
                    h = 33;
                  }
              }
              if ((h | 0) == 33 ? (f | 0) > 0 : 0) {
                A = l[b + 44 >> 0] | 0;
                lf(b, f);
                _e(b, A, f);
              }
              if ((d | 0) > (c | 0)) {
                A = (k[g >> 2] | 0) + 44 | 0;
                i[A >> 0] = f + (l[A >> 0] | 0);
                A = C;
              } else
                A = C;
              break;
            }
          default:
            Nk(a, 61);
        }
 while (0);
      c = k[g >> 2] | 0;
      z = (l[c + 44 >> 0] | 0) + -1 | 0;
      k[C + 16 >> 2] = -1;
      k[C + 20 >> 2] = -1;
      k[A >> 2] = 7;
      k[C + 8 >> 2] = z;
      wf(c, B, C);
      r = D;
      return ;
    }
    function op(a, b, c) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      var d = 0,
          e = 0,
          f = 0,
          g = 0,
          h = 0,
          j = 0,
          m = 0;
      j = r;
      r = r + 48 | 0;
      f = j + 24 | 0;
      h = j;
      e = a + 48 | 0;
      g = k[e >> 2] | 0;
      d = a + 16 | 0;
      switch (k[d >> 2] | 0) {
        case 40:
          {
            Gg(a);
            if ((k[d >> 2] | 0) != 41) {
              fp(a, h, 0) | 0;
              if ((k[d >> 2] | 0) == 44)
                do {
                  Gg(a);
                  rf(k[e >> 2] | 0, h);
                  fp(a, h, 0) | 0;
                } while ((k[d >> 2] | 0) == 44);
              of(g, h, -1);
              if ((k[d >> 2] | 0) != 41)
                if ((k[a + 4 >> 2] | 0) == (c | 0))
                  Nk(a, 41);
                else {
                  e = k[a + 52 >> 2] | 0;
                  m = Cg(a, 41) | 0;
                  d = Cg(a, 40) | 0;
                  k[f >> 2] = m;
                  k[f + 4 >> 2] = d;
                  k[f + 8 >> 2] = c;
                  Dg(a, Ug(e, 1011946, f) | 0);
                }
            } else
              k[h >> 2] = 0;
            Gg(a);
            break;
          }
        case 123:
          {
            pp(a, h);
            break;
          }
        case 293:
          {
            m = mf(g, k[a + 24 >> 2] | 0) | 0;
            k[h + 16 >> 2] = -1;
            k[h + 20 >> 2] = -1;
            k[h >> 2] = 4;
            k[h + 8 >> 2] = m;
            Gg(a);
            break;
          }
        default:
          Dg(a, 1012150);
      }
      d = b + 8 | 0;
      e = k[d >> 2] | 0;
      switch (k[h >> 2] | 0) {
        case 0:
          break;
        case 14:
        case 13:
          {
            m = 0;
            m = $e(g, 36, e, m, 2) | 0;
            h = b + 16 | 0;
            k[h >> 2] = -1;
            h = b + 20 | 0;
            k[h >> 2] = -1;
            k[b >> 2] = 13;
            k[d >> 2] = m;
            Ef(g, c);
            c = e + 1 | 0;
            c = c & 255;
            m = g + 44 | 0;
            i[m >> 0] = c;
            r = j;
            return ;
          }
        default:
          rf(g, h);
      }
      m = (l[g + 44 >> 0] | 0) - e | 0;
      m = $e(g, 36, e, m, 2) | 0;
      h = b + 16 | 0;
      k[h >> 2] = -1;
      h = b + 20 | 0;
      k[h >> 2] = -1;
      k[b >> 2] = 13;
      k[d >> 2] = m;
      Ef(g, c);
      c = e + 1 | 0;
      c = c & 255;
      m = g + 44 | 0;
      i[m >> 0] = c;
      r = j;
      return ;
    }
    function pp(a, b) {
      a = a | 0;
      b = b | 0;
      var c = 0,
          d = 0,
          e = 0,
          f = 0,
          g = 0,
          h = 0,
          i = 0,
          j = 0,
          l = 0,
          m = 0,
          n = 0,
          o = 0;
      o = r;
      r = r + 64 | 0;
      f = o + 40 | 0;
      h = o;
      c = a + 48 | 0;
      i = k[c >> 2] | 0;
      d = a + 4 | 0;
      e = k[d >> 2] | 0;
      j = $e(i, 11, 0, 0, 0) | 0;
      g = h + 36 | 0;
      k[g >> 2] = 0;
      l = h + 28 | 0;
      k[l >> 2] = 0;
      m = h + 32 | 0;
      k[m >> 2] = 0;
      n = h + 24 | 0;
      k[n >> 2] = b;
      k[b + 16 >> 2] = -1;
      k[b + 20 >> 2] = -1;
      k[b >> 2] = 12;
      k[b + 8 >> 2] = j;
      k[h + 16 >> 2] = -1;
      k[h + 20 >> 2] = -1;
      k[h >> 2] = 0;
      k[h + 8 >> 2] = 0;
      rf(k[c >> 2] | 0, b);
      b = a + 16 | 0;
      if ((k[b >> 2] | 0) != 123)
        Nk(a, 123);
      Gg(a);
      a: do
        if ((k[b >> 2] | 0) != 125) {
          c = 0;
          b: while (1) {
            if ((c | 0) != 0 ? (rf(i, h), k[h >> 2] = 0, (k[g >> 2] | 0) == 50) : 0) {
              Ff(i, k[(k[n >> 2] | 0) + 8 >> 2] | 0, k[m >> 2] | 0, 50);
              k[g >> 2] = 0;
            }
            c: do
              switch (k[b >> 2] | 0) {
                case 91:
                  {
                    qp(a, h);
                    break;
                  }
                case 292:
                  if ((Hg(a) | 0) == 61) {
                    qp(a, h);
                    break c;
                  } else {
                    fp(a, h, 0) | 0;
                    k[m >> 2] = (k[m >> 2] | 0) + 1;
                    k[g >> 2] = (k[g >> 2] | 0) + 1;
                    break c;
                  }
                default:
                  {
                    fp(a, h, 0) | 0;
                    k[m >> 2] = (k[m >> 2] | 0) + 1;
                    k[g >> 2] = (k[g >> 2] | 0) + 1;
                  }
              }
 while (0);
            switch (k[b >> 2] | 0) {
              case 44:
                {
                  Gg(a);
                  break;
                }
              case 59:
                {
                  Gg(a);
                  break;
                }
              case 125:
                break a;
              default:
                break b;
            }
            if ((k[b >> 2] | 0) == 125)
              break a;
            c = k[h >> 2] | 0;
          }
          if ((k[d >> 2] | 0) == (e | 0))
            Nk(a, 125);
          else {
            d = k[a + 52 >> 2] | 0;
            b = Cg(a, 125) | 0;
            c = Cg(a, 123) | 0;
            k[f >> 2] = b;
            k[f + 4 >> 2] = c;
            k[f + 8 >> 2] = e;
            Dg(a, Ug(d, 1011946, f) | 0);
          }
        }
 while (0);
      Gg(a);
      b = k[g >> 2] | 0;
      d: do
        if (b) {
          switch (k[h >> 2] | 0) {
            case 14:
            case 13:
              {
                of(i, h, -1);
                Ff(i, k[(k[n >> 2] | 0) + 8 >> 2] | 0, k[m >> 2] | 0, -1);
                k[m >> 2] = (k[m >> 2] | 0) + -1;
                break d;
              }
            case 0:
              break;
            default:
              {
                rf(i, h);
                b = k[g >> 2] | 0;
              }
          }
          Ff(i, k[(k[n >> 2] | 0) + 8 >> 2] | 0, k[m >> 2] | 0, b);
        }
 while (0);
      n = k[(k[(k[i >> 2] | 0) + 48 >> 2] | 0) + (j << 2) >> 2] & 8388607;
      n = (Lg(k[m >> 2] | 0) | 0) << 23 | n;
      k[(k[(k[i >> 2] | 0) + 48 >> 2] | 0) + (j << 2) >> 2] = n;
      n = (Lg(k[l >> 2] | 0) | 0) << 14 & 8372224 | n & -8372225;
      k[(k[(k[i >> 2] | 0) + 48 >> 2] | 0) + (j << 2) >> 2] = n;
      r = o;
      return ;
    }
    function qp(a, b) {
      a = a | 0;
      b = b | 0;
      var c = 0,
          d = 0,
          e = 0,
          f = 0,
          g = 0,
          h = 0,
          j = 0,
          l = 0,
          m = 0;
      l = r;
      r = r + 48 | 0;
      h = l + 24 | 0;
      j = l;
      c = a + 48 | 0;
      d = k[c >> 2] | 0;
      e = d + 44 | 0;
      f = i[e >> 0] | 0;
      g = a + 16 | 0;
      do
        if ((k[g >> 2] | 0) != 292) {
          Gg(a);
          fp(a, h, 0) | 0;
          uf(k[c >> 2] | 0, h);
          if ((k[g >> 2] | 0) == 93) {
            Gg(a);
            break;
          } else
            Nk(a, 93);
        } else {
          m = k[a + 24 >> 2] | 0;
          Gg(a);
          c = mf(k[c >> 2] | 0, m) | 0;
          k[h + 16 >> 2] = -1;
          k[h + 20 >> 2] = -1;
          k[h >> 2] = 4;
          k[h + 8 >> 2] = c;
        }
 while (0);
      m = b + 28 | 0;
      k[m >> 2] = (k[m >> 2] | 0) + 1;
      if ((k[g >> 2] | 0) == 61) {
        Gg(a);
        m = vf(d, h) | 0;
        fp(a, j, 0) | 0;
        a = k[(k[b + 24 >> 2] | 0) + 8 >> 2] | 0;
        $e(d, 10, a, m, vf(d, j) | 0) | 0;
        i[e >> 0] = f;
        r = l;
        return ;
      } else
        Nk(a, 61);
    }
    function rp(a) {
      a = a | 0;
      var b = 0,
          c = 0,
          d = 0,
          e = 0,
          f = 0,
          g = 0,
          h = 0,
          j = 0,
          m = 0,
          n = 0,
          o = 0;
      o = k[a >> 2] | 0;
      n = a + 60 | 0;
      b = k[n >> 2] | 0;
      e = b + 4 | 0;
      f = k[e >> 2] | 0;
      g = b + 8 | 0;
      h = k[g >> 2] | 0;
      do
        if ((f + 1 | 0) >>> 0 > h >>> 0)
          if (h >>> 0 > 2147483646)
            Jk(a, 1012383, 0);
          else {
            d = h << 1;
            c = Kg(k[a + 52 >> 2] | 0, k[b >> 2] | 0, h, d) | 0;
            k[b >> 2] = c;
            k[g >> 2] = d;
            d = k[e >> 2] | 0;
            break;
          }
        else {
          d = f;
          c = k[b >> 2] | 0;
        }
 while (0);
      k[e >> 2] = d + 1;
      i[c + d >> 0] = o;
      m = a + 56 | 0;
      c = k[m >> 2] | 0;
      j = k[c >> 2] | 0;
      k[c >> 2] = j + -1;
      if (!j)
        c = Sh(c) | 0;
      else {
        j = c + 4 | 0;
        c = k[j >> 2] | 0;
        k[j >> 2] = c + 1;
        c = l[c >> 0] | 0;
      }
      k[a >> 2] = c;
      if ((c | 0) != 61) {
        n = c;
        a = 0;
        o = (n | 0) != (o | 0);
        o = o << 31 >> 31;
        o = o ^ a;
        return o | 0;
      }
      j = a + 52 | 0;
      b = 0;
      while (1) {
        e = k[n >> 2] | 0;
        c = e + 4 | 0;
        f = k[c >> 2] | 0;
        h = e + 8 | 0;
        g = k[h >> 2] | 0;
        if ((f + 1 | 0) >>> 0 > g >>> 0) {
          if (g >>> 0 > 2147483646) {
            d = 14;
            break;
          }
          f = g << 1;
          d = Kg(k[j >> 2] | 0, k[e >> 2] | 0, g, f) | 0;
          k[e >> 2] = d;
          k[h >> 2] = f;
          f = k[c >> 2] | 0;
        } else
          d = k[e >> 2] | 0;
        k[c >> 2] = f + 1;
        i[d + f >> 0] = 61;
        d = k[m >> 2] | 0;
        h = k[d >> 2] | 0;
        k[d >> 2] = h + -1;
        if (!h)
          c = Sh(d) | 0;
        else {
          h = d + 4 | 0;
          c = k[h >> 2] | 0;
          k[h >> 2] = c + 1;
          c = l[c >> 0] | 0;
        }
        k[a >> 2] = c;
        b = b + 1 | 0;
        if ((c | 0) != 61) {
          d = 20;
          break;
        }
      }
      if ((d | 0) == 14)
        Jk(a, 1012383, 0);
      else if ((d | 0) == 20) {
        o = (c | 0) != (o | 0);
        o = o << 31 >> 31;
        o = o ^ b;
        return o | 0;
      }
      return 0;
    }
    function sp(a, b, c) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      var d = 0,
          e = 0,
          f = 0,
          g = 0,
          h = 0,
          j = 0,
          m = 0,
          n = 0,
          o = 0,
          p = 0,
          q = 0,
          s = 0,
          t = 0,
          u = 0,
          v = 0,
          w = 0,
          x = 0,
          y = 0,
          z = 0,
          A = 0;
      A = r;
      r = r + 16 | 0;
      v = A;
      t = a + 4 | 0;
      u = k[t >> 2] | 0;
      h = k[a >> 2] | 0;
      z = a + 60 | 0;
      f = k[z >> 2] | 0;
      e = f + 4 | 0;
      d = k[e >> 2] | 0;
      m = f + 8 | 0;
      n = k[m >> 2] | 0;
      do
        if ((d + 1 | 0) >>> 0 > n >>> 0)
          if (n >>> 0 > 2147483646)
            Jk(a, 1012383, 0);
          else {
            j = n << 1;
            g = Kg(k[a + 52 >> 2] | 0, k[f >> 2] | 0, n, j) | 0;
            k[f >> 2] = g;
            k[m >> 2] = j;
            j = k[e >> 2] | 0;
            break;
          }
        else {
          j = d;
          g = k[f >> 2] | 0;
        }
 while (0);
      k[e >> 2] = j + 1;
      i[g + j >> 0] = h;
      s = a + 56 | 0;
      h = k[s >> 2] | 0;
      q = k[h >> 2] | 0;
      k[h >> 2] = q + -1;
      if (!q)
        h = Sh(h) | 0;
      else {
        q = h + 4 | 0;
        h = k[q >> 2] | 0;
        k[q >> 2] = h + 1;
        h = l[h >> 0] | 0;
      }
      k[a >> 2] = h;
      switch (h | 0) {
        case 13:
        case 10:
          {
            g = k[s >> 2] | 0;
            q = k[g >> 2] | 0;
            k[g >> 2] = q + -1;
            if (!q)
              g = Sh(g) | 0;
            else {
              q = g + 4 | 0;
              g = k[q >> 2] | 0;
              k[q >> 2] = g + 1;
              g = l[g >> 0] | 0;
            }
            k[a >> 2] = g;
            switch (g | 0) {
              case 13:
              case 10:
                {
                  if ((g | 0) != (h | 0)) {
                    h = k[s >> 2] | 0;
                    q = k[h >> 2] | 0;
                    k[h >> 2] = q + -1;
                    if (!q)
                      h = Sh(h) | 0;
                    else {
                      q = h + 4 | 0;
                      h = k[q >> 2] | 0;
                      k[q >> 2] = h + 1;
                      h = l[h >> 0] | 0;
                    }
                    k[a >> 2] = h;
                  }
                  break;
                }
              default:
                h = g;
            }
            q = (k[t >> 2] | 0) + 1 | 0;
            k[t >> 2] = q;
            if ((q | 0) == 2147483647)
              Jk(a, 1012328, 0);
            else
              o = h;
            break;
          }
        default:
          o = h;
      }
      p = (b | 0) == 0;
      q = a + 52 | 0;
      h = o;
      a: while (1) {
        b: do
          if (p)
            while (1) {
              switch (h | 0) {
                case 13:
                case 10:
                  break b;
                case 93:
                  {
                    w = 30;
                    break b;
                  }
                case -1:
                  {
                    w = 29;
                    break a;
                  }
                default:
                  {}
              }
              h = k[s >> 2] | 0;
              o = k[h >> 2] | 0;
              k[h >> 2] = o + -1;
              if (!o)
                h = Sh(h) | 0;
              else {
                o = h + 4 | 0;
                h = k[o >> 2] | 0;
                k[o >> 2] = h + 1;
                h = l[h >> 0] | 0;
              }
              k[a >> 2] = h;
            }
          else
            while (1) {
              switch (h | 0) {
                case 13:
                case 10:
                  break b;
                case 93:
                  {
                    w = 30;
                    break b;
                  }
                case -1:
                  {
                    w = 29;
                    break a;
                  }
                default:
                  {}
              }
              n = k[z >> 2] | 0;
              m = n + 4 | 0;
              g = k[m >> 2] | 0;
              j = n + 8 | 0;
              f = k[j >> 2] | 0;
              if ((g + 1 | 0) >>> 0 > f >>> 0) {
                if (f >>> 0 > 2147483646) {
                  w = 61;
                  break a;
                }
                g = f << 1;
                o = Kg(k[q >> 2] | 0, k[n >> 2] | 0, f, g) | 0;
                k[n >> 2] = o;
                k[j >> 2] = g;
                g = k[m >> 2] | 0;
                j = o;
              } else
                j = k[n >> 2] | 0;
              k[m >> 2] = g + 1;
              i[j + g >> 0] = h;
              h = k[s >> 2] | 0;
              o = k[h >> 2] | 0;
              k[h >> 2] = o + -1;
              if (!o)
                h = Sh(h) | 0;
              else {
                o = h + 4 | 0;
                h = k[o >> 2] | 0;
                k[o >> 2] = h + 1;
                h = l[h >> 0] | 0;
              }
              k[a >> 2] = h;
            }
 while (0);
        if ((w | 0) == 30) {
          w = 0;
          o = (rp(a) | 0) == (c | 0);
          h = k[a >> 2] | 0;
          if (o) {
            w = 31;
            break;
          } else
            continue;
        }
        f = k[z >> 2] | 0;
        n = f + 4 | 0;
        h = k[n >> 2] | 0;
        j = f + 8 | 0;
        g = k[j >> 2] | 0;
        if ((h + 1 | 0) >>> 0 > g >>> 0) {
          if (g >>> 0 > 2147483646) {
            w = 43;
            break;
          }
          h = g << 1;
          o = Kg(k[q >> 2] | 0, k[f >> 2] | 0, g, h) | 0;
          k[f >> 2] = o;
          k[j >> 2] = h;
          h = k[n >> 2] | 0;
          j = o;
        } else
          j = k[f >> 2] | 0;
        k[n >> 2] = h + 1;
        i[j + h >> 0] = 10;
        h = k[a >> 2] | 0;
        g = k[s >> 2] | 0;
        o = k[g >> 2] | 0;
        k[g >> 2] = o + -1;
        if (!o)
          g = Sh(g) | 0;
        else {
          o = g + 4 | 0;
          g = k[o >> 2] | 0;
          k[o >> 2] = g + 1;
          g = l[g >> 0] | 0;
        }
        k[a >> 2] = g;
        switch (g | 0) {
          case 13:
          case 10:
            {
              if ((g | 0) != (h | 0)) {
                h = k[s >> 2] | 0;
                o = k[h >> 2] | 0;
                k[h >> 2] = o + -1;
                if (!o)
                  h = Sh(h) | 0;
                else {
                  o = h + 4 | 0;
                  h = k[o >> 2] | 0;
                  k[o >> 2] = h + 1;
                  h = l[h >> 0] | 0;
                }
                k[a >> 2] = h;
              }
              break;
            }
          default:
            h = g;
        }
        o = (k[t >> 2] | 0) + 1 | 0;
        k[t >> 2] = o;
        if ((o | 0) == 2147483647) {
          w = 55;
          break;
        }
        if (!p)
          continue;
        k[(k[z >> 2] | 0) + 4 >> 2] = 0;
      }
      if ((w | 0) == 29) {
        A = k[q >> 2] | 0;
        k[v >> 2] = (b | 0) != 0 ? 1012571 : 1012578;
        k[v + 4 >> 2] = u;
        Jk(a, Ug(A, 1012586, v) | 0, 289);
      } else if ((w | 0) == 31) {
        g = k[z >> 2] | 0;
        f = g + 4 | 0;
        e = k[f >> 2] | 0;
        d = g + 8 | 0;
        j = k[d >> 2] | 0;
        do
          if ((e + 1 | 0) >>> 0 > j >>> 0)
            if (j >>> 0 > 2147483646)
              Jk(a, 1012383, 0);
            else {
              x = j << 1;
              y = Kg(k[q >> 2] | 0, k[g >> 2] | 0, j, x) | 0;
              k[g >> 2] = y;
              k[d >> 2] = x;
              x = k[f >> 2] | 0;
              break;
            }
          else {
            x = e;
            y = k[g >> 2] | 0;
          }
 while (0);
        k[f >> 2] = x + 1;
        i[y + x >> 0] = h;
        g = k[s >> 2] | 0;
        y = k[g >> 2] | 0;
        k[g >> 2] = y + -1;
        if (!y)
          f = Sh(g) | 0;
        else {
          y = g + 4 | 0;
          f = k[y >> 2] | 0;
          k[y >> 2] = f + 1;
          f = l[f >> 0] | 0;
        }
        k[a >> 2] = f;
        if (p) {
          r = A;
          return ;
        }
        h = k[z >> 2] | 0;
        d = c + 2 | 0;
        g = k[q >> 2] | 0;
        d = hh(g, (k[h >> 2] | 0) + d | 0, (k[h + 4 >> 2] | 0) - (d << 1) | 0) | 0;
        h = g + 8 | 0;
        e = k[h >> 2] | 0;
        k[h >> 2] = e + 16;
        k[e >> 2] = d;
        k[e + 8 >> 2] = l[d + 4 >> 0] | 0 | 64;
        e = nh(g, k[a + 64 >> 2] | 0, (k[h >> 2] | 0) + -16 | 0) | 0;
        f = e + 8 | 0;
        if (!(k[f >> 2] | 0)) {
          k[e >> 2] = 1;
          k[f >> 2] = 1;
          if ((k[(k[g + 12 >> 2] | 0) + 12 >> 2] | 0) > 0)
            zg(g);
        } else
          d = k[e + 16 >> 2] | 0;
        k[h >> 2] = (k[h >> 2] | 0) + -16;
        k[b >> 2] = d;
        r = A;
        return ;
      } else if ((w | 0) == 43)
        Jk(a, 1012383, 0);
      else if ((w | 0) == 55)
        Jk(a, 1012328, 0);
      else if ((w | 0) == 61)
        Jk(a, 1012383, 0);
    }
    function tp(a, b) {
      a = a | 0;
      b = b | 0;
      var c = 0,
          d = 0,
          e = 0,
          f = 0,
          g = 0,
          h = 0,
          j = 0,
          m = 0,
          n = 0,
          o = 0,
          q = 0,
          s = 0,
          t = 0,
          u = 0,
          v = 0,
          w = 0,
          x = 0,
          y = 0,
          z = 0,
          A = 0,
          B = 0,
          C = 0,
          D = 0;
      D = r;
      r = r + 16 | 0;
      C = D;
      o = k[a >> 2] | 0;
      A = a + 60 | 0;
      h = k[A >> 2] | 0;
      g = h + 4 | 0;
      f = k[g >> 2] | 0;
      c = h + 8 | 0;
      n = k[c >> 2] | 0;
      do
        if ((f + 1 | 0) >>> 0 > n >>> 0)
          if (n >>> 0 > 2147483646)
            Jk(a, 1012383, 0);
          else {
            m = n << 1;
            j = Kg(k[a + 52 >> 2] | 0, k[h >> 2] | 0, n, m) | 0;
            k[h >> 2] = j;
            k[c >> 2] = m;
            m = k[g >> 2] | 0;
            break;
          }
        else {
          m = f;
          j = k[h >> 2] | 0;
        }
 while (0);
      k[g >> 2] = m + 1;
      i[j + m >> 0] = o;
      u = a + 56 | 0;
      g = k[u >> 2] | 0;
      t = k[g >> 2] | 0;
      k[g >> 2] = t + -1;
      if (!t)
        f = Sh(g) | 0;
      else {
        t = g + 4 | 0;
        f = k[t >> 2] | 0;
        k[t >> 2] = f + 1;
        f = l[f >> 0] | 0;
      }
      k[a >> 2] = f;
      a: do
        if ((o | 0) == 48) {
          switch (f | 0) {
            case 88:
            case 120:
              break;
            default:
              {
                t = 1012548;
                break a;
              }
          }
          g = k[A >> 2] | 0;
          c = g + 4 | 0;
          h = k[c >> 2] | 0;
          j = g + 8 | 0;
          m = k[j >> 2] | 0;
          do
            if ((h + 1 | 0) >>> 0 > m >>> 0)
              if (m >>> 0 > 2147483646)
                Jk(a, 1012383, 0);
              else {
                q = m << 1;
                s = Kg(k[a + 52 >> 2] | 0, k[g >> 2] | 0, m, q) | 0;
                k[g >> 2] = s;
                k[j >> 2] = q;
                q = k[c >> 2] | 0;
                break;
              }
            else {
              q = h;
              s = k[g >> 2] | 0;
            }
 while (0);
          k[c >> 2] = q + 1;
          i[s + q >> 0] = f;
          f = k[u >> 2] | 0;
          t = k[f >> 2] | 0;
          k[f >> 2] = t + -1;
          if (!t)
            f = Sh(f) | 0;
          else {
            t = f + 4 | 0;
            f = k[t >> 2] | 0;
            k[t >> 2] = f + 1;
            f = l[f >> 0] | 0;
          }
          k[a >> 2] = f;
          t = 1012551;
        } else
          t = 1012548;
 while (0);
      s = a + 52 | 0;
      q = t + 1 | 0;
      b: while (1) {
        if (!((f | 0) != (i[t >> 0] | 0) ? (f | 0) != (i[q >> 0] | 0) : 0))
          x = 23;
        c: do
          if ((x | 0) == 23) {
            x = 0;
            h = k[A >> 2] | 0;
            c = h + 4 | 0;
            m = k[c >> 2] | 0;
            n = h + 8 | 0;
            j = k[n >> 2] | 0;
            if ((m + 1 | 0) >>> 0 > j >>> 0) {
              if (j >>> 0 > 2147483646) {
                x = 26;
                break b;
              }
              m = j << 1;
              g = Kg(k[s >> 2] | 0, k[h >> 2] | 0, j, m) | 0;
              k[h >> 2] = g;
              k[n >> 2] = m;
              m = k[c >> 2] | 0;
            } else
              g = k[h >> 2] | 0;
            k[c >> 2] = m + 1;
            i[g + m >> 0] = f;
            g = k[u >> 2] | 0;
            o = k[g >> 2] | 0;
            k[g >> 2] = o + -1;
            if (!o)
              f = Sh(g) | 0;
            else {
              o = g + 4 | 0;
              f = k[o >> 2] | 0;
              k[o >> 2] = f + 1;
              f = l[f >> 0] | 0;
            }
            k[a >> 2] = f;
            switch (f | 0) {
              case 43:
              case 45:
                break;
              default:
                break c;
            }
            n = k[A >> 2] | 0;
            h = n + 4 | 0;
            c = k[h >> 2] | 0;
            m = n + 8 | 0;
            j = k[m >> 2] | 0;
            if ((c + 1 | 0) >>> 0 > j >>> 0) {
              if (j >>> 0 > 2147483646) {
                x = 35;
                break b;
              }
              c = j << 1;
              g = Kg(k[s >> 2] | 0, k[n >> 2] | 0, j, c) | 0;
              k[n >> 2] = g;
              k[m >> 2] = c;
              c = k[h >> 2] | 0;
            } else
              g = k[n >> 2] | 0;
            k[h >> 2] = c + 1;
            i[g + c >> 0] = f;
            f = k[u >> 2] | 0;
            o = k[f >> 2] | 0;
            k[f >> 2] = o + -1;
            if (!o)
              f = Sh(f) | 0;
            else {
              o = f + 4 | 0;
              f = k[o >> 2] | 0;
              k[o >> 2] = f + 1;
              f = l[f >> 0] | 0;
            }
            k[a >> 2] = f;
          }
 while (0);
        do
          if (!(i[813362 + (f + 1) >> 0] & 16)) {
            g = k[A >> 2] | 0;
            o = g + 4 | 0;
            n = k[o >> 2] | 0;
            m = g + 8 | 0;
            j = k[m >> 2] | 0;
            h = (n + 1 | 0) >>> 0 > j >>> 0;
            if ((f | 0) != 46) {
              x = 60;
              break b;
            }
            if (h) {
              if (j >>> 0 > 2147483646) {
                x = 54;
                break b;
              }
              f = j << 1;
              n = Kg(k[s >> 2] | 0, k[g >> 2] | 0, j, f) | 0;
              k[g >> 2] = n;
              k[m >> 2] = f;
              f = k[o >> 2] | 0;
              g = n;
            } else {
              f = n;
              g = k[g >> 2] | 0;
            }
            k[o >> 2] = f + 1;
            i[g + f >> 0] = 46;
            f = k[u >> 2] | 0;
            o = k[f >> 2] | 0;
            k[f >> 2] = o + -1;
            if (!o) {
              f = Sh(f) | 0;
              break;
            } else {
              o = f + 4 | 0;
              f = k[o >> 2] | 0;
              k[o >> 2] = f + 1;
              f = l[f >> 0] | 0;
              break;
            }
          } else {
            n = k[A >> 2] | 0;
            h = n + 4 | 0;
            c = k[h >> 2] | 0;
            m = n + 8 | 0;
            j = k[m >> 2] | 0;
            if ((c + 1 | 0) >>> 0 > j >>> 0) {
              if (j >>> 0 > 2147483646) {
                x = 45;
                break b;
              }
              c = j << 1;
              g = Kg(k[s >> 2] | 0, k[n >> 2] | 0, j, c) | 0;
              k[n >> 2] = g;
              k[m >> 2] = c;
              c = k[h >> 2] | 0;
            } else
              g = k[n >> 2] | 0;
            k[h >> 2] = c + 1;
            i[g + c >> 0] = f;
            f = k[u >> 2] | 0;
            o = k[f >> 2] | 0;
            k[f >> 2] = o + -1;
            if (!o) {
              f = Sh(f) | 0;
              break;
            } else {
              o = f + 4 | 0;
              f = k[o >> 2] | 0;
              k[o >> 2] = f + 1;
              f = l[f >> 0] | 0;
              break;
            }
          }
 while (0);
        k[a >> 2] = f;
      }
      if ((x | 0) == 26)
        Jk(a, 1012383, 0);
      else if ((x | 0) == 35)
        Jk(a, 1012383, 0);
      else if ((x | 0) == 45)
        Jk(a, 1012383, 0);
      else if ((x | 0) == 54)
        Jk(a, 1012383, 0);
      else if ((x | 0) == 60) {
        do
          if (h)
            if (j >>> 0 > 2147483646)
              Jk(a, 1012383, 0);
            else {
              v = j << 1;
              w = Kg(k[s >> 2] | 0, k[g >> 2] | 0, j, v) | 0;
              k[g >> 2] = w;
              k[m >> 2] = v;
              v = k[o >> 2] | 0;
              break;
            }
          else {
            v = n;
            w = k[g >> 2] | 0;
          }
 while (0);
        k[o >> 2] = v + 1;
        i[w + v >> 0] = 0;
        g = a + 80 | 0;
        f = i[g >> 0] | 0;
        if (f << 24 >> 24 != 46 ? (y = k[A >> 2] | 0, d = k[y + 4 >> 2] | 0, y = k[y >> 2] | 0, (d | 0) != 0) : 0)
          do {
            d = d + -1 | 0;
            c = y + d | 0;
            if ((i[c >> 0] | 0) == 46)
              i[c >> 0] = f;
          } while ((d | 0) != 0);
        if (!(Qg(k[k[A >> 2] >> 2] | 0, C) | 0)) {
          c = i[g >> 0] | 0;
          f = Cb() | 0;
          f = i[k[f >> 2] >> 0] | 0;
          i[g >> 0] = f;
          if (c << 24 >> 24 != f << 24 >> 24 ? (z = k[A >> 2] | 0, e = k[z + 4 >> 2] | 0, z = k[z >> 2] | 0, (e | 0) != 0) : 0)
            do {
              e = e + -1 | 0;
              d = z + e | 0;
              if ((i[d >> 0] | 0) == c << 24 >> 24)
                i[d >> 0] = f;
            } while ((e | 0) != 0);
          if (!(Qg(k[k[A >> 2] >> 2] | 0, C) | 0)) {
            e = i[g >> 0] | 0;
            if (e << 24 >> 24 == 46)
              Jk(a, 1012554, 290);
            d = k[A >> 2] | 0;
            c = k[d + 4 >> 2] | 0;
            d = k[d >> 2] | 0;
            if (!c)
              Jk(a, 1012554, 290);
            else
              B = c;
            do {
              B = B + -1 | 0;
              c = d + B | 0;
              if ((i[c >> 0] | 0) == e << 24 >> 24)
                i[c >> 0] = 46;
            } while ((B | 0) != 0);
            Jk(a, 1012554, 290);
          }
        }
        if ((k[C + 8 >> 2] | 0) == 19) {
          a = C;
          C = k[a + 4 >> 2] | 0;
          k[b >> 2] = k[a >> 2];
          k[b + 4 >> 2] = C;
          b = 291;
          r = D;
          return b | 0;
        } else {
          p[b >> 3] = +p[C >> 3];
          b = 290;
          r = D;
          return b | 0;
        }
      }
      return 0;
    }
    function up(a) {
      a = a | 0;
      var b = 0;
      b = k[a + 244 >> 2] | 0;
      if ((b | 0) != 0 ? (i[b + 5 >> 0] & 3) != 0 : 0)
        Fk(a, b);
      b = k[a + 248 >> 2] | 0;
      if ((b | 0) != 0 ? (i[b + 5 >> 0] & 3) != 0 : 0)
        Fk(a, b);
      b = k[a + 252 >> 2] | 0;
      if ((b | 0) != 0 ? (i[b + 5 >> 0] & 3) != 0 : 0)
        Fk(a, b);
      b = k[a + 256 >> 2] | 0;
      if ((b | 0) != 0 ? (i[b + 5 >> 0] & 3) != 0 : 0)
        Fk(a, b);
      b = k[a + 260 >> 2] | 0;
      if ((b | 0) != 0 ? (i[b + 5 >> 0] & 3) != 0 : 0)
        Fk(a, b);
      b = k[a + 264 >> 2] | 0;
      if ((b | 0) != 0 ? (i[b + 5 >> 0] & 3) != 0 : 0)
        Fk(a, b);
      b = k[a + 268 >> 2] | 0;
      if ((b | 0) != 0 ? (i[b + 5 >> 0] & 3) != 0 : 0)
        Fk(a, b);
      b = k[a + 272 >> 2] | 0;
      if ((b | 0) != 0 ? (i[b + 5 >> 0] & 3) != 0 : 0)
        Fk(a, b);
      b = k[a + 276 >> 2] | 0;
      if (!b)
        return ;
      if (!(i[b + 5 >> 0] & 3))
        return ;
      Fk(a, b);
      return ;
    }
    function vp(a) {
      a = a | 0;
      var b = 0,
          c = 0,
          d = 0,
          e = 0,
          f = 0,
          g = 0,
          h = 0,
          j = 0,
          m = 0,
          n = 0,
          o = 0,
          p = 0,
          q = 0,
          r = 0,
          s = 0,
          t = 0,
          u = 0;
      g = a + 76 | 0;
      u = k[g >> 2] | 0;
      d = u + 5 | 0;
      h = l[d >> 0] | 0;
      i[d >> 0] = h | 4;
      switch (l[u + 4 >> 0] | 0) {
        case 5:
          {
            o = u + 28 | 0;
            k[g >> 2] = k[o >> 2];
            h = u + 24 | 0;
            e = k[h >> 2] | 0;
            do
              if (e) {
                if (!(i[e + 6 >> 0] & 8)) {
                  f = xh(e, 3, k[a + 160 >> 2] | 0) | 0;
                  e = k[h >> 2] | 0;
                  if (e)
                    r = 5;
                } else {
                  f = 0;
                  r = 5;
                }
                if ((r | 0) == 5)
                  if (i[e + 5 >> 0] & 3)
                    Fk(a, e);
                if (((f | 0) != 0 ? (k[f + 8 >> 2] & 15 | 0) == 4 : 0) ? (b = (k[f >> 2] | 0) + 24 | 0, c = Op(b, 107) | 0, c = (c | 0) != 0, b = (Op(b, 118) | 0) != 0, c | b) : 0) {
                  i[d >> 0] = l[d >> 0] & 251;
                  if (c)
                    if (b) {
                      t = a + 92 | 0;
                      k[o >> 2] = k[t >> 2];
                      k[t >> 2] = u;
                      break;
                    } else {
                      wp(a, u) | 0;
                      break;
                    }
                  t = i[u + 7 >> 0] | 0;
                  e = k[u + 16 >> 2] | 0;
                  h = e + (1 << (t & 255) << 5) | 0;
                  c = (k[u + 8 >> 2] | 0) != 0 & 1;
                  if (t << 24 >> 24 != 31)
                    do {
                      f = e + 8 | 0;
                      d = e + 24 | 0;
                      b = (k[d >> 2] & 64 | 0) == 0;
                      if (!(k[f >> 2] | 0)) {
                        if (!b ? (i[(k[e + 16 >> 2] | 0) + 5 >> 0] & 3) != 0 : 0)
                          k[d >> 2] = 10;
                      } else {
                        if (!b ? (q = k[e + 16 >> 2] | 0, (i[q + 5 >> 0] & 3) != 0) : 0)
                          Fk(a, q);
                        if (!c) {
                          d = k[f >> 2] | 0;
                          do
                            if (d & 64) {
                              c = k[e >> 2] | 0;
                              if ((d & 15 | 0) != 4) {
                                c = l[c + 5 >> 0] & 3;
                                break;
                              }
                              if ((c | 0) != 0 ? (i[c + 5 >> 0] & 3) != 0 : 0) {
                                Fk(a, c);
                                c = 0;
                              } else
                                c = 0;
                            } else
                              c = 0;
 while (0);
                          c = (c | 0) != 0 & 1;
                        }
                      }
                      e = e + 32 | 0;
                    } while (e >>> 0 < h >>> 0);
                  if (!(i[a + 61 >> 0] | 0)) {
                    t = a + 80 | 0;
                    k[o >> 2] = k[t >> 2];
                    k[t >> 2] = u;
                    break;
                  }
                  if (c) {
                    t = a + 84 | 0;
                    k[o >> 2] = k[t >> 2];
                    k[t >> 2] = u;
                  }
                } else
                  r = 35;
              } else
                r = 35;
 while (0);
            if ((r | 0) == 35) {
              d = u + 16 | 0;
              c = k[d >> 2] | 0;
              j = c + (1 << l[u + 7 >> 0] << 5) | 0;
              b = u + 8 | 0;
              f = k[b >> 2] | 0;
              if (f) {
                g = u + 12 | 0;
                h = 0;
                do {
                  e = k[g >> 2] | 0;
                  if ((k[e + (h << 4) + 8 >> 2] & 64 | 0) != 0 ? (p = k[e + (h << 4) >> 2] | 0, (i[p + 5 >> 0] & 3) != 0) : 0) {
                    Fk(a, p);
                    f = k[b >> 2] | 0;
                  }
                  h = h + 1 | 0;
                } while (h >>> 0 < f >>> 0);
                c = k[d >> 2] | 0;
              }
              if (c >>> 0 < j >>> 0)
                do {
                  e = c + 8 | 0;
                  b = k[e >> 2] | 0;
                  d = c + 24 | 0;
                  f = (k[d >> 2] & 64 | 0) == 0;
                  if (!b) {
                    if (!f ? (i[(k[c + 16 >> 2] | 0) + 5 >> 0] & 3) != 0 : 0)
                      k[d >> 2] = 10;
                  } else {
                    if (!f ? (s = k[c + 16 >> 2] | 0, (i[s + 5 >> 0] & 3) != 0) : 0) {
                      Fk(a, s);
                      b = k[e >> 2] | 0;
                    }
                    if ((b & 64 | 0) != 0 ? (t = k[c >> 2] | 0, (i[t + 5 >> 0] & 3) != 0) : 0)
                      Fk(a, t);
                  }
                  c = c + 32 | 0;
                } while (c >>> 0 < j >>> 0);
            }
            b = (k[u + 8 >> 2] << 4) + 32 + (32 << l[u + 7 >> 0]) | 0;
            break;
          }
        case 6:
          {
            k[g >> 2] = k[u + 8 >> 2];
            b = k[u + 12 >> 2] | 0;
            if ((b | 0) != 0 ? (i[b + 5 >> 0] & 3) != 0 : 0)
              Fk(a, b);
            g = u + 6 | 0;
            c = i[g >> 0] | 0;
            if (!(c << 24 >> 24))
              b = c & 255;
            else {
              h = a + 61 | 0;
              e = 0;
              do {
                d = k[u + 16 + (e << 2) >> 2] | 0;
                do
                  if (d) {
                    f = k[d >> 2] | 0;
                    d = d + 8 | 0;
                    if ((f | 0) != (d | 0) ? (i[h >> 0] | 0) != 8 : 0) {
                      k[d + 4 >> 2] = 1;
                      break;
                    }
                    if ((k[f + 8 >> 2] & 64 | 0) != 0 ? (o = k[f >> 2] | 0, (i[o + 5 >> 0] & 3) != 0) : 0) {
                      Fk(a, o);
                      c = i[g >> 0] | 0;
                    }
                  }
 while (0);
                e = e + 1 | 0;
                b = c & 255;
              } while ((e | 0) < (b | 0));
            }
            b = (b << 2) + 16 | 0;
            break;
          }
        case 38:
          {
            k[g >> 2] = k[u + 8 >> 2];
            e = u + 6 | 0;
            b = i[e >> 0] | 0;
            if (!(b << 24 >> 24))
              b = b & 255;
            else {
              d = 0;
              while (1) {
                if ((k[u + 16 + (d << 4) + 8 >> 2] & 64 | 0) != 0 ? (j = k[u + 16 + (d << 4) >> 2] | 0, (i[j + 5 >> 0] & 3) != 0) : 0) {
                  Fk(a, j);
                  c = i[e >> 0] | 0;
                } else
                  c = b;
                d = d + 1 | 0;
                b = c & 255;
                if ((d | 0) >= (b | 0))
                  break;
                else
                  b = c;
              }
            }
            b = (b << 4) + 16 | 0;
            break;
          }
        case 8:
          {
            b = u + 36 | 0;
            k[g >> 2] = k[b >> 2];
            e = a + 80 | 0;
            k[b >> 2] = k[e >> 2];
            k[e >> 2] = u;
            i[d >> 0] = h & 251;
            e = u + 28 | 0;
            b = k[e >> 2] | 0;
            if (!b)
              b = 1;
            else {
              f = u + 8 | 0;
              c = k[f >> 2] | 0;
              if (b >>> 0 < c >>> 0)
                do {
                  if ((k[b + 8 >> 2] & 64 | 0) != 0 ? (m = k[b >> 2] | 0, (i[m + 5 >> 0] & 3) != 0) : 0) {
                    Fk(a, m);
                    c = k[f >> 2] | 0;
                  }
                  b = b + 16 | 0;
                } while (b >>> 0 < c >>> 0);
              if ((i[a + 61 >> 0] | 0) == 8) {
                c = (k[e >> 2] | 0) + (k[u + 92 >> 2] << 4) | 0;
                if (b >>> 0 < c >>> 0)
                  do {
                    k[b + 8 >> 2] = 0;
                    b = b + 16 | 0;
                  } while (b >>> 0 < c >>> 0);
                b = u + 40 | 0;
                if ((k[b >> 2] | 0) == (u | 0) ? (k[u + 32 >> 2] | 0) != 0 : 0) {
                  t = a + 104 | 0;
                  k[b >> 2] = k[t >> 2];
                  k[t >> 2] = u;
                }
              } else if ((i[a + 62 >> 0] | 0) != 1)
                _f(u);
              b = (k[u + 92 >> 2] << 4) + 112 | 0;
            }
            break;
          }
        case 9:
          {
            k[g >> 2] = k[u + 76 >> 2];
            b = u + 68 | 0;
            t = k[b >> 2] | 0;
            if ((t | 0) != 0 ? (i[t + 5 >> 0] & 3) != 0 : 0)
              k[b >> 2] = 0;
            b = k[u + 72 >> 2] | 0;
            if ((b | 0) != 0 ? (i[b + 5 >> 0] & 3) != 0 : 0)
              Fk(a, b);
            p = u + 16 | 0;
            c = k[p >> 2] | 0;
            if ((c | 0) > 0) {
              f = u + 44 | 0;
              e = 0;
              do {
                b = k[f >> 2] | 0;
                if ((k[b + (e << 4) + 8 >> 2] & 64 | 0) != 0 ? (n = k[b + (e << 4) >> 2] | 0, (i[n + 5 >> 0] & 3) != 0) : 0) {
                  Fk(a, n);
                  c = k[p >> 2] | 0;
                }
                e = e + 1 | 0;
              } while ((e | 0) < (c | 0));
            }
            o = u + 12 | 0;
            c = k[o >> 2] | 0;
            if ((c | 0) > 0) {
              f = u + 64 | 0;
              e = 0;
              do {
                b = k[(k[f >> 2] | 0) + (e << 3) >> 2] | 0;
                if ((b | 0) != 0 ? (i[b + 5 >> 0] & 3) != 0 : 0) {
                  Fk(a, b);
                  c = k[o >> 2] | 0;
                }
                e = e + 1 | 0;
              } while ((e | 0) < (c | 0));
            }
            g = u + 28 | 0;
            b = k[g >> 2] | 0;
            if ((b | 0) > 0) {
              d = u + 52 | 0;
              f = 0;
              do {
                e = k[(k[d >> 2] | 0) + (f << 2) >> 2] | 0;
                if ((e | 0) != 0 ? (i[e + 5 >> 0] & 3) != 0 : 0) {
                  Fk(a, e);
                  b = k[g >> 2] | 0;
                }
                f = f + 1 | 0;
              } while ((f | 0) < (b | 0));
            }
            h = u + 32 | 0;
            c = k[h >> 2] | 0;
            if ((c | 0) > 0) {
              d = u + 60 | 0;
              e = 0;
              do {
                f = k[(k[d >> 2] | 0) + (e * 12 | 0) >> 2] | 0;
                if ((f | 0) != 0 ? (i[f + 5 >> 0] & 3) != 0 : 0) {
                  Fk(a, f);
                  c = k[h >> 2] | 0;
                }
                e = e + 1 | 0;
              } while ((e | 0) < (c | 0));
              b = k[g >> 2] | 0;
            }
            b = (c * 12 | 0) + 80 + (k[p >> 2] << 4) + (k[o >> 2] << 3) + ((k[u + 20 >> 2] | 0) + b + (k[u + 24 >> 2] | 0) << 2) | 0;
            break;
          }
        default:
          return ;
      }
      a = a + 16 | 0;
      k[a >> 2] = (k[a >> 2] | 0) + b;
      return ;
    }
    function wp(a, b) {
      a = a | 0;
      b = b | 0;
      var c = 0,
          d = 0,
          e = 0,
          f = 0,
          g = 0,
          h = 0,
          j = 0,
          m = 0,
          n = 0,
          o = 0,
          p = 0,
          q = 0;
      d = b + 16 | 0;
      e = k[d >> 2] | 0;
      p = e + (1 << l[b + 7 >> 0] << 5) | 0;
      g = b + 8 | 0;
      f = k[g >> 2] | 0;
      if (!f) {
        f = e;
        c = 0;
      } else {
        j = b + 12 | 0;
        m = 0;
        c = 0;
        do {
          e = k[j >> 2] | 0;
          if ((k[e + (m << 4) + 8 >> 2] & 64 | 0) != 0 ? (h = k[e + (m << 4) >> 2] | 0, (i[h + 5 >> 0] & 3) != 0) : 0) {
            Fk(a, h);
            f = k[g >> 2] | 0;
            c = 1;
          }
          m = m + 1 | 0;
        } while (m >>> 0 < f >>> 0);
        f = k[d >> 2] | 0;
      }
      if (f >>> 0 < p >>> 0) {
        e = 0;
        d = 0;
        n = f;
        do {
          h = n + 8 | 0;
          j = k[h >> 2] | 0;
          f = n + 24 | 0;
          m = k[f >> 2] | 0;
          g = (m & 64 | 0) == 0;
          a: do
            if (!j) {
              if (!g ? (i[(k[n + 16 >> 2] | 0) + 5 >> 0] & 3) != 0 : 0)
                k[f >> 2] = 10;
            } else {
              do
                if (g) {
                  o = j;
                  q = 18;
                } else {
                  g = k[n + 16 >> 2] | 0;
                  if ((m & 15 | 0) == 4) {
                    if (!g) {
                      o = j;
                      q = 18;
                      break;
                    }
                    if (!(i[g + 5 >> 0] & 3)) {
                      o = j;
                      q = 18;
                      break;
                    }
                    Fk(a, g);
                    o = k[h >> 2] | 0;
                    q = 18;
                    break;
                  }
                  f = (j & 64 | 0) == 0;
                  if (!(i[g + 5 >> 0] & 3))
                    if (f)
                      break a;
                    else
                      break;
                  if (f) {
                    e = 1;
                    break a;
                  }
                  e = 1;
                  d = (i[(k[n >> 2] | 0) + 5 >> 0] & 3) == 0 ? d : 1;
                  break a;
                }
 while (0);
              if ((q | 0) == 18 ? (q = 0, (o & 64 | 0) == 0) : 0)
                break;
              f = k[n >> 2] | 0;
              if (i[f + 5 >> 0] & 3) {
                Fk(a, f);
                c = 1;
              }
            }
 while (0);
          n = n + 32 | 0;
        } while (n >>> 0 < p >>> 0);
      } else {
        e = 0;
        d = 0;
      }
      if (!(i[a + 61 >> 0] | 0)) {
        a = a + 80 | 0;
        k[b + 28 >> 2] = k[a >> 2];
        k[a >> 2] = b;
        return c | 0;
      }
      if (d) {
        a = a + 88 | 0;
        k[b + 28 >> 2] = k[a >> 2];
        k[a >> 2] = b;
        return c | 0;
      }
      if (!e)
        return c | 0;
      a = a + 92 | 0;
      k[b + 28 >> 2] = k[a >> 2];
      k[a >> 2] = b;
      return c | 0;
    }
    function xp(a, b, c) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      var d = 0,
          e = 0,
          f = 0,
          g = 0,
          h = 0,
          j = 0,
          m = 0;
      if ((b | 0) == (c | 0))
        return ;
      do {
        g = b + 16 | 0;
        d = k[g >> 2] | 0;
        j = d + (1 << (l[b + 7 >> 0] | 0) << 5) | 0;
        h = b + 8 | 0;
        if (k[h >> 2] | 0) {
          e = b + 12 | 0;
          f = 0;
          do {
            d = k[e >> 2] | 0;
            if (yp(a, d + (f << 4) | 0) | 0)
              k[d + (f << 4) + 8 >> 2] = 0;
            f = f + 1 | 0;
          } while (f >>> 0 < (k[h >> 2] | 0) >>> 0);
          d = k[g >> 2] | 0;
        }
        if (d >>> 0 < j >>> 0)
          do {
            e = d + 8 | 0;
            if ((((k[e >> 2] | 0) != 0 ? (yp(a, d) | 0) != 0 : 0) ? (k[e >> 2] = 0, m = d + 24 | 0, (k[m >> 2] & 64 | 0) != 0) : 0) ? (i[(k[d + 16 >> 2] | 0) + 5 >> 0] & 3) != 0 : 0)
              k[m >> 2] = 10;
            d = d + 32 | 0;
          } while (d >>> 0 < j >>> 0);
        b = k[b + 28 >> 2] | 0;
      } while ((b | 0) != (c | 0));
      return ;
    }
    function yp(a, b) {
      a = a | 0;
      b = b | 0;
      var c = 0;
      c = k[b + 8 >> 2] | 0;
      if (!(c & 64)) {
        a = 0;
        return a | 0;
      }
      b = k[b >> 2] | 0;
      if ((c & 15 | 0) != 4) {
        a = (l[b + 5 >> 0] | 0) & 3;
        return a | 0;
      }
      if (!b) {
        a = 0;
        return a | 0;
      }
      if (!(i[b + 5 >> 0] & 3)) {
        a = 0;
        return a | 0;
      }
      Fk(a, b);
      a = 0;
      return a | 0;
    }
    function zp(a, b) {
      a = a | 0;
      b = b | 0;
      cg(a, (k[a + 8 >> 2] | 0) + -32 | 0, 0, 0);
      return ;
    }
    function Ap(a, b) {
      a = a | 0;
      b = b | 0;
      var c = 0,
          d = 0,
          e = 0,
          f = 0;
      f = k[a + 16 >> 2] | 0;
      c = f + 34 | 0;
      d = l[c >> 0] | 0;
      if (d & 16) {
        i[c >> 0] = d & 239;
        k[a + 88 >> 2] = k[f + 20 >> 2];
      }
      if ((j[f + 32 >> 1] | 0) == -1) {
        d = f + 4 | 0;
        c = a + 8 | 0;
        e = k[c >> 2] | 0;
        if ((k[d >> 2] | 0) >>> 0 < e >>> 0)
          k[d >> 2] = e;
      } else
        c = a + 8 | 0;
      b = id[k[f + 16 >> 2] & 63](a, b, k[f + 24 >> 2] | 0) | 0;
      bg(a, (k[c >> 2] | 0) + (0 - b << 4) | 0) | 0;
      return ;
    }
    function Bp(a, b, c) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      var d = 0;
      d = a + 8 | 0;
      k[d >> 2] = c;
      b = ih(a, b) | 0;
      k[c >> 2] = b;
      k[c + 8 >> 2] = l[b + 4 >> 0] | 0 | 64;
      k[d >> 2] = (k[d >> 2] | 0) + 16;
      Wf(a, -1);
    }
    function Cp(a) {
      a = a | 0;
      return Rp(k[a + 4 >> 2] | 0) | 0;
    }
    function Dp(a) {
      a = a | 0;
      Fc(472, 1013065);
      vb(504, 1013070, 1, 1, 0);
      Rb(512, 1013075, 1, -128, 127);
      Rb(528, 1013080, 1, -128, 127);
      Rb(520, 1013092, 1, 0, 255);
      Rb(536, 1013106, 2, -32768, 32767);
      Rb(544, 1013112, 2, 0, 65535);
      Rb(552, 1013127, 4, -2147483648, 2147483647);
      Rb(560, 1013131, 4, 0, -1);
      Rb(568, 1013144, 4, -2147483648, 2147483647);
      Rb(576, 1013149, 4, 0, -1);
      Sc(584, 1013163, 4);
      Sc(592, 1013169, 8);
      vc(200, 1013176);
      vc(224, 1013188);
      Kc(248, 4, 1013221);
      sb(272, 1013234);
      zc(280, 0, 1013250);
      zc(288, 0, 1013280);
      zc(296, 1, 1013317);
      zc(304, 2, 1013356);
      zc(312, 3, 1013387);
      zc(320, 4, 1013427);
      zc(328, 5, 1013456);
      zc(336, 4, 1013494);
      zc(344, 5, 1013524);
      zc(288, 0, 1013563);
      zc(296, 1, 1013595);
      zc(304, 2, 1013628);
      zc(312, 3, 1013661);
      zc(320, 4, 1013695);
      zc(328, 5, 1013728);
      zc(352, 6, 1013762);
      zc(360, 7, 1013793);
      zc(368, 7, 1013825);
      return ;
    }
    function Ep() {
      Dp(0);
      return ;
    }
    function Fp(a) {
      a = a | 0;
      return ((a + -48 | 0) >>> 0 < 10 | (Gp(a) | 0) != 0) & 1 | 0;
    }
    function Gp(a) {
      a = a | 0;
      return ((a | 32) + -97 | 0) >>> 0 < 26 | 0;
    }
    function Hp(a) {
      a = a | 0;
      return (a >>> 0 < 32 | (a | 0) == 127) & 1 | 0;
    }
    function Ip(a) {
      a = a | 0;
      return (a + -33 | 0) >>> 0 < 94 | 0;
    }
    function Jp(a) {
      a = a | 0;
      return (a + -97 | 0) >>> 0 < 26 | 0;
    }
    function Kp(a) {
      a = a | 0;
      if (!(Ip(a) | 0))
        a = 0;
      else
        a = (Fp(a) | 0) == 0;
      return a & 1 | 0;
    }
    function Lp(a) {
      a = a | 0;
      var b = 0;
      b = (Jp(a) | 0) == 0;
      return (b ? a : a & 95) | 0;
    }
    function Mp(a, b) {
      a = a | 0;
      b = b | 0;
      return dr(a, b) | 0;
    }
    function Np(a, b, c, d) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      d = d | 0;
      var e = 0,
          f = 0,
          g = 0,
          h = 0,
          i = 0,
          j = 0,
          l = 0,
          m = 0,
          n = 0,
          o = 0,
          p = 0,
          q = 0,
          s = 0,
          t = 0,
          u = 0,
          v = 0,
          w = 0,
          x = 0,
          y = 0,
          z = 0,
          A = 0,
          B = 0;
      B = r;
      r = r + 688 | 0;
      x = B + 424 | 0;
      w = B + 192 | 0;
      z = B;
      e = ka(c, b) | 0;
      if (!e) {
        r = B;
        return ;
      }
      h = e - c | 0;
      k[z + 4 >> 2] = c;
      k[z >> 2] = c;
      f = c;
      b = c;
      g = 2;
      while (1) {
        f = f + c + b | 0;
        k[z + (g << 2) >> 2] = f;
        if (f >>> 0 < e >>> 0) {
          y = b;
          b = f;
          g = g + 1 | 0;
          f = y;
        } else
          break;
      }
      y = 0 - c | 0;
      t = a + h | 0;
      if ((h | 0) > 0) {
        q = (c | 0) == 0;
        s = t;
        e = 1;
        f = 0;
        b = 1;
        do {
          do
            if ((e & 3 | 0) != 3) {
              p = b + -1 | 0;
              if ((k[z + (p << 2) >> 2] | 0) >>> 0 < (s - a | 0) >>> 0) {
                k[w >> 2] = a;
                a: do
                  if ((b | 0) > 1) {
                    h = b;
                    g = a;
                    n = a;
                    l = 1;
                    while (1) {
                      o = g + y | 0;
                      j = h + -2 | 0;
                      g = g + (0 - ((k[z + (j << 2) >> 2] | 0) + c)) | 0;
                      if ((sd[d & 63](n, g) | 0) > -1 ? (sd[d & 63](n, o) | 0) > -1 : 0) {
                        m = l;
                        break;
                      }
                      m = l + 1 | 0;
                      l = w + (l << 2) | 0;
                      if ((sd[d & 63](g, o) | 0) > -1) {
                        k[l >> 2] = g;
                        h = h + -1 | 0;
                      } else {
                        k[l >> 2] = o;
                        g = o;
                        h = j;
                      }
                      if ((h | 0) <= 1)
                        break;
                      n = k[w >> 2] | 0;
                      l = m;
                    }
                    if ((m | 0) >= 2 ? (v = w + (m << 2) | 0, k[v >> 2] = x, !q) : 0) {
                      i = c;
                      h = x;
                      while (1) {
                        g = i >>> 0 > 256 ? 256 : i;
                        j = k[w >> 2] | 0;
                        rr(h | 0, j | 0, g | 0) | 0;
                        l = 0;
                        do {
                          o = l;
                          l = l + 1 | 0;
                          n = j;
                          j = k[w + (l << 2) >> 2] | 0;
                          rr(n | 0, j | 0, g | 0) | 0;
                          k[w + (o << 2) >> 2] = n + g;
                        } while ((l | 0) != (m | 0));
                        if ((i | 0) == (g | 0))
                          break a;
                        i = i - g | 0;
                        h = k[v >> 2] | 0;
                      }
                    }
                  }
 while (0);
              } else
                Vp(a, c, d, e, f, b, 0, z);
              if ((b | 0) == 1) {
                h = e << 1;
                f = e >>> 31 | f << 1;
                b = 0;
                break;
              } else {
                o = p >>> 0 > 31;
                n = o ? 0 : e;
                b = o ? b + -33 | 0 : p;
                h = n << b;
                f = n >>> (32 - b | 0) | (o ? e : f) << b;
                b = 1;
                break;
              }
            } else {
              k[w >> 2] = a;
              b: do
                if ((b | 0) > 1) {
                  h = b;
                  g = a;
                  m = a;
                  j = 1;
                  while (1) {
                    n = g + y | 0;
                    o = h + -2 | 0;
                    g = g + (0 - ((k[z + (o << 2) >> 2] | 0) + c)) | 0;
                    if ((sd[d & 63](m, g) | 0) > -1 ? (sd[d & 63](m, n) | 0) > -1 : 0) {
                      l = j;
                      break;
                    }
                    l = j + 1 | 0;
                    i = w + (j << 2) | 0;
                    if ((sd[d & 63](g, n) | 0) > -1) {
                      k[i >> 2] = g;
                      h = h + -1 | 0;
                    } else {
                      k[i >> 2] = n;
                      g = n;
                      h = o;
                    }
                    if ((h | 0) <= 1)
                      break;
                    m = k[w >> 2] | 0;
                    j = l;
                  }
                  if ((l | 0) >= 2 ? (u = w + (l << 2) | 0, k[u >> 2] = x, !q) : 0) {
                    i = c;
                    h = x;
                    while (1) {
                      j = i >>> 0 > 256 ? 256 : i;
                      g = k[w >> 2] | 0;
                      rr(h | 0, g | 0, j | 0) | 0;
                      h = g;
                      g = 0;
                      do {
                        p = g;
                        g = g + 1 | 0;
                        o = h;
                        h = k[w + (g << 2) >> 2] | 0;
                        rr(o | 0, h | 0, j | 0) | 0;
                        k[w + (p << 2) >> 2] = o + j;
                      } while ((g | 0) != (l | 0));
                      if ((i | 0) == (j | 0))
                        break b;
                      i = i - j | 0;
                      h = k[u >> 2] | 0;
                    }
                  }
                }
 while (0);
              h = e >>> 2 | f << 30;
              f = f >>> 2;
              b = b + 2 | 0;
            }
 while (0);
          e = h | 1;
          a = a + c | 0;
        } while (a >>> 0 < t >>> 0);
      } else {
        f = 0;
        e = 1;
        b = 1;
      }
      Vp(a, c, d, e, f, b, 0, z);
      if ((f | 0) == 0 & ((e | 0) == 1 & (b | 0) == 1)) {
        r = B;
        return ;
      } else {
        m = e;
        o = a;
        n = b;
      }
      while (1) {
        if ((n | 0) >= 2) {
          v = m >>> 30;
          x = n + -2 | 0;
          u = (m << 1 & 2147483646 | v << 31) ^ 3;
          w = (v | f << 2) >>> 1;
          Vp(o + (0 - ((k[z + (x << 2) >> 2] | 0) + c)) | 0, c, d, u, w, n + -1 | 0, 1, z);
          v = w << 1 | v & 1;
          u = u << 1 | 1;
          w = o + y | 0;
          Vp(w, c, d, u, v, x, 1, z);
          m = u;
          f = v;
          o = w;
          n = x;
          continue;
        }
        b = m + -1 | 0;
        do
          if (b) {
            if (!(b & 1)) {
              e = b;
              b = 0;
              do {
                b = b + 1 | 0;
                e = e >>> 1;
              } while ((e & 1 | 0) == 0);
              if (!b)
                A = 51;
            } else
              A = 51;
            if ((A | 0) == 51) {
              A = 0;
              if (!f) {
                b = 64;
                A = 56;
                break;
              }
              if (!(f & 1)) {
                e = f;
                b = 0;
              } else {
                e = 0;
                a = m;
                b = 0;
                break;
              }
              while (1) {
                a = b + 1 | 0;
                e = e >>> 1;
                if (e & 1) {
                  e = a;
                  break;
                } else
                  b = a;
              }
              if (!e) {
                e = 0;
                a = m;
                b = 0;
                break;
              } else
                b = b + 33 | 0;
            }
            if (b >>> 0 > 31)
              A = 56;
            else {
              e = b;
              a = m;
            }
          } else {
            b = 32;
            A = 56;
          }
 while (0);
        if ((A | 0) == 56) {
          A = 0;
          e = b + -32 | 0;
          a = f;
          f = 0;
        }
        m = f << 32 - e | a >>> e;
        f = f >>> e;
        n = b + n | 0;
        if ((f | 0) == 0 & ((m | 0) == 1 & (n | 0) == 1))
          break;
        else
          o = o + y | 0;
      }
      r = B;
      return ;
    }
    function Op(a, b) {
      a = a | 0;
      b = b | 0;
      a = Pp(a, b) | 0;
      return ((i[a >> 0] | 0) == (b & 255) << 24 >> 24 ? a : 0) | 0;
    }
    function Pp(a, b) {
      a = a | 0;
      b = b | 0;
      var c = 0,
          d = 0,
          e = 0;
      d = b & 255;
      if (!d) {
        b = a + (yr(a | 0) | 0) | 0;
        return b | 0;
      }
      a: do
        if (a & 3) {
          c = b & 255;
          while (1) {
            e = i[a >> 0] | 0;
            if (e << 24 >> 24 == 0 ? 1 : e << 24 >> 24 == c << 24 >> 24)
              break;
            a = a + 1 | 0;
            if (!(a & 3))
              break a;
          }
          return a | 0;
        }
 while (0);
      d = ka(d, 16843009) | 0;
      c = k[a >> 2] | 0;
      b: do
        if (!((c & -2139062144 ^ -2139062144) & c + -16843009))
          do {
            e = c ^ d;
            if ((e & -2139062144 ^ -2139062144) & e + -16843009)
              break b;
            a = a + 4 | 0;
            c = k[a >> 2] | 0;
          } while (((c & -2139062144 ^ -2139062144) & c + -16843009 | 0) == 0);
 while (0);
      c = b & 255;
      while (1) {
        e = i[a >> 0] | 0;
        if (e << 24 >> 24 == 0 ? 1 : e << 24 >> 24 == c << 24 >> 24)
          break;
        else
          a = a + 1 | 0;
      }
      return a | 0;
    }
    function Qp(a, b) {
      a = a | 0;
      b = b | 0;
      var c = 0,
          d = 0,
          e = 0,
          f = 0;
      e = r;
      r = r + 32 | 0;
      d = e;
      c = i[b >> 0] | 0;
      if (c << 24 >> 24 != 0 ? (i[b + 1 >> 0] | 0) != 0 : 0) {
        k[d >> 2] = 0;
        k[d + 4 >> 2] = 0;
        k[d + 8 >> 2] = 0;
        k[d + 12 >> 2] = 0;
        k[d + 16 >> 2] = 0;
        k[d + 20 >> 2] = 0;
        k[d + 24 >> 2] = 0;
        k[d + 28 >> 2] = 0;
        do {
          f = d + (((c & 255) >>> 5 & 255) << 2) | 0;
          k[f >> 2] = k[f >> 2] | 1 << (c & 31);
          b = b + 1 | 0;
          c = i[b >> 0] | 0;
        } while (c << 24 >> 24 != 0);
        c = i[a >> 0] | 0;
        a: do
          if (!(c << 24 >> 24))
            b = a;
          else {
            b = a;
            do {
              if (k[d + (((c & 255) >>> 5 & 255) << 2) >> 2] & 1 << (c & 31))
                break a;
              b = b + 1 | 0;
              c = i[b >> 0] | 0;
            } while (c << 24 >> 24 != 0);
          }
 while (0);
        f = b - a | 0;
        r = e;
        return f | 0;
      }
      f = (Pp(a, c << 24 >> 24) | 0) - a | 0;
      r = e;
      return f | 0;
    }
    function Rp(a) {
      a = a | 0;
      var b = 0,
          c = 0;
      b = (yr(a | 0) | 0) + 1 | 0;
      c = ir(b) | 0;
      if (!c) {
        a = 0;
        return a | 0;
      }
      rr(c | 0, a | 0, b | 0) | 0;
      a = c;
      return a | 0;
    }
    function Sp(a, b) {
      a = a | 0;
      b = b | 0;
      a = a + (Qp(a, b) | 0) | 0;
      return ((i[a >> 0] | 0) != 0 ? a : 0) | 0;
    }
    function Tp(a, b) {
      a = a | 0;
      b = b | 0;
      var c = 0,
          d = 0,
          e = 0,
          f = 0;
      e = r;
      r = r + 32 | 0;
      d = e;
      k[d >> 2] = 0;
      k[d + 4 >> 2] = 0;
      k[d + 8 >> 2] = 0;
      k[d + 12 >> 2] = 0;
      k[d + 16 >> 2] = 0;
      k[d + 20 >> 2] = 0;
      k[d + 24 >> 2] = 0;
      k[d + 28 >> 2] = 0;
      c = i[b >> 0] | 0;
      if (!(c << 24 >> 24)) {
        a = 0;
        r = e;
        return a | 0;
      }
      if (!(i[b + 1 >> 0] | 0)) {
        b = a;
        while (1)
          if ((i[b >> 0] | 0) == c << 24 >> 24)
            b = b + 1 | 0;
          else
            break;
        a = b - a | 0;
        r = e;
        return a | 0;
      }
      do {
        f = d + (((c & 255) >>> 5 & 255) << 2) | 0;
        k[f >> 2] = k[f >> 2] | 1 << (c & 31);
        b = b + 1 | 0;
        c = i[b >> 0] | 0;
      } while (c << 24 >> 24 != 0);
      c = i[a >> 0] | 0;
      a: do
        if (!(c << 24 >> 24))
          b = a;
        else {
          b = a;
          do {
            if (!(k[d + (((c & 255) >>> 5 & 255) << 2) >> 2] & 1 << (c & 31)))
              break a;
            b = b + 1 | 0;
            c = i[b >> 0] | 0;
          } while (c << 24 >> 24 != 0);
        }
 while (0);
      f = b - a | 0;
      r = e;
      return f | 0;
    }
    function Up(a, b) {
      a = a | 0;
      b = b | 0;
      var c = 0,
          d = 0,
          e = 0,
          f = 0,
          g = 0,
          h = 0,
          j = 0,
          m = 0,
          n = 0,
          o = 0,
          p = 0,
          q = 0,
          s = 0,
          t = 0,
          u = 0;
      u = r;
      r = r + 1056 | 0;
      s = u + 1024 | 0;
      t = u;
      e = i[b >> 0] | 0;
      if (!(e << 24 >> 24)) {
        t = a;
        r = u;
        return t | 0;
      }
      p = Op(a, e << 24 >> 24) | 0;
      if (!p) {
        t = 0;
        r = u;
        return t | 0;
      }
      f = i[b + 1 >> 0] | 0;
      if (!(f << 24 >> 24)) {
        t = p;
        r = u;
        return t | 0;
      }
      d = p + 1 | 0;
      m = i[d >> 0] | 0;
      if (!(m << 24 >> 24)) {
        t = 0;
        r = u;
        return t | 0;
      }
      h = i[b + 2 >> 0] | 0;
      if (!(h << 24 >> 24)) {
        g = f & 255 | (e & 255) << 8;
        c = m;
        f = p;
        a = l[p >> 0] << 8 | m & 255;
        while (1) {
          e = a & 65535;
          if ((e | 0) == (g | 0)) {
            d = f;
            break;
          }
          c = d + 1 | 0;
          a = i[c >> 0] | 0;
          if (!(a << 24 >> 24)) {
            c = 0;
            break;
          } else {
            f = d;
            d = c;
            c = a;
            a = a & 255 | e << 8;
          }
        }
        t = c << 24 >> 24 != 0 ? d : 0;
        r = u;
        return t | 0;
      }
      d = p + 2 | 0;
      j = i[d >> 0] | 0;
      if (!(j << 24 >> 24)) {
        t = 0;
        r = u;
        return t | 0;
      }
      g = i[b + 3 >> 0] | 0;
      if (!(g << 24 >> 24)) {
        f = (f & 255) << 16 | (e & 255) << 24 | (h & 255) << 8;
        c = (j & 255) << 8 | (m & 255) << 16 | l[p >> 0] << 24;
        if ((c | 0) == (f | 0))
          c = j;
        else {
          a = c;
          do {
            d = d + 1 | 0;
            c = i[d >> 0] | 0;
            a = (c & 255 | a) << 8;
          } while (!(c << 24 >> 24 == 0 | (a | 0) == (f | 0)));
        }
        t = c << 24 >> 24 != 0 ? d + -2 | 0 : 0;
        r = u;
        return t | 0;
      }
      d = p + 3 | 0;
      c = i[d >> 0] | 0;
      if (!(c << 24 >> 24)) {
        t = 0;
        r = u;
        return t | 0;
      }
      if (!(i[b + 4 >> 0] | 0)) {
        g = (f & 255) << 16 | (e & 255) << 24 | (h & 255) << 8 | g & 255;
        a = (j & 255) << 8 | (m & 255) << 16 | c & 255 | l[p >> 0] << 24;
        if ((a | 0) != (g | 0))
          do {
            d = d + 1 | 0;
            c = i[d >> 0] | 0;
            a = c & 255 | a << 8;
          } while (!(c << 24 >> 24 == 0 | (a | 0) == (g | 0)));
        t = c << 24 >> 24 != 0 ? d + -3 | 0 : 0;
        r = u;
        return t | 0;
      }
      ;
      k[s >> 2] = 0;
      k[s + 4 >> 2] = 0;
      k[s + 8 >> 2] = 0;
      k[s + 12 >> 2] = 0;
      k[s + 16 >> 2] = 0;
      k[s + 20 >> 2] = 0;
      k[s + 24 >> 2] = 0;
      k[s + 28 >> 2] = 0;
      f = 0;
      while (1) {
        if (!(i[p + f >> 0] | 0)) {
          c = 0;
          break;
        }
        a = s + (((e & 255) >>> 5 & 255) << 2) | 0;
        k[a >> 2] = k[a >> 2] | 1 << (e & 31);
        a = f + 1 | 0;
        k[t + ((e & 255) << 2) >> 2] = a;
        e = i[b + a >> 0] | 0;
        if (!(e << 24 >> 24)) {
          q = f;
          n = 23;
          break;
        } else
          f = a;
      }
      a: do
        if ((n | 0) == 23) {
          b: do
            if (a >>> 0 > 1) {
              e = 1;
              n = -1;
              f = 0;
              c: while (1) {
                j = 1;
                while (1) {
                  d: while (1) {
                    d = 1;
                    while (1) {
                      c = i[b + (d + n) >> 0] | 0;
                      g = i[b + e >> 0] | 0;
                      if (c << 24 >> 24 != g << 24 >> 24) {
                        h = e;
                        e = c;
                        break d;
                      }
                      if ((d | 0) == (j | 0))
                        break;
                      d = d + 1 | 0;
                      e = d + f | 0;
                      if (e >>> 0 >= a >>> 0) {
                        f = n;
                        n = j;
                        break c;
                      }
                    }
                    f = f + j | 0;
                    e = f + 1 | 0;
                    if (e >>> 0 >= a >>> 0) {
                      f = n;
                      n = j;
                      break c;
                    }
                  }
                  j = h - n | 0;
                  if ((e & 255) <= (g & 255))
                    break;
                  f = h + 1 | 0;
                  if (f >>> 0 < a >>> 0) {
                    e = f;
                    f = h;
                  } else {
                    f = n;
                    n = j;
                    break c;
                  }
                }
                e = f + 2 | 0;
                if (e >>> 0 >= a >>> 0) {
                  n = 1;
                  break;
                } else {
                  n = f;
                  f = f + 1 | 0;
                }
              }
              g = 1;
              d = -1;
              e = 0;
              while (1) {
                c = e;
                e = 1;
                while (1) {
                  m = c;
                  e: while (1) {
                    c = 1;
                    while (1) {
                      j = i[b + (c + d) >> 0] | 0;
                      h = i[b + g >> 0] | 0;
                      if (j << 24 >> 24 != h << 24 >> 24) {
                        c = g;
                        g = m;
                        break e;
                      }
                      if ((c | 0) == (e | 0))
                        break;
                      c = c + 1 | 0;
                      g = c + m | 0;
                      if (g >>> 0 >= a >>> 0) {
                        g = n;
                        break b;
                      }
                    }
                    m = m + e | 0;
                    g = m + 1 | 0;
                    if (g >>> 0 >= a >>> 0) {
                      g = n;
                      break b;
                    }
                  }
                  e = c - d | 0;
                  if ((j & 255) >= (h & 255)) {
                    e = g;
                    break;
                  }
                  g = c + 1 | 0;
                  if (g >>> 0 >= a >>> 0) {
                    g = n;
                    break b;
                  }
                }
                g = e + 2 | 0;
                if (g >>> 0 >= a >>> 0) {
                  d = e;
                  g = n;
                  e = 1;
                  break;
                } else {
                  d = e;
                  e = e + 1 | 0;
                }
              }
            } else {
              f = -1;
              d = -1;
              g = 1;
              e = 1;
            }
 while (0);
          o = (d + 1 | 0) >>> 0 > (f + 1 | 0) >>> 0;
          e = o ? e : g;
          o = o ? d : f;
          d = o + 1 | 0;
          if (!(cr(b, b + e | 0, d) | 0)) {
            j = a - e | 0;
            m = a | 63;
            if ((a | 0) == (e | 0))
              j = a;
            else {
              c = p;
              n = 0;
              f = p;
              f: while (1) {
                h = c;
                do
                  if ((f - h | 0) >>> 0 < a >>> 0) {
                    g = br(f, 0, m) | 0;
                    if (g)
                      if ((g - h | 0) >>> 0 < a >>> 0) {
                        c = 0;
                        break a;
                      } else {
                        f = g;
                        break;
                      }
                    else {
                      f = f + m | 0;
                      break;
                    }
                  }
 while (0);
                g = i[c + q >> 0] | 0;
                if (!(1 << (g & 31) & k[s + (((g & 255) >>> 5 & 255) << 2) >> 2])) {
                  c = c + a | 0;
                  n = 0;
                  continue;
                }
                p = k[t + ((g & 255) << 2) >> 2] | 0;
                g = a - p | 0;
                if ((a | 0) != (p | 0)) {
                  c = c + ((n | 0) != 0 & g >>> 0 < e >>> 0 ? j : g) | 0;
                  n = 0;
                  continue;
                }
                g = d >>> 0 > n >>> 0 ? d : n;
                h = i[b + g >> 0] | 0;
                g: do
                  if (!(h << 24 >> 24))
                    g = d;
                  else {
                    while (1) {
                      if (h << 24 >> 24 != (i[c + g >> 0] | 0))
                        break;
                      g = g + 1 | 0;
                      h = i[b + g >> 0] | 0;
                      if (!(h << 24 >> 24)) {
                        g = d;
                        break g;
                      }
                    }
                    c = c + (g - o) | 0;
                    n = 0;
                    continue f;
                  }
 while (0);
                do {
                  if (g >>> 0 <= n >>> 0)
                    break a;
                  g = g + -1 | 0;
                } while ((i[b + g >> 0] | 0) == (i[c + g >> 0] | 0));
                c = c + e | 0;
                n = j;
              }
            }
          } else {
            j = a - o + -1 | 0;
            m = a | 63;
            j = (o >>> 0 > j >>> 0 ? o : j) + 1 | 0;
          }
          n = b + d | 0;
          c = p;
          e = p;
          h: while (1) {
            g = c;
            do
              if ((e - g | 0) >>> 0 < a >>> 0) {
                f = br(e, 0, m) | 0;
                if (f)
                  if ((f - g | 0) >>> 0 < a >>> 0) {
                    c = 0;
                    break a;
                  } else
                    break;
                else {
                  f = e + m | 0;
                  break;
                }
              } else
                f = e;
 while (0);
            g = i[c + q >> 0] | 0;
            if (!(1 << (g & 31) & k[s + (((g & 255) >>> 5 & 255) << 2) >> 2])) {
              c = c + a | 0;
              e = f;
              continue;
            }
            g = k[t + ((g & 255) << 2) >> 2] | 0;
            if ((a | 0) != (g | 0)) {
              c = c + (a - g) | 0;
              e = f;
              continue;
            }
            g = i[n >> 0] | 0;
            i: do
              if (!(g << 24 >> 24))
                g = d;
              else {
                e = d;
                while (1) {
                  if (g << 24 >> 24 != (i[c + e >> 0] | 0)) {
                    g = e;
                    break;
                  }
                  e = e + 1 | 0;
                  g = i[b + e >> 0] | 0;
                  if (!(g << 24 >> 24)) {
                    g = d;
                    break i;
                  }
                }
                c = c + (g - o) | 0;
                e = f;
                continue h;
              }
 while (0);
            do {
              if (!g)
                break a;
              g = g + -1 | 0;
            } while ((i[b + g >> 0] | 0) == (i[c + g >> 0] | 0));
            c = c + j | 0;
            e = f;
          }
        }
 while (0);
      t = c;
      r = u;
      return t | 0;
    }
    function Vp(a, b, c, d, e, f, g, h) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      d = d | 0;
      e = e | 0;
      f = f | 0;
      g = g | 0;
      h = h | 0;
      var i = 0,
          j = 0,
          l = 0,
          m = 0,
          n = 0,
          o = 0,
          p = 0,
          q = 0,
          s = 0,
          t = 0,
          u = 0,
          v = 0;
      v = r;
      r = r + 720 | 0;
      u = v + 456 | 0;
      t = v + 228 | 0;
      p = v;
      k[p >> 2] = a;
      q = 0 - b | 0;
      a: do
        if ((e | 0) != 0 | (d | 0) != 1 ? (j = a + (0 - (k[h + (f << 2) >> 2] | 0)) | 0, (sd[c & 63](j, a) | 0) >= 1) : 0) {
          l = j;
          i = e;
          j = 1;
          while (1) {
            if ((g | 0) == 0 & (f | 0) > 1) {
              e = k[h + (f + -2 << 2) >> 2] | 0;
              if ((sd[c & 63](a + q | 0, l) | 0) > -1)
                break a;
              if ((sd[c & 63](a + (0 - (e + b)) | 0, l) | 0) > -1)
                break a;
            }
            m = j + 1 | 0;
            k[p + (j << 2) >> 2] = l;
            e = d + -1 | 0;
            do
              if (e) {
                if (!(e & 1)) {
                  j = e;
                  e = 0;
                  do {
                    e = e + 1 | 0;
                    j = j >>> 1;
                  } while ((j & 1 | 0) == 0);
                  if (!e)
                    n = 10;
                } else
                  n = 10;
                if ((n | 0) == 10) {
                  n = 0;
                  if (!i) {
                    e = 64;
                    n = 15;
                    break;
                  }
                  if (!(i & 1)) {
                    a = i;
                    j = 0;
                  } else {
                    g = 0;
                    j = d;
                    a = i;
                    e = 0;
                    break;
                  }
                  while (1) {
                    e = j + 1 | 0;
                    a = a >>> 1;
                    if (a & 1) {
                      a = e;
                      break;
                    } else
                      j = e;
                  }
                  if (!a) {
                    g = 0;
                    j = d;
                    a = i;
                    e = 0;
                    break;
                  } else
                    e = j + 33 | 0;
                }
                if (e >>> 0 > 31)
                  n = 15;
                else {
                  g = e;
                  j = d;
                  a = i;
                }
              } else {
                e = 32;
                n = 15;
              }
 while (0);
            if ((n | 0) == 15) {
              n = 0;
              g = e + -32 | 0;
              j = i;
              a = 0;
            }
            d = a << 32 - g | j >>> g;
            i = a >>> g;
            f = e + f | 0;
            if (!((i | 0) != 0 | (d | 0) != 1)) {
              a = l;
              j = m;
              break a;
            }
            j = l + (0 - (k[h + (f << 2) >> 2] | 0)) | 0;
            if ((sd[c & 63](j, k[p >> 2] | 0) | 0) < 1) {
              a = l;
              g = 0;
              e = m;
              n = 18;
              break;
            } else {
              a = l;
              g = 0;
              l = j;
              j = m;
            }
          }
        } else {
          e = 1;
          n = 18;
        }
 while (0);
      if ((n | 0) == 18)
        if (!g)
          j = e;
        else {
          r = v;
          return ;
        }
      b: do
        if ((j | 0) >= 2 ? (o = p + (j << 2) | 0, k[o >> 2] = u, (b | 0) != 0) : 0) {
          d = b;
          g = u;
          while (1) {
            i = d >>> 0 > 256 ? 256 : d;
            e = k[p >> 2] | 0;
            rr(g | 0, e | 0, i | 0) | 0;
            g = 0;
            do {
              n = g;
              g = g + 1 | 0;
              m = e;
              e = k[p + (g << 2) >> 2] | 0;
              rr(m | 0, e | 0, i | 0) | 0;
              k[p + (n << 2) >> 2] = m + i;
            } while ((g | 0) != (j | 0));
            if ((d | 0) == (i | 0))
              break b;
            d = d - i | 0;
            g = k[o >> 2] | 0;
          }
        }
 while (0);
      k[t >> 2] = a;
      c: do
        if ((f | 0) > 1) {
          d = a;
          i = a;
          e = 1;
          while (1) {
            a = d + q | 0;
            j = f + -2 | 0;
            d = d + (0 - ((k[h + (j << 2) >> 2] | 0) + b)) | 0;
            if ((sd[c & 63](i, d) | 0) > -1 ? (sd[c & 63](i, a) | 0) > -1 : 0) {
              g = e;
              break;
            }
            g = e + 1 | 0;
            i = t + (e << 2) | 0;
            if ((sd[c & 63](d, a) | 0) > -1) {
              k[i >> 2] = d;
              f = f + -1 | 0;
            } else {
              k[i >> 2] = a;
              d = a;
              f = j;
            }
            if ((f | 0) <= 1)
              break;
            i = k[t >> 2] | 0;
            e = g;
          }
          if ((g | 0) >= 2 ? (s = t + (g << 2) | 0, k[s >> 2] = u, (b | 0) != 0) : 0) {
            i = u;
            while (1) {
              f = b >>> 0 > 256 ? 256 : b;
              d = k[t >> 2] | 0;
              rr(i | 0, d | 0, f | 0) | 0;
              i = d;
              d = 0;
              do {
                h = d;
                d = d + 1 | 0;
                c = i;
                i = k[t + (d << 2) >> 2] | 0;
                rr(c | 0, i | 0, f | 0) | 0;
                k[t + (h << 2) >> 2] = c + f;
              } while ((d | 0) != (g | 0));
              if ((b | 0) == (f | 0))
                break c;
              b = b - f | 0;
              i = k[s >> 2] | 0;
            }
          }
        }
 while (0);
      r = v;
      return ;
    }
    function Wp(a) {
      a = a | 0;
      jr(a);
      return ;
    }
    function Xp(a) {
      a = a | 0;
      return ;
    }
    function Yp(a) {
      a = a | 0;
      return ;
    }
    function Zp(a) {
      a = a | 0;
      return ;
    }
    function _p(a) {
      a = a | 0;
      return ;
    }
    function $p(a) {
      a = a | 0;
      Wp(a);
      return ;
    }
    function aq(a) {
      a = a | 0;
      Wp(a);
      return ;
    }
    function bq(a) {
      a = a | 0;
      Wp(a);
      return ;
    }
    function cq(a) {
      a = a | 0;
      Wp(a);
      return ;
    }
    function dq(a) {
      a = a | 0;
      Wp(a);
      return ;
    }
    function eq(a) {
      a = a | 0;
      Wp(a);
      return ;
    }
    function fq(a, b, c) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      return (a | 0) == (b | 0) | 0;
    }
    function gq(a, b, c) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      return (a | 0) == (b | 0) | 0;
    }
    function hq(a, b, c) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      var d = 0,
          e = 0,
          f = 0,
          g = 0;
      g = r;
      r = r + 64 | 0;
      f = g;
      if ((a | 0) != (b | 0))
        if ((b | 0) != 0 ? (e = oq(b, 392, 408, 0) | 0, (e | 0) != 0) : 0) {
          b = f;
          d = b + 56 | 0;
          do {
            k[b >> 2] = 0;
            b = b + 4 | 0;
          } while ((b | 0) < (d | 0));
          k[f >> 2] = e;
          k[f + 8 >> 2] = a;
          k[f + 12 >> 2] = -1;
          k[f + 48 >> 2] = 1;
          td[k[(k[e >> 2] | 0) + 28 >> 2] & 63](e, f, k[c >> 2] | 0, 1);
          if ((k[f + 24 >> 2] | 0) == 1) {
            k[c >> 2] = k[f + 16 >> 2];
            b = 1;
          } else
            b = 0;
        } else
          b = 0;
      else
        b = 1;
      r = g;
      return b | 0;
    }
    function iq(a, b, c, d) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      d = d | 0;
      var e = 0;
      a = b + 16 | 0;
      e = k[a >> 2] | 0;
      do
        if (e) {
          if ((e | 0) != (c | 0)) {
            d = b + 36 | 0;
            k[d >> 2] = (k[d >> 2] | 0) + 1;
            k[b + 24 >> 2] = 2;
            i[b + 54 >> 0] = 1;
            break;
          }
          a = b + 24 | 0;
          if ((k[a >> 2] | 0) == 2)
            k[a >> 2] = d;
        } else {
          k[a >> 2] = c;
          k[b + 24 >> 2] = d;
          k[b + 36 >> 2] = 1;
        }
 while (0);
      return ;
    }
    function jq(a, b, c, d) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      d = d | 0;
      if ((a | 0) == (k[b + 8 >> 2] | 0))
        iq(0, b, c, d);
      return ;
    }
    function kq(a, b, c, d) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      d = d | 0;
      if ((a | 0) == (k[b + 8 >> 2] | 0))
        iq(0, b, c, d);
      else {
        a = k[a + 8 >> 2] | 0;
        td[k[(k[a >> 2] | 0) + 28 >> 2] & 63](a, b, c, d);
      }
      return ;
    }
    function lq(a, b, c, d) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      d = d | 0;
      var e = 0,
          f = 0;
      f = k[a + 4 >> 2] | 0;
      e = f >> 8;
      if (f & 1)
        e = k[(k[c >> 2] | 0) + e >> 2] | 0;
      a = k[a >> 2] | 0;
      td[k[(k[a >> 2] | 0) + 28 >> 2] & 63](a, b, c + e | 0, (f & 2 | 0) != 0 ? d : 2);
      return ;
    }
    function mq(a, b, c, d) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      d = d | 0;
      var e = 0,
          f = 0;
      a: do
        if ((a | 0) != (k[b + 8 >> 2] | 0)) {
          f = k[a + 12 >> 2] | 0;
          e = a + 16 + (f << 3) | 0;
          lq(a + 16 | 0, b, c, d);
          if ((f | 0) > 1) {
            f = b + 54 | 0;
            a = a + 24 | 0;
            do {
              lq(a, b, c, d);
              if (i[f >> 0] | 0)
                break a;
              a = a + 8 | 0;
            } while (a >>> 0 < e >>> 0);
          }
        } else
          iq(0, b, c, d);
 while (0);
      return ;
    }
    function nq(a, b, c) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      var d = 0,
          e = 0,
          f = 0,
          g = 0,
          h = 0,
          i = 0;
      i = r;
      r = r + 64 | 0;
      h = i;
      k[c >> 2] = k[k[c >> 2] >> 2];
      if (!((a | 0) == (b | 0) | (b | 0) == 496))
        if (((b | 0) != 0 ? (d = oq(b, 392, 440, 0) | 0, (d | 0) != 0) : 0) ? (k[d + 8 >> 2] & ~k[a + 8 >> 2] | 0) == 0 : 0) {
          b = k[a + 12 >> 2] | 0;
          a = d + 12 | 0;
          if (!((b | 0) == 472 ? 1 : (b | 0) == (k[a >> 2] | 0)))
            if ((((b | 0) != 0 ? (f = oq(b, 392, 408, 0) | 0, (f | 0) != 0) : 0) ? (e = k[a >> 2] | 0, (e | 0) != 0) : 0) ? (g = oq(e, 392, 408, 0) | 0, (g | 0) != 0) : 0) {
              b = h;
              a = b + 56 | 0;
              do {
                k[b >> 2] = 0;
                b = b + 4 | 0;
              } while ((b | 0) < (a | 0));
              k[h >> 2] = g;
              k[h + 8 >> 2] = f;
              k[h + 12 >> 2] = -1;
              k[h + 48 >> 2] = 1;
              td[k[(k[g >> 2] | 0) + 28 >> 2] & 63](g, h, k[c >> 2] | 0, 1);
              if ((k[h + 24 >> 2] | 0) == 1) {
                k[c >> 2] = k[h + 16 >> 2];
                b = 1;
              } else
                b = 0;
            } else
              b = 0;
          else
            b = 1;
        } else
          b = 0;
      else
        b = 1;
      r = i;
      return b | 0;
    }
    function oq(a, b, c, d) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      d = d | 0;
      var e = 0,
          f = 0,
          g = 0,
          h = 0,
          l = 0,
          m = 0,
          n = 0,
          o = 0,
          p = 0,
          q = 0;
      q = r;
      r = r + 64 | 0;
      p = q;
      o = k[a >> 2] | 0;
      n = a + (k[o + -8 >> 2] | 0) | 0;
      o = k[o + -4 >> 2] | 0;
      k[p >> 2] = c;
      k[p + 4 >> 2] = a;
      k[p + 8 >> 2] = b;
      k[p + 12 >> 2] = d;
      b = p + 16 | 0;
      a = p + 20 | 0;
      d = p + 24 | 0;
      e = p + 28 | 0;
      f = p + 32 | 0;
      g = p + 40 | 0;
      h = (o | 0) == (c | 0);
      l = b;
      m = l + 36 | 0;
      do {
        k[l >> 2] = 0;
        l = l + 4 | 0;
      } while ((l | 0) < (m | 0));
      j[b + 36 >> 1] = 0;
      i[b + 38 >> 0] = 0;
      a: do
        if (h) {
          k[p + 48 >> 2] = 1;
          rd[k[(k[c >> 2] | 0) + 20 >> 2] & 63](c, p, n, n, 1, 0);
          d = (k[d >> 2] | 0) == 1 ? n : 0;
        } else {
          jd[k[(k[o >> 2] | 0) + 24 >> 2] & 63](o, p, n, 1, 0);
          switch (k[p + 36 >> 2] | 0) {
            case 1:
              break;
            case 0:
              {
                d = (k[g >> 2] | 0) == 1 & (k[e >> 2] | 0) == 1 & (k[f >> 2] | 0) == 1 ? k[a >> 2] | 0 : 0;
                break a;
              }
            default:
              {
                d = 0;
                break a;
              }
          }
          if ((k[d >> 2] | 0) != 1 ? !((k[g >> 2] | 0) == 0 & (k[e >> 2] | 0) == 1 & (k[f >> 2] | 0) == 1) : 0) {
            d = 0;
            break;
          }
          d = k[b >> 2] | 0;
        }
 while (0);
      r = q;
      return d | 0;
    }
    function pq(a, b, c, d, e) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      d = d | 0;
      e = e | 0;
      i[b + 53 >> 0] = 1;
      do
        if ((k[b + 4 >> 2] | 0) == (d | 0)) {
          i[b + 52 >> 0] = 1;
          d = b + 16 | 0;
          a = k[d >> 2] | 0;
          if (!a) {
            k[d >> 2] = c;
            k[b + 24 >> 2] = e;
            k[b + 36 >> 2] = 1;
            if (!((e | 0) == 1 ? (k[b + 48 >> 2] | 0) == 1 : 0))
              break;
            i[b + 54 >> 0] = 1;
            break;
          }
          if ((a | 0) != (c | 0)) {
            c = b + 36 | 0;
            k[c >> 2] = (k[c >> 2] | 0) + 1;
            i[b + 54 >> 0] = 1;
            break;
          }
          a = b + 24 | 0;
          d = k[a >> 2] | 0;
          if ((d | 0) == 2)
            k[a >> 2] = e;
          else
            e = d;
          if ((e | 0) == 1 ? (k[b + 48 >> 2] | 0) == 1 : 0)
            i[b + 54 >> 0] = 1;
        }
 while (0);
      return ;
    }
    function qq(a, b, c, d, e) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      d = d | 0;
      e = e | 0;
      var f = 0,
          g = 0,
          h = 0,
          j = 0,
          l = 0,
          m = 0,
          n = 0,
          o = 0,
          p = 0,
          q = 0,
          r = 0;
      a: do
        if ((a | 0) == (k[b + 8 >> 2] | 0)) {
          if ((k[b + 4 >> 2] | 0) == (c | 0) ? (g = b + 28 | 0, (k[g >> 2] | 0) != 1) : 0)
            k[g >> 2] = d;
        } else {
          if ((a | 0) != (k[b >> 2] | 0)) {
            r = k[a + 12 >> 2] | 0;
            j = a + 16 + (r << 3) | 0;
            sq(a + 16 | 0, b, c, d, e);
            f = a + 24 | 0;
            if ((r | 0) <= 1)
              break;
            g = k[a + 8 >> 2] | 0;
            if ((g & 2 | 0) == 0 ? (l = b + 36 | 0, (k[l >> 2] | 0) != 1) : 0) {
              if (!(g & 1)) {
                g = b + 54 | 0;
                while (1) {
                  if (i[g >> 0] | 0)
                    break a;
                  if ((k[l >> 2] | 0) == 1)
                    break a;
                  sq(f, b, c, d, e);
                  f = f + 8 | 0;
                  if (f >>> 0 >= j >>> 0)
                    break a;
                }
              }
              g = b + 24 | 0;
              h = b + 54 | 0;
              while (1) {
                if (i[h >> 0] | 0)
                  break a;
                if ((k[l >> 2] | 0) == 1 ? (k[g >> 2] | 0) == 1 : 0)
                  break a;
                sq(f, b, c, d, e);
                f = f + 8 | 0;
                if (f >>> 0 >= j >>> 0)
                  break a;
              }
            }
            g = b + 54 | 0;
            while (1) {
              if (i[g >> 0] | 0)
                break a;
              sq(f, b, c, d, e);
              f = f + 8 | 0;
              if (f >>> 0 >= j >>> 0)
                break a;
            }
          }
          if ((k[b + 16 >> 2] | 0) != (c | 0) ? (q = b + 20 | 0, (k[q >> 2] | 0) != (c | 0)) : 0) {
            k[b + 32 >> 2] = d;
            n = b + 44 | 0;
            if ((k[n >> 2] | 0) == 4)
              break;
            l = k[a + 12 >> 2] | 0;
            j = a + 16 + (l << 3) | 0;
            f = b + 52 | 0;
            m = b + 53 | 0;
            o = b + 54 | 0;
            d = a + 8 | 0;
            p = b + 24 | 0;
            b: do
              if ((l | 0) > 0) {
                h = 0;
                g = 0;
                l = a + 16 | 0;
                while (1) {
                  i[f >> 0] = 0;
                  i[m >> 0] = 0;
                  rq(l, b, c, c, 1, e);
                  if (i[o >> 0] | 0) {
                    r = 20;
                    break b;
                  }
                  do
                    if (i[m >> 0] | 0) {
                      if (!(i[f >> 0] | 0))
                        if (!(k[d >> 2] & 1)) {
                          g = 1;
                          r = 20;
                          break b;
                        } else {
                          g = 1;
                          break;
                        }
                      if ((k[p >> 2] | 0) == 1)
                        break b;
                      if (!(k[d >> 2] & 2))
                        break b;
                      else {
                        h = 1;
                        g = 1;
                      }
                    }
 while (0);
                  l = l + 8 | 0;
                  if (l >>> 0 >= j >>> 0) {
                    r = 20;
                    break;
                  }
                }
              } else {
                h = 0;
                g = 0;
                r = 20;
              }
 while (0);
            do
              if ((r | 0) == 20) {
                if ((!h ? (k[q >> 2] = c, c = b + 40 | 0, k[c >> 2] = (k[c >> 2] | 0) + 1, (k[b + 36 >> 2] | 0) == 1) : 0) ? (k[p >> 2] | 0) == 2 : 0) {
                  i[o >> 0] = 1;
                  if (g)
                    break;
                } else
                  r = 24;
                if ((r | 0) == 24 ? g : 0)
                  break;
                k[n >> 2] = 4;
                break a;
              }
 while (0);
            k[n >> 2] = 3;
            break;
          }
          if ((d | 0) == 1)
            k[b + 32 >> 2] = 1;
        }
 while (0);
      return ;
    }
    function rq(a, b, c, d, e, f) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      d = d | 0;
      e = e | 0;
      f = f | 0;
      var g = 0,
          h = 0;
      h = k[a + 4 >> 2] | 0;
      g = h >> 8;
      if (h & 1)
        g = k[(k[d >> 2] | 0) + g >> 2] | 0;
      a = k[a >> 2] | 0;
      rd[k[(k[a >> 2] | 0) + 20 >> 2] & 63](a, b, c, d + g | 0, (h & 2 | 0) != 0 ? e : 2, f);
      return ;
    }
    function sq(a, b, c, d, e) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      d = d | 0;
      e = e | 0;
      var f = 0,
          g = 0;
      g = k[a + 4 >> 2] | 0;
      f = g >> 8;
      if (g & 1)
        f = k[(k[c >> 2] | 0) + f >> 2] | 0;
      a = k[a >> 2] | 0;
      jd[k[(k[a >> 2] | 0) + 24 >> 2] & 63](a, b, c + f | 0, (g & 2 | 0) != 0 ? d : 2, e);
      return ;
    }
    function tq(a, b, c, d, e) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      d = d | 0;
      e = e | 0;
      var f = 0,
          g = 0,
          h = 0,
          j = 0;
      a: do
        if ((a | 0) == (k[b + 8 >> 2] | 0)) {
          if ((k[b + 4 >> 2] | 0) == (c | 0) ? (f = b + 28 | 0, (k[f >> 2] | 0) != 1) : 0)
            k[f >> 2] = d;
        } else {
          if ((a | 0) != (k[b >> 2] | 0)) {
            h = k[a + 8 >> 2] | 0;
            jd[k[(k[h >> 2] | 0) + 24 >> 2] & 63](h, b, c, d, e);
            break;
          }
          if ((k[b + 16 >> 2] | 0) != (c | 0) ? (g = b + 20 | 0, (k[g >> 2] | 0) != (c | 0)) : 0) {
            k[b + 32 >> 2] = d;
            d = b + 44 | 0;
            if ((k[d >> 2] | 0) == 4)
              break;
            f = b + 52 | 0;
            i[f >> 0] = 0;
            j = b + 53 | 0;
            i[j >> 0] = 0;
            a = k[a + 8 >> 2] | 0;
            rd[k[(k[a >> 2] | 0) + 20 >> 2] & 63](a, b, c, c, 1, e);
            if (i[j >> 0] | 0) {
              if (!(i[f >> 0] | 0)) {
                f = 1;
                h = 13;
              }
            } else {
              f = 0;
              h = 13;
            }
            do
              if ((h | 0) == 13) {
                k[g >> 2] = c;
                j = b + 40 | 0;
                k[j >> 2] = (k[j >> 2] | 0) + 1;
                if ((k[b + 36 >> 2] | 0) == 1 ? (k[b + 24 >> 2] | 0) == 2 : 0) {
                  i[b + 54 >> 0] = 1;
                  if (f)
                    break;
                } else
                  h = 16;
                if ((h | 0) == 16 ? f : 0)
                  break;
                k[d >> 2] = 4;
                break a;
              }
 while (0);
            k[d >> 2] = 3;
            break;
          }
          if ((d | 0) == 1)
            k[b + 32 >> 2] = 1;
        }
 while (0);
      return ;
    }
    function uq(a, b, c, d, e) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      d = d | 0;
      e = e | 0;
      var f = 0,
          g = 0;
      do
        if ((a | 0) == (k[b + 8 >> 2] | 0)) {
          if ((k[b + 4 >> 2] | 0) == (c | 0) ? (g = b + 28 | 0, (k[g >> 2] | 0) != 1) : 0)
            k[g >> 2] = d;
        } else if ((a | 0) == (k[b >> 2] | 0)) {
          if ((k[b + 16 >> 2] | 0) != (c | 0) ? (f = b + 20 | 0, (k[f >> 2] | 0) != (c | 0)) : 0) {
            k[b + 32 >> 2] = d;
            k[f >> 2] = c;
            e = b + 40 | 0;
            k[e >> 2] = (k[e >> 2] | 0) + 1;
            if ((k[b + 36 >> 2] | 0) == 1 ? (k[b + 24 >> 2] | 0) == 2 : 0)
              i[b + 54 >> 0] = 1;
            k[b + 44 >> 2] = 4;
            break;
          }
          if ((d | 0) == 1)
            k[b + 32 >> 2] = 1;
        }
 while (0);
      return ;
    }
    function vq(a, b, c, d, e, f) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      d = d | 0;
      e = e | 0;
      f = f | 0;
      var g = 0,
          h = 0,
          j = 0,
          l = 0,
          m = 0,
          n = 0,
          o = 0,
          p = 0;
      if ((a | 0) == (k[b + 8 >> 2] | 0))
        pq(0, b, c, d, e);
      else {
        m = b + 52 | 0;
        n = i[m >> 0] | 0;
        o = b + 53 | 0;
        p = i[o >> 0] | 0;
        l = k[a + 12 >> 2] | 0;
        g = a + 16 + (l << 3) | 0;
        i[m >> 0] = 0;
        i[o >> 0] = 0;
        rq(a + 16 | 0, b, c, d, e, f);
        a: do
          if ((l | 0) > 1) {
            h = b + 24 | 0;
            j = a + 8 | 0;
            l = b + 54 | 0;
            a = a + 24 | 0;
            do {
              if (i[l >> 0] | 0)
                break a;
              if (!(i[m >> 0] | 0)) {
                if ((i[o >> 0] | 0) != 0 ? (k[j >> 2] & 1 | 0) == 0 : 0)
                  break a;
              } else {
                if ((k[h >> 2] | 0) == 1)
                  break a;
                if (!(k[j >> 2] & 2))
                  break a;
              }
              i[m >> 0] = 0;
              i[o >> 0] = 0;
              rq(a, b, c, d, e, f);
              a = a + 8 | 0;
            } while (a >>> 0 < g >>> 0);
          }
 while (0);
        i[m >> 0] = n;
        i[o >> 0] = p;
      }
      return ;
    }
    function wq(a, b, c, d, e, f) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      d = d | 0;
      e = e | 0;
      f = f | 0;
      if ((a | 0) == (k[b + 8 >> 2] | 0))
        pq(0, b, c, d, e);
      else {
        a = k[a + 8 >> 2] | 0;
        rd[k[(k[a >> 2] | 0) + 20 >> 2] & 63](a, b, c, d, e, f);
      }
      return ;
    }
    function xq(a, b, c, d, e, f) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      d = d | 0;
      e = e | 0;
      f = f | 0;
      if ((a | 0) == (k[b + 8 >> 2] | 0))
        pq(0, b, c, d, e);
      return ;
    }
    function yq(a) {
      a = a | 0;
      return ((a | 0) == 32 | (a + -9 | 0) >>> 0 < 5) & 1 | 0;
    }
    function zq(a) {
      a = a | 0;
      return (a + -65 | 0) >>> 0 < 26 | 0;
    }
    function Aq(a) {
      a = a | 0;
      if ((a + -48 | 0) >>> 0 < 10) {
        a = 1;
        a = a & 1;
        return a | 0;
      }
      a = ((a | 32) + -97 | 0) >>> 0 < 6;
      a = a & 1;
      return a | 0;
    }
    function Bq(a) {
      a = a | 0;
      var b = 0;
      b = (zq(a) | 0) == 0;
      return (b ? a : a | 32) | 0;
    }
    function Cq(a, b, c, d, e) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      d = d | 0;
      e = e | 0;
      var f = 0,
          g = 0,
          h = 0,
          j = 0,
          m = 0,
          n = 0,
          o = 0,
          p = 0,
          q = 0,
          r = 0,
          s = 0;
      if (b >>> 0 > 36) {
        r = Yc() | 0;
        k[r >> 2] = 22;
        r = 0;
        s = 0;
        O = r;
        return s | 0;
      }
      s = a + 4 | 0;
      r = a + 100 | 0;
      do {
        f = k[s >> 2] | 0;
        if (f >>> 0 < (k[r >> 2] | 0) >>> 0) {
          k[s >> 2] = f + 1;
          f = l[f >> 0] | 0;
        } else
          f = Fq(a) | 0;
      } while ((yq(f) | 0) != 0);
      a: do
        switch (f | 0) {
          case 43:
          case 45:
            {
              h = ((f | 0) == 45) << 31 >> 31;
              f = k[s >> 2] | 0;
              if (f >>> 0 < (k[r >> 2] | 0) >>> 0) {
                k[s >> 2] = f + 1;
                f = l[f >> 0] | 0;
                q = h;
                break a;
              } else {
                f = Fq(a) | 0;
                q = h;
                break a;
              }
            }
          default:
            q = 0;
        }
 while (0);
      j = (b | 0) == 0;
      do
        if ((b & -17 | 0) == 0 & (f | 0) == 48) {
          h = k[s >> 2] | 0;
          if (h >>> 0 < (k[r >> 2] | 0) >>> 0) {
            k[s >> 2] = h + 1;
            f = l[h >> 0] | 0;
          } else
            f = Fq(a) | 0;
          if ((f | 32 | 0) != 120)
            if (j) {
              b = 8;
              p = 46;
              break;
            } else {
              p = 32;
              break;
            }
          f = k[s >> 2] | 0;
          if (f >>> 0 < (k[r >> 2] | 0) >>> 0) {
            k[s >> 2] = f + 1;
            f = l[f >> 0] | 0;
          } else
            f = Fq(a) | 0;
          if ((l[1014802 + (f + 1) >> 0] | 0) > 15) {
            b = (k[r >> 2] | 0) == 0;
            if (!b)
              k[s >> 2] = (k[s >> 2] | 0) + -1;
            if (!c) {
              Eq(a, 0);
              r = 0;
              s = 0;
              O = r;
              return s | 0;
            }
            if (b) {
              r = 0;
              s = 0;
              O = r;
              return s | 0;
            }
            k[s >> 2] = (k[s >> 2] | 0) + -1;
            r = 0;
            s = 0;
            O = r;
            return s | 0;
          } else {
            b = 16;
            p = 46;
          }
        } else {
          b = j ? 10 : b;
          if ((l[1014802 + (f + 1) >> 0] | 0) >>> 0 < b >>> 0)
            p = 32;
          else {
            if (k[r >> 2] | 0)
              k[s >> 2] = (k[s >> 2] | 0) + -1;
            Eq(a, 0);
            r = Yc() | 0;
            k[r >> 2] = 22;
            r = 0;
            s = 0;
            O = r;
            return s | 0;
          }
        }
 while (0);
      if ((p | 0) == 32)
        if ((b | 0) == 10) {
          b = f + -48 | 0;
          if (b >>> 0 < 10) {
            f = 0;
            while (1) {
              h = (f * 10 | 0) + b | 0;
              f = k[s >> 2] | 0;
              if (f >>> 0 < (k[r >> 2] | 0) >>> 0) {
                k[s >> 2] = f + 1;
                f = l[f >> 0] | 0;
              } else
                f = Fq(a) | 0;
              b = f + -48 | 0;
              if (!(b >>> 0 < 10 & h >>> 0 < 429496729)) {
                b = h;
                break;
              } else
                f = h;
            }
            h = 0;
          } else {
            b = 0;
            h = 0;
          }
          j = f + -48 | 0;
          if (j >>> 0 < 10) {
            while (1) {
              g = Er(b | 0, h | 0, 10, 0) | 0;
              m = O;
              n = ((j | 0) < 0) << 31 >> 31;
              o = ~n;
              if (m >>> 0 > o >>> 0 | (m | 0) == (o | 0) & g >>> 0 > ~j >>> 0) {
                c = j;
                j = b;
                break;
              }
              b = pr(g | 0, m | 0, j | 0, n | 0) | 0;
              h = O;
              f = k[s >> 2] | 0;
              if (f >>> 0 < (k[r >> 2] | 0) >>> 0) {
                k[s >> 2] = f + 1;
                f = l[f >> 0] | 0;
              } else
                f = Fq(a) | 0;
              j = f + -48 | 0;
              if (!(j >>> 0 < 10 & (h >>> 0 < 429496729 | (h | 0) == 429496729 & b >>> 0 < 2576980378))) {
                c = j;
                j = b;
                break;
              }
            }
            if (c >>> 0 > 9)
              f = j;
            else {
              b = 10;
              p = 72;
            }
          } else
            f = b;
        } else
          p = 46;
      b: do
        if ((p | 0) == 46) {
          if (!(b + -1 & b)) {
            p = i[1015059 + ((b * 23 | 0) >>> 5 & 7) >> 0] | 0;
            h = i[1014802 + (f + 1) >> 0] | 0;
            g = h & 255;
            if (g >>> 0 < b >>> 0) {
              h = 0;
              while (1) {
                j = g | h << p;
                h = k[s >> 2] | 0;
                if (h >>> 0 < (k[r >> 2] | 0) >>> 0) {
                  k[s >> 2] = h + 1;
                  f = l[h >> 0] | 0;
                } else
                  f = Fq(a) | 0;
                h = i[1014802 + (f + 1) >> 0] | 0;
                g = h & 255;
                if (!(j >>> 0 < 134217728 & g >>> 0 < b >>> 0))
                  break;
                else
                  h = j;
              }
              g = 0;
            } else {
              g = 0;
              j = 0;
            }
            c = tr(-1, -1, p | 0) | 0;
            n = O;
            if ((h & 255) >>> 0 >= b >>> 0 | (g >>> 0 > n >>> 0 | (g | 0) == (n | 0) & j >>> 0 > c >>> 0)) {
              h = g;
              p = 72;
              break;
            }
            while (1) {
              j = xr(j | 0, g | 0, p | 0) | 0;
              g = O;
              j = h & 255 | j;
              h = k[s >> 2] | 0;
              if (h >>> 0 < (k[r >> 2] | 0) >>> 0) {
                k[s >> 2] = h + 1;
                f = l[h >> 0] | 0;
              } else
                f = Fq(a) | 0;
              h = i[1014802 + (f + 1) >> 0] | 0;
              if ((h & 255) >>> 0 >= b >>> 0 | (g >>> 0 > n >>> 0 | (g | 0) == (n | 0) & j >>> 0 > c >>> 0)) {
                h = g;
                p = 72;
                break b;
              }
            }
          }
          g = i[1014802 + (f + 1) >> 0] | 0;
          h = g & 255;
          if (h >>> 0 < b >>> 0) {
            f = 0;
            while (1) {
              j = h + (ka(f, b) | 0) | 0;
              f = k[s >> 2] | 0;
              if (f >>> 0 < (k[r >> 2] | 0) >>> 0) {
                k[s >> 2] = f + 1;
                f = l[f >> 0] | 0;
              } else
                f = Fq(a) | 0;
              g = i[1014802 + (f + 1) >> 0] | 0;
              h = g & 255;
              if (!(j >>> 0 < 119304647 & h >>> 0 < b >>> 0))
                break;
              else
                f = j;
            }
            h = 0;
          } else {
            j = 0;
            h = 0;
          }
          if ((g & 255) >>> 0 < b >>> 0) {
            o = Fr(-1, -1, b | 0, 0) | 0;
            p = O;
            while (1) {
              if (h >>> 0 > p >>> 0 | (h | 0) == (p | 0) & j >>> 0 > o >>> 0) {
                p = 72;
                break b;
              }
              m = Er(j | 0, h | 0, b | 0, 0) | 0;
              c = O;
              n = g & 255;
              if (c >>> 0 > 4294967295 | (c | 0) == -1 & m >>> 0 > ~n >>> 0) {
                p = 72;
                break b;
              }
              j = pr(n | 0, 0, m | 0, c | 0) | 0;
              h = O;
              g = k[s >> 2] | 0;
              if (g >>> 0 < (k[r >> 2] | 0) >>> 0) {
                k[s >> 2] = g + 1;
                f = l[g >> 0] | 0;
              } else
                f = Fq(a) | 0;
              g = i[1014802 + (f + 1) >> 0] | 0;
              if ((g & 255) >>> 0 >= b >>> 0) {
                p = 72;
                break;
              }
            }
          } else
            p = 72;
        }
 while (0);
      if ((p | 0) == 72)
        if ((l[1014802 + (f + 1) >> 0] | 0) >>> 0 < b >>> 0) {
          do {
            f = k[s >> 2] | 0;
            if (f >>> 0 < (k[r >> 2] | 0) >>> 0) {
              k[s >> 2] = f + 1;
              f = l[f >> 0] | 0;
            } else
              f = Fq(a) | 0;
          } while ((l[1014802 + (f + 1) >> 0] | 0) >>> 0 < b >>> 0);
          h = Yc() | 0;
          k[h >> 2] = 34;
          h = e;
          f = d;
        } else
          f = j;
      if (k[r >> 2] | 0)
        k[s >> 2] = (k[s >> 2] | 0) + -1;
      if (!(h >>> 0 < e >>> 0 | (h | 0) == (e | 0) & f >>> 0 < d >>> 0)) {
        if (!((d & 1 | 0) != 0 | 0 != 0 | (q | 0) != 0)) {
          s = Yc() | 0;
          k[s >> 2] = 34;
          s = pr(d | 0, e | 0, -1, -1) | 0;
          r = O;
          O = r;
          return s | 0;
        }
        if (h >>> 0 > e >>> 0 | (h | 0) == (e | 0) & f >>> 0 > d >>> 0) {
          r = Yc() | 0;
          k[r >> 2] = 34;
          r = e;
          s = d;
          O = r;
          return s | 0;
        }
      }
      s = ((q | 0) < 0) << 31 >> 31;
      s = or(f ^ q | 0, h ^ s | 0, q | 0, s | 0) | 0;
      r = O;
      O = r;
      return s | 0;
    }
    function Dq(a, b, c) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      var d = 0.0,
          e = 0,
          f = 0.0,
          g = 0,
          h = 0,
          j = 0.0,
          m = 0,
          n = 0,
          o = 0,
          p = 0,
          q = 0.0,
          s = 0,
          t = 0,
          u = 0,
          v = 0,
          w = 0,
          x = 0,
          y = 0,
          z = 0,
          A = 0,
          B = 0,
          C = 0,
          F = 0,
          G = 0,
          H = 0,
          I = 0,
          J = 0,
          K = 0.0,
          L = 0.0;
      J = r;
      r = r + 512 | 0;
      F = J;
      switch (b | 0) {
        case 1:
          {
            I = 53;
            G = -1074;
            break;
          }
        case 0:
          {
            I = 24;
            G = -149;
            break;
          }
        case 2:
          {
            I = 53;
            G = -1074;
            break;
          }
        default:
          {
            q = 0.0;
            r = J;
            return +q;
          }
      }
      A = a + 4 | 0;
      z = a + 100 | 0;
      do {
        g = k[A >> 2] | 0;
        if (g >>> 0 < (k[z >> 2] | 0) >>> 0) {
          k[A >> 2] = g + 1;
          g = l[g >> 0] | 0;
        } else
          g = Fq(a) | 0;
      } while ((yq(g) | 0) != 0);
      a: do
        switch (g | 0) {
          case 43:
          case 45:
            {
              b = 1 - (((g | 0) == 45 & 1) << 1) | 0;
              g = k[A >> 2] | 0;
              if (g >>> 0 < (k[z >> 2] | 0) >>> 0) {
                k[A >> 2] = g + 1;
                g = l[g >> 0] | 0;
                H = b;
                break a;
              } else {
                g = Fq(a) | 0;
                H = b;
                break a;
              }
            }
          default:
            H = 1;
        }
 while (0);
      h = 0;
      do {
        if ((g | 32 | 0) != (i[1015068 + h >> 0] | 0))
          break;
        do
          if (h >>> 0 < 7) {
            g = k[A >> 2] | 0;
            if (g >>> 0 < (k[z >> 2] | 0) >>> 0) {
              k[A >> 2] = g + 1;
              g = l[g >> 0] | 0;
              break;
            } else {
              g = Fq(a) | 0;
              break;
            }
          }
 while (0);
        h = h + 1 | 0;
      } while (h >>> 0 < 8);
      b: do
        switch (h | 0) {
          case 3:
            {
              x = 23;
              break;
            }
          case 8:
            break;
          default:
            {
              p = (c | 0) != 0;
              if (p & h >>> 0 > 3)
                if ((h | 0) == 8)
                  break b;
                else {
                  x = 23;
                  break b;
                }
              do
                if (!h) {
                  if ((g | 32 | 0) == 110) {
                    b = k[A >> 2] | 0;
                    if (b >>> 0 < (k[z >> 2] | 0) >>> 0) {
                      k[A >> 2] = b + 1;
                      b = l[b >> 0] | 0;
                    } else
                      b = Fq(a) | 0;
                    if ((b | 32 | 0) != 97)
                      break;
                    b = k[A >> 2] | 0;
                    if (b >>> 0 < (k[z >> 2] | 0) >>> 0) {
                      k[A >> 2] = b + 1;
                      b = l[b >> 0] | 0;
                    } else
                      b = Fq(a) | 0;
                    if ((b | 32 | 0) != 110)
                      break;
                    b = k[A >> 2] | 0;
                    if (b >>> 0 < (k[z >> 2] | 0) >>> 0) {
                      k[A >> 2] = b + 1;
                      b = l[b >> 0] | 0;
                    } else
                      b = Fq(a) | 0;
                    if ((b | 0) == 40)
                      b = 1;
                    else {
                      if (!(k[z >> 2] | 0)) {
                        q = D;
                        r = J;
                        return +q;
                      }
                      k[A >> 2] = (k[A >> 2] | 0) + -1;
                      q = D;
                      r = J;
                      return +q;
                    }
                    while (1) {
                      e = k[A >> 2] | 0;
                      if (e >>> 0 < (k[z >> 2] | 0) >>> 0) {
                        k[A >> 2] = e + 1;
                        e = l[e >> 0] | 0;
                      } else
                        e = Fq(a) | 0;
                      if (!((e + -48 | 0) >>> 0 < 10 | (e + -65 | 0) >>> 0 < 26) ? !((e | 0) == 95 | (e + -97 | 0) >>> 0 < 26) : 0)
                        break;
                      b = b + 1 | 0;
                    }
                    if ((e | 0) == 41) {
                      q = D;
                      r = J;
                      return +q;
                    }
                    e = (k[z >> 2] | 0) == 0;
                    if (!e)
                      k[A >> 2] = (k[A >> 2] | 0) + -1;
                    if (!p) {
                      I = Yc() | 0;
                      k[I >> 2] = 22;
                      Eq(a, 0);
                      q = 0.0;
                      r = J;
                      return +q;
                    }
                    if ((b | 0) == 0 | e) {
                      q = D;
                      r = J;
                      return +q;
                    }
                    e = k[A >> 2] | 0;
                    do {
                      b = b + -1 | 0;
                      e = e + -1 | 0;
                    } while ((b | 0) != 0);
                    k[A >> 2] = e;
                    q = D;
                    r = J;
                    return +q;
                  }
                  do
                    if ((g | 0) == 48) {
                      g = k[A >> 2] | 0;
                      if (g >>> 0 < (k[z >> 2] | 0) >>> 0) {
                        k[A >> 2] = g + 1;
                        g = l[g >> 0] | 0;
                      } else
                        g = Fq(a) | 0;
                      if ((g | 32 | 0) != 120) {
                        if (!(k[z >> 2] | 0)) {
                          g = 48;
                          break;
                        }
                        k[A >> 2] = (k[A >> 2] | 0) + -1;
                        g = 48;
                        break;
                      }
                      g = k[A >> 2] | 0;
                      if (g >>> 0 < (k[z >> 2] | 0) >>> 0) {
                        k[A >> 2] = g + 1;
                        g = l[g >> 0] | 0;
                        m = 0;
                      } else {
                        g = Fq(a) | 0;
                        m = 0;
                      }
                      c: while (1) {
                        switch (g | 0) {
                          case 48:
                            break;
                          case 46:
                            {
                              x = 71;
                              break c;
                            }
                          default:
                            {
                              n = 0;
                              t = 0;
                              h = 0;
                              b = 0;
                              w = g;
                              p = 0;
                              v = 0;
                              j = 1.0;
                              g = 0;
                              f = 0.0;
                              break c;
                            }
                        }
                        g = k[A >> 2] | 0;
                        if (g >>> 0 < (k[z >> 2] | 0) >>> 0) {
                          k[A >> 2] = g + 1;
                          g = l[g >> 0] | 0;
                          m = 1;
                          continue;
                        } else {
                          g = Fq(a) | 0;
                          m = 1;
                          continue;
                        }
                      }
                      if ((x | 0) == 71) {
                        g = k[A >> 2] | 0;
                        if (g >>> 0 < (k[z >> 2] | 0) >>> 0) {
                          k[A >> 2] = g + 1;
                          g = l[g >> 0] | 0;
                        } else
                          g = Fq(a) | 0;
                        if ((g | 0) == 48) {
                          h = 0;
                          b = 0;
                          do {
                            g = k[A >> 2] | 0;
                            if (g >>> 0 < (k[z >> 2] | 0) >>> 0) {
                              k[A >> 2] = g + 1;
                              g = l[g >> 0] | 0;
                            } else
                              g = Fq(a) | 0;
                            h = pr(h | 0, b | 0, -1, -1) | 0;
                            b = O;
                          } while ((g | 0) == 48);
                          n = 0;
                          t = 0;
                          w = g;
                          m = 1;
                          p = 1;
                          v = 0;
                          j = 1.0;
                          g = 0;
                          f = 0.0;
                        } else {
                          n = 0;
                          t = 0;
                          h = 0;
                          b = 0;
                          w = g;
                          p = 1;
                          v = 0;
                          j = 1.0;
                          g = 0;
                          f = 0.0;
                        }
                      }
                      while (1) {
                        s = w + -48 | 0;
                        o = w | 32;
                        if (s >>> 0 >= 10) {
                          e = (w | 0) == 46;
                          if (!(e | (o + -97 | 0) >>> 0 < 6)) {
                            s = w;
                            break;
                          }
                          if (e)
                            if (!p) {
                              h = t;
                              b = n;
                              p = 1;
                              s = v;
                              q = j;
                            } else {
                              s = 46;
                              break;
                            }
                          else
                            x = 83;
                        } else
                          x = 83;
                        if ((x | 0) == 83) {
                          x = 0;
                          o = (w | 0) > 57 ? o + -87 | 0 : s;
                          do
                            if (!((n | 0) < 0 | (n | 0) == 0 & t >>> 0 < 8)) {
                              if ((n | 0) < 0 | (n | 0) == 0 & t >>> 0 < 14) {
                                j = j * .0625;
                                s = v;
                                q = j;
                                f = f + j * +(o | 0);
                                break;
                              }
                              if ((v | 0) != 0 | (o | 0) == 0) {
                                s = v;
                                q = j;
                              } else {
                                s = 1;
                                q = j;
                                f = f + j * .5;
                              }
                            } else {
                              s = v;
                              q = j;
                              g = o + (g << 4) | 0;
                            }
 while (0);
                          t = pr(t | 0, n | 0, 1, 0) | 0;
                          n = O;
                          m = 1;
                        }
                        o = k[A >> 2] | 0;
                        if (o >>> 0 < (k[z >> 2] | 0) >>> 0) {
                          k[A >> 2] = o + 1;
                          w = l[o >> 0] | 0;
                          v = s;
                          j = q;
                          continue;
                        } else {
                          w = Fq(a) | 0;
                          v = s;
                          j = q;
                          continue;
                        }
                      }
                      if (!m) {
                        b = (k[z >> 2] | 0) == 0;
                        if (!b)
                          k[A >> 2] = (k[A >> 2] | 0) + -1;
                        if (c) {
                          if (!b ? (y = k[A >> 2] | 0, k[A >> 2] = y + -1, (p | 0) != 0) : 0)
                            k[A >> 2] = y + -2;
                        } else
                          Eq(a, 0);
                        q = +(H | 0) * 0.0;
                        r = J;
                        return +q;
                      }
                      p = (p | 0) == 0;
                      o = p ? t : h;
                      p = p ? n : b;
                      if ((n | 0) < 0 | (n | 0) == 0 & t >>> 0 < 8) {
                        h = t;
                        do {
                          g = g << 4;
                          h = pr(h | 0, n | 0, 1, 0) | 0;
                          n = O;
                        } while ((n | 0) < 0 | (n | 0) == 0 & h >>> 0 < 8);
                      }
                      do
                        if ((s | 32 | 0) == 112) {
                          e = fr(a, c) | 0;
                          b = O;
                          if ((e | 0) == 0 & (b | 0) == -2147483648)
                            if (!c) {
                              Eq(a, 0);
                              q = 0.0;
                              r = J;
                              return +q;
                            } else {
                              if (!(k[z >> 2] | 0)) {
                                e = 0;
                                b = 0;
                                break;
                              }
                              k[A >> 2] = (k[A >> 2] | 0) + -1;
                              e = 0;
                              b = 0;
                              break;
                            }
                        } else if (!(k[z >> 2] | 0)) {
                          e = 0;
                          b = 0;
                        } else {
                          k[A >> 2] = (k[A >> 2] | 0) + -1;
                          e = 0;
                          b = 0;
                        }
 while (0);
                      B = xr(o | 0, p | 0, 2) | 0;
                      B = pr(B | 0, O | 0, -32, -1) | 0;
                      b = pr(B | 0, O | 0, e | 0, b | 0) | 0;
                      e = O;
                      if (!g) {
                        q = +(H | 0) * 0.0;
                        r = J;
                        return +q;
                      }
                      if ((e | 0) > 0 | (e | 0) == 0 & b >>> 0 > (0 - G | 0) >>> 0) {
                        I = Yc() | 0;
                        k[I >> 2] = 34;
                        q = +(H | 0) * 1797693134862315708145274.0e284 * 1797693134862315708145274.0e284;
                        r = J;
                        return +q;
                      }
                      B = G + -106 | 0;
                      a = ((B | 0) < 0) << 31 >> 31;
                      if ((e | 0) < (a | 0) | (e | 0) == (a | 0) & b >>> 0 < B >>> 0) {
                        I = Yc() | 0;
                        k[I >> 2] = 34;
                        q = +(H | 0) * 2.2250738585072014e-308 * 2.2250738585072014e-308;
                        r = J;
                        return +q;
                      }
                      if ((g | 0) > -1) {
                        do {
                          a = !(f >= .5);
                          B = a & 1 | g << 1;
                          g = B ^ 1;
                          f = f + (a ? f : f + -1.0);
                          b = pr(b | 0, e | 0, -1, -1) | 0;
                          e = O;
                        } while ((B | 0) > -1);
                        p = b;
                        j = f;
                      } else {
                        p = b;
                        j = f;
                      }
                      b = or(32, 0, G | 0, ((G | 0) < 0) << 31 >> 31 | 0) | 0;
                      b = pr(p | 0, e | 0, b | 0, O | 0) | 0;
                      G = O;
                      if (0 > (G | 0) | 0 == (G | 0) & I >>> 0 > b >>> 0)
                        if ((b | 0) < 0) {
                          b = 0;
                          x = 124;
                        } else
                          x = 122;
                      else {
                        b = I;
                        x = 122;
                      }
                      if ((x | 0) == 122)
                        if ((b | 0) < 53)
                          x = 124;
                        else {
                          e = b;
                          f = +(H | 0);
                          d = 0.0;
                        }
                      if ((x | 0) == 124) {
                        d = +(H | 0);
                        e = b;
                        f = d;
                        d = +Hq(+Nq(1.0, 84 - b | 0), d);
                      }
                      I = (g & 1 | 0) == 0 & (j != 0.0 & (e | 0) < 32);
                      d = f * (I ? 0.0 : j) + (d + f * +(((I & 1) + g | 0) >>> 0)) - d;
                      if (!(d != 0.0)) {
                        I = Yc() | 0;
                        k[I >> 2] = 34;
                      }
                      q = +Oq(d, p);
                      r = J;
                      return +q;
                    }
 while (0);
                  B = G + I | 0;
                  C = 0 - B | 0;
                  n = 0;
                  d: while (1) {
                    switch (g | 0) {
                      case 48:
                        break;
                      case 46:
                        {
                          x = 135;
                          break d;
                        }
                      default:
                        {
                          b = 0;
                          s = 0;
                          t = 0;
                          break d;
                        }
                    }
                    g = k[A >> 2] | 0;
                    if (g >>> 0 < (k[z >> 2] | 0) >>> 0) {
                      k[A >> 2] = g + 1;
                      g = l[g >> 0] | 0;
                      n = 1;
                      continue;
                    } else {
                      g = Fq(a) | 0;
                      n = 1;
                      continue;
                    }
                  }
                  if ((x | 0) == 135) {
                    g = k[A >> 2] | 0;
                    if (g >>> 0 < (k[z >> 2] | 0) >>> 0) {
                      k[A >> 2] = g + 1;
                      g = l[g >> 0] | 0;
                    } else
                      g = Fq(a) | 0;
                    if ((g | 0) == 48) {
                      b = 0;
                      g = 0;
                      while (1) {
                        b = pr(b | 0, g | 0, -1, -1) | 0;
                        n = O;
                        g = k[A >> 2] | 0;
                        if (g >>> 0 < (k[z >> 2] | 0) >>> 0) {
                          k[A >> 2] = g + 1;
                          g = l[g >> 0] | 0;
                        } else
                          g = Fq(a) | 0;
                        if ((g | 0) == 48)
                          g = n;
                        else {
                          s = n;
                          n = 1;
                          t = 1;
                          break;
                        }
                      }
                    } else {
                      b = 0;
                      s = 0;
                      t = 1;
                    }
                  }
                  k[F >> 2] = 0;
                  o = g + -48 | 0;
                  p = (g | 0) == 46;
                  e: do
                    if (p | o >>> 0 < 10) {
                      y = F + 496 | 0;
                      w = 0;
                      m = 0;
                      h = 0;
                      e = 0;
                      x = 0;
                      f: while (1) {
                        do
                          if (p)
                            if (!t) {
                              b = w;
                              s = m;
                              t = 1;
                              v = x;
                            } else {
                              t = s;
                              o = w;
                              g = m;
                              p = x;
                              break f;
                            }
                          else {
                            u = pr(w | 0, m | 0, 1, 0) | 0;
                            m = O;
                            v = (g | 0) != 48;
                            if ((e | 0) >= 125) {
                              if (!v) {
                                w = u;
                                v = x;
                                break;
                              }
                              k[y >> 2] = k[y >> 2] | 1;
                              w = u;
                              v = x;
                              break;
                            }
                            p = F + (e << 2) | 0;
                            if (h)
                              o = g + -48 + ((k[p >> 2] | 0) * 10 | 0) | 0;
                            k[p >> 2] = o;
                            h = h + 1 | 0;
                            p = (h | 0) == 9;
                            w = u;
                            n = 1;
                            h = p ? 0 : h;
                            e = (p & 1) + e | 0;
                            v = v ? u : x;
                          }
 while (0);
                        p = k[A >> 2] | 0;
                        if (p >>> 0 < (k[z >> 2] | 0) >>> 0) {
                          k[A >> 2] = p + 1;
                          g = l[p >> 0] | 0;
                        } else
                          g = Fq(a) | 0;
                        o = g + -48 | 0;
                        p = (g | 0) == 46;
                        if (!(p | o >>> 0 < 10)) {
                          o = w;
                          p = v;
                          x = 158;
                          break e;
                        } else
                          x = v;
                      }
                      m = t;
                      n = (n | 0) != 0;
                      x = 166;
                    } else {
                      o = 0;
                      m = 0;
                      h = 0;
                      e = 0;
                      p = 0;
                      x = 158;
                    }
 while (0);
                  do
                    if ((x | 0) == 158) {
                      t = (t | 0) == 0;
                      b = t ? o : b;
                      t = t ? m : s;
                      n = (n | 0) != 0;
                      if (!((g | 32 | 0) == 101 & n))
                        if ((g | 0) > -1) {
                          g = m;
                          m = t;
                          x = 166;
                          break;
                        } else {
                          g = m;
                          m = t;
                          x = 168;
                          break;
                        }
                      n = fr(a, c) | 0;
                      g = O;
                      if ((n | 0) == 0 & (g | 0) == -2147483648) {
                        if (!c) {
                          Eq(a, 0);
                          d = 0.0;
                          break;
                        }
                        if (!(k[z >> 2] | 0)) {
                          n = 0;
                          g = 0;
                        } else {
                          k[A >> 2] = (k[A >> 2] | 0) + -1;
                          n = 0;
                          g = 0;
                        }
                      }
                      n = pr(n | 0, g | 0, b | 0, t | 0) | 0;
                      t = O;
                      x = 170;
                    }
 while (0);
                  if ((x | 0) == 166)
                    if (k[z >> 2] | 0) {
                      k[A >> 2] = (k[A >> 2] | 0) + -1;
                      if (n) {
                        n = b;
                        t = m;
                        m = g;
                        x = 170;
                      } else
                        x = 169;
                    } else
                      x = 168;
                  if ((x | 0) == 168)
                    if (n) {
                      n = b;
                      t = m;
                      m = g;
                      x = 170;
                    } else
                      x = 169;
                  do
                    if ((x | 0) == 169) {
                      I = Yc() | 0;
                      k[I >> 2] = 22;
                      Eq(a, 0);
                      d = 0.0;
                    } else if ((x | 0) == 170) {
                      g = k[F >> 2] | 0;
                      if (!g) {
                        d = +(H | 0) * 0.0;
                        break;
                      }
                      if (((m | 0) < 0 | (m | 0) == 0 & o >>> 0 < 10) & ((n | 0) == (o | 0) & (t | 0) == (m | 0)) ? I >>> 0 > 30 | (g >>> I | 0) == 0 : 0) {
                        d = +(H | 0) * +(g >>> 0);
                        break;
                      }
                      a = (G | 0) / -2 | 0;
                      A = ((a | 0) < 0) << 31 >> 31;
                      if ((t | 0) > (A | 0) | (t | 0) == (A | 0) & n >>> 0 > a >>> 0) {
                        I = Yc() | 0;
                        k[I >> 2] = 34;
                        d = +(H | 0) * 1797693134862315708145274.0e284 * 1797693134862315708145274.0e284;
                        break;
                      }
                      a = G + -106 | 0;
                      A = ((a | 0) < 0) << 31 >> 31;
                      if ((t | 0) < (A | 0) | (t | 0) == (A | 0) & n >>> 0 < a >>> 0) {
                        I = Yc() | 0;
                        k[I >> 2] = 34;
                        d = +(H | 0) * 2.2250738585072014e-308 * 2.2250738585072014e-308;
                        break;
                      }
                      if (h) {
                        if ((h | 0) < 9) {
                          m = F + (e << 2) | 0;
                          g = k[m >> 2] | 0;
                          do {
                            g = g * 10 | 0;
                            h = h + 1 | 0;
                          } while ((h | 0) != 9);
                          k[m >> 2] = g;
                        }
                        e = e + 1 | 0;
                      }
                      if ((p | 0) < 9 ? (p | 0) <= (n | 0) & (n | 0) < 18 : 0) {
                        if ((n | 0) == 9) {
                          d = +(H | 0) * +((k[F >> 2] | 0) >>> 0);
                          break;
                        }
                        if ((n | 0) < 9) {
                          d = +(H | 0) * +((k[F >> 2] | 0) >>> 0) / +(k[18496 + (8 - n << 2) >> 2] | 0);
                          break;
                        }
                        a = I + 27 + (ka(n, -3) | 0) | 0;
                        g = k[F >> 2] | 0;
                        if ((a | 0) > 30 | (g >>> a | 0) == 0) {
                          d = +(H | 0) * +(g >>> 0) * +(k[18496 + (n + -10 << 2) >> 2] | 0);
                          break;
                        }
                      }
                      g = (n | 0) % 9 | 0;
                      if (!g) {
                        g = 0;
                        b = 0;
                      } else {
                        t = (n | 0) > -1 ? g : g + 9 | 0;
                        o = k[18496 + (8 - t << 2) >> 2] | 0;
                        if (e) {
                          m = 1e9 / (o | 0) | 0;
                          g = 0;
                          h = 0;
                          p = 0;
                          b = n;
                          do {
                            z = F + (p << 2) | 0;
                            A = k[z >> 2] | 0;
                            a = ((A >>> 0) / (o >>> 0) | 0) + h | 0;
                            k[z >> 2] = a;
                            h = ka((A >>> 0) % (o >>> 0) | 0, m) | 0;
                            a = (p | 0) == (g | 0) & (a | 0) == 0;
                            p = p + 1 | 0;
                            b = a ? b + -9 | 0 : b;
                            g = a ? p & 127 : g;
                          } while ((p | 0) != (e | 0));
                          if (!h)
                            h = b;
                          else {
                            k[F + (e << 2) >> 2] = h;
                            h = b;
                            e = e + 1 | 0;
                          }
                        } else {
                          g = 0;
                          h = n;
                          e = 0;
                        }
                        b = 0;
                        n = 9 - t + h | 0;
                      }
                      g: while (1) {
                        t = F + (g << 2) | 0;
                        if ((n | 0) < 18)
                          do {
                            m = 0;
                            h = e + 127 | 0;
                            while (1) {
                              p = h & 127;
                              o = F + (p << 2) | 0;
                              h = xr(k[o >> 2] | 0, 0, 29) | 0;
                              h = pr(h | 0, O | 0, m | 0, 0) | 0;
                              m = O;
                              if (m >>> 0 > 0 | (m | 0) == 0 & h >>> 0 > 1e9) {
                                a = Fr(h | 0, m | 0, 1e9, 0) | 0;
                                h = Gr(h | 0, m | 0, 1e9, 0) | 0;
                                m = a;
                              } else
                                m = 0;
                              k[o >> 2] = h;
                              a = (p | 0) == (g | 0);
                              e = (p | 0) != (e + 127 & 127 | 0) | a ? e : (h | 0) == 0 ? p : e;
                              if (a) {
                                h = m;
                                break;
                              } else
                                h = p + -1 | 0;
                            }
                            b = b + -29 | 0;
                          } while ((h | 0) == 0);
                        else {
                          if ((n | 0) != 18)
                            break;
                          do {
                            if ((k[t >> 2] | 0) >>> 0 >= 9007199) {
                              n = 18;
                              break g;
                            }
                            h = 0;
                            m = e + 127 | 0;
                            while (1) {
                              p = m & 127;
                              o = F + (p << 2) | 0;
                              m = xr(k[o >> 2] | 0, 0, 29) | 0;
                              m = pr(m | 0, O | 0, h | 0, 0) | 0;
                              h = O;
                              if (h >>> 0 > 0 | (h | 0) == 0 & m >>> 0 > 1e9) {
                                a = Fr(m | 0, h | 0, 1e9, 0) | 0;
                                m = Gr(m | 0, h | 0, 1e9, 0) | 0;
                                h = a;
                              } else
                                h = 0;
                              k[o >> 2] = m;
                              a = (p | 0) == (g | 0);
                              e = (p | 0) != (e + 127 & 127 | 0) | a ? e : (m | 0) == 0 ? p : e;
                              if (a)
                                break;
                              else
                                m = p + -1 | 0;
                            }
                            b = b + -29 | 0;
                          } while ((h | 0) == 0);
                        }
                        g = g + 127 & 127;
                        if ((g | 0) == (e | 0)) {
                          a = e + 127 & 127;
                          e = F + ((e + 126 & 127) << 2) | 0;
                          k[e >> 2] = k[e >> 2] | k[F + (a << 2) >> 2];
                          e = a;
                        }
                        k[F + (g << 2) >> 2] = h;
                        n = n + 9 | 0;
                      }
                      h: while (1) {
                        h = e + 1 & 127;
                        w = F + ((e + 127 & 127) << 2) | 0;
                        while (1) {
                          s = (n | 0) == 18;
                          v = (n | 0) > 27 ? 9 : 1;
                          t = s ^ 1;
                          while (1) {
                            m = g & 127;
                            p = (m | 0) == (e | 0);
                            do
                              if (!p) {
                                o = k[F + (m << 2) >> 2] | 0;
                                if (o >>> 0 < 9007199) {
                                  x = 220;
                                  break;
                                }
                                if (o >>> 0 > 9007199)
                                  break;
                                o = g + 1 & 127;
                                if ((o | 0) == (e | 0)) {
                                  x = 220;
                                  break;
                                }
                                o = k[F + (o << 2) >> 2] | 0;
                                if (o >>> 0 < 254740991) {
                                  x = 220;
                                  break;
                                }
                                if (!(o >>> 0 > 254740991 | t)) {
                                  h = e;
                                  break h;
                                }
                              } else
                                x = 220;
 while (0);
                            if ((x | 0) == 220 ? (x = 0, s) : 0) {
                              x = 221;
                              break h;
                            }
                            b = b + v | 0;
                            if ((g | 0) == (e | 0))
                              g = e;
                            else {
                              o = g;
                              break;
                            }
                          }
                          s = (1 << v) + -1 | 0;
                          t = 1e9 >>> v;
                          g = o;
                          m = 0;
                          p = o;
                          do {
                            z = F + (p << 2) | 0;
                            A = k[z >> 2] | 0;
                            a = (A >>> v) + m | 0;
                            k[z >> 2] = a;
                            m = ka(A & s, t) | 0;
                            a = (p | 0) == (g | 0) & (a | 0) == 0;
                            p = p + 1 & 127;
                            n = a ? n + -9 | 0 : n;
                            g = a ? p : g;
                          } while ((p | 0) != (e | 0));
                          if (!m)
                            continue;
                          if ((h | 0) != (g | 0))
                            break;
                          k[w >> 2] = k[w >> 2] | 1;
                        }
                        k[F + (e << 2) >> 2] = m;
                        e = h;
                      }
                      if ((x | 0) == 221)
                        if (p) {
                          k[F + (h + -1 << 2) >> 2] = 0;
                          m = e;
                        } else
                          h = e;
                      f = +((k[F + (m << 2) >> 2] | 0) >>> 0);
                      e = g + 1 & 127;
                      if ((e | 0) == (h | 0)) {
                        h = g + 2 & 127;
                        k[F + (h + -1 << 2) >> 2] = 0;
                      }
                      q = +(H | 0);
                      j = q * (f * 1.0e9 + +((k[F + (e << 2) >> 2] | 0) >>> 0));
                      t = b + 53 | 0;
                      o = t - G | 0;
                      s = (o | 0) < (I | 0);
                      e = s & 1;
                      p = s ? ((o | 0) < 0 ? 0 : o) : I;
                      if ((p | 0) < 53) {
                        L = +Hq(+Nq(1.0, 105 - p | 0), j);
                        K = +Jq(j, +Nq(1.0, 53 - p | 0));
                        d = L;
                        f = K;
                        j = L + (j - K);
                      } else {
                        d = 0.0;
                        f = 0.0;
                      }
                      n = g + 2 & 127;
                      do
                        if ((n | 0) != (h | 0)) {
                          m = k[F + (n << 2) >> 2] | 0;
                          do
                            if (m >>> 0 >= 5e8) {
                              if (m >>> 0 > 5e8) {
                                f = q * .75 + f;
                                break;
                              }
                              if ((g + 3 & 127 | 0) == (h | 0)) {
                                f = q * .5 + f;
                                break;
                              } else {
                                f = q * .75 + f;
                                break;
                              }
                            } else {
                              if ((m | 0) == 0 ? (g + 3 & 127 | 0) == (h | 0) : 0)
                                break;
                              f = q * .25 + f;
                            }
 while (0);
                          if ((53 - p | 0) <= 1)
                            break;
                          if (+Jq(f, 1.0) != 0.0)
                            break;
                          f = f + 1.0;
                        }
 while (0);
                      d = j + f - d;
                      do
                        if ((t & 2147483647 | 0) > (-2 - B | 0)) {
                          if (+Z(+d) >= 9007199254740992.0) {
                            e = s & (p | 0) == (o | 0) ? 0 : e;
                            b = b + 1 | 0;
                            d = d * .5;
                          }
                          if ((b + 50 | 0) <= (C | 0) ? !(f != 0.0 & (e | 0) != 0) : 0)
                            break;
                          I = Yc() | 0;
                          k[I >> 2] = 34;
                        }
 while (0);
                      d = +Oq(d, b);
                    }
 while (0);
                  L = d;
                  r = J;
                  return +L;
                }
 while (0);
              if (k[z >> 2] | 0)
                k[A >> 2] = (k[A >> 2] | 0) + -1;
              I = Yc() | 0;
              k[I >> 2] = 22;
              Eq(a, 0);
              L = 0.0;
              r = J;
              return +L;
            }
        }
 while (0);
      if ((x | 0) == 23) {
        b = (k[z >> 2] | 0) == 0;
        if (!b)
          k[A >> 2] = (k[A >> 2] | 0) + -1;
        if (!(h >>> 0 < 4 | (c | 0) == 0 | b)) {
          e = k[A >> 2] | 0;
          b = h;
          do {
            e = e + -1 | 0;
            b = b + -1 | 0;
          } while (b >>> 0 > 3);
          k[A >> 2] = e;
        }
      }
      L = +(H | 0) * E;
      r = J;
      return +L;
    }
    function Eq(a, b) {
      a = a | 0;
      b = b | 0;
      var c = 0,
          d = 0,
          e = 0;
      k[a + 104 >> 2] = b;
      c = k[a + 4 >> 2] | 0;
      d = k[a + 8 >> 2] | 0;
      e = d - c | 0;
      k[a + 108 >> 2] = e;
      if ((b | 0) != 0 & (e | 0) > (b | 0)) {
        k[a + 100 >> 2] = c + b;
        return ;
      } else {
        k[a + 100 >> 2] = d;
        return ;
      }
    }
    function Fq(a) {
      a = a | 0;
      var b = 0,
          c = 0,
          d = 0,
          e = 0,
          f = 0,
          g = 0;
      b = a + 104 | 0;
      e = k[b >> 2] | 0;
      if (!((e | 0) != 0 ? (k[a + 108 >> 2] | 0) >= (e | 0) : 0))
        f = 3;
      if ((f | 0) == 3 ? (g = Vq(a) | 0, (g | 0) >= 0) : 0) {
        d = k[b >> 2] | 0;
        b = a + 8 | 0;
        if (d) {
          c = k[b >> 2] | 0;
          e = k[a + 4 >> 2] | 0;
          b = c;
          d = d - (k[a + 108 >> 2] | 0) + -1 | 0;
          if ((b - e | 0) > (d | 0))
            k[a + 100 >> 2] = e + d;
          else
            f = 9;
        } else {
          c = k[b >> 2] | 0;
          b = c;
          f = 9;
        }
        if ((f | 0) == 9)
          k[a + 100 >> 2] = b;
        b = k[a + 4 >> 2] | 0;
        if (c) {
          a = a + 108 | 0;
          k[a >> 2] = c + 1 - b + (k[a >> 2] | 0);
        }
        b = b + -1 | 0;
        if ((l[b >> 0] | 0 | 0) == (g | 0))
          return g | 0;
        i[b >> 0] = g;
        return g | 0;
      }
      k[a + 100 >> 2] = 0;
      g = -1;
      return g | 0;
    }
    function Gq(a, b) {
      a = +a;
      b = +b;
      var c = 0,
          d = 0;
      p[t >> 3] = a;
      d = k[t >> 2] | 0;
      c = k[t + 4 >> 2] | 0;
      p[t >> 3] = b;
      c = k[t + 4 >> 2] & -2147483648 | c & 2147483647;
      k[t >> 2] = d;
      k[t + 4 >> 2] = c;
      return +(+p[t >> 3]);
    }
    function Hq(a, b) {
      a = +a;
      b = +b;
      return +(+Gq(a, b));
    }
    function Iq(a, b) {
      a = +a;
      b = +b;
      var c = 0,
          d = 0,
          e = 0,
          f = 0,
          g = 0,
          h = 0,
          i = 0,
          j = 0,
          l = 0,
          m = 0,
          n = 0;
      p[t >> 3] = a;
      i = k[t >> 2] | 0;
      j = k[t + 4 >> 2] | 0;
      p[t >> 3] = b;
      l = k[t >> 2] | 0;
      m = k[t + 4 >> 2] | 0;
      c = tr(i | 0, j | 0, 52) | 0;
      c = c & 2047;
      f = tr(l | 0, m | 0, 52) | 0;
      f = f & 2047;
      n = j & -2147483648;
      d = xr(l | 0, m | 0, 1) | 0;
      h = O;
      if (!((d | 0) == 0 & (h | 0) == 0) ? (g = m & 2147483647, !(g >>> 0 > 2146435072 | (g | 0) == 2146435072 & l >>> 0 > 0 | (c | 0) == 2047)) : 0) {
        g = xr(i | 0, j | 0, 1) | 0;
        e = O;
        if (!(e >>> 0 > h >>> 0 | (e | 0) == (h | 0) & g >>> 0 > d >>> 0))
          return +((g | 0) == (d | 0) & (e | 0) == (h | 0) ? a * 0.0 : a);
        if (!c) {
          e = xr(i | 0, j | 0, 12) | 0;
          d = O;
          if ((d | 0) > -1 | (d | 0) == -1 & e >>> 0 > 4294967295) {
            c = 0;
            do {
              c = c + -1 | 0;
              e = xr(e | 0, d | 0, 1) | 0;
              d = O;
            } while ((d | 0) > -1 | (d | 0) == -1 & e >>> 0 > 4294967295);
          } else
            c = 0;
          i = xr(i | 0, j | 0, 1 - c | 0) | 0;
          h = O;
        } else
          h = j & 1048575 | 1048576;
        if (!f) {
          e = xr(l | 0, m | 0, 12) | 0;
          d = O;
          if ((d | 0) > -1 | (d | 0) == -1 & e >>> 0 > 4294967295) {
            f = 0;
            do {
              f = f + -1 | 0;
              e = xr(e | 0, d | 0, 1) | 0;
              d = O;
            } while ((d | 0) > -1 | (d | 0) == -1 & e >>> 0 > 4294967295);
          } else
            f = 0;
          l = xr(l | 0, m | 0, 1 - f | 0) | 0;
          m = O;
        } else
          m = m & 1048575 | 1048576;
        d = or(i | 0, h | 0, l | 0, m | 0) | 0;
        e = O;
        g = (e | 0) > -1 | (e | 0) == -1 & d >>> 0 > 4294967295;
        a: do
          if ((c | 0) > (f | 0)) {
            while (1) {
              if (g) {
                if ((i | 0) == (l | 0) & (h | 0) == (m | 0))
                  break;
              } else {
                d = i;
                e = h;
              }
              i = xr(d | 0, e | 0, 1) | 0;
              h = O;
              c = c + -1 | 0;
              d = or(i | 0, h | 0, l | 0, m | 0) | 0;
              e = O;
              g = (e | 0) > -1 | (e | 0) == -1 & d >>> 0 > 4294967295;
              if ((c | 0) <= (f | 0))
                break a;
            }
            a = a * 0.0;
            return +a;
          }
 while (0);
        if (g) {
          if ((i | 0) == (l | 0) & (h | 0) == (m | 0)) {
            a = a * 0.0;
            return +a;
          }
        } else {
          e = h;
          d = i;
        }
        if (e >>> 0 < 1048576 | (e | 0) == 1048576 & d >>> 0 < 0)
          do {
            d = xr(d | 0, e | 0, 1) | 0;
            e = O;
            c = c + -1 | 0;
          } while (e >>> 0 < 1048576 | (e | 0) == 1048576 & d >>> 0 < 0);
        if ((c | 0) > 0) {
          m = pr(d | 0, e | 0, 0, -1048576) | 0;
          l = O;
          d = xr(c | 0, 0, 52) | 0;
          c = l | O;
          d = m | d;
        } else {
          d = tr(d | 0, e | 0, 1 - c | 0) | 0;
          c = O;
        }
        k[t >> 2] = d;
        k[t + 4 >> 2] = c | n;
        a = +p[t >> 3];
        return +a;
      }
      a = a * b;
      a = a / a;
      return +a;
    }
    function Jq(a, b) {
      a = +a;
      b = +b;
      return +(+Iq(a, b));
    }
    function Kq(a, b) {
      a = +a;
      b = b | 0;
      var c = 0,
          d = 0,
          e = 0;
      p[t >> 3] = a;
      c = k[t >> 2] | 0;
      d = k[t + 4 >> 2] | 0;
      e = tr(c | 0, d | 0, 52) | 0;
      e = e & 2047;
      switch (e | 0) {
        case 2047:
          return +a;
        case 0:
          {
            if (a != 0.0) {
              a = +Kq(a * 18446744073709551616.0, b);
              c = (k[b >> 2] | 0) + -64 | 0;
            } else
              c = 0;
            k[b >> 2] = c;
            return +a;
          }
        default:
          {
            k[b >> 2] = e + -1022;
            k[t >> 2] = c;
            k[t + 4 >> 2] = d & -2146435073 | 1071644672;
            a = +p[t >> 3];
            return +a;
          }
      }
      return 0.0;
    }
    function Lq(a, b) {
      a = +a;
      b = b | 0;
      return +(+Kq(a, b));
    }
    function Mq(a) {
      a = +a;
      var b = 0,
          c = 0,
          d = 0,
          e = 0.0,
          f = 0.0,
          g = 0.0,
          h = 0.0,
          i = 0.0;
      p[t >> 3] = a;
      c = k[t >> 2] | 0;
      b = k[t + 4 >> 2] | 0;
      d = (b | 0) < 0;
      do
        if (!(d | b >>> 0 < 1048576)) {
          if (b >>> 0 > 2146435071)
            return +a;
          if ((c | 0) == 0 & 0 == 0 & (b | 0) == 1072693248) {
            a = 0.0;
            return +a;
          } else {
            d = c;
            c = -1023;
          }
        } else {
          if ((c | 0) == 0 & (b & 2147483647 | 0) == 0) {
            a = -1.0 / (a * a);
            return +a;
          }
          if (!d) {
            p[t >> 3] = a * 18014398509481984.0;
            b = k[t + 4 >> 2] | 0;
            d = k[t >> 2] | 0;
            c = -1077;
            break;
          }
          a = (a - a) / 0.0;
          return +a;
        }
 while (0);
      b = b + 614242 | 0;
      k[t >> 2] = d;
      k[t + 4 >> 2] = (b & 1048575) + 1072079006;
      i = +p[t >> 3] + -1.0;
      a = i * (i * .5);
      g = i / (i + 2.0);
      h = g * g;
      f = h * h;
      p[t >> 3] = i - a;
      d = k[t + 4 >> 2] | 0;
      k[t >> 2] = 0;
      k[t + 4 >> 2] = d;
      e = +p[t >> 3];
      a = g * (a + (f * (f * (f * .15313837699209373 + .22222198432149784) + .3999999999940942) + h * (f * (f * (f * .14798198605116586 + .1818357216161805) + .2857142874366239) + .6666666666666735))) + (i - e - a);
      i = e * .4342944818781689;
      f = +(c + (b >>> 20) | 0);
      h = f * .30102999566361177;
      g = h + i;
      a = g + (i + (h - g) + (a * .4342944818781689 + (f * 3.694239077158931e-13 + (e + a) * 2.5082946711645275e-11)));
      return +a;
    }
    function Nq(a, b) {
      a = +a;
      b = b | 0;
      var c = 0;
      if ((b | 0) > 1023) {
        a = a * 8988465674311579538646525.0e283;
        c = b + -1023 | 0;
        if ((c | 0) > 1023) {
          c = b + -2046 | 0;
          c = (c | 0) > 1023 ? 1023 : c;
          a = a * 8988465674311579538646525.0e283;
        }
      } else if ((b | 0) < -1022) {
        a = a * 2.2250738585072014e-308;
        c = b + 1022 | 0;
        if ((c | 0) < -1022) {
          c = b + 2044 | 0;
          c = (c | 0) < -1022 ? -1022 : c;
          a = a * 2.2250738585072014e-308;
        }
      } else
        c = b;
      c = xr(c + 1023 | 0, 0, 52) | 0;
      b = O;
      k[t >> 2] = c;
      k[t + 4 >> 2] = b;
      return +(a * +p[t >> 3]);
    }
    function Oq(a, b) {
      a = +a;
      b = b | 0;
      return +(+Nq(a, b));
    }
    function Pq(a, b) {
      a = a | 0;
      b = b | 0;
      if (!a)
        a = 0;
      else
        a = Qq(a, b, 0) | 0;
      return a | 0;
    }
    function Qq(a, b, c) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      if (!a) {
        b = 1;
        return b | 0;
      }
      if (b >>> 0 < 128) {
        i[a >> 0] = b;
        b = 1;
        return b | 0;
      }
      if (b >>> 0 < 2048) {
        i[a >> 0] = b >>> 6 | 192;
        i[a + 1 >> 0] = b & 63 | 128;
        b = 2;
        return b | 0;
      }
      if (b >>> 0 < 55296 | (b & -8192 | 0) == 57344) {
        i[a >> 0] = b >>> 12 | 224;
        i[a + 1 >> 0] = b >>> 6 & 63 | 128;
        i[a + 2 >> 0] = b & 63 | 128;
        b = 3;
        return b | 0;
      }
      if ((b + -65536 | 0) >>> 0 < 1048576) {
        i[a >> 0] = b >>> 18 | 240;
        i[a + 1 >> 0] = b >>> 12 & 63 | 128;
        i[a + 2 >> 0] = b >>> 6 & 63 | 128;
        i[a + 3 >> 0] = b & 63 | 128;
        b = 4;
        return b | 0;
      } else {
        b = Yc() | 0;
        k[b >> 2] = 84;
        b = -1;
        return b | 0;
      }
      return 0;
    }
    function Rq(a) {
      a = a | 0;
      var b = 0;
      b = 648;
      k[b >> 2] = a + -1;
      k[b + 4 >> 2] = 0;
      return ;
    }
    function Sq() {
      var a = 0,
          b = 0,
          c = 0;
      b = 648;
      b = Er(k[b >> 2] | 0, k[b + 4 >> 2] | 0, 1284865837, 1481765933) | 0;
      b = pr(b | 0, O | 0, 1, 0) | 0;
      a = O;
      c = 648;
      k[c >> 2] = b;
      k[c + 4 >> 2] = a;
      a = tr(b | 0, a | 0, 33) | 0;
      return a | 0;
    }
    function Tq(a) {
      a = a | 0;
      var b = 0,
          c = 0;
      b = a + 74 | 0;
      c = i[b >> 0] | 0;
      i[b >> 0] = c + 255 | c;
      b = a + 20 | 0;
      c = a + 44 | 0;
      if ((k[b >> 2] | 0) >>> 0 > (k[c >> 2] | 0) >>> 0)
        id[k[a + 36 >> 2] & 63](a, 0, 0) | 0;
      k[a + 16 >> 2] = 0;
      k[a + 28 >> 2] = 0;
      k[b >> 2] = 0;
      b = k[a >> 2] | 0;
      if (!(b & 20)) {
        c = k[c >> 2] | 0;
        k[a + 8 >> 2] = c;
        k[a + 4 >> 2] = c;
        a = 0;
        return a | 0;
      }
      if (!(b & 4)) {
        a = -1;
        return a | 0;
      }
      k[a >> 2] = b | 32;
      a = -1;
      return a | 0;
    }
    function Uq(a) {
      a = a | 0;
      var b = 0,
          c = 0;
      b = a + 74 | 0;
      c = i[b >> 0] | 0;
      i[b >> 0] = c + 255 | c;
      b = k[a >> 2] | 0;
      if (!(b & 8)) {
        k[a + 8 >> 2] = 0;
        k[a + 4 >> 2] = 0;
        c = k[a + 44 >> 2] | 0;
        k[a + 28 >> 2] = c;
        k[a + 20 >> 2] = c;
        k[a + 16 >> 2] = c + (k[a + 48 >> 2] | 0);
        c = 0;
        return c | 0;
      } else {
        k[a >> 2] = b | 32;
        c = -1;
        return c | 0;
      }
      return 0;
    }
    function Vq(a) {
      a = a | 0;
      var b = 0,
          c = 0;
      c = r;
      r = r + 16 | 0;
      b = c;
      if ((k[a + 8 >> 2] | 0) == 0 ? (Tq(a) | 0) != 0 : 0)
        b = -1;
      else if ((id[k[a + 32 >> 2] & 63](a, b, 1) | 0) == 1)
        b = l[b >> 0] | 0;
      else
        b = -1;
      r = c;
      return b | 0;
    }
    function Wq(a, b, c) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      var d = 0,
          e = 0,
          f = 0,
          g = 0;
      d = c + 16 | 0;
      e = k[d >> 2] | 0;
      do
        if (!e)
          if (!(Uq(c) | 0)) {
            e = k[d >> 2] | 0;
            break;
          } else {
            g = 0;
            return g | 0;
          }
 while (0);
      g = c + 20 | 0;
      d = k[g >> 2] | 0;
      if ((e - d | 0) >>> 0 < b >>> 0) {
        g = id[k[c + 36 >> 2] & 63](c, a, b) | 0;
        return g | 0;
      }
      a: do
        if ((i[c + 75 >> 0] | 0) > -1) {
          e = b;
          while (1) {
            if (!e) {
              f = b;
              e = 0;
              break a;
            }
            f = e + -1 | 0;
            if ((i[a + f >> 0] | 0) == 10)
              break;
            else
              e = f;
          }
          if ((id[k[c + 36 >> 2] & 63](c, a, e) | 0) >>> 0 < e >>> 0) {
            g = e;
            return g | 0;
          } else {
            f = b - e | 0;
            a = a + e | 0;
            d = k[g >> 2] | 0;
            break;
          }
        } else {
          f = b;
          e = 0;
        }
 while (0);
      rr(d | 0, a | 0, f | 0) | 0;
      k[g >> 2] = (k[g >> 2] | 0) + f;
      g = e + f | 0;
      return g | 0;
    }
    function Xq(a, b, c) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      var d = 0,
          e = 0;
      d = r;
      r = r + 16 | 0;
      e = d;
      k[e >> 2] = c;
      c = _q(a, b, e) | 0;
      r = d;
      return c | 0;
    }
    function Yq(a, b, c) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      var d = 0,
          e = 0,
          f = 0,
          g = 0,
          h = 0,
          i = 0,
          j = 0,
          l = 0,
          m = 0,
          n = 0,
          o = 0;
      o = r;
      r = r + 224 | 0;
      j = o + 120 | 0;
      n = o + 80 | 0;
      m = o;
      l = o + 136 | 0;
      d = n;
      e = d + 40 | 0;
      do {
        k[d >> 2] = 0;
        d = d + 4 | 0;
      } while ((d | 0) < (e | 0));
      k[j >> 2] = k[c >> 2];
      if ((gr(0, b, j, m, n) | 0) < 0) {
        a = -1;
        r = o;
        return a | 0;
      }
      d = a + 48 | 0;
      if (!(k[d >> 2] | 0)) {
        f = a + 44 | 0;
        g = k[f >> 2] | 0;
        k[f >> 2] = l;
        h = a + 28 | 0;
        k[h >> 2] = l;
        i = a + 20 | 0;
        k[i >> 2] = l;
        k[d >> 2] = 80;
        e = a + 16 | 0;
        k[e >> 2] = l + 80;
        c = gr(a, b, j, m, n) | 0;
        if (g) {
          id[k[a + 36 >> 2] & 63](a, 0, 0) | 0;
          c = (k[i >> 2] | 0) == 0 ? -1 : c;
          k[f >> 2] = g;
          k[d >> 2] = 0;
          k[e >> 2] = 0;
          k[h >> 2] = 0;
          k[i >> 2] = 0;
        }
      } else
        c = gr(a, b, j, m, n) | 0;
      a = c;
      r = o;
      return a | 0;
    }
    function Zq(a, b, c, d) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      d = d | 0;
      var e = 0,
          f = 0,
          g = 0,
          h = 0,
          j = 0,
          l = 0;
      l = r;
      r = r + 128 | 0;
      e = l + 112 | 0;
      j = l;
      f = j;
      g = 18528;
      h = f + 112 | 0;
      do {
        k[f >> 2] = k[g >> 2];
        f = f + 4 | 0;
        g = g + 4 | 0;
      } while ((f | 0) < (h | 0));
      if ((b + -1 | 0) >>> 0 > 2147483646)
        if (!b)
          b = 1;
        else {
          c = Yc() | 0;
          k[c >> 2] = 75;
          c = -1;
          r = l;
          return c | 0;
        }
      else
        e = a;
      h = -2 - e | 0;
      h = b >>> 0 > h >>> 0 ? h : b;
      k[j + 48 >> 2] = h;
      a = j + 20 | 0;
      k[a >> 2] = e;
      k[j + 44 >> 2] = e;
      b = e + h | 0;
      e = j + 16 | 0;
      k[e >> 2] = b;
      k[j + 28 >> 2] = b;
      b = Yq(j, c, d) | 0;
      if (!h) {
        c = b;
        r = l;
        return c | 0;
      }
      c = k[a >> 2] | 0;
      i[c + (((c | 0) == (k[e >> 2] | 0)) << 31 >> 31) >> 0] = 0;
      c = b;
      r = l;
      return c | 0;
    }
    function _q(a, b, c) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      return Zq(a, 2147483647, b, c) | 0;
    }
    function $q(a, b) {
      a = a | 0;
      b = b | 0;
      var c = 0,
          d = 0.0,
          e = 0,
          f = 0,
          g = 0;
      g = r;
      r = r + 112 | 0;
      f = g;
      c = f;
      e = c + 112 | 0;
      do {
        k[c >> 2] = 0;
        c = c + 4 | 0;
      } while ((c | 0) < (e | 0));
      e = f + 4 | 0;
      k[e >> 2] = a;
      c = f + 8 | 0;
      k[c >> 2] = -1;
      k[f + 44 >> 2] = a;
      k[f + 76 >> 2] = -1;
      Eq(f, 0);
      d = +Dq(f, 1, 1);
      c = (k[e >> 2] | 0) - (k[c >> 2] | 0) + (k[f + 108 >> 2] | 0) | 0;
      if (!b) {
        r = g;
        return +d;
      }
      k[b >> 2] = (c | 0) != 0 ? a + c | 0 : a;
      r = g;
      return +d;
    }
    function ar(a, b, c) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      var d = 0,
          e = 0,
          f = 0,
          g = 0;
      g = r;
      r = r + 112 | 0;
      f = g;
      k[f >> 2] = 0;
      d = f + 4 | 0;
      k[d >> 2] = a;
      k[f + 44 >> 2] = a;
      e = f + 8 | 0;
      k[e >> 2] = (a | 0) < 0 ? -1 : a + 2147483647 | 0;
      k[f + 76 >> 2] = -1;
      Eq(f, 0);
      c = Cq(f, c, 1, -2147483648, 0) | 0;
      if (!b) {
        r = g;
        return c | 0;
      }
      k[b >> 2] = a + ((k[d >> 2] | 0) + (k[f + 108 >> 2] | 0) - (k[e >> 2] | 0));
      r = g;
      return c | 0;
    }
    function br(a, b, c) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      var d = 0,
          e = 0,
          f = 0,
          g = 0;
      f = b & 255;
      d = (c | 0) != 0;
      a: do
        if (d & (a & 3 | 0) != 0) {
          e = b & 255;
          while (1) {
            if ((i[a >> 0] | 0) == e << 24 >> 24) {
              g = 6;
              break a;
            }
            a = a + 1 | 0;
            c = c + -1 | 0;
            d = (c | 0) != 0;
            if (!(d & (a & 3 | 0) != 0)) {
              g = 5;
              break;
            }
          }
        } else
          g = 5;
 while (0);
      if ((g | 0) == 5)
        if (d)
          g = 6;
        else
          c = 0;
      b: do
        if ((g | 0) == 6) {
          e = b & 255;
          if ((i[a >> 0] | 0) != e << 24 >> 24) {
            d = ka(f, 16843009) | 0;
            c: do
              if (c >>> 0 > 3)
                while (1) {
                  f = k[a >> 2] ^ d;
                  if ((f & -2139062144 ^ -2139062144) & f + -16843009)
                    break;
                  a = a + 4 | 0;
                  c = c + -4 | 0;
                  if (c >>> 0 <= 3) {
                    g = 11;
                    break c;
                  }
                }
              else
                g = 11;
 while (0);
            if ((g | 0) == 11)
              if (!c) {
                c = 0;
                break;
              }
            while (1) {
              if ((i[a >> 0] | 0) == e << 24 >> 24)
                break b;
              a = a + 1 | 0;
              c = c + -1 | 0;
              if (!c) {
                c = 0;
                break;
              }
            }
          }
        }
 while (0);
      return ((c | 0) != 0 ? a : 0) | 0;
    }
    function cr(a, b, c) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      var d = 0,
          e = 0,
          f = 0;
      if (!c) {
        f = 0;
        return f | 0;
      } else {
        e = c;
        d = a;
      }
      while (1) {
        c = i[d >> 0] | 0;
        a = i[b >> 0] | 0;
        if (c << 24 >> 24 != a << 24 >> 24)
          break;
        e = e + -1 | 0;
        if (!e) {
          a = 0;
          f = 5;
          break;
        } else {
          d = d + 1 | 0;
          b = b + 1 | 0;
        }
      }
      if ((f | 0) == 5)
        return a | 0;
      f = (c & 255) - (a & 255) | 0;
      return f | 0;
    }
    function dr(a, b) {
      a = a | 0;
      b = b | 0;
      var c = 0,
          d = 0;
      d = i[a >> 0] | 0;
      c = i[b >> 0] | 0;
      if (d << 24 >> 24 == 0 ? 1 : d << 24 >> 24 != c << 24 >> 24)
        b = d;
      else {
        do {
          a = a + 1 | 0;
          b = b + 1 | 0;
          d = i[a >> 0] | 0;
          c = i[b >> 0] | 0;
        } while (!(d << 24 >> 24 == 0 ? 1 : d << 24 >> 24 != c << 24 >> 24));
        b = d;
      }
      return (b & 255) - (c & 255) | 0;
    }
    function er(a, b, c) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      var d = 0,
          e = 0;
      if (!c) {
        a = 0;
        return a | 0;
      }
      d = i[a >> 0] | 0;
      a: do
        if (!(d << 24 >> 24))
          d = 0;
        else
          while (1) {
            c = c + -1 | 0;
            e = i[b >> 0] | 0;
            if (!(d << 24 >> 24 == e << 24 >> 24 & ((c | 0) != 0 & e << 24 >> 24 != 0)))
              break a;
            a = a + 1 | 0;
            b = b + 1 | 0;
            d = i[a >> 0] | 0;
            if (!(d << 24 >> 24)) {
              d = 0;
              break;
            }
          }
 while (0);
      e = (d & 255) - (l[b >> 0] | 0) | 0;
      return e | 0;
    }
    function Rh(a) {
      a = a | 0;
      var b = 0,
          c = 0,
          d = 0,
          e = 0,
          f = 0,
          g = 0,
          h = 0,
          j = 0,
          m = 0.0,
          n = 0.0,
          o = 0,
          q = 0,
          s = 0,
          u = 0,
          v = 0,
          w = 0,
          x = 0,
          y = 0,
          z = 0,
          A = 0,
          B = 0,
          C = 0,
          D = 0,
          E = 0,
          F = 0,
          G = 0,
          H = 0,
          I = 0,
          J = 0,
          K = 0,
          L = 0,
          M = 0,
          N = 0,
          P = 0,
          Q = 0,
          R = 0,
          S = 0,
          T = 0,
          U = 0,
          V = 0,
          W = 0,
          X = 0,
          _ = 0,
          aa = 0,
          ba = 0,
          ca = 0,
          da = 0,
          ea = 0,
          fa = 0,
          ga = 0,
          ha = 0,
          ia = 0,
          ka = 0,
          ma = 0,
          na = 0,
          oa = 0,
          pa = 0,
          qa = 0,
          ra = 0,
          sa = 0,
          ta = 0,
          ua = 0,
          va = 0,
          wa = 0,
          xa = 0,
          ya = 0.0;
      xa = r;
      r = r + 64 | 0;
      wa = xa + 48 | 0;
      va = xa + 40 | 0;
      ua = xa + 32 | 0;
      ta = xa + 24 | 0;
      sa = xa + 16 | 0;
      ra = xa;
      P = a + 16 | 0;
      ba = a + 108 | 0;
      ia = a + 12 | 0;
      ka = a + 8 | 0;
      ma = ra + 8 | 0;
      na = ra + 8 | 0;
      oa = ra + 8 | 0;
      pa = ra + 8 | 0;
      qa = ra + 8 | 0;
      Q = ra + 8 | 0;
      R = ra + 8 | 0;
      S = ra + 8 | 0;
      T = ra + 8 | 0;
      U = ra + 8 | 0;
      V = ra + 8 | 0;
      W = ra + 8 | 0;
      X = ra + 8 | 0;
      _ = ra + 8 | 0;
      aa = ra + 8 | 0;
      ca = ra + 8 | 0;
      da = ra + 8 | 0;
      ea = ra + 8 | 0;
      fa = ra + 8 | 0;
      ga = a + 24 | 0;
      ha = a + 100 | 0;
      N = ra + 8 | 0;
      M = ra + 8 | 0;
      L = ra + 8 | 0;
      K = ra + 8 | 0;
      J = ra + 8 | 0;
      I = ra + 8 | 0;
      H = ra + 8 | 0;
      G = ra + 8 | 0;
      F = ra + 8 | 0;
      E = ra + 8 | 0;
      b = k[P >> 2] | 0;
      a: while (1) {
        y = k[k[b >> 2] >> 2] | 0;
        D = y + 12 | 0;
        z = k[(k[D >> 2] | 0) + 44 >> 2] | 0;
        A = b + 16 | 0;
        B = b + 20 | 0;
        C = b + 4 | 0;
        d = k[A >> 2] | 0;
        b: while (1) {
          c = k[B >> 2] | 0;
          k[B >> 2] = c + 4;
          c = k[c >> 2] | 0;
          j = i[ba >> 0] | 0;
          if ((j & 12) != 0 ? (w = (k[ha >> 2] | 0) + -1 | 0, k[ha >> 2] = w, !((w | 0) != 0 & (j & 4) == 0)) : 0) {
            Vf(a);
            d = k[A >> 2] | 0;
          }
          f = c >>> 6 & 255;
          e = d + (f << 4) | 0;
          do
            switch (c & 63 | 0) {
              case 9:
                {
                  j = k[y + 16 + (c >>> 23 << 2) >> 2] | 0;
                  w = k[j >> 2] | 0;
                  k[w >> 2] = k[e >> 2];
                  k[w + 4 >> 2] = k[e + 4 >> 2];
                  k[w + 8 >> 2] = k[e + 8 >> 2];
                  k[w + 12 >> 2] = k[e + 12 >> 2];
                  w = k[j >> 2] | 0;
                  if (!((w | 0) == (j + 8 | 0) ? (k[w + 8 >> 2] & 64 | 0) != 0 : 0))
                    continue b;
                  tg(a, j);
                  continue b;
                }
              case 8:
                {
                  v = c >>> 23;
                  w = c >>> 14;
                  Hh(a, k[k[y + 16 + (f << 2) >> 2] >> 2] | 0, (v & 256 | 0) == 0 ? d + (v << 4) | 0 : z + ((v & 255) << 4) | 0, (w & 256 | 0) == 0 ? d + ((w & 511) << 4) | 0 : z + ((w & 255) << 4) | 0);
                  d = k[A >> 2] | 0;
                  continue b;
                }
              case 6:
                {
                  w = c >>> 14;
                  Gh(a, k[k[y + 16 + (c >>> 23 << 2) >> 2] >> 2] | 0, (w & 256 | 0) == 0 ? d + ((w & 511) << 4) | 0 : z + ((w & 255) << 4) | 0, e);
                  d = k[A >> 2] | 0;
                  continue b;
                }
              case 10:
                {
                  v = c >>> 23;
                  w = c >>> 14;
                  Hh(a, e, (v & 256 | 0) == 0 ? d + (v << 4) | 0 : z + ((v & 255) << 4) | 0, (w & 256 | 0) == 0 ? d + ((w & 511) << 4) | 0 : z + ((w & 255) << 4) | 0);
                  d = k[A >> 2] | 0;
                  continue b;
                }
              case 11:
                {
                  g = c >>> 23;
                  j = c >>> 14 & 511;
                  h = ph(a) | 0;
                  k[e >> 2] = h;
                  k[d + (f << 4) + 8 >> 2] = 69;
                  if (j | g) {
                    w = Mg(g) | 0;
                    lh(a, h, w, Mg(j) | 0);
                  }
                  if ((k[(k[ia >> 2] | 0) + 12 >> 2] | 0) > 0) {
                    k[ka >> 2] = d + (f + 1 << 4);
                    zg(a);
                    k[ka >> 2] = k[C >> 2];
                  }
                  d = k[A >> 2] | 0;
                  continue b;
                }
              case 7:
                {
                  w = c >>> 14;
                  Gh(a, d + (c >>> 23 << 4) | 0, (w & 256 | 0) == 0 ? d + ((w & 511) << 4) | 0 : z + ((w & 255) << 4) | 0, e);
                  d = k[A >> 2] | 0;
                  continue b;
                }
              case 0:
                {
                  w = d + (c >>> 23 << 4) | 0;
                  k[e >> 2] = k[w >> 2];
                  k[e + 4 >> 2] = k[w + 4 >> 2];
                  k[e + 8 >> 2] = k[w + 8 >> 2];
                  k[e + 12 >> 2] = k[w + 12 >> 2];
                  continue b;
                }
              case 1:
                {
                  w = z + (c >>> 14 << 4) | 0;
                  k[e >> 2] = k[w >> 2];
                  k[e + 4 >> 2] = k[w + 4 >> 2];
                  k[e + 8 >> 2] = k[w + 8 >> 2];
                  k[e + 12 >> 2] = k[w + 12 >> 2];
                  continue b;
                }
              case 2:
                {
                  w = k[B >> 2] | 0;
                  k[B >> 2] = w + 4;
                  w = z + ((k[w >> 2] | 0) >>> 6 << 4) | 0;
                  k[e >> 2] = k[w >> 2];
                  k[e + 4 >> 2] = k[w + 4 >> 2];
                  k[e + 8 >> 2] = k[w + 8 >> 2];
                  k[e + 12 >> 2] = k[w + 12 >> 2];
                  continue b;
                }
              case 3:
                {
                  k[e >> 2] = c >>> 23;
                  k[d + (f << 4) + 8 >> 2] = 1;
                  if (!(c & 8372224))
                    continue b;
                  k[B >> 2] = (k[B >> 2] | 0) + 4;
                  continue b;
                }
              case 4:
                {
                  j = c >>> 23;
                  while (1) {
                    k[e + 8 >> 2] = 0;
                    if (!j)
                      continue b;
                    else {
                      j = j + -1 | 0;
                      e = e + 16 | 0;
                    }
                  }
                }
              case 5:
                {
                  w = k[k[y + 16 + (c >>> 23 << 2) >> 2] >> 2] | 0;
                  k[e >> 2] = k[w >> 2];
                  k[e + 4 >> 2] = k[w + 4 >> 2];
                  k[e + 8 >> 2] = k[w + 8 >> 2];
                  k[e + 12 >> 2] = k[w + 12 >> 2];
                  continue b;
                }
              case 12:
                {
                  v = d + (c >>> 23 << 4) | 0;
                  w = d + (f + 1 << 4) | 0;
                  k[w >> 2] = k[v >> 2];
                  k[w + 4 >> 2] = k[v + 4 >> 2];
                  k[w + 8 >> 2] = k[v + 8 >> 2];
                  k[w + 12 >> 2] = k[v + 12 >> 2];
                  w = c >>> 14;
                  Gh(a, v, (w & 256 | 0) == 0 ? d + ((w & 511) << 4) | 0 : z + ((w & 255) << 4) | 0, e);
                  d = k[A >> 2] | 0;
                  continue b;
                }
              case 13:
                {
                  h = c >>> 23;
                  h = (h & 256 | 0) == 0 ? d + (h << 4) | 0 : z + ((h & 255) << 4) | 0;
                  o = c >>> 14;
                  o = (o & 256 | 0) == 0 ? d + ((o & 511) << 4) | 0 : z + ((o & 255) << 4) | 0;
                  j = k[h + 8 >> 2] | 0;
                  c: do
                    switch (j | 0) {
                      case 19:
                        if ((k[o + 8 >> 2] | 0) == 19) {
                          v = h;
                          w = o;
                          v = pr(k[w >> 2] | 0, k[w + 4 >> 2] | 0, k[v >> 2] | 0, k[v + 4 >> 2] | 0) | 0;
                          w = e;
                          k[w >> 2] = v;
                          k[w + 4 >> 2] = O;
                          k[d + (f << 4) + 8 >> 2] = 19;
                          continue b;
                        } else {
                          x = h;
                          n = +((k[x >> 2] | 0) >>> 0) + 4294967296.0 * +(k[x + 4 >> 2] | 0);
                          x = 36;
                          break c;
                        }
                      case 3:
                        {
                          n = +p[h >> 3];
                          x = 37;
                          break;
                        }
                      default:
                        if ((j & 15 | 0) == 4 ? (w = Qg((k[h >> 2] | 0) + 24 | 0, ra) | 0, (w | 0) == ((k[(k[h >> 2] | 0) + 12 >> 2] | 0) + 1 | 0)) : 0) {
                          v = (k[na >> 2] | 0) == 19;
                          x = ra;
                          w = k[x >> 2] | 0;
                          x = k[x + 4 >> 2] | 0;
                          k[t >> 2] = w;
                          k[t + 4 >> 2] = x;
                          n = v ? +(w >>> 0) + 4294967296.0 * +(x | 0) : +p[t >> 3];
                          x = 36;
                          break c;
                        }
                    }
 while (0);
                  if ((x | 0) == 36)
                    x = 37;
                  d: do
                    if ((x | 0) == 37) {
                      x = 0;
                      j = k[o + 8 >> 2] | 0;
                      if ((j | 0) == 3)
                        m = +p[o >> 3];
                      else
                        do
                          if ((j | 0) == 19) {
                            w = o;
                            m = +((k[w >> 2] | 0) >>> 0) + 4294967296.0 * +(k[w + 4 >> 2] | 0);
                          } else {
                            if ((j & 15 | 0) == 4 ? (w = Qg((k[o >> 2] | 0) + 24 | 0, ra) | 0, (w | 0) == ((k[(k[o >> 2] | 0) + 12 >> 2] | 0) + 1 | 0)) : 0) {
                              u = (k[ma >> 2] | 0) == 19;
                              w = ra;
                              v = k[w >> 2] | 0;
                              w = k[w + 4 >> 2] | 0;
                              k[t >> 2] = v;
                              k[t + 4 >> 2] = w;
                              m = u ? +(v >>> 0) + 4294967296.0 * +(w | 0) : +p[t >> 3];
                              break;
                            }
                            break d;
                          }
 while (0);
                      p[e >> 3] = n + m;
                      k[d + (f << 4) + 8 >> 2] = 3;
                      continue b;
                    }
 while (0);
                  Bh(a, h, o, e, 6);
                  d = k[A >> 2] | 0;
                  continue b;
                }
              case 14:
                {
                  h = c >>> 23;
                  h = (h & 256 | 0) == 0 ? d + (h << 4) | 0 : z + ((h & 255) << 4) | 0;
                  o = c >>> 14;
                  o = (o & 256 | 0) == 0 ? d + ((o & 511) << 4) | 0 : z + ((o & 255) << 4) | 0;
                  j = k[h + 8 >> 2] | 0;
                  e: do
                    switch (j | 0) {
                      case 19:
                        if ((k[o + 8 >> 2] | 0) == 19) {
                          w = h;
                          v = o;
                          v = or(k[w >> 2] | 0, k[w + 4 >> 2] | 0, k[v >> 2] | 0, k[v + 4 >> 2] | 0) | 0;
                          w = e;
                          k[w >> 2] = v;
                          k[w + 4 >> 2] = O;
                          k[d + (f << 4) + 8 >> 2] = 19;
                          continue b;
                        } else {
                          x = h;
                          n = +((k[x >> 2] | 0) >>> 0) + 4294967296.0 * +(k[x + 4 >> 2] | 0);
                          x = 57;
                          break e;
                        }
                      case 3:
                        {
                          n = +p[h >> 3];
                          x = 58;
                          break;
                        }
                      default:
                        if ((j & 15 | 0) == 4 ? (w = Qg((k[h >> 2] | 0) + 24 | 0, ra) | 0, (w | 0) == ((k[(k[h >> 2] | 0) + 12 >> 2] | 0) + 1 | 0)) : 0) {
                          v = (k[pa >> 2] | 0) == 19;
                          x = ra;
                          w = k[x >> 2] | 0;
                          x = k[x + 4 >> 2] | 0;
                          k[t >> 2] = w;
                          k[t + 4 >> 2] = x;
                          n = v ? +(w >>> 0) + 4294967296.0 * +(x | 0) : +p[t >> 3];
                          x = 57;
                          break e;
                        }
                    }
 while (0);
                  if ((x | 0) == 57)
                    x = 58;
                  f: do
                    if ((x | 0) == 58) {
                      x = 0;
                      j = k[o + 8 >> 2] | 0;
                      if ((j | 0) == 3)
                        m = +p[o >> 3];
                      else
                        do
                          if ((j | 0) == 19) {
                            w = o;
                            m = +((k[w >> 2] | 0) >>> 0) + 4294967296.0 * +(k[w + 4 >> 2] | 0);
                          } else {
                            if ((j & 15 | 0) == 4 ? (w = Qg((k[o >> 2] | 0) + 24 | 0, ra) | 0, (w | 0) == ((k[(k[o >> 2] | 0) + 12 >> 2] | 0) + 1 | 0)) : 0) {
                              u = (k[oa >> 2] | 0) == 19;
                              w = ra;
                              v = k[w >> 2] | 0;
                              w = k[w + 4 >> 2] | 0;
                              k[t >> 2] = v;
                              k[t + 4 >> 2] = w;
                              m = u ? +(v >>> 0) + 4294967296.0 * +(w | 0) : +p[t >> 3];
                              break;
                            }
                            break f;
                          }
 while (0);
                      p[e >> 3] = n - m;
                      k[d + (f << 4) + 8 >> 2] = 3;
                      continue b;
                    }
 while (0);
                  Bh(a, h, o, e, 7);
                  d = k[A >> 2] | 0;
                  continue b;
                }
              case 15:
                {
                  h = c >>> 23;
                  h = (h & 256 | 0) == 0 ? d + (h << 4) | 0 : z + ((h & 255) << 4) | 0;
                  o = c >>> 14;
                  o = (o & 256 | 0) == 0 ? d + ((o & 511) << 4) | 0 : z + ((o & 255) << 4) | 0;
                  j = k[h + 8 >> 2] | 0;
                  g: do
                    switch (j | 0) {
                      case 19:
                        if ((k[o + 8 >> 2] | 0) == 19) {
                          v = h;
                          w = o;
                          v = Er(k[w >> 2] | 0, k[w + 4 >> 2] | 0, k[v >> 2] | 0, k[v + 4 >> 2] | 0) | 0;
                          w = e;
                          k[w >> 2] = v;
                          k[w + 4 >> 2] = O;
                          k[d + (f << 4) + 8 >> 2] = 19;
                          continue b;
                        } else {
                          x = h;
                          n = +((k[x >> 2] | 0) >>> 0) + 4294967296.0 * +(k[x + 4 >> 2] | 0);
                          x = 78;
                          break g;
                        }
                      case 3:
                        {
                          n = +p[h >> 3];
                          x = 79;
                          break;
                        }
                      default:
                        if ((j & 15 | 0) == 4 ? (w = Qg((k[h >> 2] | 0) + 24 | 0, ra) | 0, (w | 0) == ((k[(k[h >> 2] | 0) + 12 >> 2] | 0) + 1 | 0)) : 0) {
                          v = (k[Q >> 2] | 0) == 19;
                          x = ra;
                          w = k[x >> 2] | 0;
                          x = k[x + 4 >> 2] | 0;
                          k[t >> 2] = w;
                          k[t + 4 >> 2] = x;
                          n = v ? +(w >>> 0) + 4294967296.0 * +(x | 0) : +p[t >> 3];
                          x = 78;
                          break g;
                        }
                    }
 while (0);
                  if ((x | 0) == 78)
                    x = 79;
                  h: do
                    if ((x | 0) == 79) {
                      x = 0;
                      j = k[o + 8 >> 2] | 0;
                      if ((j | 0) == 3)
                        m = +p[o >> 3];
                      else
                        do
                          if ((j | 0) == 19) {
                            w = o;
                            m = +((k[w >> 2] | 0) >>> 0) + 4294967296.0 * +(k[w + 4 >> 2] | 0);
                          } else {
                            if ((j & 15 | 0) == 4 ? (w = Qg((k[o >> 2] | 0) + 24 | 0, ra) | 0, (w | 0) == ((k[(k[o >> 2] | 0) + 12 >> 2] | 0) + 1 | 0)) : 0) {
                              u = (k[qa >> 2] | 0) == 19;
                              w = ra;
                              v = k[w >> 2] | 0;
                              w = k[w + 4 >> 2] | 0;
                              k[t >> 2] = v;
                              k[t + 4 >> 2] = w;
                              m = u ? +(v >>> 0) + 4294967296.0 * +(w | 0) : +p[t >> 3];
                              break;
                            }
                            break h;
                          }
 while (0);
                      p[e >> 3] = n * m;
                      k[d + (f << 4) + 8 >> 2] = 3;
                      continue b;
                    }
 while (0);
                  Bh(a, h, o, e, 8);
                  d = k[A >> 2] | 0;
                  continue b;
                }
              case 18:
                {
                  h = c >>> 23;
                  h = (h & 256 | 0) == 0 ? d + (h << 4) | 0 : z + ((h & 255) << 4) | 0;
                  o = c >>> 14;
                  o = (o & 256 | 0) == 0 ? d + ((o & 511) << 4) | 0 : z + ((o & 255) << 4) | 0;
                  j = k[h + 8 >> 2] | 0;
                  i: do
                    if ((j | 0) == 3) {
                      m = +p[h >> 3];
                      x = 99;
                    } else {
                      do
                        if ((j | 0) == 19) {
                          x = h;
                          m = +((k[x >> 2] | 0) >>> 0) + 4294967296.0 * +(k[x + 4 >> 2] | 0);
                        } else {
                          if ((j & 15 | 0) == 4 ? (w = Qg((k[h >> 2] | 0) + 24 | 0, ra) | 0, (w | 0) == ((k[(k[h >> 2] | 0) + 12 >> 2] | 0) + 1 | 0)) : 0) {
                            v = (k[S >> 2] | 0) == 19;
                            x = ra;
                            w = k[x >> 2] | 0;
                            x = k[x + 4 >> 2] | 0;
                            k[t >> 2] = w;
                            k[t + 4 >> 2] = x;
                            m = v ? +(w >>> 0) + 4294967296.0 * +(x | 0) : +p[t >> 3];
                            break;
                          }
                          break i;
                        }
 while (0);
                      x = 99;
                    }
 while (0);
                  j: do
                    if ((x | 0) == 99) {
                      x = 0;
                      j = k[o + 8 >> 2] | 0;
                      if ((j | 0) == 3)
                        n = +p[o >> 3];
                      else
                        do
                          if ((j | 0) == 19) {
                            w = o;
                            n = +((k[w >> 2] | 0) >>> 0) + 4294967296.0 * +(k[w + 4 >> 2] | 0);
                          } else {
                            if ((j & 15 | 0) == 4 ? (w = Qg((k[o >> 2] | 0) + 24 | 0, ra) | 0, (w | 0) == ((k[(k[o >> 2] | 0) + 12 >> 2] | 0) + 1 | 0)) : 0) {
                              u = (k[R >> 2] | 0) == 19;
                              w = ra;
                              v = k[w >> 2] | 0;
                              w = k[w + 4 >> 2] | 0;
                              k[t >> 2] = v;
                              k[t + 4 >> 2] = w;
                              n = u ? +(v >>> 0) + 4294967296.0 * +(w | 0) : +p[t >> 3];
                              break;
                            }
                            break j;
                          }
 while (0);
                      p[e >> 3] = m / n;
                      k[d + (f << 4) + 8 >> 2] = 3;
                      continue b;
                    }
 while (0);
                  Bh(a, h, o, e, 11);
                  d = k[A >> 2] | 0;
                  continue b;
                }
              case 20:
                {
                  q = c >>> 23;
                  q = (q & 256 | 0) == 0 ? d + (q << 4) | 0 : z + ((q & 255) << 4) | 0;
                  s = c >>> 14;
                  s = (s & 256 | 0) == 0 ? d + ((s & 511) << 4) | 0 : z + ((s & 255) << 4) | 0;
                  h = k[q + 8 >> 2] | 0;
                  do
                    if ((h | 0) != 19) {
                      j = q;
                      k: while (1) {
                        switch (h | 0) {
                          case 3:
                            {
                              x = 114;
                              break k;
                            }
                          case 19:
                            {
                              x = 117;
                              break k;
                            }
                          default:
                            {}
                        }
                        if ((h & 15 | 0) != 4) {
                          x = 121;
                          break;
                        }
                        x = Qg((k[j >> 2] | 0) + 24 | 0, ra) | 0;
                        if ((x | 0) != ((k[(k[j >> 2] | 0) + 12 >> 2] | 0) + 1 | 0)) {
                          x = 121;
                          break;
                        }
                        j = ra;
                        h = k[M >> 2] | 0;
                      }
                      if ((x | 0) == 114) {
                        m = +p[j >> 3];
                        n = +Y(+m);
                        if (!(m != n) ? n >= -9223372036854775808.0 & n < 9223372036854775808.0 : 0) {
                          j = ~~n >>> 0;
                          h = +Z(n) >= 1.0 ? (n > 0.0 ? ~~+la(+Y(n / 4294967296.0), 4294967295.0) >>> 0 : ~~+ja((n - +(~~n >>> 0)) / 4294967296.0) >>> 0) : 0;
                          x = 122;
                        } else
                          x = 121;
                      } else if ((x | 0) == 117) {
                        h = j;
                        j = k[h >> 2] | 0;
                        h = k[h + 4 >> 2] | 0;
                        x = 122;
                      }
                      if ((x | 0) == 121) {
                        x = 0;
                        break;
                      } else if ((x | 0) == 122) {
                        o = j;
                        x = 123;
                        break;
                      }
                    } else {
                      h = q;
                      o = k[h >> 2] | 0;
                      h = k[h + 4 >> 2] | 0;
                      x = 123;
                    }
 while (0);
                  l: do
                    if ((x | 0) == 123) {
                      x = 0;
                      g = k[s + 8 >> 2] | 0;
                      do
                        if ((g | 0) != 19) {
                          j = s;
                          m: while (1) {
                            switch (g | 0) {
                              case 3:
                                {
                                  x = 127;
                                  break m;
                                }
                              case 19:
                                {
                                  x = 130;
                                  break m;
                                }
                              default:
                                {}
                            }
                            if ((g & 15 | 0) != 4) {
                              x = 134;
                              break;
                            }
                            x = Qg((k[j >> 2] | 0) + 24 | 0, ra) | 0;
                            if ((x | 0) != ((k[(k[j >> 2] | 0) + 12 >> 2] | 0) + 1 | 0)) {
                              x = 134;
                              break;
                            }
                            j = ra;
                            g = k[N >> 2] | 0;
                          }
                          if ((x | 0) == 127) {
                            m = +p[j >> 3];
                            n = +Y(+m);
                            if (!(m != n) ? n >= -9223372036854775808.0 & n < 9223372036854775808.0 : 0) {
                              g = ~~n >>> 0;
                              j = +Z(n) >= 1.0 ? (n > 0.0 ? ~~+la(+Y(n / 4294967296.0), 4294967295.0) >>> 0 : ~~+ja((n - +(~~n >>> 0)) / 4294967296.0) >>> 0) : 0;
                              x = 135;
                            } else
                              x = 134;
                          } else if ((x | 0) == 130) {
                            g = k[j >> 2] | 0;
                            j = k[j + 4 >> 2] | 0;
                            x = 135;
                          }
                          if ((x | 0) == 134) {
                            x = 0;
                            break l;
                          } else if ((x | 0) == 135) {
                            x = 0;
                            break;
                          }
                        } else {
                          j = s;
                          g = k[j >> 2] | 0;
                          j = k[j + 4 >> 2] | 0;
                        }
 while (0);
                      w = e;
                      k[w >> 2] = g & o;
                      k[w + 4 >> 2] = j & h;
                      k[d + (f << 4) + 8 >> 2] = 19;
                      continue b;
                    }
 while (0);
                  Bh(a, q, s, e, 13);
                  d = k[A >> 2] | 0;
                  continue b;
                }
              case 21:
                {
                  q = c >>> 23;
                  q = (q & 256 | 0) == 0 ? d + (q << 4) | 0 : z + ((q & 255) << 4) | 0;
                  s = c >>> 14;
                  s = (s & 256 | 0) == 0 ? d + ((s & 511) << 4) | 0 : z + ((s & 255) << 4) | 0;
                  h = k[q + 8 >> 2] | 0;
                  do
                    if ((h | 0) != 19) {
                      j = q;
                      n: while (1) {
                        switch (h | 0) {
                          case 3:
                            {
                              x = 142;
                              break n;
                            }
                          case 19:
                            {
                              x = 145;
                              break n;
                            }
                          default:
                            {}
                        }
                        if ((h & 15 | 0) != 4) {
                          x = 149;
                          break;
                        }
                        x = Qg((k[j >> 2] | 0) + 24 | 0, ra) | 0;
                        if ((x | 0) != ((k[(k[j >> 2] | 0) + 12 >> 2] | 0) + 1 | 0)) {
                          x = 149;
                          break;
                        }
                        j = ra;
                        h = k[K >> 2] | 0;
                      }
                      if ((x | 0) == 142) {
                        m = +p[j >> 3];
                        n = +Y(+m);
                        if (!(m != n) ? n >= -9223372036854775808.0 & n < 9223372036854775808.0 : 0) {
                          j = ~~n >>> 0;
                          h = +Z(n) >= 1.0 ? (n > 0.0 ? ~~+la(+Y(n / 4294967296.0), 4294967295.0) >>> 0 : ~~+ja((n - +(~~n >>> 0)) / 4294967296.0) >>> 0) : 0;
                          x = 150;
                        } else
                          x = 149;
                      } else if ((x | 0) == 145) {
                        h = j;
                        j = k[h >> 2] | 0;
                        h = k[h + 4 >> 2] | 0;
                        x = 150;
                      }
                      if ((x | 0) == 149) {
                        x = 0;
                        break;
                      } else if ((x | 0) == 150) {
                        o = j;
                        x = 151;
                        break;
                      }
                    } else {
                      h = q;
                      o = k[h >> 2] | 0;
                      h = k[h + 4 >> 2] | 0;
                      x = 151;
                    }
 while (0);
                  o: do
                    if ((x | 0) == 151) {
                      x = 0;
                      g = k[s + 8 >> 2] | 0;
                      do
                        if ((g | 0) != 19) {
                          j = s;
                          p: while (1) {
                            switch (g | 0) {
                              case 3:
                                {
                                  x = 155;
                                  break p;
                                }
                              case 19:
                                {
                                  x = 158;
                                  break p;
                                }
                              default:
                                {}
                            }
                            if ((g & 15 | 0) != 4) {
                              x = 162;
                              break;
                            }
                            x = Qg((k[j >> 2] | 0) + 24 | 0, ra) | 0;
                            if ((x | 0) != ((k[(k[j >> 2] | 0) + 12 >> 2] | 0) + 1 | 0)) {
                              x = 162;
                              break;
                            }
                            j = ra;
                            g = k[L >> 2] | 0;
                          }
                          if ((x | 0) == 155) {
                            m = +p[j >> 3];
                            n = +Y(+m);
                            if (!(m != n) ? n >= -9223372036854775808.0 & n < 9223372036854775808.0 : 0) {
                              g = ~~n >>> 0;
                              j = +Z(n) >= 1.0 ? (n > 0.0 ? ~~+la(+Y(n / 4294967296.0), 4294967295.0) >>> 0 : ~~+ja((n - +(~~n >>> 0)) / 4294967296.0) >>> 0) : 0;
                              x = 163;
                            } else
                              x = 162;
                          } else if ((x | 0) == 158) {
                            g = k[j >> 2] | 0;
                            j = k[j + 4 >> 2] | 0;
                            x = 163;
                          }
                          if ((x | 0) == 162) {
                            x = 0;
                            break o;
                          } else if ((x | 0) == 163) {
                            x = 0;
                            break;
                          }
                        } else {
                          j = s;
                          g = k[j >> 2] | 0;
                          j = k[j + 4 >> 2] | 0;
                        }
 while (0);
                      w = e;
                      k[w >> 2] = g | o;
                      k[w + 4 >> 2] = j | h;
                      k[d + (f << 4) + 8 >> 2] = 19;
                      continue b;
                    }
 while (0);
                  Bh(a, q, s, e, 14);
                  d = k[A >> 2] | 0;
                  continue b;
                }
              case 22:
                {
                  q = c >>> 23;
                  q = (q & 256 | 0) == 0 ? d + (q << 4) | 0 : z + ((q & 255) << 4) | 0;
                  s = c >>> 14;
                  s = (s & 256 | 0) == 0 ? d + ((s & 511) << 4) | 0 : z + ((s & 255) << 4) | 0;
                  h = k[q + 8 >> 2] | 0;
                  do
                    if ((h | 0) != 19) {
                      j = q;
                      q: while (1) {
                        switch (h | 0) {
                          case 3:
                            {
                              x = 170;
                              break q;
                            }
                          case 19:
                            {
                              x = 173;
                              break q;
                            }
                          default:
                            {}
                        }
                        if ((h & 15 | 0) != 4) {
                          x = 177;
                          break;
                        }
                        x = Qg((k[j >> 2] | 0) + 24 | 0, ra) | 0;
                        if ((x | 0) != ((k[(k[j >> 2] | 0) + 12 >> 2] | 0) + 1 | 0)) {
                          x = 177;
                          break;
                        }
                        j = ra;
                        h = k[I >> 2] | 0;
                      }
                      if ((x | 0) == 170) {
                        m = +p[j >> 3];
                        n = +Y(+m);
                        if (!(m != n) ? n >= -9223372036854775808.0 & n < 9223372036854775808.0 : 0) {
                          j = ~~n >>> 0;
                          h = +Z(n) >= 1.0 ? (n > 0.0 ? ~~+la(+Y(n / 4294967296.0), 4294967295.0) >>> 0 : ~~+ja((n - +(~~n >>> 0)) / 4294967296.0) >>> 0) : 0;
                          x = 178;
                        } else
                          x = 177;
                      } else if ((x | 0) == 173) {
                        h = j;
                        j = k[h >> 2] | 0;
                        h = k[h + 4 >> 2] | 0;
                        x = 178;
                      }
                      if ((x | 0) == 177) {
                        x = 0;
                        break;
                      } else if ((x | 0) == 178) {
                        o = j;
                        x = 179;
                        break;
                      }
                    } else {
                      h = q;
                      o = k[h >> 2] | 0;
                      h = k[h + 4 >> 2] | 0;
                      x = 179;
                    }
 while (0);
                  r: do
                    if ((x | 0) == 179) {
                      x = 0;
                      g = k[s + 8 >> 2] | 0;
                      do
                        if ((g | 0) != 19) {
                          j = s;
                          s: while (1) {
                            switch (g | 0) {
                              case 3:
                                {
                                  x = 183;
                                  break s;
                                }
                              case 19:
                                {
                                  x = 186;
                                  break s;
                                }
                              default:
                                {}
                            }
                            if ((g & 15 | 0) != 4) {
                              x = 190;
                              break;
                            }
                            x = Qg((k[j >> 2] | 0) + 24 | 0, ra) | 0;
                            if ((x | 0) != ((k[(k[j >> 2] | 0) + 12 >> 2] | 0) + 1 | 0)) {
                              x = 190;
                              break;
                            }
                            j = ra;
                            g = k[J >> 2] | 0;
                          }
                          if ((x | 0) == 183) {
                            m = +p[j >> 3];
                            n = +Y(+m);
                            if (!(m != n) ? n >= -9223372036854775808.0 & n < 9223372036854775808.0 : 0) {
                              g = ~~n >>> 0;
                              j = +Z(n) >= 1.0 ? (n > 0.0 ? ~~+la(+Y(n / 4294967296.0), 4294967295.0) >>> 0 : ~~+ja((n - +(~~n >>> 0)) / 4294967296.0) >>> 0) : 0;
                              x = 191;
                            } else
                              x = 190;
                          } else if ((x | 0) == 186) {
                            g = k[j >> 2] | 0;
                            j = k[j + 4 >> 2] | 0;
                            x = 191;
                          }
                          if ((x | 0) == 190) {
                            x = 0;
                            break r;
                          } else if ((x | 0) == 191) {
                            x = 0;
                            break;
                          }
                        } else {
                          j = s;
                          g = k[j >> 2] | 0;
                          j = k[j + 4 >> 2] | 0;
                        }
 while (0);
                      w = e;
                      k[w >> 2] = g ^ o;
                      k[w + 4 >> 2] = j ^ h;
                      k[d + (f << 4) + 8 >> 2] = 19;
                      continue b;
                    }
 while (0);
                  Bh(a, q, s, e, 15);
                  d = k[A >> 2] | 0;
                  continue b;
                }
              case 23:
                {
                  q = c >>> 23;
                  q = (q & 256 | 0) == 0 ? d + (q << 4) | 0 : z + ((q & 255) << 4) | 0;
                  s = c >>> 14;
                  s = (s & 256 | 0) == 0 ? d + ((s & 511) << 4) | 0 : z + ((s & 255) << 4) | 0;
                  h = k[q + 8 >> 2] | 0;
                  do
                    if ((h | 0) != 19) {
                      j = q;
                      t: while (1) {
                        switch (h | 0) {
                          case 3:
                            {
                              x = 198;
                              break t;
                            }
                          case 19:
                            {
                              x = 201;
                              break t;
                            }
                          default:
                            {}
                        }
                        if ((h & 15 | 0) != 4) {
                          x = 205;
                          break;
                        }
                        x = Qg((k[j >> 2] | 0) + 24 | 0, ra) | 0;
                        if ((x | 0) != ((k[(k[j >> 2] | 0) + 12 >> 2] | 0) + 1 | 0)) {
                          x = 205;
                          break;
                        }
                        j = ra;
                        h = k[G >> 2] | 0;
                      }
                      if ((x | 0) == 198) {
                        m = +p[j >> 3];
                        n = +Y(+m);
                        if (!(m != n) ? n >= -9223372036854775808.0 & n < 9223372036854775808.0 : 0) {
                          j = ~~n >>> 0;
                          h = +Z(n) >= 1.0 ? (n > 0.0 ? ~~+la(+Y(n / 4294967296.0), 4294967295.0) >>> 0 : ~~+ja((n - +(~~n >>> 0)) / 4294967296.0) >>> 0) : 0;
                          x = 206;
                        } else
                          x = 205;
                      } else if ((x | 0) == 201) {
                        h = j;
                        j = k[h >> 2] | 0;
                        h = k[h + 4 >> 2] | 0;
                        x = 206;
                      }
                      if ((x | 0) == 205) {
                        x = 0;
                        break;
                      } else if ((x | 0) == 206) {
                        g = j;
                        o = h;
                        x = 207;
                        break;
                      }
                    } else {
                      o = q;
                      g = k[o >> 2] | 0;
                      o = k[o + 4 >> 2] | 0;
                      x = 207;
                    }
 while (0);
                  u: do
                    if ((x | 0) == 207) {
                      x = 0;
                      h = k[s + 8 >> 2] | 0;
                      do
                        if ((h | 0) != 19) {
                          j = s;
                          v: while (1) {
                            switch (h | 0) {
                              case 3:
                                {
                                  x = 211;
                                  break v;
                                }
                              case 19:
                                {
                                  x = 214;
                                  break v;
                                }
                              default:
                                {}
                            }
                            if ((h & 15 | 0) != 4) {
                              x = 218;
                              break;
                            }
                            x = Qg((k[j >> 2] | 0) + 24 | 0, ra) | 0;
                            if ((x | 0) != ((k[(k[j >> 2] | 0) + 12 >> 2] | 0) + 1 | 0)) {
                              x = 218;
                              break;
                            }
                            j = ra;
                            h = k[H >> 2] | 0;
                          }
                          if ((x | 0) == 211) {
                            m = +p[j >> 3];
                            n = +Y(+m);
                            if (!(m != n) ? n >= -9223372036854775808.0 & n < 9223372036854775808.0 : 0) {
                              h = ~~n >>> 0;
                              j = +Z(n) >= 1.0 ? (n > 0.0 ? ~~+la(+Y(n / 4294967296.0), 4294967295.0) >>> 0 : ~~+ja((n - +(~~n >>> 0)) / 4294967296.0) >>> 0) : 0;
                              x = 219;
                            } else
                              x = 218;
                          } else if ((x | 0) == 214) {
                            h = k[j >> 2] | 0;
                            j = k[j + 4 >> 2] | 0;
                            x = 219;
                          }
                          if ((x | 0) == 218) {
                            x = 0;
                            break u;
                          } else if ((x | 0) == 219) {
                            x = 0;
                            break;
                          }
                        } else {
                          h = s;
                          j = k[h + 4 >> 2] | 0;
                          h = k[h >> 2] | 0;
                        }
 while (0);
                      if ((j | 0) < 0) {
                        w = (j | 0) < -1 | (j | 0) == -1 & h >>> 0 < 4294967233;
                        j = or(0, 0, h | 0, j | 0) | 0;
                        j = tr(g | 0, o | 0, j | 0) | 0;
                        j = w ? 0 : j;
                        h = w ? 0 : O;
                      } else {
                        w = (j | 0) > 0 | (j | 0) == 0 & h >>> 0 > 63;
                        j = xr(g | 0, o | 0, h | 0) | 0;
                        j = w ? 0 : j;
                        h = w ? 0 : O;
                      }
                      w = e;
                      k[w >> 2] = j;
                      k[w + 4 >> 2] = h;
                      k[d + (f << 4) + 8 >> 2] = 19;
                      continue b;
                    }
 while (0);
                  Bh(a, q, s, e, 16);
                  d = k[A >> 2] | 0;
                  continue b;
                }
              case 24:
                {
                  q = c >>> 23;
                  q = (q & 256 | 0) == 0 ? d + (q << 4) | 0 : z + ((q & 255) << 4) | 0;
                  s = c >>> 14;
                  s = (s & 256 | 0) == 0 ? d + ((s & 511) << 4) | 0 : z + ((s & 255) << 4) | 0;
                  h = k[q + 8 >> 2] | 0;
                  do
                    if ((h | 0) != 19) {
                      j = q;
                      w: while (1) {
                        switch (h | 0) {
                          case 3:
                            {
                              x = 229;
                              break w;
                            }
                          case 19:
                            {
                              x = 232;
                              break w;
                            }
                          default:
                            {}
                        }
                        if ((h & 15 | 0) != 4) {
                          x = 236;
                          break;
                        }
                        x = Qg((k[j >> 2] | 0) + 24 | 0, ra) | 0;
                        if ((x | 0) != ((k[(k[j >> 2] | 0) + 12 >> 2] | 0) + 1 | 0)) {
                          x = 236;
                          break;
                        }
                        j = ra;
                        h = k[E >> 2] | 0;
                      }
                      if ((x | 0) == 229) {
                        m = +p[j >> 3];
                        n = +Y(+m);
                        if (!(m != n) ? n >= -9223372036854775808.0 & n < 9223372036854775808.0 : 0) {
                          j = ~~n >>> 0;
                          h = +Z(n) >= 1.0 ? (n > 0.0 ? ~~+la(+Y(n / 4294967296.0), 4294967295.0) >>> 0 : ~~+ja((n - +(~~n >>> 0)) / 4294967296.0) >>> 0) : 0;
                          x = 237;
                        } else
                          x = 236;
                      } else if ((x | 0) == 232) {
                        h = j;
                        j = k[h >> 2] | 0;
                        h = k[h + 4 >> 2] | 0;
                        x = 237;
                      }
                      if ((x | 0) == 236) {
                        x = 0;
                        break;
                      } else if ((x | 0) == 237) {
                        g = j;
                        o = h;
                        x = 238;
                        break;
                      }
                    } else {
                      o = q;
                      g = k[o >> 2] | 0;
                      o = k[o + 4 >> 2] | 0;
                      x = 238;
                    }
 while (0);
                  x: do
                    if ((x | 0) == 238) {
                      x = 0;
                      h = k[s + 8 >> 2] | 0;
                      do
                        if ((h | 0) != 19) {
                          j = s;
                          y: while (1) {
                            switch (h | 0) {
                              case 3:
                                {
                                  x = 242;
                                  break y;
                                }
                              case 19:
                                {
                                  x = 245;
                                  break y;
                                }
                              default:
                                {}
                            }
                            if ((h & 15 | 0) != 4) {
                              x = 249;
                              break;
                            }
                            x = Qg((k[j >> 2] | 0) + 24 | 0, ra) | 0;
                            if ((x | 0) != ((k[(k[j >> 2] | 0) + 12 >> 2] | 0) + 1 | 0)) {
                              x = 249;
                              break;
                            }
                            j = ra;
                            h = k[F >> 2] | 0;
                          }
                          if ((x | 0) == 242) {
                            m = +p[j >> 3];
                            n = +Y(+m);
                            if (!(m != n) ? n >= -9223372036854775808.0 & n < 9223372036854775808.0 : 0) {
                              j = ~~n >>> 0;
                              h = +Z(n) >= 1.0 ? (n > 0.0 ? ~~+la(+Y(n / 4294967296.0), 4294967295.0) >>> 0 : ~~+ja((n - +(~~n >>> 0)) / 4294967296.0) >>> 0) : 0;
                              x = 250;
                            } else
                              x = 249;
                          } else if ((x | 0) == 245) {
                            h = j;
                            j = k[h >> 2] | 0;
                            h = k[h + 4 >> 2] | 0;
                            x = 250;
                          }
                          if ((x | 0) == 249) {
                            x = 0;
                            break x;
                          } else if ((x | 0) == 250) {
                            x = 0;
                            break;
                          }
                        } else {
                          j = s;
                          h = k[j + 4 >> 2] | 0;
                          j = k[j >> 2] | 0;
                        }
 while (0);
                      if ((h | 0) > 0 | (h | 0) == 0 & j >>> 0 > 0) {
                        h = (h | 0) > 0 | (h | 0) == 0 & j >>> 0 > 63;
                        j = tr(g | 0, o | 0, j | 0) | 0;
                        j = h ? 0 : j;
                        h = h ? 0 : O;
                      } else {
                        w = or(0, 0, j | 0, h | 0) | 0;
                        h = (h | 0) < -1 | (h | 0) == -1 & j >>> 0 < 4294967233;
                        j = xr(g | 0, o | 0, w | 0) | 0;
                        j = h ? 0 : j;
                        h = h ? 0 : O;
                      }
                      w = e;
                      k[w >> 2] = j;
                      k[w + 4 >> 2] = h;
                      k[d + (f << 4) + 8 >> 2] = 19;
                      continue b;
                    }
 while (0);
                  Bh(a, q, s, e, 17);
                  d = k[A >> 2] | 0;
                  continue b;
                }
              case 16:
                {
                  o = c >>> 23;
                  o = (o & 256 | 0) == 0 ? d + (o << 4) | 0 : z + ((o & 255) << 4) | 0;
                  h = c >>> 14;
                  h = (h & 256 | 0) == 0 ? d + ((h & 511) << 4) | 0 : z + ((h & 255) << 4) | 0;
                  j = k[o + 8 >> 2] | 0;
                  z: do
                    switch (j | 0) {
                      case 19:
                        {
                          if ((k[h + 8 >> 2] | 0) != 19) {
                            x = o;
                            n = +((k[x >> 2] | 0) >>> 0) + 4294967296.0 * +(k[x + 4 >> 2] | 0);
                            x = 269;
                            break z;
                          }
                          c = o;
                          g = k[c >> 2] | 0;
                          c = k[c + 4 >> 2] | 0;
                          j = k[h >> 2] | 0;
                          h = k[h + 4 >> 2] | 0;
                          w = pr(j | 0, h | 0, 1, 0) | 0;
                          v = O;
                          if (v >>> 0 < 0 | (v | 0) == 0 & w >>> 0 < 2)
                            if ((j | 0) == 0 & (h | 0) == 0) {
                              x = 260;
                              break a;
                            } else {
                              j = 0;
                              h = 0;
                            }
                          else {
                            v = Dr(g | 0, c | 0, j | 0, h | 0) | 0;
                            w = O;
                            u = (h ^ c | 0) < 0 & ((v | 0) != 0 | (w | 0) != 0);
                            j = pr((u ? j : 0) | 0, (u ? h : 0) | 0, v | 0, w | 0) | 0;
                            h = O;
                          }
                          w = e;
                          k[w >> 2] = j;
                          k[w + 4 >> 2] = h;
                          k[d + (f << 4) + 8 >> 2] = 19;
                          continue b;
                        }
                      case 3:
                        {
                          m = +p[o >> 3];
                          x = 270;
                          break;
                        }
                      default:
                        if ((j & 15 | 0) == 4 ? (w = Qg((k[o >> 2] | 0) + 24 | 0, ra) | 0, (w | 0) == ((k[(k[o >> 2] | 0) + 12 >> 2] | 0) + 1 | 0)) : 0) {
                          v = (k[U >> 2] | 0) == 19;
                          x = ra;
                          w = k[x >> 2] | 0;
                          x = k[x + 4 >> 2] | 0;
                          k[t >> 2] = w;
                          k[t + 4 >> 2] = x;
                          n = v ? +(w >>> 0) + 4294967296.0 * +(x | 0) : +p[t >> 3];
                          x = 269;
                          break z;
                        }
                    }
 while (0);
                  if ((x | 0) == 269) {
                    m = n;
                    x = 270;
                  }
                  A: do
                    if ((x | 0) == 270) {
                      x = 0;
                      j = k[h + 8 >> 2] | 0;
                      if ((j | 0) == 3)
                        n = +p[h >> 3];
                      else
                        do
                          if ((j | 0) == 19) {
                            w = h;
                            n = +((k[w >> 2] | 0) >>> 0) + 4294967296.0 * +(k[w + 4 >> 2] | 0);
                          } else {
                            if ((j & 15 | 0) == 4 ? (w = Qg((k[h >> 2] | 0) + 24 | 0, ra) | 0, (w | 0) == ((k[(k[h >> 2] | 0) + 12 >> 2] | 0) + 1 | 0)) : 0) {
                              u = (k[T >> 2] | 0) == 19;
                              w = ra;
                              v = k[w >> 2] | 0;
                              w = k[w + 4 >> 2] | 0;
                              k[t >> 2] = v;
                              k[t + 4 >> 2] = w;
                              n = u ? +(v >>> 0) + 4294967296.0 * +(w | 0) : +p[t >> 3];
                              break;
                            }
                            break A;
                          }
 while (0);
                      m = +Iq(m, n);
                      p[e >> 3] = n * m < 0.0 ? n + m : m;
                      k[d + (f << 4) + 8 >> 2] = 3;
                      continue b;
                    }
 while (0);
                  Bh(a, o, h, e, 9);
                  d = k[A >> 2] | 0;
                  continue b;
                }
              case 19:
                {
                  o = c >>> 23;
                  o = (o & 256 | 0) == 0 ? d + (o << 4) | 0 : z + ((o & 255) << 4) | 0;
                  h = c >>> 14;
                  h = (h & 256 | 0) == 0 ? d + ((h & 511) << 4) | 0 : z + ((h & 255) << 4) | 0;
                  j = k[o + 8 >> 2] | 0;
                  B: do
                    switch (j | 0) {
                      case 19:
                        {
                          if ((k[h + 8 >> 2] | 0) != 19) {
                            x = o;
                            n = +((k[x >> 2] | 0) >>> 0) + 4294967296.0 * +(k[x + 4 >> 2] | 0);
                            x = 296;
                            break B;
                          }
                          q = o;
                          o = k[q >> 2] | 0;
                          q = k[q + 4 >> 2] | 0;
                          c = h;
                          g = k[c >> 2] | 0;
                          c = k[c + 4 >> 2] | 0;
                          w = pr(g | 0, c | 0, 1, 0) | 0;
                          v = O;
                          if (!(v >>> 0 < 0 | (v | 0) == 0 & w >>> 0 < 2)) {
                            h = Cr(o | 0, q | 0, g | 0, c | 0) | 0;
                            j = O;
                            if ((c ^ q | 0) < 0) {
                              w = Dr(o | 0, q | 0, g | 0, c | 0) | 0;
                              w = ((w | 0) != 0 | (O | 0) != 0) << 31 >> 31;
                              h = pr(w | 0, ((w | 0) < 0) << 31 >> 31 | 0, h | 0, j | 0) | 0;
                              j = O;
                            }
                          } else {
                            if ((g | 0) == 0 & (c | 0) == 0) {
                              x = 285;
                              break a;
                            }
                            h = or(0, 0, o | 0, q | 0) | 0;
                            j = O;
                          }
                          w = e;
                          k[w >> 2] = h;
                          k[w + 4 >> 2] = j;
                          k[d + (f << 4) + 8 >> 2] = 19;
                          continue b;
                        }
                      case 3:
                        {
                          m = +p[o >> 3];
                          x = 297;
                          break;
                        }
                      default:
                        if ((j & 15 | 0) == 4 ? (w = Qg((k[o >> 2] | 0) + 24 | 0, ra) | 0, (w | 0) == ((k[(k[o >> 2] | 0) + 12 >> 2] | 0) + 1 | 0)) : 0) {
                          v = (k[W >> 2] | 0) == 19;
                          x = ra;
                          w = k[x >> 2] | 0;
                          x = k[x + 4 >> 2] | 0;
                          k[t >> 2] = w;
                          k[t + 4 >> 2] = x;
                          n = v ? +(w >>> 0) + 4294967296.0 * +(x | 0) : +p[t >> 3];
                          x = 296;
                          break B;
                        }
                    }
 while (0);
                  if ((x | 0) == 296) {
                    m = n;
                    x = 297;
                  }
                  C: do
                    if ((x | 0) == 297) {
                      x = 0;
                      j = k[h + 8 >> 2] | 0;
                      if ((j | 0) == 3)
                        n = +p[h >> 3];
                      else
                        do
                          if ((j | 0) == 19) {
                            w = h;
                            n = +((k[w >> 2] | 0) >>> 0) + 4294967296.0 * +(k[w + 4 >> 2] | 0);
                          } else {
                            if ((j & 15 | 0) == 4 ? (w = Qg((k[h >> 2] | 0) + 24 | 0, ra) | 0, (w | 0) == ((k[(k[h >> 2] | 0) + 12 >> 2] | 0) + 1 | 0)) : 0) {
                              u = (k[V >> 2] | 0) == 19;
                              w = ra;
                              v = k[w >> 2] | 0;
                              w = k[w + 4 >> 2] | 0;
                              k[t >> 2] = v;
                              k[t + 4 >> 2] = w;
                              n = u ? +(v >>> 0) + 4294967296.0 * +(w | 0) : +p[t >> 3];
                              break;
                            }
                            break C;
                          }
 while (0);
                      n = +Y(+(m / n));
                      p[e >> 3] = n;
                      k[d + (f << 4) + 8 >> 2] = 3;
                      continue b;
                    }
 while (0);
                  Bh(a, o, h, e, 12);
                  d = k[A >> 2] | 0;
                  continue b;
                }
              case 17:
                {
                  o = c >>> 23;
                  o = (o & 256 | 0) == 0 ? d + (o << 4) | 0 : z + ((o & 255) << 4) | 0;
                  h = c >>> 14;
                  h = (h & 256 | 0) == 0 ? d + ((h & 511) << 4) | 0 : z + ((h & 255) << 4) | 0;
                  j = k[o + 8 >> 2] | 0;
                  D: do
                    if ((j | 0) == 3) {
                      n = +p[o >> 3];
                      x = 317;
                    } else {
                      do
                        if ((j | 0) == 19) {
                          x = o;
                          n = +((k[x >> 2] | 0) >>> 0) + 4294967296.0 * +(k[x + 4 >> 2] | 0);
                        } else {
                          if ((j & 15 | 0) == 4 ? (w = Qg((k[o >> 2] | 0) + 24 | 0, ra) | 0, (w | 0) == ((k[(k[o >> 2] | 0) + 12 >> 2] | 0) + 1 | 0)) : 0) {
                            v = (k[_ >> 2] | 0) == 19;
                            x = ra;
                            w = k[x >> 2] | 0;
                            x = k[x + 4 >> 2] | 0;
                            k[t >> 2] = w;
                            k[t + 4 >> 2] = x;
                            n = v ? +(w >>> 0) + 4294967296.0 * +(x | 0) : +p[t >> 3];
                            break;
                          }
                          break D;
                        }
 while (0);
                      x = 317;
                    }
 while (0);
                  E: do
                    if ((x | 0) == 317) {
                      x = 0;
                      j = k[h + 8 >> 2] | 0;
                      if ((j | 0) == 3)
                        m = +p[h >> 3];
                      else
                        do
                          if ((j | 0) == 19) {
                            w = h;
                            m = +((k[w >> 2] | 0) >>> 0) + 4294967296.0 * +(k[w + 4 >> 2] | 0);
                          } else {
                            if ((j & 15 | 0) == 4 ? (w = Qg((k[h >> 2] | 0) + 24 | 0, ra) | 0, (w | 0) == ((k[(k[h >> 2] | 0) + 12 >> 2] | 0) + 1 | 0)) : 0) {
                              u = (k[X >> 2] | 0) == 19;
                              w = ra;
                              v = k[w >> 2] | 0;
                              w = k[w + 4 >> 2] | 0;
                              k[t >> 2] = v;
                              k[t + 4 >> 2] = w;
                              m = u ? +(v >>> 0) + 4294967296.0 * +(w | 0) : +p[t >> 3];
                              break;
                            }
                            break E;
                          }
 while (0);
                      n = +$(+n, +m);
                      p[e >> 3] = n;
                      k[d + (f << 4) + 8 >> 2] = 3;
                      continue b;
                    }
 while (0);
                  Bh(a, o, h, e, 10);
                  d = k[A >> 2] | 0;
                  continue b;
                }
              case 25:
                {
                  h = c >>> 23;
                  j = d + (h << 4) | 0;
                  h = k[d + (h << 4) + 8 >> 2] | 0;
                  F: do
                    switch (h | 0) {
                      case 3:
                        {
                          m = +p[j >> 3];
                          break;
                        }
                      case 19:
                        {
                          v = j;
                          v = or(0, 0, k[v >> 2] | 0, k[v + 4 >> 2] | 0) | 0;
                          w = e;
                          k[w >> 2] = v;
                          k[w + 4 >> 2] = O;
                          k[d + (f << 4) + 8 >> 2] = 19;
                          continue b;
                        }
                      default:
                        {
                          if ((h & 15 | 0) == 4 ? (w = Qg((k[j >> 2] | 0) + 24 | 0, ra) | 0, (w | 0) == ((k[(k[j >> 2] | 0) + 12 >> 2] | 0) + 1 | 0)) : 0) {
                            u = (k[aa >> 2] | 0) == 19;
                            w = ra;
                            v = k[w >> 2] | 0;
                            w = k[w + 4 >> 2] | 0;
                            k[t >> 2] = v;
                            k[t + 4 >> 2] = w;
                            m = u ? +(v >>> 0) + 4294967296.0 * +(w | 0) : +p[t >> 3];
                            break F;
                          }
                          Bh(a, j, j, e, 18);
                          d = k[A >> 2] | 0;
                          continue b;
                        }
                    }
 while (0);
                  p[e >> 3] = -m;
                  k[d + (f << 4) + 8 >> 2] = 3;
                  continue b;
                }
              case 26:
                {
                  w = c >>> 23;
                  g = d + (w << 4) | 0;
                  do
                    if ((k[d + (w << 4) + 8 >> 2] | 0) != 19) {
                      j = g;
                      G: while (1) {
                        h = k[j + 8 >> 2] | 0;
                        switch (h | 0) {
                          case 3:
                            {
                              x = 340;
                              break G;
                            }
                          case 19:
                            {
                              x = 343;
                              break G;
                            }
                          default:
                            {}
                        }
                        if ((h & 15 | 0) != 4) {
                          x = 348;
                          break;
                        }
                        x = Qg((k[j >> 2] | 0) + 24 | 0, ra) | 0;
                        if ((x | 0) == ((k[(k[j >> 2] | 0) + 12 >> 2] | 0) + 1 | 0))
                          j = ra;
                        else {
                          x = 348;
                          break;
                        }
                      }
                      if ((x | 0) == 340) {
                        m = +p[j >> 3];
                        n = +Y(+m);
                        if (!(m != n) ? n >= -9223372036854775808.0 & n < 9223372036854775808.0 : 0) {
                          h = ~~n >>> 0;
                          j = +Z(n) >= 1.0 ? (n > 0.0 ? ~~+la(+Y(n / 4294967296.0), 4294967295.0) >>> 0 : ~~+ja((n - +(~~n >>> 0)) / 4294967296.0) >>> 0) : 0;
                          x = 346;
                        } else
                          x = 348;
                      } else if ((x | 0) == 343) {
                        h = k[j >> 2] | 0;
                        j = k[j + 4 >> 2] | 0;
                        x = 346;
                      }
                      if ((x | 0) == 346) {
                        x = 0;
                        break;
                      } else if ((x | 0) == 348) {
                        x = 0;
                        Bh(a, g, g, e, 19);
                        d = k[A >> 2] | 0;
                        continue b;
                      }
                    } else {
                      j = g;
                      h = k[j >> 2] | 0;
                      j = k[j + 4 >> 2] | 0;
                    }
 while (0);
                  w = e;
                  k[w >> 2] = ~h;
                  k[w + 4 >> 2] = ~j;
                  k[d + (f << 4) + 8 >> 2] = 19;
                  continue b;
                }
              case 27:
                {
                  j = c >>> 23;
                  h = k[d + (j << 4) + 8 >> 2] | 0;
                  if (h)
                    if ((h | 0) == 1)
                      j = (k[d + (j << 4) >> 2] | 0) == 0;
                    else
                      j = 0;
                  else
                    j = 1;
                  k[e >> 2] = j & 1;
                  k[d + (f << 4) + 8 >> 2] = 1;
                  continue b;
                }
              case 28:
                {
                  Mh(a, e, d + (c >>> 23 << 4) | 0);
                  d = k[A >> 2] | 0;
                  continue b;
                }
              case 29:
                {
                  g = c >>> 23;
                  j = c >>> 14 & 511;
                  k[ka >> 2] = d + (j + 1 << 4);
                  Lh(a, 1 - g + j | 0);
                  j = k[A >> 2] | 0;
                  w = j + (f << 4) | 0;
                  h = j + (g << 4) | 0;
                  k[w >> 2] = k[h >> 2];
                  k[w + 4 >> 2] = k[h + 4 >> 2];
                  k[w + 8 >> 2] = k[h + 8 >> 2];
                  k[w + 12 >> 2] = k[h + 12 >> 2];
                  if ((k[(k[ia >> 2] | 0) + 12 >> 2] | 0) > 0) {
                    k[ka >> 2] = f >>> 0 >= g >>> 0 ? j + (f + 1 << 4) | 0 : h;
                    zg(a);
                    e = k[C >> 2] | 0;
                    k[ka >> 2] = e;
                  } else
                    e = k[C >> 2] | 0;
                  d = k[A >> 2] | 0;
                  k[ka >> 2] = e;
                  continue b;
                }
              case 30:
                {
                  if (f)
                    ng(a, (k[A >> 2] | 0) + (f + -1 << 4) | 0);
                  k[B >> 2] = (k[B >> 2] | 0) + ((c >>> 14) + -131071 << 2);
                  continue b;
                }
              case 31:
                {
                  v = c >>> 23;
                  w = c >>> 14;
                  w = (Kh(a, (v & 256 | 0) == 0 ? d + (v << 4) | 0 : z + ((v & 255) << 4) | 0, (w & 256 | 0) == 0 ? d + ((w & 511) << 4) | 0 : z + ((w & 255) << 4) | 0) | 0) == (f | 0);
                  f = k[B >> 2] | 0;
                  if (w) {
                    h = k[f >> 2] | 0;
                    j = h >>> 6 & 255;
                    if (j) {
                      ng(a, (k[A >> 2] | 0) + (j + -1 << 4) | 0);
                      f = k[B >> 2] | 0;
                    }
                    e = f + ((h >>> 14) + -131070 << 2) | 0;
                  } else
                    e = f + 4 | 0;
                  k[B >> 2] = e;
                  d = k[A >> 2] | 0;
                  continue b;
                }
              case 32:
                {
                  v = c >>> 23;
                  w = c >>> 14;
                  w = (Ih(a, (v & 256 | 0) == 0 ? d + (v << 4) | 0 : z + ((v & 255) << 4) | 0, (w & 256 | 0) == 0 ? d + ((w & 511) << 4) | 0 : z + ((w & 255) << 4) | 0) | 0) == (f | 0);
                  f = k[B >> 2] | 0;
                  if (w) {
                    h = k[f >> 2] | 0;
                    j = h >>> 6 & 255;
                    if (j) {
                      ng(a, (k[A >> 2] | 0) + (j + -1 << 4) | 0);
                      f = k[B >> 2] | 0;
                    }
                    e = f + ((h >>> 14) + -131070 << 2) | 0;
                  } else
                    e = f + 4 | 0;
                  k[B >> 2] = e;
                  d = k[A >> 2] | 0;
                  continue b;
                }
              case 33:
                {
                  v = c >>> 23;
                  w = c >>> 14;
                  w = (Jh(a, (v & 256 | 0) == 0 ? d + (v << 4) | 0 : z + ((v & 255) << 4) | 0, (w & 256 | 0) == 0 ? d + ((w & 511) << 4) | 0 : z + ((w & 255) << 4) | 0) | 0) == (f | 0);
                  f = k[B >> 2] | 0;
                  if (w) {
                    h = k[f >> 2] | 0;
                    j = h >>> 6 & 255;
                    if (j) {
                      ng(a, (k[A >> 2] | 0) + (j + -1 << 4) | 0);
                      f = k[B >> 2] | 0;
                    }
                    e = f + ((h >>> 14) + -131070 << 2) | 0;
                  } else
                    e = f + 4 | 0;
                  k[B >> 2] = e;
                  d = k[A >> 2] | 0;
                  continue b;
                }
              case 34:
                {
                  j = k[d + (f << 4) + 8 >> 2] | 0;
                  h = (j | 0) == 0;
                  if (!(c & 8372224)) {
                    if (!h)
                      if (!((j | 0) == 1 ? (k[e >> 2] | 0) == 0 : 0))
                        x = 386;
                  } else if (!h) {
                    if ((j | 0) == 1 ? (k[e >> 2] | 0) == 0 : 0)
                      x = 386;
                  } else
                    x = 386;
                  if ((x | 0) == 386) {
                    x = 0;
                    k[B >> 2] = (k[B >> 2] | 0) + 4;
                    continue b;
                  }
                  j = k[B >> 2] | 0;
                  g = k[j >> 2] | 0;
                  h = g >>> 6 & 255;
                  if (h) {
                    ng(a, (k[A >> 2] | 0) + (h + -1 << 4) | 0);
                    j = k[B >> 2] | 0;
                  }
                  k[B >> 2] = j + ((g >>> 14) + -131070 << 2);
                  continue b;
                }
              case 35:
                {
                  h = c >>> 23;
                  j = d + (h << 4) | 0;
                  h = k[d + (h << 4) + 8 >> 2] | 0;
                  g = (h | 0) == 0;
                  if (!(c & 8372224)) {
                    if (!g)
                      if (!((h | 0) == 1 ? (k[j >> 2] | 0) == 0 : 0))
                        x = 397;
                  } else if (!g) {
                    if ((h | 0) == 1 ? (k[j >> 2] | 0) == 0 : 0)
                      x = 397;
                  } else
                    x = 397;
                  if ((x | 0) == 397) {
                    x = 0;
                    k[B >> 2] = (k[B >> 2] | 0) + 4;
                    continue b;
                  }
                  ;
                  k[e >> 2] = k[j >> 2];
                  k[e + 4 >> 2] = k[j + 4 >> 2];
                  k[e + 8 >> 2] = k[j + 8 >> 2];
                  k[e + 12 >> 2] = k[j + 12 >> 2];
                  j = k[B >> 2] | 0;
                  g = k[j >> 2] | 0;
                  h = g >>> 6 & 255;
                  if (h) {
                    ng(a, (k[A >> 2] | 0) + (h + -1 << 4) | 0);
                    j = k[B >> 2] | 0;
                  }
                  k[B >> 2] = j + ((g >>> 14) + -131070 << 2);
                  continue b;
                }
              case 36:
                {
                  h = c >>> 23;
                  j = c >>> 14 & 511;
                  if (h)
                    k[ka >> 2] = d + (f + h << 4);
                  if (!(ag(a, e, j + -1 | 0) | 0)) {
                    x = 407;
                    break b;
                  }
                  if (j)
                    k[ka >> 2] = k[C >> 2];
                  d = k[A >> 2] | 0;
                  continue b;
                }
              case 37:
                {
                  j = c >>> 23;
                  if (j)
                    k[ka >> 2] = d + (f + j << 4);
                  if (!(ag(a, e, -1) | 0)) {
                    x = 412;
                    break b;
                  }
                  d = k[A >> 2] | 0;
                  continue b;
                }
              case 38:
                {
                  x = 417;
                  break b;
                }
              case 39:
                {
                  q = d + (f << 4) + 8 | 0;
                  j = d + (f + 2 << 4) | 0;
                  if ((k[q >> 2] | 0) == 19) {
                    v = j;
                    w = k[v >> 2] | 0;
                    v = k[v + 4 >> 2] | 0;
                    j = e;
                    j = pr(k[j >> 2] | 0, k[j + 4 >> 2] | 0, w | 0, v | 0) | 0;
                    h = O;
                    o = d + (f + 1 << 4) | 0;
                    g = k[o >> 2] | 0;
                    o = k[o + 4 >> 2] | 0;
                    if ((v | 0) > 0 | (v | 0) == 0 & w >>> 0 > 0) {
                      if ((h | 0) > (o | 0) | (h | 0) == (o | 0) & j >>> 0 > g >>> 0)
                        continue b;
                    } else if ((o | 0) > (h | 0) | (o | 0) == (h | 0) & g >>> 0 > j >>> 0)
                      continue b;
                    k[B >> 2] = (k[B >> 2] | 0) + ((c >>> 14) + -131071 << 2);
                    w = e;
                    k[w >> 2] = j;
                    k[w + 4 >> 2] = h;
                    k[q >> 2] = 19;
                    w = f + 3 | 0;
                    v = d + (w << 4) | 0;
                    k[v >> 2] = j;
                    k[v + 4 >> 2] = h;
                    k[d + (w << 4) + 8 >> 2] = 19;
                    continue b;
                  } else {
                    ya = +p[j >> 3];
                    n = ya + +p[e >> 3];
                    m = +p[d + (f + 1 << 4) >> 3];
                    if (ya > 0.0) {
                      if (!(n <= m))
                        continue b;
                    } else if (!(m <= n))
                      continue b;
                    k[B >> 2] = (k[B >> 2] | 0) + ((c >>> 14) + -131071 << 2);
                    p[e >> 3] = n;
                    k[q >> 2] = 3;
                    w = f + 3 | 0;
                    p[d + (w << 4) >> 3] = n;
                    k[d + (w << 4) + 8 >> 2] = 3;
                    continue b;
                  }
                }
              case 40:
                {
                  s = f + 1 | 0;
                  u = d + (s << 4) | 0;
                  q = f + 2 | 0;
                  v = d + (q << 4) | 0;
                  w = d + (f << 4) + 8 | 0;
                  H: do
                    if ((k[w >> 2] | 0) == 19 ? (k[d + (q << 4) + 8 >> 2] | 0) == 19 : 0) {
                      g = v;
                      h = k[g >> 2] | 0;
                      g = k[g + 4 >> 2] | 0;
                      f = (g | 0) < 0;
                      j = u;
                      I: while (1) {
                        o = k[j + 8 >> 2] | 0;
                        switch (o | 0) {
                          case 3:
                            {
                              x = 438;
                              break I;
                            }
                          case 19:
                            {
                              x = 440;
                              break I;
                            }
                          default:
                            {}
                        }
                        if ((o & 15 | 0) != 4) {
                          x = 444;
                          break;
                        }
                        x = Qg((k[j >> 2] | 0) + 24 | 0, ra) | 0;
                        if ((x | 0) == ((k[(k[j >> 2] | 0) + 12 >> 2] | 0) + 1 | 0))
                          j = ra;
                        else {
                          x = 444;
                          break;
                        }
                      }
                      if ((x | 0) == 438) {
                        ya = +p[j >> 3];
                        n = +Y(+ya);
                        n = f & ya != n ? n + 1.0 : n;
                        if (n >= -9223372036854775808.0 & n < 9223372036854775808.0) {
                          h = ~~n >>> 0;
                          j = +Z(n) >= 1.0 ? (n > 0.0 ? ~~+la(+Y(n / 4294967296.0), 4294967295.0) >>> 0 : ~~+ja((n - +(~~n >>> 0)) / 4294967296.0) >>> 0) : 0;
                          x = 443;
                        } else
                          x = 444;
                      } else if ((x | 0) == 440) {
                        h = k[j >> 2] | 0;
                        j = k[j + 4 >> 2] | 0;
                        x = 443;
                      }
                      do
                        if ((x | 0) == 443) {
                          o = d + (s << 4) + 8 | 0;
                          x = 456;
                        } else if ((x | 0) == 444) {
                          x = 0;
                          o = d + (s << 4) + 8 | 0;
                          j = k[o >> 2] | 0;
                          if ((j | 0) == 3)
                            n = +p[u >> 3];
                          else
                            do
                              if ((j | 0) == 19) {
                                j = u;
                                n = +((k[j >> 2] | 0) >>> 0) + 4294967296.0 * +(k[j + 4 >> 2] | 0);
                              } else {
                                if ((j & 15 | 0) == 4 ? (j = Qg((k[u >> 2] | 0) + 24 | 0, ra) | 0, (j | 0) == ((k[(k[u >> 2] | 0) + 12 >> 2] | 0) + 1 | 0)) : 0) {
                                  q = (k[ca >> 2] | 0) == 19;
                                  j = ra;
                                  s = k[j >> 2] | 0;
                                  j = k[j + 4 >> 2] | 0;
                                  k[t >> 2] = s;
                                  k[t + 4 >> 2] = j;
                                  n = q ? +(s >>> 0) + 4294967296.0 * +(j | 0) : +p[t >> 3];
                                  break;
                                }
                                x = 458;
                                break H;
                              }
 while (0);
                          if (n > 0.0)
                            if (f) {
                              f = -1;
                              j = 2147483647;
                              h = 0;
                              g = 0;
                              break;
                            } else {
                              h = -1;
                              j = 2147483647;
                              x = 456;
                              break;
                            }
                          else if ((g | 0) > -1 | (g | 0) == -1 & h >>> 0 > 4294967295) {
                            f = 0;
                            j = -2147483648;
                            h = 0;
                            g = 0;
                            break;
                          } else {
                            h = 0;
                            j = -2147483648;
                            x = 456;
                            break;
                          }
                        }
 while (0);
                      if ((x | 0) == 456) {
                        x = 0;
                        g = e;
                        f = h;
                        h = k[g >> 2] | 0;
                        g = k[g + 4 >> 2] | 0;
                      }
                      k[u >> 2] = f;
                      k[u + 4 >> 2] = j;
                      k[o >> 2] = 19;
                      v = or(h | 0, g | 0, k[v >> 2] | 0, k[v + 4 >> 2] | 0) | 0;
                      j = e;
                      k[j >> 2] = v;
                      k[j + 4 >> 2] = O;
                      j = 19;
                    } else
                      x = 458;
 while (0);
                  if ((x | 0) == 458) {
                    x = 0;
                    j = d + (s << 4) + 8 | 0;
                    o = k[j >> 2] | 0;
                    if ((o | 0) == 3) {
                      o = u;
                      n = +p[u >> 3];
                    } else {
                      if ((o | 0) == 19) {
                        o = u;
                        n = +((k[o >> 2] | 0) >>> 0) + 4294967296.0 * +(k[o + 4 >> 2] | 0);
                      } else {
                        if ((o & 15 | 0) != 4) {
                          x = 466;
                          break a;
                        }
                        o = Qg((k[u >> 2] | 0) + 24 | 0, ra) | 0;
                        if ((o | 0) != ((k[(k[u >> 2] | 0) + 12 >> 2] | 0) + 1 | 0)) {
                          x = 466;
                          break a;
                        }
                        g = (k[fa >> 2] | 0) == 19;
                        o = ra;
                        h = k[o >> 2] | 0;
                        o = k[o + 4 >> 2] | 0;
                        k[t >> 2] = h;
                        k[t + 4 >> 2] = o;
                        n = g ? +(h >>> 0) + 4294967296.0 * +(o | 0) : +p[t >> 3];
                      }
                      o = u;
                    }
                    p[o >> 3] = n;
                    k[j >> 2] = 3;
                    o = d + (q << 4) + 8 | 0;
                    j = k[o >> 2] | 0;
                    if ((j | 0) == 3) {
                      j = v;
                      m = +p[v >> 3];
                    } else {
                      if ((j | 0) == 19) {
                        u = v;
                        n = +((k[u >> 2] | 0) >>> 0) + 4294967296.0 * +(k[u + 4 >> 2] | 0);
                      } else {
                        if ((j & 15 | 0) != 4) {
                          x = 475;
                          break a;
                        }
                        u = Qg((k[v >> 2] | 0) + 24 | 0, ra) | 0;
                        if ((u | 0) != ((k[(k[v >> 2] | 0) + 12 >> 2] | 0) + 1 | 0)) {
                          x = 475;
                          break a;
                        }
                        h = (k[ea >> 2] | 0) == 19;
                        u = ra;
                        j = k[u >> 2] | 0;
                        u = k[u + 4 >> 2] | 0;
                        k[t >> 2] = j;
                        k[t + 4 >> 2] = u;
                        n = h ? +(j >>> 0) + 4294967296.0 * +(u | 0) : +p[t >> 3];
                      }
                      j = v;
                      m = n;
                    }
                    p[j >> 3] = m;
                    k[o >> 2] = 3;
                    j = k[w >> 2] | 0;
                    if ((j | 0) == 3) {
                      j = e;
                      n = +p[e >> 3];
                    } else {
                      if ((j | 0) == 19) {
                        v = e;
                        n = +((k[v >> 2] | 0) >>> 0) + 4294967296.0 * +(k[v + 4 >> 2] | 0);
                      } else {
                        if ((j & 15 | 0) != 4) {
                          x = 484;
                          break a;
                        }
                        v = Qg((k[e >> 2] | 0) + 24 | 0, ra) | 0;
                        if ((v | 0) != ((k[(k[e >> 2] | 0) + 12 >> 2] | 0) + 1 | 0)) {
                          x = 484;
                          break a;
                        }
                        o = (k[da >> 2] | 0) == 19;
                        v = ra;
                        u = k[v >> 2] | 0;
                        v = k[v + 4 >> 2] | 0;
                        k[t >> 2] = u;
                        k[t + 4 >> 2] = v;
                        n = o ? +(u >>> 0) + 4294967296.0 * +(v | 0) : +p[t >> 3];
                      }
                      j = e;
                    }
                    p[j >> 3] = n - m;
                    j = 3;
                  }
                  k[w >> 2] = j;
                  k[B >> 2] = (k[B >> 2] | 0) + ((c >>> 14) + -131071 << 2);
                  continue b;
                }
              case 41:
                {
                  w = d + (f + 3 << 4) | 0;
                  v = d + (f + 5 << 4) | 0;
                  u = d + (f + 2 << 4) | 0;
                  k[v >> 2] = k[u >> 2];
                  k[v + 4 >> 2] = k[u + 4 >> 2];
                  k[v + 8 >> 2] = k[u + 8 >> 2];
                  k[v + 12 >> 2] = k[u + 12 >> 2];
                  v = d + (f + 4 << 4) | 0;
                  u = d + (f + 1 << 4) | 0;
                  k[v >> 2] = k[u >> 2];
                  k[v + 4 >> 2] = k[u + 4 >> 2];
                  k[v + 8 >> 2] = k[u + 8 >> 2];
                  k[v + 12 >> 2] = k[u + 12 >> 2];
                  k[w >> 2] = k[e >> 2];
                  k[w + 4 >> 2] = k[e + 4 >> 2];
                  k[w + 8 >> 2] = k[e + 8 >> 2];
                  k[w + 12 >> 2] = k[e + 12 >> 2];
                  k[ka >> 2] = d + (f + 6 << 4);
                  cg(a, w, c >>> 14 & 511, 1);
                  w = k[A >> 2] | 0;
                  k[ka >> 2] = k[C >> 2];
                  e = k[B >> 2] | 0;
                  k[B >> 2] = e + 4;
                  e = k[e >> 2] | 0;
                  d = w;
                  c = e;
                  e = w + ((e >>> 6 & 255) << 4) | 0;
                  break;
                }
              case 42:
                break;
              case 43:
                {
                  j = c >>> 23;
                  h = c >>> 14 & 511;
                  if (!j)
                    j = ((k[ka >> 2] | 0) - e >> 4) + -1 | 0;
                  if (!h) {
                    h = k[B >> 2] | 0;
                    k[B >> 2] = h + 4;
                    h = (k[h >> 2] | 0) >>> 6;
                  }
                  o = k[e >> 2] | 0;
                  h = j + -50 + (h * 50 | 0) | 0;
                  if (h >>> 0 > (k[o + 8 >> 2] | 0) >>> 0)
                    oh(a, o, h);
                  if ((j | 0) > 0) {
                    g = o + 5 | 0;
                    while (1) {
                      v = j + f | 0;
                      w = d + (v << 4) | 0;
                      mh(a, o, h, 0, w);
                      h = h + -1 | 0;
                      if (((k[d + (v << 4) + 8 >> 2] & 64 | 0) != 0 ? (i[g >> 0] & 4) != 0 : 0) ? (i[(k[w >> 2] | 0) + 5 >> 0] & 3) != 0 : 0)
                        sg(a, o);
                      if ((j | 0) <= 1)
                        break;
                      else
                        j = j + -1 | 0;
                    }
                  }
                  k[ka >> 2] = k[C >> 2];
                  continue b;
                }
              case 44:
                {
                  q = k[(k[(k[D >> 2] | 0) + 52 >> 2] | 0) + (c >>> 14 << 2) >> 2] | 0;
                  s = q + 68 | 0;
                  j = k[s >> 2] | 0;
                  g = k[q + 12 >> 2] | 0;
                  c = k[q + 64 >> 2] | 0;
                  J: do
                    if (!j)
                      x = 511;
                    else {
                      if ((g | 0) > 0) {
                        h = 0;
                        do {
                          o = l[c + (h << 3) + 5 >> 0] | 0;
                          if (!(i[c + (h << 3) + 4 >> 0] | 0))
                            o = k[k[y + 16 + (o << 2) >> 2] >> 2] | 0;
                          else
                            o = d + (o << 4) | 0;
                          if ((k[k[j + 16 + (h << 2) >> 2] >> 2] | 0) != (o | 0)) {
                            x = 511;
                            break J;
                          }
                          h = h + 1 | 0;
                        } while ((h | 0) < (g | 0));
                      }
                      k[e >> 2] = j;
                      k[d + (f << 4) + 8 >> 2] = 70;
                    }
 while (0);
                  if ((x | 0) == 511) {
                    x = 0;
                    h = kg(a, g) | 0;
                    k[h + 12 >> 2] = q;
                    k[e >> 2] = h;
                    k[d + (f << 4) + 8 >> 2] = 70;
                    if ((g | 0) > 0) {
                      j = 0;
                      do {
                        o = l[c + (j << 3) + 5 >> 0] | 0;
                        if (!(i[c + (j << 3) + 4 >> 0] | 0)) {
                          o = k[y + 16 + (o << 2) >> 2] | 0;
                          k[h + 16 + (j << 2) >> 2] = o;
                        } else {
                          o = mg(a, d + (o << 4) | 0) | 0;
                          k[h + 16 + (j << 2) >> 2] = o;
                        }
                        w = o + 4 | 0;
                        k[w >> 2] = (k[w >> 2] | 0) + 1;
                        j = j + 1 | 0;
                      } while ((j | 0) != (g | 0));
                    }
                    if (!(i[q + 5 >> 0] & 4))
                      k[s >> 2] = h;
                  }
                  if ((k[(k[ia >> 2] | 0) + 12 >> 2] | 0) > 0) {
                    k[ka >> 2] = d + (f + 1 << 4);
                    zg(a);
                    k[ka >> 2] = k[C >> 2];
                  }
                  d = k[A >> 2] | 0;
                  continue b;
                }
              case 45:
                {
                  w = c >>> 23;
                  j = w + -1 | 0;
                  h = (d - (k[b >> 2] | 0) >> 4) - (l[(k[D >> 2] | 0) + 6 >> 0] | 0) | 0;
                  o = h + -1 | 0;
                  if (!w) {
                    if (((k[ga >> 2] | 0) - (k[ka >> 2] | 0) >> 4 | 0) <= (o | 0))
                      Zf(a, o);
                    d = k[A >> 2] | 0;
                    k[ka >> 2] = d + (o + f << 4);
                    j = o;
                  }
                  if ((j | 0) <= 0)
                    continue b;
                  e = 1 - h | 0;
                  h = 0;
                  while (1) {
                    g = h + f | 0;
                    if ((h | 0) < (o | 0)) {
                      w = d + (g << 4) | 0;
                      v = d + (e + h << 4) | 0;
                      k[w >> 2] = k[v >> 2];
                      k[w + 4 >> 2] = k[v + 4 >> 2];
                      k[w + 8 >> 2] = k[v + 8 >> 2];
                      k[w + 12 >> 2] = k[v + 12 >> 2];
                    } else
                      k[d + (g << 4) + 8 >> 2] = 0;
                    h = h + 1 | 0;
                    if ((h | 0) == (j | 0))
                      continue b;
                  }
                }
              default:
                continue b;
            }
 while (0);
          if (!(k[e + 24 >> 2] | 0))
            continue;
          w = e + 16 | 0;
          k[e >> 2] = k[w >> 2];
          k[e + 4 >> 2] = k[w + 4 >> 2];
          k[e + 8 >> 2] = k[w + 8 >> 2];
          k[e + 12 >> 2] = k[w + 12 >> 2];
          k[B >> 2] = (k[B >> 2] | 0) + ((c >>> 14) + -131071 << 2);
        }
        if ((x | 0) == 407) {
          x = 0;
          b = k[P >> 2] | 0;
          D = b + 34 | 0;
          i[D >> 0] = l[D >> 0] | 8;
          continue;
        } else if ((x | 0) == 412) {
          x = 0;
          f = k[P >> 2] | 0;
          b = k[f + 8 >> 2] | 0;
          c = k[f >> 2] | 0;
          g = k[b >> 2] | 0;
          h = f + 16 | 0;
          j = (k[h >> 2] | 0) + (l[(k[(k[c >> 2] | 0) + 12 >> 2] | 0) + 6 >> 0] << 4) | 0;
          if ((k[(k[D >> 2] | 0) + 28 >> 2] | 0) > 0)
            ng(a, k[b + 16 >> 2] | 0);
          if (c >>> 0 < j >>> 0) {
            e = c;
            d = 0;
            do {
              D = g + (d << 4) | 0;
              k[D >> 2] = k[e >> 2];
              k[D + 4 >> 2] = k[e + 4 >> 2];
              k[D + 8 >> 2] = k[e + 8 >> 2];
              k[D + 12 >> 2] = k[e + 12 >> 2];
              d = d + 1 | 0;
              e = c + (d << 4) | 0;
            } while (e >>> 0 < j >>> 0);
          }
          D = c;
          k[b + 16 >> 2] = g + ((k[h >> 2] | 0) - D >> 4 << 4);
          D = g + ((k[ka >> 2] | 0) - D >> 4 << 4) | 0;
          k[ka >> 2] = D;
          k[b + 4 >> 2] = D;
          k[b + 20 >> 2] = k[f + 20 >> 2];
          D = b + 34 | 0;
          i[D >> 0] = l[D >> 0] | 32;
          k[P >> 2] = b;
          continue;
        } else if ((x | 0) == 417) {
          x = 0;
          c = c >>> 23;
          if (c)
            k[ka >> 2] = d + (c + -1 + f << 4);
          if ((k[(k[D >> 2] | 0) + 28 >> 2] | 0) > 0)
            ng(a, d);
          c = bg(a, e) | 0;
          if (!(i[b + 34 >> 0] & 8)) {
            x = 422;
            break;
          }
          b = k[P >> 2] | 0;
          if (!c)
            continue;
          k[ka >> 2] = k[b + 4 >> 2];
          continue;
        }
      }
      if ((x | 0) == 260)
        Pf(a, 1000616, sa);
      else if ((x | 0) == 285)
        Pf(a, 1000590, ta);
      else if ((x | 0) == 422) {
        r = xa;
        return ;
      } else if ((x | 0) == 466)
        Pf(a, 1000642, ua);
      else if ((x | 0) == 475)
        Pf(a, 1000671, va);
      else if ((x | 0) == 484)
        Pf(a, 1000699, wa);
    }
    function Sh(a) {
      a = a | 0;
      var b = 0,
          c = 0,
          d = 0;
      d = r;
      r = r + 16 | 0;
      c = d;
      b = id[k[a + 8 >> 2] & 63](k[a + 16 >> 2] | 0, k[a + 12 >> 2] | 0, c) | 0;
      c = k[c >> 2] | 0;
      if ((b | 0) == 0 | (c | 0) == 0) {
        a = -1;
        r = d;
        return a | 0;
      }
      k[a >> 2] = c + -1;
      k[a + 4 >> 2] = b + 1;
      a = l[b >> 0] | 0;
      r = d;
      return a | 0;
    }
    function Th(a, b, c, d) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      d = d | 0;
      k[b + 16 >> 2] = a;
      k[b + 8 >> 2] = c;
      k[b + 12 >> 2] = d;
      k[b >> 2] = 0;
      k[b + 4 >> 2] = 0;
      return ;
    }
    function Uh(a, b, c) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      var d = 0,
          e = 0,
          f = 0,
          g = 0,
          h = 0,
          i = 0,
          j = 0,
          l = 0,
          m = 0;
      m = r;
      r = r + 16 | 0;
      l = m;
      if (!c) {
        a = 0;
        r = m;
        return a | 0;
      }
      g = a + 16 | 0;
      h = a + 8 | 0;
      i = a + 12 | 0;
      j = a + 4 | 0;
      d = k[a >> 2] | 0;
      while (1) {
        if (!d) {
          e = id[k[h >> 2] & 63](k[g >> 2] | 0, k[i >> 2] | 0, l) | 0;
          d = k[l >> 2] | 0;
          if ((e | 0) == 0 | (d | 0) == 0) {
            b = 8;
            break;
          }
          k[a >> 2] = d;
          k[j >> 2] = e;
          f = e;
        } else
          f = k[j >> 2] | 0;
        e = c >>> 0 > d >>> 0 ? d : c;
        rr(b | 0, f | 0, e | 0) | 0;
        d = (k[a >> 2] | 0) - e | 0;
        k[a >> 2] = d;
        k[j >> 2] = (k[j >> 2] | 0) + e;
        if ((c | 0) == (e | 0)) {
          c = 0;
          b = 8;
          break;
        } else {
          c = c - e | 0;
          b = b + e | 0;
        }
      }
      if ((b | 0) == 8) {
        r = m;
        return c | 0;
      }
      return 0;
    }
    function Vh(a, b, c) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      var d = 0,
          e = 0,
          f = 0;
      d = b + 8 | 0;
      e = k[d >> 2] | 0;
      if (e >>> 0 < c >>> 0) {
        f = c >>> 0 < 32 ? 32 : c;
        c = Kg(a, k[b >> 2] | 0, e, f) | 0;
        k[b >> 2] = c;
        k[d >> 2] = f;
        return c | 0;
      } else {
        f = k[b >> 2] | 0;
        return f | 0;
      }
      return 0;
    }
    function Wh(a, b, c, d) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      d = d | 0;
      var e = 0,
          f = 0,
          g = 0,
          h = 0,
          j = 0,
          l = 0,
          m = 0,
          n = 0,
          o = 0,
          p = 0,
          q = 0,
          s = 0,
          t = 0,
          u = 0,
          v = 0,
          w = 0,
          x = 0,
          y = 0;
      y = r;
      r = r + 256 | 0;
      v = y + 40 | 0;
      u = y + 24 | 0;
      x = y + 32 | 0;
      w = y + 16 | 0;
      t = y;
      h = y + 8 | 0;
      g = y + 148 | 0;
      s = y + 48 | 0;
      q = Od(a) | 0;
      e = 1;
      f = 1;
      while (1)
        if (!(Kf(b, e, g) | 0))
          break;
        else {
          f = e;
          e = e << 1;
        }
      if ((f | 0) < (e | 0))
        do {
          p = (e + f | 0) / 2 | 0;
          o = (Kf(b, p, g) | 0) == 0;
          e = o ? p : e;
          f = o ? f : p + 1 | 0;
        } while ((f | 0) < (e | 0));
      p = (e + -1 | 0) > 22 ? 12 : 0;
      if (c) {
        k[h >> 2] = c;
        oe(a, 1010811, h) | 0;
      }
      le(a, 1000736, 16) | 0;
      if (!(Kf(b, d, s) | 0)) {
        x = Od(a) | 0;
        x = x - q | 0;
        Te(a, x);
        r = y;
        return ;
      }
      h = e + -11 | 0;
      c = s + 36 | 0;
      g = s + 20 | 0;
      j = s + 8 | 0;
      l = s + 12 | 0;
      m = s + 24 | 0;
      n = s + 4 | 0;
      o = s + 35 | 0;
      f = d;
      do {
        f = f + 1 | 0;
        if ((f | 0) == (p | 0)) {
          le(a, 1000753, 5) | 0;
          f = h;
        } else {
          Nf(b, 1000759, s) | 0;
          k[t >> 2] = c;
          oe(a, 1000764, t) | 0;
          e = k[g >> 2] | 0;
          if ((e | 0) > 0) {
            k[w >> 2] = e;
            oe(a, 1000770, w) | 0;
          }
          le(a, 1000774, 4) | 0;
          a: do
            if (!(Uk(a, s) | 0)) {
              e = k[j >> 2] | 0;
              if (i[e >> 0] | 0) {
                d = k[n >> 2] | 0;
                k[u >> 2] = e;
                k[u + 4 >> 2] = d;
                oe(a, 1000793, u) | 0;
                break;
              }
              switch (i[k[l >> 2] >> 0] | 0) {
                case 109:
                  {
                    le(a, 1000801, 10) | 0;
                    break a;
                  }
                case 67:
                  {
                    le(a, 1007823, 1) | 0;
                    break a;
                  }
                default:
                  {
                    d = k[m >> 2] | 0;
                    k[v >> 2] = c;
                    k[v + 4 >> 2] = d;
                    oe(a, 1000812, v) | 0;
                    break a;
                  }
              }
            } else {
              d = de(a, -1, 0) | 0;
              k[x >> 2] = d;
              oe(a, 1000779, x) | 0;
              Qd(a, -2, -1);
              Pd(a, -2);
            }
 while (0);
          if (i[o >> 0] | 0)
            le(a, 1000829, 20) | 0;
          Te(a, (Od(a) | 0) - q | 0);
        }
      } while ((Kf(b, f, s) | 0) != 0);
      x = Od(a) | 0;
      x = x - q | 0;
      Te(a, x);
      r = y;
      return ;
    }
    function Xh(a, b, c) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      var d = 0,
          e = 0,
          f = 0,
          g = 0,
          h = 0;
      h = r;
      r = r + 128 | 0;
      g = h + 16 | 0;
      e = h + 8 | 0;
      d = h;
      f = h + 28 | 0;
      if (!(Kf(a, 0, f) | 0)) {
        k[d >> 2] = b;
        k[d + 4 >> 2] = c;
        g = Yh(a, 1000850, d) | 0;
        r = h;
        return g | 0;
      }
      Nf(a, 1008197, f) | 0;
      if (!(dr(k[f + 8 >> 2] | 0, 1013040) | 0)) {
        b = b + -1 | 0;
        if (!b) {
          k[e >> 2] = k[f + 4 >> 2];
          k[e + 4 >> 2] = c;
          g = Yh(a, 1000872, e) | 0;
          r = h;
          return g | 0;
        } else
          e = b;
      } else
        e = b;
      d = f + 4 | 0;
      b = k[d >> 2] | 0;
      if (!b) {
        if (!(Uk(a, f) | 0))
          b = 1007823;
        else
          b = de(a, -1, 0) | 0;
        k[d >> 2] = b;
      }
      k[g >> 2] = e;
      k[g + 4 >> 2] = b;
      k[g + 8 >> 2] = c;
      g = Yh(a, 1000902, g) | 0;
      r = h;
      return g | 0;
    }
    function Yh(a, b, c) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      var d = 0,
          e = 0,
          f = 0,
          g = 0;
      f = r;
      r = r + 128 | 0;
      g = f;
      e = f + 24 | 0;
      f = f + 8 | 0;
      k[f >> 2] = c;
      if ((Kf(a, 1, e) | 0) != 0 ? (Nf(a, 1000932, e) | 0, d = k[e + 20 >> 2] | 0, (d | 0) > 0) : 0) {
        k[g >> 2] = e + 36;
        k[g + 4 >> 2] = d;
        oe(a, 1000935, g) | 0;
        ne(a, b, f) | 0;
        Te(a, 2);
        Re(a) | 0;
      }
      le(a, 1008077, 0) | 0;
      ne(a, b, f) | 0;
      Te(a, 2);
      Re(a) | 0;
      return 0;
    }
    function Zh(a, b) {
      a = a | 0;
      b = b | 0;
      var c = 0,
          d = 0,
          e = 0,
          f = 0;
      f = r;
      r = r + 112 | 0;
      e = f;
      d = f + 8 | 0;
      if ((Kf(a, b, d) | 0) != 0 ? (Nf(a, 1000932, d) | 0, c = k[d + 20 >> 2] | 0, (c | 0) > 0) : 0) {
        k[e >> 2] = d + 36;
        k[e + 4 >> 2] = c;
        oe(a, 1000935, e) | 0;
        r = f;
        return ;
      }
      le(a, 1008077, 0) | 0;
      r = f;
      return ;
    }
    function _h(a, b, c) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      var d = 0,
          e = 0,
          f = 0;
      f = r;
      r = r + 16 | 0;
      e = f;
      d = Yc() | 0;
      d = k[d >> 2] | 0;
      if (b) {
        qe(a, 1);
        e = 1;
        r = f;
        return e | 0;
      }
      ie(a);
      b = cd(d | 0) | 0;
      if (!c)
        me(a, b) | 0;
      else {
        k[e >> 2] = c;
        k[e + 4 >> 2] = b;
        oe(a, 1000943, e) | 0;
      }
      ke(a, d, ((d | 0) < 0) << 31 >> 31);
      e = 3;
      r = f;
      return e | 0;
    }
    function $h(a, b) {
      a = a | 0;
      b = b | 0;
      switch (b | 0) {
        case -1:
          {
            b = Yc() | 0;
            b = k[b >> 2] | 0;
            ie(a);
            me(a, cd(b | 0) | 0) | 0;
            ke(a, b, ((b | 0) < 0) << 31 >> 31);
            return 3;
          }
        case 0:
          {
            qe(a, 1);
            break;
          }
        default:
          ie(a);
      }
      me(a, 1009474) | 0;
      ke(a, b, ((b | 0) < 0) << 31 >> 31);
      return 3;
    }
    function ai(a, b) {
      a = a | 0;
      b = b | 0;
      if (ve(a, -1001e3, b) | 0) {
        b = 0;
        return b | 0;
      }
      Pd(a, -2);
      Ae(a, 0, 0);
      me(a, b) | 0;
      Ee(a, -2, 1000950);
      Sd(a, -1);
      Ee(a, -1001e3, b);
      b = 1;
      return b | 0;
    }
    function bi(a, b) {
      a = a | 0;
      b = b | 0;
      ve(a, -1001e3, b) | 0;
      Je(a, -2) | 0;
      return ;
    }
    function ci(a, b, c) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      var d = 0;
      d = fe(a, b) | 0;
      if (!d) {
        b = 0;
        return b | 0;
      }
      if (!(Be(a, b) | 0)) {
        b = 0;
        return b | 0;
      }
      ve(a, -1001e3, c) | 0;
      b = (Zd(a, -1, -2) | 0) == 0;
      Pd(a, -3);
      b = b ? 0 : d;
      return b | 0;
    }
    function di(a, b, c) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      var d = 0,
          e = 0;
      d = fe(a, b) | 0;
      if (((d | 0) != 0 ? (Be(a, b) | 0) != 0 : 0) ? (ve(a, -1001e3, c) | 0, e = (Zd(a, -1, -2) | 0) == 0, Pd(a, -3), !e) : 0) {
        e = d;
        return e | 0;
      }
      Vk(a, b, c);
      e = 0;
      return e | 0;
    }
    function ei(a, b, c, d) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      d = d | 0;
      var e = 0,
          f = 0,
          g = 0,
          h = 0;
      h = r;
      r = r + 16 | 0;
      g = h;
      if (!c) {
        c = de(a, b, 0) | 0;
        if (!c) {
          Vk(a, b, Ud(a, 4) | 0);
          f = 0;
        } else
          f = c;
      } else if ((Td(a, b) | 0) >= 1) {
        c = de(a, b, 0) | 0;
        if (!c) {
          Vk(a, b, Ud(a, 4) | 0);
          f = 0;
        } else
          f = c;
      } else
        f = c;
      c = k[d >> 2] | 0;
      a: do
        if (c) {
          e = c;
          c = 0;
          while (1) {
            if (!(dr(e, f) | 0))
              break;
            c = c + 1 | 0;
            e = k[d + (c << 2) >> 2] | 0;
            if (!e)
              break a;
          }
          r = h;
          return c | 0;
        }
 while (0);
      k[g >> 2] = f;
      g = Xh(a, b, oe(a, 1000957, g) | 0) | 0;
      r = h;
      return g | 0;
    }
    function fi(a, b, c, d) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      d = d | 0;
      var e = 0;
      if ((Td(a, b) | 0) >= 1) {
        e = de(a, b, d) | 0;
        if (e) {
          d = e;
          return d | 0;
        }
        Vk(a, b, Ud(a, 4) | 0);
        d = 0;
        return d | 0;
      }
      if (!d) {
        d = c;
        return d | 0;
      }
      if (!c)
        e = 0;
      else
        e = yr(c | 0) | 0;
      k[d >> 2] = e;
      d = c;
      return d | 0;
    }
    function gi(a, b, c) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      c = de(a, b, c) | 0;
      if (c)
        return c | 0;
      Vk(a, b, Ud(a, 4) | 0);
      return c | 0;
    }
    function hi(a, b, c) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      var d = 0,
          e = 0;
      e = r;
      r = r + 16 | 0;
      d = e;
      if (Kd(a, b + 20 | 0) | 0) {
        r = e;
        return ;
      }
      if (!c) {
        Yh(a, 1000997, e + 8 | 0) | 0;
        r = e;
        return ;
      } else {
        k[d >> 2] = c;
        Yh(a, 1000977, d) | 0;
        r = e;
        return ;
      }
    }
    function ii(a, b, c) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      if ((Td(a, b) | 0) == (c | 0))
        return ;
      Vk(a, b, Ud(a, c) | 0);
      return ;
    }
    function ji(a, b) {
      a = a | 0;
      b = b | 0;
      if ((Td(a, b) | 0) != -1)
        return ;
      Xh(a, b, 1009957) | 0;
      return ;
    }
    function ki(a, b) {
      a = a | 0;
      b = b | 0;
      var c = 0.0,
          d = 0,
          e = 0;
      d = r;
      r = r + 16 | 0;
      e = d;
      c = +ae(a, b, e);
      if (k[e >> 2] | 0) {
        r = d;
        return +c;
      }
      Vk(a, b, Ud(a, 3) | 0);
      r = d;
      return +c;
    }
    function li(a, b, c) {
      a = a | 0;
      b = b | 0;
      c = +c;
      var d = 0,
          e = 0;
      e = r;
      r = r + 16 | 0;
      d = e;
      if ((Td(a, b) | 0) < 1) {
        r = e;
        return +c;
      }
      c = +ae(a, b, d);
      if (!(k[d >> 2] | 0))
        Vk(a, b, Ud(a, 3) | 0);
      r = e;
      return +c;
    }
    function mi(a, b) {
      a = a | 0;
      b = b | 0;
      var c = 0,
          d = 0,
          e = 0,
          f = 0;
      e = r;
      r = r + 16 | 0;
      f = e;
      c = be(a, b, f) | 0;
      d = O;
      do
        if (!(k[f >> 2] | 0))
          if (!(Xd(a, b) | 0)) {
            Vk(a, b, Ud(a, 3) | 0);
            break;
          } else {
            Xh(a, b, 1001012) | 0;
            break;
          }
 while (0);
      O = d;
      r = e;
      return c | 0;
    }
    function ni(a, b, c, d) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      d = d | 0;
      var e = 0,
          f = 0;
      f = r;
      r = r + 16 | 0;
      e = f;
      if ((Td(a, b) | 0) < 1) {
        b = d;
        e = c;
        O = b;
        r = f;
        return e | 0;
      }
      d = be(a, b, e) | 0;
      c = O;
      do
        if (!(k[e >> 2] | 0))
          if (!(Xd(a, b) | 0)) {
            Vk(a, b, Ud(a, 3) | 0);
            break;
          } else {
            Xh(a, b, 1001012) | 0;
            break;
          }
 while (0);
      b = c;
      e = d;
      O = b;
      r = f;
      return e | 0;
    }
    function oi(a, b) {
      a = a | 0;
      b = b | 0;
      var c = 0,
          d = 0,
          e = 0,
          f = 0,
          g = 0,
          h = 0,
          i = 0;
      i = r;
      r = r + 16 | 0;
      f = k[a + 12 >> 2] | 0;
      g = a + 4 | 0;
      c = k[g >> 2] | 0;
      h = a + 8 | 0;
      e = k[h >> 2] | 0;
      if ((c - e | 0) >>> 0 >= b >>> 0) {
        h = k[a >> 2] | 0;
        a = e;
        a = h + a | 0;
        r = i;
        return a | 0;
      }
      d = c << 1;
      d = (d - e | 0) >>> 0 < b >>> 0 ? e + b | 0 : d;
      if (d >>> 0 < e >>> 0 | (d - e | 0) >>> 0 < b >>> 0)
        Yh(f, 1001049, i) | 0;
      c = Ve(f, d) | 0;
      rr(c | 0, k[a >> 2] | 0, k[h >> 2] | 0) | 0;
      if ((k[a >> 2] | 0) != (a + 16 | 0)) {
        Qd(f, -2, -1);
        Pd(f, -2);
      }
      k[a >> 2] = c;
      k[g >> 2] = d;
      g = c;
      a = k[h >> 2] | 0;
      a = g + a | 0;
      r = i;
      return a | 0;
    }
    function pi(a, b, c) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      rr(oi(a, c) | 0, b | 0, c | 0) | 0;
      b = a + 8 | 0;
      k[b >> 2] = (k[b >> 2] | 0) + c;
      return ;
    }
    function qi(a, b) {
      a = a | 0;
      b = b | 0;
      var c = 0;
      c = yr(b | 0) | 0;
      rr(oi(a, c) | 0, b | 0, c | 0) | 0;
      b = a + 8 | 0;
      k[b >> 2] = (k[b >> 2] | 0) + c;
      return ;
    }
    function ri(a) {
      a = a | 0;
      var b = 0;
      b = k[a + 12 >> 2] | 0;
      le(b, k[a >> 2] | 0, k[a + 8 >> 2] | 0) | 0;
      if ((k[a >> 2] | 0) == (a + 16 | 0))
        return ;
      Qd(b, -2, -1);
      Pd(b, -2);
      return ;
    }
    function si(a, b) {
      a = a | 0;
      b = b | 0;
      var c = 0,
          d = 0;
      d = a + 8 | 0;
      c = (k[d >> 2] | 0) + b | 0;
      k[d >> 2] = c;
      b = k[a + 12 >> 2] | 0;
      le(b, k[a >> 2] | 0, c) | 0;
      if ((k[a >> 2] | 0) == (a + 16 | 0))
        return ;
      Qd(b, -2, -1);
      Pd(b, -2);
      return ;
    }
    function ti(a) {
      a = a | 0;
      var b = 0,
          c = 0,
          d = 0,
          e = 0,
          f = 0,
          g = 0;
      f = r;
      r = r + 16 | 0;
      e = f;
      b = k[a + 12 >> 2] | 0;
      c = de(b, -1, e) | 0;
      d = a + 16 | 0;
      if ((k[a >> 2] | 0) != (d | 0))
        Qd(b, -2, 1);
      g = k[e >> 2] | 0;
      rr(oi(a, g) | 0, c | 0, g | 0) | 0;
      e = a + 8 | 0;
      k[e >> 2] = (k[e >> 2] | 0) + g;
      Qd(b, (k[a >> 2] | 0) != (d | 0) ? -2 : -1, -1);
      Pd(b, -2);
      r = f;
      return ;
    }
    function ui(a, b) {
      a = a | 0;
      b = b | 0;
      k[b + 12 >> 2] = a;
      k[b >> 2] = b + 16;
      k[b + 8 >> 2] = 0;
      k[b + 4 >> 2] = 4096;
      return ;
    }
    function vi(a, b, c) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      k[b + 12 >> 2] = a;
      k[b >> 2] = b + 16;
      k[b + 8 >> 2] = 0;
      k[b + 4 >> 2] = 4096;
      return oi(b, c) | 0;
    }
    function wi(a, b) {
      a = a | 0;
      b = b | 0;
      var c = 0;
      if (!(Td(a, -1) | 0)) {
        Pd(a, -2);
        a = -1;
        return a | 0;
      }
      c = Nd(a, b) | 0;
      ye(a, c, 0, 0) | 0;
      b = be(a, -1, 0) | 0;
      Pd(a, -2);
      if (!b)
        b = (ee(a, c) | 0) + 1 | 0;
      else {
        ye(a, c, b, ((b | 0) < 0) << 31 >> 31) | 0;
        He(a, c, 0, 0);
      }
      He(a, c, b, ((b | 0) < 0) << 31 >> 31);
      a = b;
      return a | 0;
    }
    function xi(a, b, c) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      var d = 0;
      if ((c | 0) <= -1)
        return ;
      b = Nd(a, b) | 0;
      ye(a, b, 0, 0) | 0;
      d = ((c | 0) < 0) << 31 >> 31;
      He(a, b, c, d);
      ke(a, c, d);
      He(a, b, 0, 0);
      return ;
    }
    function yi(a, b, c) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      var d = 0,
          e = 0,
          f = 0,
          g = 0,
          h = 0,
          j = 0,
          l = 0,
          m = 0,
          n = 0,
          o = 0;
      o = r;
      r = r + 1088 | 0;
      n = o + 40 | 0;
      h = o + 24 | 0;
      e = o + 8 | 0;
      f = o;
      l = o + 56 | 0;
      g = o + 52 | 0;
      m = (Od(a) | 0) + 1 | 0;
      if (b) {
        k[f >> 2] = b;
        oe(a, 1001073, f) | 0;
        j = uc(b | 0, 1010315) | 0;
        k[l + 4 >> 2] = j;
        if (!j) {
          n = Yc() | 0;
          n = cd(k[n >> 2] | 0) | 0;
          l = (de(a, m, 0) | 0) + 1 | 0;
          k[e >> 2] = 1010240;
          k[e + 4 >> 2] = l;
          k[e + 8 >> 2] = n;
          oe(a, 1001077, e) | 0;
          Qd(a, m, -1);
          Pd(a, -2);
          n = 7;
          r = o;
          return n | 0;
        }
      } else {
        le(a, 1001066, 6) | 0;
        k[l + 4 >> 2] = k[x >> 2];
      }
      if (Wk(l, g) | 0) {
        j = k[l >> 2] | 0;
        k[l >> 2] = j + 1;
        i[l + 8 + j >> 0] = 10;
      }
      d = k[g >> 2] | 0;
      j = (b | 0) != 0;
      do
        if (j & (d | 0) == 27) {
          f = l + 4 | 0;
          b = Nb(b | 0, 1001094, k[f >> 2] | 0) | 0;
          k[f >> 2] = b;
          if (b) {
            Wk(l, g) | 0;
            d = k[g >> 2] | 0;
            break;
          }
          n = Yc() | 0;
          n = cd(k[n >> 2] | 0) | 0;
          l = (de(a, m, 0) | 0) + 1 | 0;
          k[h >> 2] = 1001097;
          k[h + 4 >> 2] = l;
          k[h + 8 >> 2] = n;
          oe(a, 1001077, h) | 0;
          Qd(a, m, -1);
          Pd(a, -2);
          n = 7;
          r = o;
          return n | 0;
        }
 while (0);
      if ((d | 0) != -1) {
        h = k[l >> 2] | 0;
        k[l >> 2] = h + 1;
        i[l + 8 + h >> 0] = d;
      }
      f = Ne(a, 47, l, de(a, -1, 0) | 0, c) | 0;
      d = k[l + 4 >> 2] | 0;
      e = cb(d | 0) | 0;
      if (j)
        gc(d | 0) | 0;
      if (!e) {
        Qd(a, m, -1);
        Pd(a, -2);
        n = f;
        r = o;
        return n | 0;
      } else {
        Pd(a, m);
        l = Yc() | 0;
        l = cd(k[l >> 2] | 0) | 0;
        j = (de(a, m, 0) | 0) + 1 | 0;
        k[n >> 2] = 1010022;
        k[n + 4 >> 2] = j;
        k[n + 8 >> 2] = l;
        oe(a, 1001077, n) | 0;
        Qd(a, m, -1);
        Pd(a, -2);
        n = 7;
        r = o;
        return n | 0;
      }
      return 0;
    }
    function zi(a, b, c, d, e) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      d = d | 0;
      e = e | 0;
      var f = 0,
          g = 0;
      f = r;
      r = r + 16 | 0;
      g = f;
      k[g >> 2] = b;
      k[g + 4 >> 2] = c;
      c = Ne(a, 48, g, d, e) | 0;
      r = f;
      return c | 0;
    }
    function Ai(a, b, c) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      if (!(Be(a, b) | 0)) {
        a = 0;
        return a | 0;
      }
      me(a, c) | 0;
      c = xe(a, -2) | 0;
      if (!c) {
        Pd(a, -3);
        a = 0;
        return a | 0;
      } else {
        Qd(a, -2, -1);
        Pd(a, -2);
        a = c;
        return a | 0;
      }
      return 0;
    }
    function Bi(a, b, c) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      b = Nd(a, b) | 0;
      if (!(Be(a, b) | 0)) {
        c = 0;
        return c | 0;
      }
      me(a, c) | 0;
      if (!(xe(a, -2) | 0)) {
        Pd(a, -3);
        c = 0;
        return c | 0;
      } else {
        Qd(a, -2, -1);
        Pd(a, -2);
        Sd(a, b);
        Le(a, 1, 1, 0, 0);
        c = 1;
        return c | 0;
      }
      return 0;
    }
    function Ci(a, b) {
      a = a | 0;
      b = b | 0;
      var c = 0,
          d = 0,
          e = 0;
      d = r;
      r = r + 16 | 0;
      e = d + 4 | 0;
      Ue(a, b);
      b = be(a, -1, e) | 0;
      c = O;
      if (!(k[e >> 2] | 0))
        Yh(a, 1001104, d) | 0;
      Pd(a, -2);
      O = c;
      r = d;
      return b | 0;
    }
    function Di(a, b, c) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      var d = 0,
          e = 0,
          f = 0,
          g = 0,
          h = 0.0;
      g = r;
      r = r + 32 | 0;
      f = g + 16 | 0;
      e = g + 8 | 0;
      d = g;
      a: do
        if (!(Bi(a, b, 1010046) | 0))
          switch (Td(a, b) | 0) {
            case 3:
              if (!(Wd(a, b) | 0)) {
                h = +ae(a, b, 0);
                p[e >> 3] = h;
                oe(a, 1001139, e) | 0;
                break a;
              } else {
                e = be(a, b, 0) | 0;
                f = d;
                k[f >> 2] = e;
                k[f + 4 >> 2] = O;
                oe(a, 1001136, d) | 0;
                break a;
              }
            case 4:
              {
                Sd(a, b);
                break a;
              }
            case 1:
              {
                f = (ce(a, b) | 0) != 0;
                me(a, f ? 1012737 : 1012677) | 0;
                break a;
              }
            case 0:
              {
                le(a, 1012707, 3) | 0;
                break a;
              }
            default:
              {
                d = Ud(a, Td(a, b) | 0) | 0;
                e = he(a, b) | 0;
                k[f >> 2] = d;
                k[f + 4 >> 2] = e;
                oe(a, 1001142, f) | 0;
                break a;
              }
          }
 while (0);
      f = de(a, -1, c) | 0;
      r = g;
      return f | 0;
    }
    function Ei(a, b, c) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      var d = 0,
          e = 0,
          f = 0,
          g = 0,
          h = 0,
          i = 0;
      i = r;
      r = r + 16 | 0;
      d = i;
      if (!(Kd(a, c + 20 | 0) | 0)) {
        k[d >> 2] = 1001149;
        Yh(a, 1000977, d) | 0;
      }
      if (!(k[b >> 2] | 0)) {
        c = ~c;
        Pd(a, c);
        r = i;
        return ;
      }
      h = -2 - c | 0;
      g = 0 - c | 0;
      if ((c | 0) > 0) {
        f = b;
        e = b;
      } else {
        e = b;
        d = b;
        while (1) {
          pe(a, k[e + 4 >> 2] | 0, c);
          Ee(a, h, k[d >> 2] | 0);
          d = e + 8 | 0;
          if (!(k[d >> 2] | 0))
            break;
          else
            e = d;
        }
        c = ~c;
        Pd(a, c);
        r = i;
        return ;
      }
      while (1) {
        d = 0;
        do {
          Sd(a, g);
          d = d + 1 | 0;
        } while ((d | 0) != (c | 0));
        pe(a, k[e + 4 >> 2] | 0, c);
        Ee(a, h, k[f >> 2] | 0);
        d = e + 8 | 0;
        if (!(k[d >> 2] | 0))
          break;
        else {
          f = d;
          e = d;
        }
      }
      c = ~c;
      Pd(a, c);
      r = i;
      return ;
    }
    function Fi(a, b, c) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      if ((ve(a, b, c) | 0) == 5) {
        b = 1;
        return b | 0;
      }
      Pd(a, -2);
      b = Nd(a, b) | 0;
      Ae(a, 0, 0);
      Sd(a, -1);
      Ee(a, b, c);
      b = 0;
      return b | 0;
    }
    function Gi(a, b, c, d) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      d = d | 0;
      var e = 0;
      if ((ve(a, -1001e3, 1001722) | 0) != 5) {
        Pd(a, -2);
        e = Nd(a, -1001e3) | 0;
        Ae(a, 0, 0);
        Sd(a, -1);
        Ee(a, e, 1001722);
      }
      ve(a, -1, b) | 0;
      if (!(ce(a, -1) | 0)) {
        Pd(a, -2);
        pe(a, c, 0);
        me(a, b) | 0;
        Le(a, 1, 1, 0, 0);
        Sd(a, -1);
        Ee(a, -3, b);
      }
      Qd(a, -2, -1);
      Pd(a, -2);
      if (!d)
        return ;
      Sd(a, -1);
      De(a, b);
      return ;
    }
    function Hi(a, b, c, d) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      d = d | 0;
      var e = 0,
          f = 0,
          g = 0,
          h = 0,
          i = 0,
          j = 0,
          l = 0,
          m = 0,
          n = 0,
          o = 0,
          p = 0,
          q = 0,
          s = 0,
          t = 0,
          u = 0,
          v = 0;
      v = r;
      r = r + 4144 | 0;
      o = v + 16 | 0;
      n = v + 8 | 0;
      m = v;
      u = v + 24 | 0;
      l = yr(c | 0) | 0;
      q = u + 12 | 0;
      k[q >> 2] = a;
      t = u + 16 | 0;
      k[u >> 2] = t;
      s = u + 8 | 0;
      k[s >> 2] = 0;
      p = u + 4 | 0;
      k[p >> 2] = 4096;
      f = Up(b, c) | 0;
      if (!f) {
        i = b;
        g = 4096;
        e = 0;
        b = a;
      } else {
        h = b;
        g = 4096;
        e = 0;
        b = a;
        do {
          j = f - h | 0;
          if ((g - e | 0) >>> 0 < j >>> 0) {
            i = g << 1;
            i = (i - e | 0) >>> 0 < j >>> 0 ? e + j | 0 : i;
            if (i >>> 0 < e >>> 0 | (i - e | 0) >>> 0 < j >>> 0)
              Yh(b, 1001049, m) | 0;
            g = Ve(b, i) | 0;
            rr(g | 0, k[u >> 2] | 0, k[s >> 2] | 0) | 0;
            if ((k[u >> 2] | 0) != (t | 0)) {
              Qd(b, -2, -1);
              Pd(b, -2);
            }
            k[u >> 2] = g;
            k[p >> 2] = i;
            e = k[s >> 2] | 0;
          } else
            g = k[u >> 2] | 0;
          rr(g + e | 0, h | 0, j | 0) | 0;
          b = (k[s >> 2] | 0) + j | 0;
          k[s >> 2] = b;
          e = yr(d | 0) | 0;
          i = k[q >> 2] | 0;
          h = k[p >> 2] | 0;
          if ((h - b | 0) >>> 0 < e >>> 0) {
            g = h << 1;
            g = (g - b | 0) >>> 0 < e >>> 0 ? b + e | 0 : g;
            if (g >>> 0 < b >>> 0 | (g - b | 0) >>> 0 < e >>> 0)
              Yh(i, 1001049, n) | 0;
            h = Ve(i, g) | 0;
            rr(h | 0, k[u >> 2] | 0, k[s >> 2] | 0) | 0;
            if ((k[u >> 2] | 0) != (t | 0)) {
              Qd(i, -2, -1);
              Pd(i, -2);
            }
            k[u >> 2] = h;
            k[p >> 2] = g;
            b = k[s >> 2] | 0;
          } else
            h = k[u >> 2] | 0;
          rr(h + b | 0, d | 0, e | 0) | 0;
          e = (k[s >> 2] | 0) + e | 0;
          k[s >> 2] = e;
          h = f + l | 0;
          f = Up(h, c) | 0;
          b = k[q >> 2] | 0;
          g = k[p >> 2] | 0;
        } while ((f | 0) != 0);
        i = h;
      }
      h = yr(i | 0) | 0;
      if ((g - e | 0) >>> 0 < h >>> 0) {
        g = g << 1;
        g = (g - e | 0) >>> 0 < h >>> 0 ? e + h | 0 : g;
        if (g >>> 0 < e >>> 0 | (g - e | 0) >>> 0 < h >>> 0)
          Yh(b, 1001049, o) | 0;
        f = Ve(b, g) | 0;
        rr(f | 0, k[u >> 2] | 0, k[s >> 2] | 0) | 0;
        if ((k[u >> 2] | 0) != (t | 0)) {
          Qd(b, -2, -1);
          Pd(b, -2);
        }
        k[u >> 2] = f;
        k[p >> 2] = g;
        e = k[s >> 2] | 0;
      } else
        f = k[u >> 2] | 0;
      rr(f + e | 0, i | 0, h | 0) | 0;
      p = (k[s >> 2] | 0) + h | 0;
      k[s >> 2] = p;
      e = k[q >> 2] | 0;
      le(e, k[u >> 2] | 0, p) | 0;
      if ((k[u >> 2] | 0) == (t | 0)) {
        u = de(a, -1, 0) | 0;
        r = v;
        return u | 0;
      }
      Qd(e, -2, -1);
      Pd(e, -2);
      u = de(a, -1, 0) | 0;
      r = v;
      return u | 0;
    }
    function Ii(a, b, c) {
      a = a | 0;
      b = +b;
      c = c | 0;
      var d = 0.0,
          e = 0,
          f = 0,
          g = 0;
      g = r;
      r = r + 32 | 0;
      f = g + 16 | 0;
      e = Md(a) | 0;
      if ((c | 0) != 136)
        Yh(a, 1001167, g) | 0;
      if ((e | 0) != (Md(0) | 0)) {
        Yh(a, 1001216, g + 8 | 0) | 0;
        r = g;
        return ;
      }
      d = +p[e >> 3];
      if (!(d != b)) {
        r = g;
        return ;
      }
      p[f >> 3] = b;
      p[f + 8 >> 3] = d;
      Yh(a, 1001242, f) | 0;
      r = g;
      return ;
    }
    function Ji(a) {
      a = a | 0;
      ye(a, -1001e3, 2, 0) | 0;
      Ei(a, 4060, 0);
      Sd(a, -1);
      Ee(a, -2, 1001754);
      le(a, 1001296, 7) | 0;
      Ee(a, -2, 1001304);
      me(a, Ud(a, 0) | 0) | 0;
      me(a, Ud(a, 1) | 0) | 0;
      me(a, Ud(a, 2) | 0) | 0;
      me(a, Ud(a, 3) | 0) | 0;
      me(a, Ud(a, 4) | 0) | 0;
      me(a, Ud(a, 5) | 0) | 0;
      me(a, Ud(a, 6) | 0) | 0;
      me(a, Ud(a, 7) | 0) | 0;
      me(a, Ud(a, 8) | 0) | 0;
      pe(a, 206, 9);
      Ee(a, -2, 1010266);
      return 1;
    }
    function Ki(a) {
      a = a | 0;
      Ii(a, 503.0, 136);
      Ae(a, 0, 7);
      Ei(a, 4260, 0);
      return 1;
    }
    function Li(a) {
      a = a | 0;
      Ii(a, 503.0, 136);
      Ae(a, 0, 16);
      Ei(a, 4324, 0);
      return 1;
    }
    function Mi(a) {
      a = a | 0;
      var b = 0,
          c = 0,
          d = 0;
      Ii(a, 503.0, 136);
      Ae(a, 0, 11);
      Ei(a, 4460, 0);
      ai(a, 1001313) | 0;
      Sd(a, -1);
      Ee(a, -2, 1011538);
      Ei(a, 4556, 0);
      Pd(a, -2);
      d = k[x >> 2] | 0;
      c = Ve(a, 8) | 0;
      b = c + 4 | 0;
      k[b >> 2] = 0;
      bi(a, 1001313);
      k[c >> 2] = d;
      k[b >> 2] = 207;
      Sd(a, -1);
      Ee(a, -1001e3, 1001319);
      Ee(a, -2, 1001329);
      b = k[y >> 2] | 0;
      c = Ve(a, 8) | 0;
      d = c + 4 | 0;
      k[d >> 2] = 0;
      bi(a, 1001313);
      k[c >> 2] = b;
      k[d >> 2] = 207;
      Sd(a, -1);
      Ee(a, -1001e3, 1001335);
      Ee(a, -2, 1001346);
      d = k[w >> 2] | 0;
      c = Ve(a, 8) | 0;
      b = c + 4 | 0;
      k[b >> 2] = 0;
      bi(a, 1001313);
      k[c >> 2] = d;
      k[b >> 2] = 207;
      Ee(a, -2, 1001353);
      return 1;
    }
    function Ni(a) {
      a = a | 0;
      Ii(a, 503.0, 136);
      Ae(a, 0, 27);
      Ei(a, 4636, 0);
      je(a, 3.141592653589793);
      Ee(a, -2, 1001360);
      je(a, E);
      Ee(a, -2, 1001363);
      ke(a, -1, 2147483647);
      Ee(a, -2, 1001368);
      ke(a, 0, -2147483648);
      Ee(a, -2, 1001379);
      return 1;
    }
    function Oi(a) {
      a = a | 0;
      Ii(a, 503.0, 136);
      Ae(a, 0, 11);
      Ei(a, 4860, 0);
      return 1;
    }
    function Pi(a) {
      a = a | 0;
      Ii(a, 503.0, 136);
      Ae(a, 0, 17);
      Ei(a, 4956, 0);
      Ae(a, 0, 1);
      le(a, 1008077, 0) | 0;
      Sd(a, -2);
      Je(a, -2) | 0;
      Pd(a, -2);
      Sd(a, -2);
      Ee(a, -2, 1011538);
      Pd(a, -2);
      return 1;
    }
    function Qi(a) {
      a = a | 0;
      Ii(a, 503.0, 136);
      Ae(a, 0, 7);
      Ei(a, 5100, 0);
      return 1;
    }
    function Ri(a) {
      a = a | 0;
      Ii(a, 503.0, 136);
      Ae(a, 0, 6);
      Ei(a, 5164, 0);
      le(a, 1001390, 14) | 0;
      Ee(a, -2, 1001405);
      return 1;
    }
    function Si(a) {
      a = a | 0;
      Ae(a, 0, 0);
      Ae(a, 0, 1);
      pe(a, 208, 0);
      Ee(a, -2, 1011557);
      Je(a, -2) | 0;
      Ie(a, -1001e3, 5220);
      Ii(a, 503.0, 136);
      Ae(a, 0, 7);
      Ei(a, 5224, 0);
      Ae(a, 4, 0);
      Sd(a, -2);
      pe(a, 209, 1);
      He(a, -2, 1, 0);
      Sd(a, -2);
      pe(a, 210, 1);
      He(a, -2, 2, 0);
      Sd(a, -2);
      pe(a, 211, 1);
      He(a, -2, 3, 0);
      Sd(a, -2);
      pe(a, 212, 1);
      He(a, -2, 4, 0);
      Ee(a, -2, 1001417);
      el(a, 1001427, 1001432, 1001445, 1001454);
      el(a, 1001605, 1001611, 1001625, 1001635);
      le(a, 1001704, 10) | 0;
      Ee(a, -2, 1001715);
      Fi(a, -1001e3, 1001722) | 0;
      Ee(a, -2, 1001730);
      Fi(a, -1001e3, 1001737) | 0;
      Ee(a, -2, 1001746);
      ye(a, -1001e3, 2, 0) | 0;
      Sd(a, -2);
      Ei(a, 5288, 1);
      Pd(a, -2);
      return 1;
    }
    function Ti(a) {
      a = a | 0;
      Gi(a, 1001754, 213, 1);
      Pd(a, -2);
      Gi(a, 1001757, 214, 1);
      Pd(a, -2);
      Gi(a, 1001765, 215, 1);
      Pd(a, -2);
      Gi(a, 1004796, 216, 1);
      Pd(a, -2);
      Gi(a, 1001775, 217, 1);
      Pd(a, -2);
      Gi(a, 1001778, 218, 1);
      Pd(a, -2);
      Gi(a, 1012571, 219, 1);
      Pd(a, -2);
      Gi(a, 1001781, 220, 1);
      Pd(a, -2);
      Gi(a, 1001786, 221, 1);
      Pd(a, -2);
      Gi(a, 1010385, 222, 1);
      Pd(a, -2);
      return ;
    }
    function Ui(a, b, c) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      var d = 0,
          e = 0;
      a = i[1002567] | 0;
      if (a << 24 >> 24 <= 0) {
        e = 0;
        return e | 0;
      }
      d = a << 24 >> 24;
      a = 0;
      while (1) {
        if (!(dr(1001799 + (a << 5) | 0, b) | 0))
          break;
        a = a + 1 | 0;
        if ((a | 0) >= (d | 0)) {
          a = 0;
          e = 6;
          break;
        }
      }
      if ((e | 0) == 6)
        return a | 0;
      k[c >> 2] = i[1001791 + a >> 0];
      e = 1002055 + (a << 6) | 0;
      return e | 0;
    }
    function Vi(a, b, c, d) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      d = d | 0;
      var e = 0;
      a = i[1002567] | 0;
      e = a << 24 >> 24;
      if (a << 24 >> 24 >= 8)
        return ;
      i[1002567] = a + 1 << 24 >> 24;
      i[1001791 + e >> 0] = d;
      qr(1001799 + (e << 5) | 0, b | 0, 32) | 0;
      i[1001799 + (e << 5) + 31 >> 0] = 0;
      qr(1002055 + (e << 6) | 0, c | 0, 64) | 0;
      i[1002055 + (e << 6) + 63 >> 0] = 0;
      return ;
    }
    function Wi(a, b) {
      a = a | 0;
      b = b | 0;
      var c = 0,
          d = 0;
      c = r;
      r = r + 32 | 0;
      d = c;
      k[d >> 2] = a;
      k[d + 4 >> 2] = b;
      k[d + 8 >> 2] = a;
      k[d + 12 >> 2] = b;
      o[d + 16 >> 2] = 0.0;
      sd[k[732 >> 2] & 63](37, d) | 0;
      k[1326] = 0;
      k[1327] = a;
      k[1328] = b;
      r = c;
      return 0;
    }
    function Xi(a, b, c, d, e) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      d = d | 0;
      e = e | 0;
      var f = 0,
          g = 0,
          h = 0,
          i = 0,
          j = 0,
          l = 0;
      j = r;
      r = r + 32 | 0;
      i = j;
      if ((b | 0) > -1) {
        k[1327] = d;
        k[1328] = e;
        l = a + 4 | 0;
        g = a + 8 | 0;
        h = l;
        f = e;
        e = (ka(k[l >> 2] | 0, c) | 0) + b | 0;
        a = d;
      } else {
        h = a + 4 | 0;
        l = k[h >> 2] | 0;
        g = a + 8 | 0;
        f = k[g >> 2] | 0;
        k[1327] = l;
        k[1328] = k[g >> 2];
        e = 0;
        a = l;
      }
      k[i >> 2] = a;
      k[i + 4 >> 2] = f;
      k[1326] = e;
      k[i + 8 >> 2] = k[h >> 2];
      k[i + 12 >> 2] = k[g >> 2];
      o[i + 16 >> 2] = 0.0;
      sd[k[732 >> 2] & 63](37, i) | 0;
      r = j;
      return ;
    }
    function Yi(a, b) {
      a = a | 0;
      b = b | 0;
      var c = 0,
          d = 0,
          e = 0;
      c = r;
      r = r + 8208 | 0;
      d = c;
      e = c + 8 | 0;
      Zq(e, 8192, a, b) | 0;
      i[e + 8191 >> 0] = 0;
      a = k[182] | 0;
      k[d >> 2] = e;
      od[a & 63](3, 1010231, d);
      r = c;
      return ;
    }
    function Zi(a) {
      a = a | 0;
      k[a >> 2] = 1002568;
      k[a + 4 >> 2] = 1002581;
      i[a + 12 >> 0] = 0;
      i[a + 13 >> 0] = 0;
      k[a + 8 >> 2] = 1002585;
      return ;
    }
    function _i(a) {
      a = a | 0;
      k[183] = a;
      sd[a & 63](16, 5316) | 0;
      sd[a & 63](35, 5324) | 0;
      return ;
    }
    function $i() {
      return 1;
    }
    function aj() {
      var a = 0,
          b = 0;
      b = r;
      r = r + 16 | 0;
      a = b + 4 | 0;
      if (sd[k[732 >> 2] & 63](27, a) | 0)
        k[182] = k[a >> 2];
      if (sd[k[732 >> 2] & 63](28, 5340) | 0) {
        r = b;
        return ;
      }
      k[1335] = 0;
      od[k[728 >> 2] & 63](2, 1002589, b);
      r = b;
      return ;
    }
    function bj(a) {
      a = a | 0;
      var b = 0,
          c = 0,
          d = 0,
          e = 0,
          f = 0,
          g = 0;
      d = r;
      r = r + 32 | 0;
      c = d + 24 | 0;
      e = d;
      b = d + 28 | 0;
      f = k[182] | 0;
      g = k[185] | 0;
      k[e >> 2] = k[184];
      k[e + 4 >> 2] = g;
      od[f & 63](3, 1002623, e);
      if (!(k[1335] | 0)) {
        od[k[728 >> 2] & 63](3, 1002630, d + 8 | 0);
        g = 0;
        r = d;
        return g | 0;
      }
      k[b >> 2] = 2;
      if (!(sd[k[732 >> 2] & 63](10, b) | 0)) {
        od[k[728 >> 2] & 63](3, 1002661, d + 16 | 0);
        g = 0;
        r = d;
        return g | 0;
      }
      g = qk(k[a + 4 >> 2] | 0) | 0;
      a = yj(5368, g, k[a + 8 >> 2] | 0, 1) | 0;
      if (!a) {
        sd[k[732 >> 2] & 63](11, 5404) | 0;
        a = 136;
        b = a + 56 | 0;
        do {
          k[a >> 2] = 0;
          a = a + 4 | 0;
        } while ((a | 0) < (b | 0));
        k[1350] = 0;
        g = 1;
        r = d;
        return g | 0;
      } else {
        g = k[182] | 0;
        f = Aj(a) | 0;
        k[c >> 2] = f;
        od[g & 63](3, 1002686, c);
        k[1350] = -1;
        g = 0;
        r = d;
        return g | 0;
      }
      return 0;
    }
    function cj(a) {
      a = a | 0;
      return ((a | 0) == 0 ? 777 : 0) | 0;
    }
    function dj(a) {
      a = a | 0;
      return ((a | 0) == 0 ? 1001791 : 0) | 0;
    }
    function ej(a) {
      a = a | 0;
      k[1436] = a;
      return ;
    }
    function fj(a) {
      a = a | 0;
      return ;
    }
    function gj(a) {
      a = a | 0;
      k[1437] = a;
      return ;
    }
    function hj(a) {
      a = a | 0;
      k[1438] = a;
      return ;
    }
    function ij(a) {
      a = a | 0;
      k[1439] = a;
      return ;
    }
    function jj(a) {
      a = a | 0;
      var b = 0,
          c = 0;
      c = k[35] | 0;
      k[a >> 2] = c;
      b = k[36] | 0;
      k[a + 4 >> 2] = b;
      k[a + 8 >> 2] = c;
      k[a + 12 >> 2] = b;
      o[a + 16 >> 2] = 0.0;
      p[a + 24 >> 3] = 60.0;
      p[a + 32 >> 3] = 44100.0;
      return ;
    }
    function kj() {
      var a = 0,
          b = 0,
          c = 0,
          d = 0;
      d = r;
      r = r + 48 | 0;
      b = d + 40 | 0;
      a = d;
      pd[k[5756 >> 2] & 63]();
      switch (k[1350] | 0) {
        case 0:
          {
            c = 2;
            break;
          }
        case -1:
          {
            r = d;
            return ;
          }
        default:
          a = 0;
      }
      do
        if ((c | 0) == 2) {
          c = kd[k[5340 >> 2] & 63]() | 0;
          if (!(Ej(136, 5368, c, O) | 0)) {
            b = k[35] | 0;
            k[a >> 2] = b;
            c = k[36] | 0;
            k[a + 4 >> 2] = c;
            k[a + 8 >> 2] = b;
            k[a + 12 >> 2] = c;
            o[a + 16 >> 2] = 0.0;
            p[a + 24 >> 3] = 60.0;
            p[a + 32 >> 3] = 44100.0;
            sd[k[732 >> 2] & 63](32, a) | 0;
            k[1350] = 1;
            a = 0;
            break;
          }
          od[k[728 >> 2] & 63](3, 1002715, b);
          k[1350] = -1;
          r = d;
          return ;
        }
 while (0);
      do {
        c = qd[k[5752 >> 2] & 63](0, 1, 0, k[5760 + (a << 3) >> 2] | 0) | 0;
        Hj(136, k[5760 + (a << 3) + 4 >> 2] | 0, c << 16 >> 16 != 0 & 1);
        a = a + 1 | 0;
      } while ((a | 0) != 16);
      b = kd[k[5340 >> 2] & 63]() | 0;
      Ij(136, b, O);
      gk();
      td[k[5744 >> 2] & 63]((k[37] | 0) + (k[1326] << 1) | 0, k[1327] | 0, k[1328] | 0, k[35] << 1);
      hk();
      b = k[1437] | 0;
      c = dk() | 0;
      sd[b & 63](c, 735) | 0;
      r = d;
      return ;
    }
    function lj() {
      pd[k[5364 >> 2] & 63]();
      return ;
    }
    function mj(a, b) {
      a = a | 0;
      b = b | 0;
      return ;
    }
    function nj() {
      Gj(136) | 0;
      return ;
    }
    function oj() {
      return 0;
    }
    function pj(a, b) {
      a = a | 0;
      b = b | 0;
      return 0;
    }
    function qj(a, b) {
      a = a | 0;
      b = b | 0;
      return 0;
    }
    function rj() {
      return ;
    }
    function sj(a, b, c) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      return ;
    }
    function tj(a, b, c) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      return 0;
    }
    function uj() {
      Fj(136);
      zj(5368);
      return ;
    }
    function vj() {
      return 0;
    }
    function wj(a, b, c) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      return ir(ka(c, b) | 0) | 0;
    }
    function xj(a, b) {
      a = a | 0;
      b = b | 0;
      jr(b);
      return ;
    }
    function yj(a, b, c, d) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      d = d | 0;
      var e = 0,
          f = 0,
          g = 0,
          h = 0,
          j = 0,
          l = 0,
          m = 0,
          n = 0;
      n = r;
      r = r + 16 | 0;
      h = n + 8 | 0;
      l = n + 4 | 0;
      m = n;
      k[l >> 2] = b;
      k[m >> 2] = c;
      if (((i[b >> 0] | 0) == 66 ? (i[b + 1 >> 0] | 0) == 90 : 0) ? (i[b + 2 >> 0] | 0) == 104 : 0)
        e = ((i[b + 3 >> 0] | 0) + -48 & 255) > 9 ? 5896 : 5888;
      else
        e = 5896;
      if (qd[k[e + 4 >> 2] & 63](l, m, b, c) | 0) {
        m = -1;
        r = n;
        return m | 0;
      }
      e = k[l >> 2] | 0;
      do
        if ((e | 0) == (b | 0))
          if (d & 1) {
            e = ir(c) | 0;
            k[l >> 2] = e;
            if (!e) {
              m = -2;
              r = n;
              return m | 0;
            } else {
              rr(e | 0, b | 0, c | 0) | 0;
              k[m >> 2] = c;
              j = d | 65536;
              break;
            }
          } else {
            j = d;
            e = b;
          }
        else
          j = d | 65536;
 while (0);
      c = k[m >> 2] | 0;
      a: do
        if (!(c & 511)) {
          f = c + -512 | 0;
          g = e + f | 0;
          b: do
            if ((f | 0) < 0) {
              d = e;
              c = e;
            } else {
              d = e;
              c = e;
              while (1) {
                if (!(i[d >> 0] | 0))
                  break b;
                b = ar(c + 124 | 0, h, 8) | 0;
                if (i[k[h >> 2] >> 0] | 0)
                  break a;
                f = Yc() | 0;
                if ((k[f >> 2] | 0) == 34)
                  break a;
                e = c + 100 | 0;
                f = i[d >> 0] | 0;
                do {
                  d = d + 1 | 0;
                  if (f << 24 >> 24 < 32)
                    break a;
                  f = i[d >> 0] | 0;
                } while (d >>> 0 < e >>> 0 & f << 24 >> 24 != 0);
                e = c + (((b + 511 | 0) / 512 | 0) + 1 << 9) | 0;
                if (e >>> 0 > g >>> 0) {
                  d = e;
                  c = e;
                  break;
                } else {
                  d = e;
                  c = e;
                }
              }
            }
 while (0);
          if (d >>> 0 < g >>> 0) {
            do {
              e = 0;
              do {
                if (i[c + e >> 0] | 0)
                  break a;
                e = e + 1 | 0;
              } while ((e | 0) < 512);
              c = c + 512 | 0;
            } while (c >>> 0 < g >>> 0);
            c = k[l >> 2] | 0;
            k[a >> 2] = c;
            k[a + 4 >> 2] = k[m >> 2];
            k[a + 8 >> 2] = j;
            k[a + 20 >> 2] = 52;
            k[a + 24 >> 2] = 49;
            k[a + 28 >> 2] = 49;
            if (!(i[c >> 0] | 0)) {
              m = 0;
              r = n;
              return m | 0;
            }
            do {
              m = ar(c + 124 | 0, 0, 8) | 0;
              k[c + 260 >> 2] = 0;
              k[c + 264 >> 2] = 0;
              c = c + (((m + 511 | 0) / 512 | 0) + 1 << 9) | 0;
            } while ((i[c >> 0] | 0) != 0);
            c = 0;
            r = n;
            return c | 0;
          }
        }
 while (0);
      m = -1;
      r = n;
      return m | 0;
    }
    function zj(a) {
      a = a | 0;
      var b = 0;
      b = a + 20 | 0;
      ld[k[b >> 2] & 63](a);
      if (k[a + 8 >> 2] & 65536)
        jr(k[a >> 2] | 0);
      k[a >> 2] = 0;
      k[a + 4 >> 2] = 0;
      k[a + 16 >> 2] = 0;
      k[b >> 2] = 0;
      k[a + 24 >> 2] = 0;
      return ;
    }
    function Aj(a) {
      a = a | 0;
      switch (a | 0) {
        case -3:
          {
            a = 1002752;
            break;
          }
        case 0:
          {
            a = 1002812;
            break;
          }
        case -2:
          {
            a = 1002768;
            break;
          }
        case -1:
          {
            a = 1002782;
            break;
          }
        default:
          a = 1002738;
      }
      return a | 0;
    }
    function Bj(a, b, c) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      var d = 0,
          e = 0,
          f = 0,
          g = 0,
          h = 0,
          j = 0,
          l = 0,
          m = 0,
          n = 0,
          o = 0,
          p = 0,
          q = 0,
          r = 0;
      r = b + 4 | 0;
      e = 5904;
      a: while (1) {
        a = k[e + 8 >> 2] | 0;
        switch (a | 0) {
          case 54:
            {
              d = 28;
              break a;
            }
          case -1:
            break;
          case 63:
            {
              d = 6;
              break a;
            }
          default:
            {
              d = 27;
              break a;
            }
        }
        d = k[b >> 2] | 0;
        q = i[r >> 0] | 0;
        a = (q & i[d >> 0]) << 24 >> 24 != 0;
        q = (q & 255) >>> 1;
        i[r >> 0] = q;
        if (!(q << 24 >> 24)) {
          i[r >> 0] = -128;
          k[b >> 2] = d + 1;
        }
        e = k[(a ? e + 4 | 0 : e) >> 2] | 0;
      }
      if ((d | 0) == 6) {
        q = b + 5 | 0;
        p = b + 517 | 0;
        d = i[r >> 0] | 0;
        if (d << 24 >> 24 == -128) {
          i[r >> 0] = 64;
          o = q;
          d = 64;
        } else
          o = q;
        while (1) {
          e = k[b >> 2] | 0;
          n = (i[e >> 0] & d) << 24 >> 24 != 0 & 1;
          d = (d & 255) >>> 1;
          i[r >> 0] = d;
          if (!(d << 24 >> 24)) {
            i[r >> 0] = -128;
            e = e + 1 | 0;
            k[b >> 2] = e;
            d = -128;
          }
          m = (i[e >> 0] & d) << 24 >> 24 != 0 & 1;
          d = (d & 255) >>> 1;
          i[r >> 0] = d;
          if (!(d << 24 >> 24)) {
            i[r >> 0] = -128;
            e = e + 1 | 0;
            k[b >> 2] = e;
            d = -128;
          }
          l = (i[e >> 0] & d) << 24 >> 24 != 0 & 1;
          d = (d & 255) >>> 1;
          i[r >> 0] = d;
          if (!(d << 24 >> 24)) {
            i[r >> 0] = -128;
            e = e + 1 | 0;
            k[b >> 2] = e;
            d = -128;
          }
          j = (i[e >> 0] & d) << 24 >> 24 != 0 & 1;
          d = (d & 255) >>> 1;
          i[r >> 0] = d;
          if (!(d << 24 >> 24)) {
            i[r >> 0] = -128;
            e = e + 1 | 0;
            k[b >> 2] = e;
            d = -128;
          }
          h = (i[e >> 0] & d) << 24 >> 24 != 0 & 1;
          d = (d & 255) >>> 1;
          i[r >> 0] = d;
          if (!(d << 24 >> 24)) {
            i[r >> 0] = -128;
            e = e + 1 | 0;
            k[b >> 2] = e;
            d = -128;
          }
          g = (i[e >> 0] & d) << 24 >> 24 != 0 & 1;
          d = (d & 255) >>> 1;
          i[r >> 0] = d;
          if (!(d << 24 >> 24)) {
            i[r >> 0] = -128;
            e = e + 1 | 0;
            k[b >> 2] = e;
            d = -128;
          }
          f = (i[e >> 0] & d) << 24 >> 24 != 0 & 1;
          d = (d & 255) >>> 1;
          i[r >> 0] = d;
          if (!(d << 24 >> 24)) {
            i[r >> 0] = -128;
            e = e + 1 | 0;
            k[b >> 2] = e;
            d = -128;
          }
          a = (i[e >> 0] & d) << 24 >> 24 != 0 & 1;
          d = (d & 255) >>> 1;
          i[r >> 0] = d;
          if (!(d << 24 >> 24)) {
            i[r >> 0] = -128;
            k[b >> 2] = e + 1;
          }
          n = a | (f | (g | (h | (j | (l | (m | n << 1) << 1) << 1) << 1) << 1) << 1) << 1;
          a = o + 1 | 0;
          i[o >> 0] = n;
          if (!(a >>> 0 < p >>> 0 & (n | 0) != 0))
            break;
          o = a;
          d = i[r >> 0] | 0;
        }
        k[c >> 2] = a + ~q;
        c = q;
        return c | 0;
      } else if ((d | 0) == 27) {
        b = k[5916 + (a << 3) >> 2] | 0;
        k[c >> 2] = k[5916 + (a << 3) + 4 >> 2];
        c = b;
        return c | 0;
      } else if ((d | 0) == 28) {
        k[c >> 2] = 0;
        c = 0;
        return c | 0;
      }
      return 0;
    }
    function Cj(a) {
      a = a | 0;
      var b = 0;
      b = ir(520) | 0;
      k[b >> 2] = a;
      i[b + 4 >> 0] = -128;
      return b | 0;
    }
    function Dj(a, b) {
      a = a | 0;
      b = b | 0;
      Ae(a, 0, 0);
      Lj(a, b);
      Qj(a, b);
      Rj(a, b);
      re(a, b);
      Ei(a, 7856, 1);
      if (!(zi(a, 821853, 7533, 1003068, 1005922) | 0)) {
        Le(a, 0, 1, 0, 0);
        Sd(a, -2);
        Le(a, 1, 0, 0, 0);
        De(a, 1003079);
        return ;
      } else
        Re(a) | 0;
    }
    function Ej(a, b, c, d) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      d = d | 0;
      var e = 0,
          f = 0,
          g = 0,
          h = 0;
      h = r;
      r = r + 16 | 0;
      g = h;
      e = bh(45, 0) | 0;
      f = a + 16 | 0;
      k[f >> 2] = e;
      if (!e) {
        g = -1;
        r = h;
        return g | 0;
      }
      Ti(e);
      k[a >> 2] = b;
      k[a + 8 >> 2] = 0;
      k[a + 4 >> 2] = 0;
      k[a + 12 >> 2] = 0;
      k[a + 20 >> 2] = 0;
      b = a + 24 | 0;
      k[b >> 2] = c;
      k[b + 4 >> 2] = d;
      d = a + 32 | 0;
      c = d + 17 | 0;
      do {
        i[d >> 0] = 0;
        d = d + 1 | 0;
      } while ((d | 0) < (c | 0));
      k[a + 52 >> 2] = -2;
      pe(k[f >> 2] | 0, 223, 0);
      re(k[f >> 2] | 0, a);
      d = k[f >> 2] | 0;
      pe(d, 224, 0);
      Qd(d, -3, 1);
      if (!(Me(d, 1, 0, -3, 0, 0) | 0)) {
        g = 0;
        r = h;
        return g | 0;
      }
      a = de(d, -1, 0) | 0;
      k[g >> 2] = a;
      Kj(1003086, g);
      ch(k[f >> 2] | 0);
      g = -1;
      r = h;
      return g | 0;
    }
    function Fj(a) {
      a = a | 0;
      ch(k[a + 16 >> 2] | 0);
      return ;
    }
    function Gj(a) {
      a = a | 0;
      var b = 0,
          c = 0,
          d = 0;
      d = k[a >> 2] | 0;
      b = a + 24 | 0;
      c = k[b >> 2] | 0;
      b = k[b + 4 >> 2] | 0;
      ch(k[a + 16 >> 2] | 0);
      return Ej(a, d, c, b) | 0;
    }
    function Hj(a, b, c) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      if ((b | 0) != 16) {
        i[a + 32 + b >> 0] = c;
        return ;
      }
      b = a + 48 | 0;
      if (!c) {
        i[b >> 0] = 0;
        return ;
      }
      if (i[b >> 0] | 0)
        return ;
      i[b >> 0] = 1;
      a = a + 20 | 0;
      k[a >> 2] = (k[a >> 2] | 0) == 0 & 1;
      return ;
    }
    function Ij(a, b, c) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      var d = 0,
          e = 0,
          f = 0;
      e = r;
      r = r + 16 | 0;
      d = e;
      f = a + 24 | 0;
      k[f >> 2] = b;
      k[f + 4 >> 2] = c;
      c = a + 16 | 0;
      Pj(k[c >> 2] | 0, k[a + 52 >> 2] | 0);
      b = k[c >> 2] | 0;
      pe(b, 224, 0);
      Qd(b, -2, 1);
      if (!(Me(b, 0, 0, -2, 0, 0) | 0)) {
        f = k[c >> 2] | 0;
        Qe(f, 5, 0) | 0;
        r = e;
        return ;
      }
      f = de(b, -1, 0) | 0;
      k[d >> 2] = f;
      Kj(1003086, d);
      f = k[c >> 2] | 0;
      Qe(f, 5, 0) | 0;
      r = e;
      return ;
    }
    function Jj(a) {
      a = a | 0;
      var b = 0,
          c = 0;
      b = i[a >> 0] | 0;
      if (!(b << 24 >> 24)) {
        c = 5381;
        return c | 0;
      } else {
        c = b;
        b = 5381;
      }
      do {
        a = a + 1 | 0;
        b = (c & 255) + (b * 33 | 0) | 0;
        c = i[a >> 0] | 0;
      } while (c << 24 >> 24 != 0);
      return b | 0;
    }
    function Kj(a, b) {
      a = a | 0;
      b = b | 0;
      var c = 0,
          d = 0;
      c = r;
      r = r + 16 | 0;
      d = c;
      k[d >> 2] = b;
      Yi(a, d);
      r = c;
      return ;
    }
    function Lj(a, b) {
      a = a | 0;
      b = b | 0;
      re(a, b);
      Ei(a, 7984, 1);
      return ;
    }
    function Mj(a, b, c) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      Sd(a, b);
      b = wi(a, -1001e3) | 0;
      k[c >> 2] = b;
      return ;
    }
    function Nj(a, b) {
      a = a | 0;
      b = b | 0;
      var c = 0;
      c = k[b >> 2] | 0;
      if ((c | 0) == -2)
        return ;
      xi(a, -1001e3, c);
      k[b >> 2] = -2;
      return ;
    }
    function Oj(a, b, c) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      var d = 0;
      d = k[c >> 2] | 0;
      if ((d | 0) != -2) {
        xi(a, -1001e3, d);
        k[c >> 2] = -2;
      }
      Sd(a, b);
      b = wi(a, -1001e3) | 0;
      k[c >> 2] = b;
      return ;
    }
    function Pj(a, b) {
      a = a | 0;
      b = b | 0;
      if ((b | 0) == -2) {
        ie(a);
        return ;
      } else {
        ye(a, -1001e3, b, ((b | 0) < 0) << 31 >> 31) | 0;
        return ;
      }
    }
    function Qj(a, b) {
      a = a | 0;
      b = b | 0;
      re(a, b);
      Ei(a, 8e3, 1);
      return ;
    }
    function Rj(a, b) {
      a = a | 0;
      b = b | 0;
      re(a, b);
      Ei(a, 8016, 1);
      return ;
    }
    function Sj(a, b) {
      a = a | 0;
      b = b | 0;
      var c = 0;
      c = ir(ka(a << 1, b) | 0) | 0;
      k[2008] = c;
      if (!c) {
        a = -1;
        return a | 0;
      }
      k[2009] = a;
      k[2010] = b;
      k[2011] = c;
      a = 0;
      return a | 0;
    }
    function Tj(a) {
      a = a | 0;
      var b = 0,
          c = 0,
          d = 0,
          e = 0,
          f = 0,
          g = 0;
      b = k[2010] | 0;
      if ((b | 0) <= 0)
        return ;
      c = k[2009] | 0;
      if ((c | 0) <= 0)
        return ;
      d = k[2011] | 0;
      g = 0;
      while (1) {
        e = d;
        f = 0;
        while (1) {
          j[e >> 1] = a;
          f = f + 1 | 0;
          if ((f | 0) == (c | 0))
            break;
          else
            e = e + 2 | 0;
        }
        g = g + 1 | 0;
        if ((g | 0) >= (b | 0))
          break;
        else
          d = d + (c << 1) | 0;
      }
      return ;
    }
    function Uj(a, b) {
      a = a | 0;
      b = b | 0;
      if (a)
        k[a >> 2] = k[2009];
      if (b)
        k[b >> 2] = k[2010];
      return k[2011] | 0;
    }
    function Vj(a, b) {
      a = a | 0;
      b = b | 0;
      var c = 0,
          d = 0,
          e = 0,
          f = 0,
          g = 0,
          h = 0,
          i = 0,
          l = 0,
          n = 0,
          o = 0;
      e = m[a >> 1] | 0;
      h = m[a + 2 >> 1] | 0;
      h = h << 8 & 65280 | h >>> 8;
      l = h << 2;
      i = b + -4 | 0;
      n = i - l | 0;
      c = ir(b + 16 | 0) | 0;
      if (!c) {
        n = 0;
        return n | 0;
      }
      k[c + 4 >> 2] = e << 8 & 65280 | e >>> 8;
      k[c + 8 >> 2] = h;
      e = a + 8 | 0;
      b = vr(k[a + 4 >> 2] | 0) | 0;
      k[c + 12 >> 2] = b;
      b = c + 20 | 0;
      k[c + 16 >> 2] = b;
      d = b + (h << 2) | 0;
      if (h) {
        f = h >>> 0 > 1 ? (h << 2) + 8 | 0 : 12;
        g = 0;
        while (1) {
          o = (vr(k[e >> 2] | 0) | 0) + l | 0;
          k[b >> 2] = o;
          g = g + 1 | 0;
          if ((g | 0) >= (h | 0))
            break;
          else {
            e = e + 4 | 0;
            b = b + 4 | 0;
          }
        }
        e = a + f | 0;
      }
      if ((i | 0) == (l | 0)) {
        o = c;
        return o | 0;
      } else
        b = 0;
      while (1) {
        o = m[e >> 1] | 0;
        j[d >> 1] = o >>> 8 | o << 8;
        b = b + 2 | 0;
        if (b >>> 0 >= n >>> 0)
          break;
        else {
          e = e + 2 | 0;
          d = d + 2 | 0;
        }
      }
      return c | 0;
    }
    function Wj(a, b, c) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      var d = 0,
          e = 0,
          f = 0,
          g = 0,
          h = 0,
          i = 0,
          l = 0,
          n = 0,
          o = 0,
          p = 0,
          q = 0,
          s = 0,
          t = 0;
      t = r;
      r = r + 16 | 0;
      q = t + 4 | 0;
      l = t;
      p = k[a + 4 >> 2] | 0;
      g = k[a + 8 >> 2] | 0;
      e = Uj(q, l) | 0;
      o = p + b | 0;
      q = k[q >> 2] | 0;
      f = (c | 0) < 0;
      g = g + (f ? c : 0) | 0;
      d = f ? 0 : c;
      n = g + d | 0;
      l = k[l >> 2] | 0;
      g = ((l | 0) < (n | 0) ? l - n | 0 : 0) + g | 0;
      if (!((g | 0) > 0 ? (((q | 0) < (o | 0) ? q - o | 0 : 0) + p | 0) > 0 : 0)) {
        r = t;
        return ;
      }
      p = a + 16 | 0;
      o = e + ((ka(q, d) | 0) + b << 1) | 0;
      n = f ? 0 - c | 0 : 0;
      while (1) {
        h = (k[(k[p >> 2] | 0) + (n << 2) >> 2] | 0) + (a + 20) | 0;
        e = m[h >> 1] | 0;
        i = o;
        l = m[h + (e << 1) >> 1] | 0;
        e = h + (e + 1 << 1) | 0;
        while (1) {
          h = e + 2 | 0;
          c = j[e >> 1] | 0;
          b = c & 65535;
          f = b & 8191;
          switch (b >>> 13 | 0) {
            case 0:
              {
                c = i + (f << 1) | 0;
                e = h;
                break;
              }
            case 4:
              {
                rr(i | 0, h | 0, f << 1 | 0) | 0;
                c = i + (f << 1) | 0;
                e = e + (f + 1 << 1) | 0;
                break;
              }
            case 1:
              {
                d = c & 8191;
                b = i;
                c = h;
                while (1) {
                  j[b >> 1] = ((((m[b >> 1] | 0) & 59292) * 3 | 0) + ((m[c >> 1] | 0) & 59292) | 0) >>> 2;
                  f = f + -1 | 0;
                  if (!f)
                    break;
                  else {
                    b = b + 2 | 0;
                    c = c + 2 | 0;
                  }
                }
                c = i + (d << 1) | 0;
                e = e + (d + 1 << 1) | 0;
                break;
              }
            case 2:
              {
                d = c & 8191;
                b = i;
                c = h;
                while (1) {
                  j[b >> 1] = (((m[c >> 1] | 0) & 63454) + ((m[b >> 1] | 0) & 63454) | 0) >>> 1;
                  f = f + -1 | 0;
                  if (!f)
                    break;
                  else {
                    b = b + 2 | 0;
                    c = c + 2 | 0;
                  }
                }
                c = i + (d << 1) | 0;
                e = e + (d + 1 << 1) | 0;
                break;
              }
            case 5:
              {
                e = e + 4 | 0;
                s = 14;
                break;
              }
            case 6:
              {
                e = h;
                s = 14;
                break;
              }
            case 3:
              {
                d = c & 8191;
                b = i;
                c = h;
                while (1) {
                  j[b >> 1] = ((((m[c >> 1] | 0) & 59292) * 3 | 0) + ((m[b >> 1] | 0) & 59292) | 0) >>> 2;
                  f = f + -1 | 0;
                  if (!f)
                    break;
                  else {
                    b = b + 2 | 0;
                    c = c + 2 | 0;
                  }
                }
                c = i + (d << 1) | 0;
                e = e + (d + 1 << 1) | 0;
                break;
              }
            case 7:
              {
                s = 15;
                break;
              }
            default:
              {
                c = i;
                e = h;
              }
          }
          if ((s | 0) == 14)
            s = 15;
          if ((s | 0) == 15) {
            s = 0;
            c = i;
            e = e + 4 | 0;
          }
          l = l + -1 | 0;
          if (!l)
            break;
          else
            i = c;
        }
        g = g + -1 | 0;
        if (!g)
          break;
        else {
          o = o + (q << 1) | 0;
          n = n + 1 | 0;
        }
      }
      r = t;
      return ;
    }
    function Xj(a, b, c, d) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      d = d | 0;
      var e = 0,
          f = 0,
          g = 0,
          h = 0,
          i = 0,
          l = 0,
          n = 0,
          o = 0,
          p = 0,
          q = 0,
          s = 0,
          t = 0,
          u = 0,
          v = 0;
      v = r;
      r = r + 16 | 0;
      t = v + 4 | 0;
      o = v;
      s = k[a + 4 >> 2] | 0;
      h = k[a + 8 >> 2] | 0;
      f = Uj(t, o) | 0;
      q = s + b | 0;
      t = k[t >> 2] | 0;
      g = (c | 0) < 0;
      h = h + (g ? c : 0) | 0;
      e = g ? 0 : c;
      p = h + e | 0;
      o = k[o >> 2] | 0;
      h = ((o | 0) < (p | 0) ? o - p | 0 : 0) + h | 0;
      if (!((h | 0) > 0 ? (((t | 0) < (q | 0) ? t - q | 0 : 0) + s | 0) > 0 : 0)) {
        u = d;
        r = v;
        return u | 0;
      }
      s = a + 16 | 0;
      q = f + ((ka(t, e) | 0) + b << 1) | 0;
      p = g ? 0 - c | 0 : 0;
      while (1) {
        l = (k[(k[s >> 2] | 0) + (p << 2) >> 2] | 0) + (a + 20) | 0;
        e = m[l >> 1] | 0;
        n = q;
        o = m[l + (e << 1) >> 1] | 0;
        e = l + (e + 1 << 1) | 0;
        while (1) {
          l = e + 2 | 0;
          c = j[e >> 1] | 0;
          i = c & 65535;
          g = i & 8191;
          switch (i >>> 13 | 0) {
            case 5:
              {
                e = e + 4 | 0;
                u = 14;
                break;
              }
            case 3:
              {
                i = c & 8191;
                e = e + (i + 1 << 1) | 0;
                f = d;
                b = n;
                c = l;
                while (1) {
                  l = j[b >> 1] | 0;
                  j[f >> 1] = l;
                  j[b >> 1] = ((((m[c >> 1] | 0) & 59292) * 3 | 0) + (l & 59292) | 0) >>> 2;
                  g = g + -1 | 0;
                  if (!g)
                    break;
                  else {
                    f = f + 2 | 0;
                    b = b + 2 | 0;
                    c = c + 2 | 0;
                  }
                }
                d = d + (i << 1) | 0;
                c = n + (i << 1) | 0;
                break;
              }
            case 6:
              {
                e = l;
                u = 14;
                break;
              }
            case 7:
              {
                u = 15;
                break;
              }
            case 0:
              {
                c = n + (g << 1) | 0;
                e = l;
                break;
              }
            case 4:
              {
                c = g << 1;
                rr(d | 0, n | 0, c | 0) | 0;
                rr(n | 0, l | 0, c | 0) | 0;
                d = d + (g << 1) | 0;
                c = n + (g << 1) | 0;
                e = e + (g + 1 << 1) | 0;
                break;
              }
            case 2:
              {
                i = c & 8191;
                e = e + (i + 1 << 1) | 0;
                f = d;
                b = n;
                c = l;
                while (1) {
                  l = j[b >> 1] | 0;
                  j[f >> 1] = l;
                  j[b >> 1] = (((m[c >> 1] | 0) & 63454) + (l & 63454) | 0) >>> 1;
                  g = g + -1 | 0;
                  if (!g)
                    break;
                  else {
                    f = f + 2 | 0;
                    b = b + 2 | 0;
                    c = c + 2 | 0;
                  }
                }
                d = d + (i << 1) | 0;
                c = n + (i << 1) | 0;
                break;
              }
            case 1:
              {
                i = c & 8191;
                e = e + (i + 1 << 1) | 0;
                f = d;
                b = n;
                c = l;
                while (1) {
                  l = j[b >> 1] | 0;
                  j[f >> 1] = l;
                  j[b >> 1] = (((l & 59292) * 3 | 0) + ((m[c >> 1] | 0) & 59292) | 0) >>> 2;
                  g = g + -1 | 0;
                  if (!g)
                    break;
                  else {
                    f = f + 2 | 0;
                    b = b + 2 | 0;
                    c = c + 2 | 0;
                  }
                }
                d = d + (i << 1) | 0;
                c = n + (i << 1) | 0;
                break;
              }
            default:
              {
                c = n;
                e = l;
              }
          }
          if ((u | 0) == 14)
            u = 15;
          if ((u | 0) == 15) {
            u = 0;
            c = n;
            e = e + 4 | 0;
          }
          o = o + -1 | 0;
          if (!o)
            break;
          else
            n = c;
        }
        h = h + -1 | 0;
        if (!h)
          break;
        else {
          q = q + (t << 1) | 0;
          p = p + 1 | 0;
        }
      }
      r = v;
      return d | 0;
    }
    function Yj(a, b, c, d) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      d = d | 0;
      var e = 0,
          f = 0,
          g = 0,
          h = 0,
          i = 0,
          j = 0,
          l = 0,
          n = 0,
          o = 0,
          p = 0;
      n = r;
      r = r + 16 | 0;
      l = n + 4 | 0;
      p = n;
      j = k[a + 4 >> 2] | 0;
      e = k[a + 8 >> 2] | 0;
      g = Uj(l, p) | 0;
      i = j + b | 0;
      l = k[l >> 2] | 0;
      h = (c | 0) < 0;
      e = e + (h ? c : 0) | 0;
      f = h ? 0 : c;
      o = e + f | 0;
      p = k[p >> 2] | 0;
      e = ((p | 0) < (o | 0) ? p - o | 0 : 0) + e | 0;
      if (!((e | 0) > 0 ? (((l | 0) < (i | 0) ? l - i | 0 : 0) + j | 0) > 0 : 0)) {
        r = n;
        return ;
      }
      j = a + 16 | 0;
      i = g + ((ka(l, f) | 0) + b << 1) | 0;
      f = h ? 0 - c | 0 : 0;
      while (1) {
        p = (k[(k[j >> 2] | 0) + (f << 2) >> 2] | 0) + (a + 20) | 0;
        h = m[p >> 1] | 0;
        b = i;
        g = m[p + (h << 1) >> 1] | 0;
        h = p + (h + 1 << 1) | 0;
        while (1) {
          p = m[h >> 1] | 0;
          c = p & 8191;
          if (!(p & 57344))
            h = h + 2 | 0;
          else {
            rr(b | 0, d | 0, c << 1 | 0) | 0;
            d = d + (c << 1) | 0;
            h = h + (c + 1 << 1) | 0;
          }
          g = g + -1 | 0;
          if (!g)
            break;
          else
            b = b + (c << 1) | 0;
        }
        e = e + -1 | 0;
        if (!e)
          break;
        else {
          i = i + (l << 1) | 0;
          f = f + 1 | 0;
        }
      }
      r = n;
      return ;
    }
    function Zj(a, b) {
      a = a | 0;
      b = b | 0;
      var c = 0;
      c = 192;
      k[c >> 2] = a;
      k[c + 4 >> 2] = b;
      return ;
    }
    function _j() {
      var a = 0,
          b = 0,
          c = 0;
      c = 192;
      c = Er(k[c >> 2] | 0, k[c + 4 >> 2] | 0, 1284865837, 1481765933) | 0;
      c = pr(c | 0, O | 0, 1, 0) | 0;
      a = O;
      b = 192;
      k[b >> 2] = c;
      k[b + 4 >> 2] = a;
      return a | 0;
    }
    function $j(a, b) {
      a = a | 0;
      b = b | 0;
      var c = 0,
          d = 0,
          e = 0;
      b = 1 - a + b | 0;
      e = 192;
      e = Er(k[e >> 2] | 0, k[e + 4 >> 2] | 0, 1284865837, 1481765933) | 0;
      e = pr(e | 0, O | 0, 1, 0) | 0;
      c = O;
      d = 192;
      k[d >> 2] = e;
      k[d + 4 >> 2] = c;
      Er(c | 0, 0, b | 0, ((b | 0) < 0) << 31 >> 31 | 0) | 0;
      a = pr(O | 0, 0, a | 0, 0) | 0;
      return a | 0;
    }
    function ak(a, b, c) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      var d = 0,
          e = 0;
      d = ir(b + 12 | 0) | 0;
      if (!d) {
        c = 0;
        return c | 0;
      }
      e = b >>> 1;
      k[d + 4 >> 2] = e;
      k[d + 8 >> 2] = c;
      b = d + 12 | 0;
      c = b + (e << 1) | 0;
      if (b >>> 0 >= c >>> 0) {
        e = d;
        return e | 0;
      }
      while (1) {
        e = m[a >> 1] | 0;
        j[b >> 1] = e >>> 8 | e << 8;
        b = b + 2 | 0;
        if (b >>> 0 >= c >>> 0)
          break;
        else
          a = a + 2 | 0;
      }
      return d | 0;
    }
    function bk(a, b, c) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      var d = 0,
          e = 0;
      if (k[2012] | 0)
        if (k[2016] | 0)
          if (k[2020] | 0)
            if (k[2024] | 0)
              if (k[2028] | 0)
                if (k[2032] | 0)
                  if (k[2036] | 0)
                    if (!(k[2040] | 0)) {
                      d = 8160;
                      e = 8160;
                    } else {
                      e = -1;
                      return e | 0;
                    }
                  else {
                    d = 8144;
                    e = 8144;
                  }
                else {
                  d = 8128;
                  e = 8128;
                }
              else {
                d = 8112;
                e = 8112;
              }
            else {
              d = 8096;
              e = 8096;
            }
          else {
            d = 8080;
            e = 8080;
          }
        else {
          d = 8064;
          e = 8064;
        }
      else {
        d = 8048;
        e = 8048;
      }
      k[d >> 2] = a;
      k[e + 4 >> 2] = c;
      k[e + 8 >> 2] = 0;
      k[e + 12 >> 2] = b;
      e = e - 8048 >> 4;
      return e | 0;
    }
    function ck() {
      var a = 0,
          b = 0,
          c = 0,
          d = 0,
          e = 0,
          f = 0,
          g = 0,
          h = 0;
      b = k[2013] | 0;
      if ((b | 0) != 0 ? (a = k[2012] | 0, (a | 0) != 0) : 0)
        ld[b & 63](a);
      k[2012] = 0;
      b = k[2017] | 0;
      if ((b | 0) != 0 ? (c = k[2016] | 0, (c | 0) != 0) : 0)
        ld[b & 63](c);
      k[2016] = 0;
      b = k[2021] | 0;
      if ((b | 0) != 0 ? (d = k[2020] | 0, (d | 0) != 0) : 0)
        ld[b & 63](d);
      k[2020] = 0;
      b = k[2025] | 0;
      if ((b | 0) != 0 ? (e = k[2024] | 0, (e | 0) != 0) : 0)
        ld[b & 63](e);
      k[2024] = 0;
      b = k[2029] | 0;
      if ((b | 0) != 0 ? (f = k[2028] | 0, (f | 0) != 0) : 0)
        ld[b & 63](f);
      k[2028] = 0;
      b = k[2033] | 0;
      if ((b | 0) != 0 ? (g = k[2032] | 0, (g | 0) != 0) : 0)
        ld[b & 63](g);
      k[2032] = 0;
      a = k[2037] | 0;
      if ((a | 0) != 0 ? (h = k[2036] | 0, (h | 0) != 0) : 0)
        ld[a & 63](h);
      k[2036] = 0;
      a = k[2041] | 0;
      if (!a) {
        k[2040] = 0;
        return ;
      }
      b = k[2040] | 0;
      if (!b) {
        k[2040] = 0;
        return ;
      }
      ld[a & 63](b);
      k[2040] = 0;
      return ;
    }
    function dk() {
      var a = 0,
          b = 0,
          c = 0,
          d = 0,
          e = 0,
          f = 0,
          g = 0,
          h = 0,
          i = 0,
          l = 0,
          m = 0,
          n = 0,
          o = 0,
          p = 0,
          q = 0,
          s = 0;
      q = r;
      r = r + 5888 | 0;
      p = q;
      wr(p | 0, 0, 5880) | 0;
      o = 8048;
      do {
        m = k[o >> 2] | 0;
        do
          if (m) {
            g = m + 8 | 0;
            h = m + 4 | 0;
            n = o + 8 | 0;
            i = o + 12 | 0;
            b = p;
            a = k[n >> 2] | 0;
            c = 1470;
            while (1) {
              e = k[h >> 2] | 0;
              l = e - a | 0;
              d = m + 12 + (a << 1) | 0;
              if (!(k[g >> 2] | 0)) {
                f = (c | 0) / 2 | 0;
                if ((f | 0) <= (l | 0)) {
                  e = f;
                  f = 20;
                  break;
                }
                if ((e | 0) != (a | 0)) {
                  e = b;
                  c = l;
                  while (1) {
                    s = j[d >> 1] | 0;
                    a = e + 4 | 0;
                    k[e >> 2] = (k[e >> 2] | 0) + s;
                    k[a >> 2] = (k[a >> 2] | 0) + s;
                    c = c + -1 | 0;
                    if (!c)
                      break;
                    else {
                      e = e + 8 | 0;
                      d = d + 2 | 0;
                    }
                  }
                  b = b + (l << 1 << 2) | 0;
                }
                if (!(k[i >> 2] | 0)) {
                  f = 24;
                  break;
                } else
                  c = f;
              } else {
                if ((c | 0) <= (l | 0)) {
                  e = c;
                  f = 7;
                  break;
                }
                if ((e | 0) != (a | 0)) {
                  e = b;
                  a = l;
                  while (1) {
                    k[e >> 2] = (k[e >> 2] | 0) + (j[d >> 1] | 0);
                    a = a + -1 | 0;
                    if (!a)
                      break;
                    else {
                      e = e + 4 | 0;
                      d = d + 2 | 0;
                    }
                  }
                  b = b + (l << 2) | 0;
                }
                if (!(k[i >> 2] | 0)) {
                  f = 12;
                  break;
                }
              }
              k[n >> 2] = 0;
              a = 0;
              c = c - l | 0;
            }
            if ((f | 0) == 7) {
              if (e) {
                c = e;
                a = d;
                while (1) {
                  k[b >> 2] = (k[b >> 2] | 0) + (j[a >> 1] | 0);
                  c = c + -1 | 0;
                  if (!c)
                    break;
                  else {
                    b = b + 4 | 0;
                    a = a + 2 | 0;
                  }
                }
                a = k[n >> 2] | 0;
              }
              k[n >> 2] = a + e;
              break;
            } else if ((f | 0) == 12) {
              a = k[o + 4 >> 2] | 0;
              if (a)
                ld[a & 63](m);
              k[o >> 2] = 0;
              break;
            } else if ((f | 0) == 20) {
              if ((c + 1 | 0) >>> 0 >= 3) {
                c = e;
                a = d;
                while (1) {
                  m = j[a >> 1] | 0;
                  s = b + 4 | 0;
                  k[b >> 2] = (k[b >> 2] | 0) + m;
                  k[s >> 2] = (k[s >> 2] | 0) + m;
                  c = c + -1 | 0;
                  if (!c)
                    break;
                  else {
                    b = b + 8 | 0;
                    a = a + 2 | 0;
                  }
                }
                a = k[n >> 2] | 0;
              }
              k[n >> 2] = a + e;
              break;
            } else if ((f | 0) == 24) {
              a = k[o + 4 >> 2] | 0;
              if (a)
                ld[a & 63](m);
              k[o >> 2] = 0;
              break;
            }
          }
 while (0);
        o = o + 16 | 0;
      } while (o >>> 0 < 8176 >>> 0);
      a = 0;
      do {
        s = k[p + (a << 2) >> 2] | 0;
        j[19136 + (a << 1) >> 1] = (s | 0) < -32768 ? -32768 : (s | 0) > 32767 ? 32767 : s & 65535;
        a = a + 1 | 0;
      } while ((a | 0) != 1470);
      r = q;
      return 19136;
    }
    function ek() {
      var a = 0,
          b = 0;
      a = k[2045] | 0;
      if ((a | 0) >= 1024) {
        b = 0;
        return b | 0;
      }
      b = ir(20) | 0;
      if (!b) {
        b = 0;
        return b | 0;
      }
      k[2045] = a + 1;
      k[8192 + (a << 3) >> 2] = b;
      a = b + 4 | 0;
      j[a >> 1] = 0;
      j[a + 2 >> 1] = 0;
      j[a + 4 >> 1] = 0;
      j[a + 6 >> 1] = 0;
      j[a + 8 >> 1] = 0;
      j[a + 10 >> 1] = 0;
      j[a + 12 >> 1] = 0;
      j[a + 14 >> 1] = 0;
      return b | 0;
    }
    function fk(a, b) {
      a = a | 0;
      b = b | 0;
      k[2047] = a;
      k[2046] = b;
      return ;
    }
    function gk() {
      var a = 0,
          b = 0,
          c = 0,
          d = 0,
          e = 0,
          f = 0,
          g = 0;
      e = r;
      r = r + 32 | 0;
      c = e;
      b = k[2045] | 0;
      a = 8192 + (b << 3) | 0;
      if ((b | 0) > 0) {
        d = 8192;
        do {
          g = k[d >> 2] | 0;
          f = g + 6 | 0;
          j[f >> 1] = (m[f >> 1] | 0) & 65534 | (k[g + 16 >> 2] | 0) == 0;
          d = d + 8 | 0;
        } while (d >>> 0 < a >>> 0);
      }
      Np(8192, b, 8, 48);
      j[c + 6 >> 1] = 4;
      k[8192 + (k[2045] << 3) >> 2] = c;
      k[4098] = 22076;
      b = k[2048] | 0;
      a = j[b + 6 >> 1] | 0;
      if (!(a << 16 >> 16)) {
        d = 22076;
        a = 8192;
        do {
          k[a + 4 >> 2] = d;
          d = Xj(k[b + 16 >> 2] | 0, (k[b + 8 >> 2] | 0) + (k[2047] | 0) | 0, (k[b + 12 >> 2] | 0) + (k[2046] | 0) | 0, k[4098] | 0) | 0;
          k[4098] = d;
          a = a + 8 | 0;
          b = k[a >> 2] | 0;
          c = j[b + 6 >> 1] | 0;
        } while (c << 16 >> 16 == 0);
        b = c;
      } else {
        b = a;
        a = 8192;
      }
      k[2044] = a - 8192 >> 3;
      if (b & 4) {
        g = a;
        g = g - 8192 | 0;
        g = g >> 3;
        k[2045] = g;
        r = e;
        return ;
      }
      do
        a = a + 8 | 0;
 while ((j[(k[a >> 2] | 0) + 6 >> 1] & 4) == 0);
      g = a;
      g = g - 8192 | 0;
      g = g >> 3;
      k[2045] = g;
      r = e;
      return ;
    }
    function hk() {
      var a = 0,
          b = 0;
      a = (k[2044] | 0) + -1 | 0;
      if ((a | 0) <= -1)
        return ;
      a = 8192 + (a << 3) | 0;
      do {
        b = k[a >> 2] | 0;
        Yj(k[b + 16 >> 2] | 0, (k[b + 8 >> 2] | 0) + (k[2047] | 0) | 0, (k[b + 12 >> 2] | 0) + (k[2046] | 0) | 0, k[a + 4 >> 2] | 0);
        a = a + -8 | 0;
      } while (a >>> 0 >= 8192 >>> 0);
      return ;
    }
    function ik(a, b, c, d, e, f, g) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      d = d | 0;
      e = e | 0;
      f = f | 0;
      g = g | 0;
      var h = 0,
          i = 0,
          j = 0,
          m = 0;
      m = (e | 0) > (f | 0);
      do
        if (m)
          j = 9;
        else {
          if ((g | 0) > 0) {
            h = e;
            i = 0;
          } else {
            i = b;
            h = i + 92 | 0;
            do {
              k[i >> 2] = 0;
              i = i + 4 | 0;
            } while ((i | 0) < (h | 0));
            break;
          }
          while (1) {
            j = 0;
            do {
              if ((l[d + j >> 0] | 0 | 0) == (h | 0)) {
                k[c + (i << 2) >> 2] = j;
                i = i + 1 | 0;
              }
              j = j + 1 | 0;
            } while ((j | 0) != (g | 0));
            if ((h | 0) < (f | 0))
              h = h + 1 | 0;
            else {
              j = 9;
              break;
            }
          }
        }
 while (0);
      if ((j | 0) == 9) {
        i = b;
        h = i + 92 | 0;
        do {
          k[i >> 2] = 0;
          i = i + 4 | 0;
        } while ((i | 0) < (h | 0));
        if ((g | 0) > 0) {
          i = 0;
          do {
            c = b + ((l[d + i >> 0] | 0) + 1 << 2) | 0;
            k[c >> 2] = (k[c >> 2] | 0) + 1;
            i = i + 1 | 0;
          } while ((i | 0) != (g | 0));
        }
      }
      i = b + 4 | 0;
      h = k[i >> 2] | 0;
      k[i >> 2] = h;
      i = b + 8 | 0;
      h = (k[i >> 2] | 0) + h | 0;
      k[i >> 2] = h;
      i = b + 12 | 0;
      h = (k[i >> 2] | 0) + h | 0;
      k[i >> 2] = h;
      i = b + 16 | 0;
      h = (k[i >> 2] | 0) + h | 0;
      k[i >> 2] = h;
      i = b + 20 | 0;
      h = (k[i >> 2] | 0) + h | 0;
      k[i >> 2] = h;
      i = b + 24 | 0;
      h = (k[i >> 2] | 0) + h | 0;
      k[i >> 2] = h;
      i = b + 28 | 0;
      h = (k[i >> 2] | 0) + h | 0;
      k[i >> 2] = h;
      i = b + 32 | 0;
      h = (k[i >> 2] | 0) + h | 0;
      k[i >> 2] = h;
      i = b + 36 | 0;
      h = (k[i >> 2] | 0) + h | 0;
      k[i >> 2] = h;
      i = b + 40 | 0;
      h = (k[i >> 2] | 0) + h | 0;
      k[i >> 2] = h;
      i = b + 44 | 0;
      h = (k[i >> 2] | 0) + h | 0;
      k[i >> 2] = h;
      i = b + 48 | 0;
      h = (k[i >> 2] | 0) + h | 0;
      k[i >> 2] = h;
      i = b + 52 | 0;
      h = (k[i >> 2] | 0) + h | 0;
      k[i >> 2] = h;
      i = b + 56 | 0;
      h = (k[i >> 2] | 0) + h | 0;
      k[i >> 2] = h;
      i = b + 60 | 0;
      h = (k[i >> 2] | 0) + h | 0;
      k[i >> 2] = h;
      i = b + 64 | 0;
      h = (k[i >> 2] | 0) + h | 0;
      k[i >> 2] = h;
      i = b + 68 | 0;
      h = (k[i >> 2] | 0) + h | 0;
      k[i >> 2] = h;
      i = b + 72 | 0;
      h = (k[i >> 2] | 0) + h | 0;
      k[i >> 2] = h;
      i = b + 76 | 0;
      h = (k[i >> 2] | 0) + h | 0;
      k[i >> 2] = h;
      i = b + 80 | 0;
      h = (k[i >> 2] | 0) + h | 0;
      k[i >> 2] = h;
      i = b + 84 | 0;
      h = (k[i >> 2] | 0) + h | 0;
      k[i >> 2] = h;
      i = b + 88 | 0;
      k[i >> 2] = (k[i >> 2] | 0) + h;
      i = a;
      h = i + 92 | 0;
      do {
        k[i >> 2] = 0;
        i = i + 4 | 0;
      } while ((i | 0) < (h | 0));
      if (!m) {
        i = e;
        h = 0;
        while (1) {
          d = i;
          i = i + 1 | 0;
          h = (k[b + (i << 2) >> 2] | 0) - (k[b + (d << 2) >> 2] | 0) + h | 0;
          k[a + (d << 2) >> 2] = h + -1;
          if ((d | 0) >= (f | 0))
            break;
          else
            h = h << 1;
        }
      }
      if ((e | 0) >= (f | 0))
        return ;
      do {
        g = e;
        e = e + 1 | 0;
        d = b + (e << 2) | 0;
        k[d >> 2] = (k[a + (g << 2) >> 2] << 1) + 2 - (k[d >> 2] | 0);
      } while ((e | 0) != (f | 0));
      return ;
    }
    function fr(a, b) {
      a = a | 0;
      b = b | 0;
      var c = 0,
          d = 0,
          e = 0,
          f = 0,
          g = 0;
      f = a + 4 | 0;
      c = k[f >> 2] | 0;
      g = a + 100 | 0;
      if (c >>> 0 < (k[g >> 2] | 0) >>> 0) {
        k[f >> 2] = c + 1;
        c = l[c >> 0] | 0;
      } else
        c = Fq(a) | 0;
      switch (c | 0) {
        case 43:
        case 45:
          {
            d = (c | 0) == 45 & 1;
            c = k[f >> 2] | 0;
            if (c >>> 0 < (k[g >> 2] | 0) >>> 0) {
              k[f >> 2] = c + 1;
              c = l[c >> 0] | 0;
            } else
              c = Fq(a) | 0;
            if ((b | 0) != 0 & (c + -48 | 0) >>> 0 > 9 ? (k[g >> 2] | 0) != 0 : 0) {
              k[f >> 2] = (k[f >> 2] | 0) + -1;
              e = d;
            } else
              e = d;
            break;
          }
        default:
          e = 0;
      }
      if ((c + -48 | 0) >>> 0 > 9) {
        if (!(k[g >> 2] | 0)) {
          g = -2147483648;
          a = 0;
          O = g;
          return a | 0;
        }
        k[f >> 2] = (k[f >> 2] | 0) + -1;
        g = -2147483648;
        a = 0;
        O = g;
        return a | 0;
      } else
        d = 0;
      do {
        d = c + -48 + (d * 10 | 0) | 0;
        c = k[f >> 2] | 0;
        if (c >>> 0 < (k[g >> 2] | 0) >>> 0) {
          k[f >> 2] = c + 1;
          c = l[c >> 0] | 0;
        } else
          c = Fq(a) | 0;
      } while ((c + -48 | 0) >>> 0 < 10 & (d | 0) < 214748364);
      b = ((d | 0) < 0) << 31 >> 31;
      if ((c + -48 | 0) >>> 0 < 10)
        do {
          b = Er(d | 0, b | 0, 10, 0) | 0;
          d = O;
          c = pr(c | 0, ((c | 0) < 0) << 31 >> 31 | 0, -48, -1) | 0;
          d = pr(c | 0, O | 0, b | 0, d | 0) | 0;
          b = O;
          c = k[f >> 2] | 0;
          if (c >>> 0 < (k[g >> 2] | 0) >>> 0) {
            k[f >> 2] = c + 1;
            c = l[c >> 0] | 0;
          } else
            c = Fq(a) | 0;
        } while ((c + -48 | 0) >>> 0 < 10 & ((b | 0) < 21474836 | (b | 0) == 21474836 & d >>> 0 < 2061584302));
      if ((c + -48 | 0) >>> 0 < 10)
        do {
          c = k[f >> 2] | 0;
          if (c >>> 0 < (k[g >> 2] | 0) >>> 0) {
            k[f >> 2] = c + 1;
            c = l[c >> 0] | 0;
          } else
            c = Fq(a) | 0;
        } while ((c + -48 | 0) >>> 0 < 10);
      if (k[g >> 2] | 0)
        k[f >> 2] = (k[f >> 2] | 0) + -1;
      f = (e | 0) != 0;
      a = or(0, 0, d | 0, b | 0) | 0;
      g = f ? O : b;
      a = f ? a : d;
      O = g;
      return a | 0;
    }
    function gr(a, b, c, d, e) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      d = d | 0;
      e = e | 0;
      var f = 0,
          g = 0,
          h = 0,
          m = 0,
          n = 0,
          o = 0,
          q = 0.0,
          s = 0,
          u = 0,
          v = 0,
          w = 0,
          x = 0,
          y = 0.0,
          z = 0,
          A = 0,
          B = 0,
          C = 0,
          D = 0,
          E = 0,
          F = 0,
          G = 0,
          H = 0,
          I = 0,
          J = 0,
          K = 0,
          L = 0,
          M = 0,
          N = 0,
          P = 0,
          Q = 0,
          R = 0,
          S = 0,
          T = 0,
          U = 0,
          V = 0,
          W = 0,
          X = 0,
          Y = 0,
          Z = 0,
          _ = 0,
          $ = 0,
          aa = 0,
          ba = 0,
          ca = 0,
          da = 0,
          ea = 0,
          fa = 0,
          ga = 0,
          ha = 0,
          ia = 0,
          ja = 0,
          la = 0,
          ma = 0,
          na = 0,
          oa = 0,
          pa = 0,
          qa = 0,
          ra = 0,
          sa = 0,
          ta = 0,
          ua = 0,
          va = 0,
          wa = 0,
          xa = 0,
          ya = 0,
          za = 0,
          Aa = 0,
          Ba = 0,
          Ca = 0,
          Da = 0,
          Ea = 0,
          Fa = 0,
          Ga = 0,
          Ha = 0,
          Ia = 0,
          Ja = 0,
          Ka = 0,
          La = 0,
          Ma = 0,
          Na = 0,
          Oa = 0,
          Pa = 0,
          Qa = 0,
          Ra = 0,
          Sa = 0,
          Ta = 0,
          Ua = 0,
          Va = 0,
          Wa = 0,
          Xa = 0,
          Ya = 0,
          Za = 0,
          _a = 0,
          $a = 0,
          ab = 0,
          bb = 0,
          cb = 0,
          db = 0,
          eb = 0;
      eb = r;
      r = r + 864 | 0;
      Na = eb + 16 | 0;
      Qa = eb + 8 | 0;
      Oa = eb + 560 | 0;
      ma = Oa;
      Ka = eb + 840 | 0;
      Xa = eb + 584 | 0;
      Ga = eb + 520 | 0;
      bb = eb;
      Ua = eb + 852 | 0;
      na = (a | 0) != 0;
      Aa = Ga + 40 | 0;
      Da = Aa;
      Ga = Ga + 39 | 0;
      Ha = bb + 4 | 0;
      Ia = bb;
      Ja = Ka + 12 | 0;
      Ka = Ka + 11 | 0;
      La = Ja;
      oa = La - ma | 0;
      pa = -2 - ma | 0;
      va = La + 2 | 0;
      wa = Na + 288 | 0;
      xa = Oa + 9 | 0;
      ya = xa;
      za = Oa + 8 | 0;
      G = 0;
      E = 0;
      u = 0;
      n = 0;
      v = 0;
      a: while (1) {
        do
          if ((u | 0) > -1)
            if ((n | 0) > (2147483647 - u | 0)) {
              aa = Yc() | 0;
              k[aa >> 2] = 75;
              aa = -1;
              break;
            } else {
              aa = n + u | 0;
              break;
            }
          else
            aa = u;
 while (0);
        n = i[b >> 0] | 0;
        if (!(n << 24 >> 24)) {
          Pa = aa;
          Ta = v;
          P = 344;
          break;
        } else
          m = b;
        b: while (1) {
          switch (n << 24 >> 24) {
            case 0:
              {
                ja = m;
                ea = m;
                break b;
              }
            case 37:
              {
                Sa = m;
                cb = m;
                P = 9;
                break b;
              }
            default:
              {}
          }
          N = m + 1 | 0;
          n = i[N >> 0] | 0;
          m = N;
        }
        c: do
          if ((P | 0) == 9)
            while (1) {
              P = 0;
              if ((i[Sa + 1 >> 0] | 0) != 37) {
                ja = Sa;
                ea = cb;
                break c;
              }
              m = cb + 1 | 0;
              n = Sa + 2 | 0;
              if ((i[n >> 0] | 0) == 37) {
                Sa = n;
                cb = m;
              } else {
                ja = n;
                ea = m;
                break;
              }
            }
 while (0);
        n = ea - b | 0;
        if (na)
          Wq(b, n, a) | 0;
        if ((ea | 0) != (b | 0)) {
          u = aa;
          b = ja;
          continue;
        }
        s = ja + 1 | 0;
        o = i[s >> 0] | 0;
        m = (o << 24 >> 24) + -48 | 0;
        if (m >>> 0 < 10) {
          N = (i[ja + 2 >> 0] | 0) == 36;
          s = N ? ja + 3 | 0 : s;
          o = i[s >> 0] | 0;
          F = N ? m : -1;
          v = N ? 1 : v;
        } else
          F = -1;
        m = o << 24 >> 24;
        d: do
          if ((m & -32 | 0) == 32) {
            u = 0;
            do {
              if (!(1 << m + -32 & 75913))
                break d;
              u = 1 << (o << 24 >> 24) + -32 | u;
              s = s + 1 | 0;
              o = i[s >> 0] | 0;
              m = o << 24 >> 24;
            } while ((m & -32 | 0) == 32);
          } else
            u = 0;
 while (0);
        do
          if (o << 24 >> 24 == 42) {
            m = s + 1 | 0;
            o = (i[m >> 0] | 0) + -48 | 0;
            if (o >>> 0 < 10 ? (i[s + 2 >> 0] | 0) == 36 : 0) {
              k[e + (o << 2) >> 2] = 10;
              v = 1;
              o = s + 3 | 0;
              s = k[d + ((i[m >> 0] | 0) + -48 << 3) >> 2] | 0;
            } else {
              if (v) {
                db = -1;
                P = 363;
                break a;
              }
              if (!na) {
                o = m;
                v = 0;
                M = 0;
                break;
              }
              v = (k[c >> 2] | 0) + (4 - 1) & ~(4 - 1);
              s = k[v >> 2] | 0;
              k[c >> 2] = v + 4;
              v = 0;
              o = m;
            }
            if ((s | 0) < 0) {
              u = u | 8192;
              M = 0 - s | 0;
            } else
              M = s;
          } else {
            m = (o << 24 >> 24) + -48 | 0;
            if (m >>> 0 < 10) {
              o = s;
              s = 0;
              do {
                s = (s * 10 | 0) + m | 0;
                o = o + 1 | 0;
                m = (i[o >> 0] | 0) + -48 | 0;
              } while (m >>> 0 < 10);
              if ((s | 0) < 0) {
                db = -1;
                P = 363;
                break a;
              } else
                M = s;
            } else {
              o = s;
              M = 0;
            }
          }
 while (0);
        e: do
          if ((i[o >> 0] | 0) == 46) {
            s = o + 1 | 0;
            m = i[s >> 0] | 0;
            if (m << 24 >> 24 != 42) {
              m = (m << 24 >> 24) + -48 | 0;
              if (m >>> 0 < 10) {
                o = s;
                s = 0;
              } else {
                o = s;
                z = 0;
                break;
              }
              while (1) {
                s = (s * 10 | 0) + m | 0;
                o = o + 1 | 0;
                m = (i[o >> 0] | 0) + -48 | 0;
                if (m >>> 0 >= 10) {
                  z = s;
                  break e;
                }
              }
            }
            m = o + 2 | 0;
            s = (i[m >> 0] | 0) + -48 | 0;
            if (s >>> 0 < 10 ? (i[o + 3 >> 0] | 0) == 36 : 0) {
              k[e + (s << 2) >> 2] = 10;
              o = o + 4 | 0;
              z = k[d + ((i[m >> 0] | 0) + -48 << 3) >> 2] | 0;
              break;
            }
            if (v) {
              db = -1;
              P = 363;
              break a;
            }
            if (na) {
              o = (k[c >> 2] | 0) + (4 - 1) & ~(4 - 1);
              z = k[o >> 2] | 0;
              k[c >> 2] = o + 4;
              o = m;
            } else {
              o = m;
              z = 0;
            }
          } else
            z = -1;
 while (0);
        x = 0;
        while (1) {
          s = (i[o >> 0] | 0) + -65 | 0;
          if (s >>> 0 > 57) {
            db = -1;
            P = 363;
            break a;
          }
          m = o + 1 | 0;
          s = i[1015077 + (x * 58 | 0) + s >> 0] | 0;
          w = s & 255;
          if ((w + -1 | 0) >>> 0 < 8) {
            o = m;
            x = w;
          } else {
            N = m;
            break;
          }
        }
        if (!(s << 24 >> 24)) {
          db = -1;
          P = 363;
          break;
        }
        m = (F | 0) > -1;
        f: do
          if (s << 24 >> 24 == 19)
            if (m) {
              db = -1;
              P = 363;
              break a;
            } else {
              qa = G;
              ra = E;
              P = 62;
            }
          else {
            if (m) {
              k[e + (F << 2) >> 2] = w;
              ra = d + (F << 3) | 0;
              qa = k[ra + 4 >> 2] | 0;
              ra = k[ra >> 2] | 0;
              P = 62;
              break;
            }
            if (!na) {
              db = 0;
              P = 363;
              break a;
            }
            if ((s & 255) > 20) {
              Ba = E;
              Ca = G;
            } else
              do
                switch (w | 0) {
                  case 9:
                    {
                      Ca = (k[c >> 2] | 0) + (4 - 1) & ~(4 - 1);
                      Ba = k[Ca >> 2] | 0;
                      k[c >> 2] = Ca + 4;
                      Ca = G;
                      break f;
                    }
                  case 10:
                    {
                      Ba = (k[c >> 2] | 0) + (4 - 1) & ~(4 - 1);
                      Ca = k[Ba >> 2] | 0;
                      k[c >> 2] = Ba + 4;
                      Ba = Ca;
                      Ca = ((Ca | 0) < 0) << 31 >> 31;
                      break f;
                    }
                  case 11:
                    {
                      Ca = (k[c >> 2] | 0) + (4 - 1) & ~(4 - 1);
                      Ba = k[Ca >> 2] | 0;
                      k[c >> 2] = Ca + 4;
                      Ca = 0;
                      break f;
                    }
                  case 12:
                    {
                      L = (k[c >> 2] | 0) + (8 - 1) & ~(8 - 1);
                      Ca = L;
                      Ba = k[Ca >> 2] | 0;
                      Ca = k[Ca + 4 >> 2] | 0;
                      k[c >> 2] = L + 8;
                      break f;
                    }
                  case 13:
                    {
                      Ba = (k[c >> 2] | 0) + (4 - 1) & ~(4 - 1);
                      Ca = k[Ba >> 2] | 0;
                      k[c >> 2] = Ba + 4;
                      Ba = Ca << 16 >> 16;
                      Ca = (((Ca & 65535) << 16 >> 16 | 0) < 0) << 31 >> 31;
                      break f;
                    }
                  case 14:
                    {
                      Ca = (k[c >> 2] | 0) + (4 - 1) & ~(4 - 1);
                      Ba = k[Ca >> 2] | 0;
                      k[c >> 2] = Ca + 4;
                      Ba = Ba & 65535;
                      Ca = 0;
                      break f;
                    }
                  case 15:
                    {
                      Ba = (k[c >> 2] | 0) + (4 - 1) & ~(4 - 1);
                      Ca = k[Ba >> 2] | 0;
                      k[c >> 2] = Ba + 4;
                      Ba = Ca << 24 >> 24;
                      Ca = (((Ca & 255) << 24 >> 24 | 0) < 0) << 31 >> 31;
                      break f;
                    }
                  case 16:
                    {
                      Ca = (k[c >> 2] | 0) + (4 - 1) & ~(4 - 1);
                      Ba = k[Ca >> 2] | 0;
                      k[c >> 2] = Ca + 4;
                      Ba = Ba & 255;
                      Ca = 0;
                      break f;
                    }
                  case 17:
                    {
                      Ba = (k[c >> 2] | 0) + (8 - 1) & ~(8 - 1);
                      y = +p[Ba >> 3];
                      k[c >> 2] = Ba + 8;
                      p[t >> 3] = y;
                      Ba = k[t >> 2] | 0;
                      Ca = k[t + 4 >> 2] | 0;
                      break f;
                    }
                  case 18:
                    {
                      Ba = (k[c >> 2] | 0) + (8 - 1) & ~(8 - 1);
                      y = +p[Ba >> 3];
                      k[c >> 2] = Ba + 8;
                      p[t >> 3] = y;
                      Ba = k[t >> 2] | 0;
                      Ca = k[t + 4 >> 2] | 0;
                      break f;
                    }
                  default:
                    {
                      Ba = E;
                      Ca = G;
                      break f;
                    }
                }
 while (0);
          }
 while (0);
        if ((P | 0) == 62) {
          P = 0;
          if (na) {
            Ba = ra;
            Ca = qa;
          } else {
            G = qa;
            E = ra;
            u = aa;
            b = N;
            continue;
          }
        }
        H = i[o >> 0] | 0;
        H = (x | 0) != 0 & (H & 15 | 0) == 3 ? H & -33 : H;
        s = u & -65537;
        L = (u & 8192 | 0) == 0 ? u : s;
        g: do
          switch (H | 0) {
            case 111:
              {
                m = (Ba | 0) == 0 & (Ca | 0) == 0;
                if (m)
                  h = Aa;
                else {
                  h = Aa;
                  b = Ba;
                  n = Ca;
                  do {
                    h = h + -1 | 0;
                    i[h >> 0] = b & 7 | 48;
                    b = tr(b | 0, n | 0, 3) | 0;
                    n = O;
                  } while (!((b | 0) == 0 & (n | 0) == 0));
                }
                T = (L & 8 | 0) == 0 | m;
                U = Ba;
                V = Ca;
                Q = L;
                R = z;
                S = T & 1 ^ 1;
                T = T ? 1015557 : 1015562;
                P = 89;
                break;
              }
            case 105:
            case 100:
              {
                if ((Ca | 0) < 0) {
                  Fa = or(0, 0, Ba | 0, Ca | 0) | 0;
                  Ea = O;
                  Ya = 1;
                  Za = 1015557;
                  P = 84;
                  break g;
                }
                if (!(L & 2048)) {
                  Za = L & 1;
                  Ea = Ca;
                  Fa = Ba;
                  Ya = Za;
                  Za = (Za | 0) == 0 ? 1015557 : 1015559;
                  P = 84;
                } else {
                  Ea = Ca;
                  Fa = Ba;
                  Ya = 1;
                  Za = 1015558;
                  P = 84;
                }
                break;
              }
            case 117:
              {
                Ea = Ca;
                Fa = Ba;
                Ya = 0;
                Za = 1015557;
                P = 84;
                break;
              }
            case 99:
              {
                i[Ga >> 0] = Ba;
                ga = Ca;
                ha = Ba;
                ia = Ga;
                g = s;
                ba = 1;
                ca = 0;
                da = 1015557;
                fa = Aa;
                break;
              }
            case 109:
              {
                Ma = Yc() | 0;
                Ma = cd(k[Ma >> 2] | 0) | 0;
                P = 94;
                break;
              }
            case 115:
              {
                Ma = (Ba | 0) != 0 ? Ba : 1015567;
                P = 94;
                break;
              }
            case 67:
              {
                k[bb >> 2] = Ba;
                k[Ha >> 2] = 0;
                sa = bb;
                ta = Ia;
                Wa = -1;
                P = 97;
                break;
              }
            case 83:
              {
                b = Ba;
                if (!z) {
                  _ = Ba;
                  $ = b;
                  Z = 0;
                  P = 102;
                } else {
                  sa = b;
                  ta = Ba;
                  Wa = z;
                  P = 97;
                }
                break;
              }
            case 65:
            case 71:
            case 70:
            case 69:
            case 97:
            case 103:
            case 102:
            case 101:
              {
                k[t >> 2] = Ba;
                k[t + 4 >> 2] = Ca;
                q = +p[t >> 3];
                k[Qa >> 2] = 0;
                if ((Ca | 0) >= 0)
                  if (!(L & 2048)) {
                    J = L & 1;
                    I = J;
                    J = (J | 0) == 0 ? 1015575 : 1015580;
                  } else {
                    I = 1;
                    J = 1015577;
                  }
                else {
                  q = -q;
                  I = 1;
                  J = 1015574;
                }
                p[t >> 3] = q;
                K = k[t + 4 >> 2] & 2146435072;
                do
                  if (K >>> 0 < 2146435072 | (K | 0) == 2146435072 & 0 < 0) {
                    y = +Lq(q, Qa) * 2.0;
                    s = y != 0.0;
                    if (s)
                      k[Qa >> 2] = (k[Qa >> 2] | 0) + -1;
                    G = H | 32;
                    if ((G | 0) == 97) {
                      A = H & 32;
                      C = (A | 0) == 0 ? J : J + 9 | 0;
                      D = I | 2;
                      s = 12 - z | 0;
                      do
                        if (!(z >>> 0 > 11 | (s | 0) == 0)) {
                          q = 8.0;
                          do {
                            s = s + -1 | 0;
                            q = q * 16.0;
                          } while ((s | 0) != 0);
                          if ((i[C >> 0] | 0) == 45) {
                            q = -(q + (-y - q));
                            break;
                          } else {
                            q = y + q - q;
                            break;
                          }
                        } else
                          q = y;
 while (0);
                      s = k[Qa >> 2] | 0;
                      s = (s | 0) < 0 ? 0 - s | 0 : s;
                      if ((s | 0) < 0) {
                        o = Ja;
                        b = s;
                        u = ((s | 0) < 0) << 31 >> 31;
                        while (1) {
                          s = Gr(b | 0, u | 0, 10, 0) | 0;
                          o = o + -1 | 0;
                          i[o >> 0] = s | 48;
                          s = Fr(b | 0, u | 0, 10, 0) | 0;
                          if (u >>> 0 > 9 | (u | 0) == 9 & b >>> 0 > 4294967295) {
                            b = s;
                            u = O;
                          } else
                            break;
                        }
                      } else
                        o = Ja;
                      if (s)
                        while (1) {
                          o = o + -1 | 0;
                          i[o >> 0] = (s >>> 0) % 10 | 0 | 48;
                          if (s >>> 0 < 10)
                            break;
                          else
                            s = (s >>> 0) / 10 | 0;
                        }
                      if ((o | 0) == (Ja | 0)) {
                        i[Ka >> 0] = 48;
                        o = Ka;
                      }
                      i[o + -1 >> 0] = (k[Qa >> 2] >> 31 & 2) + 43;
                      B = o + -2 | 0;
                      i[B >> 0] = H + 15;
                      if (!(L & 8))
                        if ((z | 0) < 1) {
                          o = Oa;
                          do {
                            K = ~~q;
                            s = o + 1 | 0;
                            i[o >> 0] = l[1015541 + K >> 0] | A;
                            q = (q - +(K | 0)) * 16.0;
                            if ((s - ma | 0) != 1 | q == 0.0)
                              o = s;
                            else {
                              i[s >> 0] = 46;
                              o = o + 2 | 0;
                            }
                          } while (q != 0.0);
                        } else {
                          o = Oa;
                          do {
                            K = ~~q;
                            s = o + 1 | 0;
                            i[o >> 0] = l[1015541 + K >> 0] | A;
                            q = (q - +(K | 0)) * 16.0;
                            if ((s - ma | 0) == 1) {
                              i[s >> 0] = 46;
                              o = o + 2 | 0;
                            } else
                              o = s;
                          } while (q != 0.0);
                        }
                      else {
                        o = Oa;
                        do {
                          K = ~~q;
                          s = o + 1 | 0;
                          i[o >> 0] = l[1015541 + K >> 0] | A;
                          q = (q - +(K | 0)) * 16.0;
                          if ((s - ma | 0) == 1) {
                            i[s >> 0] = 46;
                            o = o + 2 | 0;
                          } else
                            o = s;
                        } while (q != 0.0);
                      }
                      x = (z | 0) != 0 & (pa + o | 0) < (z | 0) ? va + z - B | 0 : oa - B + o | 0;
                      w = x + D | 0;
                      u = L & 73728;
                      m = (M | 0) > (w | 0);
                      if ((u | 0) == 0 & m) {
                        s = M - w | 0;
                        wr(Xa | 0, 32, (s >>> 0 > 256 ? 256 : s) | 0) | 0;
                        if (s >>> 0 > 255) {
                          b = s;
                          do {
                            Wq(Xa, 256, a) | 0;
                            b = b + -256 | 0;
                          } while (b >>> 0 > 255);
                          s = s & 255;
                        }
                        Wq(Xa, s, a) | 0;
                      }
                      Wq(C, D, a) | 0;
                      if ((u | 0) == 65536 & m) {
                        b = M - w | 0;
                        wr(Xa | 0, 48, (b >>> 0 > 256 ? 256 : b) | 0) | 0;
                        if (b >>> 0 > 255) {
                          n = b;
                          do {
                            Wq(Xa, 256, a) | 0;
                            n = n + -256 | 0;
                          } while (n >>> 0 > 255);
                          b = b & 255;
                        }
                        Wq(Xa, b, a) | 0;
                      }
                      o = o - ma | 0;
                      Wq(Oa, o, a) | 0;
                      s = La - B | 0;
                      o = x - s - o | 0;
                      if ((o | 0) > 0) {
                        wr(Xa | 0, 48, (o >>> 0 > 256 ? 256 : o) | 0) | 0;
                        if (o >>> 0 > 255) {
                          b = o;
                          do {
                            Wq(Xa, 256, a) | 0;
                            b = b + -256 | 0;
                          } while (b >>> 0 > 255);
                          o = o & 255;
                        }
                        Wq(Xa, o, a) | 0;
                      }
                      Wq(B, s, a) | 0;
                      if ((u | 0) == 8192 & m) {
                        b = M - w | 0;
                        wr(Xa | 0, 32, (b >>> 0 > 256 ? 256 : b) | 0) | 0;
                        if (b >>> 0 > 255) {
                          o = b;
                          do {
                            Wq(Xa, 256, a) | 0;
                            o = o + -256 | 0;
                          } while (o >>> 0 > 255);
                          b = b & 255;
                        }
                        Wq(Xa, b, a) | 0;
                      }
                      n = m ? M : w;
                      break;
                    }
                    o = (z | 0) < 0 ? 6 : z;
                    if (s) {
                      s = (k[Qa >> 2] | 0) + -28 | 0;
                      k[Qa >> 2] = s;
                      q = y * 268435456.0;
                    } else {
                      q = y;
                      s = k[Qa >> 2] | 0;
                    }
                    K = (s | 0) < 0 ? Na : wa;
                    E = K;
                    u = K;
                    do {
                      F = ~~q >>> 0;
                      k[u >> 2] = F;
                      u = u + 4 | 0;
                      q = (q - +(F >>> 0)) * 1.0e9;
                    } while (q != 0.0);
                    s = k[Qa >> 2] | 0;
                    if ((s | 0) > 0) {
                      b = s;
                      s = K;
                      do {
                        x = (b | 0) > 29 ? 29 : b;
                        n = u + -4 | 0;
                        do
                          if (n >>> 0 >= s >>> 0) {
                            b = 0;
                            do {
                              F = xr(k[n >> 2] | 0, 0, x | 0) | 0;
                              F = pr(F | 0, O | 0, b | 0, 0) | 0;
                              b = O;
                              D = Gr(F | 0, b | 0, 1e9, 0) | 0;
                              k[n >> 2] = D;
                              b = Fr(F | 0, b | 0, 1e9, 0) | 0;
                              n = n + -4 | 0;
                            } while (n >>> 0 >= s >>> 0);
                            if (!b)
                              break;
                            s = s + -4 | 0;
                            k[s >> 2] = b;
                          }
 while (0);
                        while (1) {
                          if (u >>> 0 <= s >>> 0)
                            break;
                          b = u + -4 | 0;
                          if (!(k[b >> 2] | 0))
                            u = b;
                          else
                            break;
                        }
                        b = (k[Qa >> 2] | 0) - x | 0;
                        k[Qa >> 2] = b;
                      } while ((b | 0) > 0);
                    } else {
                      b = s;
                      s = K;
                    }
                    h: do
                      if ((b | 0) < 0) {
                        B = ((o + 25 | 0) / 9 | 0) + 1 | 0;
                        if ((G | 0) != 102)
                          while (1) {
                            w = 0 - b | 0;
                            w = (w | 0) > 9 ? 9 : w;
                            do
                              if (s >>> 0 < u >>> 0) {
                                x = (1 << w) + -1 | 0;
                                n = 1e9 >>> w;
                                b = 0;
                                m = s;
                                do {
                                  F = k[m >> 2] | 0;
                                  k[m >> 2] = (F >>> w) + b;
                                  b = ka(F & x, n) | 0;
                                  m = m + 4 | 0;
                                } while (m >>> 0 < u >>> 0);
                                s = (k[s >> 2] | 0) == 0 ? s + 4 | 0 : s;
                                if (!b)
                                  break;
                                k[u >> 2] = b;
                                u = u + 4 | 0;
                              } else
                                s = (k[s >> 2] | 0) == 0 ? s + 4 | 0 : s;
 while (0);
                            u = (u - s >> 2 | 0) > (B | 0) ? s + (B << 2) | 0 : u;
                            b = (k[Qa >> 2] | 0) + w | 0;
                            k[Qa >> 2] = b;
                            if ((b | 0) >= 0)
                              break h;
                          }
                        z = K + (B << 2) | 0;
                        do {
                          w = 0 - b | 0;
                          w = (w | 0) > 9 ? 9 : w;
                          do
                            if (s >>> 0 < u >>> 0) {
                              x = (1 << w) + -1 | 0;
                              n = 1e9 >>> w;
                              b = 0;
                              m = s;
                              do {
                                F = k[m >> 2] | 0;
                                k[m >> 2] = (F >>> w) + b;
                                b = ka(F & x, n) | 0;
                                m = m + 4 | 0;
                              } while (m >>> 0 < u >>> 0);
                              s = (k[s >> 2] | 0) == 0 ? s + 4 | 0 : s;
                              if (!b)
                                break;
                              k[u >> 2] = b;
                              u = u + 4 | 0;
                            } else
                              s = (k[s >> 2] | 0) == 0 ? s + 4 | 0 : s;
 while (0);
                          u = (u - E >> 2 | 0) > (B | 0) ? z : u;
                          b = (k[Qa >> 2] | 0) + w | 0;
                          k[Qa >> 2] = b;
                        } while ((b | 0) < 0);
                      }
 while (0);
                    do
                      if (s >>> 0 < u >>> 0) {
                        b = (E - s >> 2) * 9 | 0;
                        m = k[s >> 2] | 0;
                        if (m >>> 0 < 10) {
                          A = b;
                          break;
                        } else
                          n = 10;
                        do {
                          n = n * 10 | 0;
                          b = b + 1 | 0;
                        } while (m >>> 0 >= n >>> 0);
                        A = b;
                      } else
                        A = 0;
 while (0);
                    D = (G | 0) == 103;
                    C = (o | 0) != 0;
                    b = o - ((G | 0) != 102 ? A : 0) + ((C & D) << 31 >> 31) | 0;
                    if ((b | 0) < (((u - E >> 2) * 9 | 0) + -9 | 0)) {
                      n = b + 9216 | 0;
                      z = (n | 0) / 9 | 0;
                      b = K + (z + -1023 << 2) | 0;
                      n = ((n | 0) % 9 | 0) + 1 | 0;
                      if ((n | 0) < 9) {
                        x = 10;
                        do {
                          x = x * 10 | 0;
                          n = n + 1 | 0;
                        } while ((n | 0) != 9);
                      } else
                        x = 10;
                      m = k[b >> 2] | 0;
                      w = (m >>> 0) % (x >>> 0) | 0;
                      if ((w | 0) == 0 ? (K + (z + -1022 << 2) | 0) == (u | 0) : 0) {
                        Y = s;
                        X = b;
                        W = A;
                      } else
                        P = 221;
                      do
                        if ((P | 0) == 221) {
                          P = 0;
                          y = (((m >>> 0) / (x >>> 0) | 0) & 1 | 0) == 0 ? 9007199254740992.0 : 9007199254740994.0;
                          n = (x | 0) / 2 | 0;
                          do
                            if (w >>> 0 < n >>> 0)
                              q = .5;
                            else {
                              if ((w | 0) == (n | 0) ? (K + (z + -1022 << 2) | 0) == (u | 0) : 0) {
                                q = 1.0;
                                break;
                              }
                              q = 1.5;
                            }
 while (0);
                          do
                            if (I) {
                              if ((i[J >> 0] | 0) != 45)
                                break;
                              y = -y;
                              q = -q;
                            }
 while (0);
                          n = m - w | 0;
                          k[b >> 2] = n;
                          if (!(y + q != y)) {
                            Y = s;
                            X = b;
                            W = A;
                            break;
                          }
                          Y = n + x | 0;
                          k[b >> 2] = Y;
                          if (Y >>> 0 > 999999999)
                            while (1) {
                              n = b + -4 | 0;
                              k[b >> 2] = 0;
                              if (n >>> 0 < s >>> 0) {
                                s = s + -4 | 0;
                                k[s >> 2] = 0;
                              }
                              Y = (k[n >> 2] | 0) + 1 | 0;
                              k[n >> 2] = Y;
                              if (Y >>> 0 > 999999999)
                                b = n;
                              else {
                                b = n;
                                break;
                              }
                            }
                          n = (E - s >> 2) * 9 | 0;
                          w = k[s >> 2] | 0;
                          if (w >>> 0 < 10) {
                            Y = s;
                            X = b;
                            W = n;
                            break;
                          } else
                            m = 10;
                          do {
                            m = m * 10 | 0;
                            n = n + 1 | 0;
                          } while (w >>> 0 >= m >>> 0);
                          Y = s;
                          X = b;
                          W = n;
                        }
 while (0);
                      G = X + 4 | 0;
                      s = Y;
                      A = W;
                      u = u >>> 0 > G >>> 0 ? G : u;
                    }
                    z = 0 - A | 0;
                    while (1) {
                      if (u >>> 0 <= s >>> 0) {
                        F = 0;
                        break;
                      }
                      b = u + -4 | 0;
                      if (!(k[b >> 2] | 0))
                        u = b;
                      else {
                        F = 1;
                        break;
                      }
                    }
                    do
                      if (D) {
                        o = (C & 1 ^ 1) + o | 0;
                        if ((o | 0) > (A | 0) & (A | 0) > -5) {
                          m = H + -1 | 0;
                          o = o + -1 - A | 0;
                        } else {
                          m = H + -2 | 0;
                          o = o + -1 | 0;
                        }
                        b = L & 8;
                        if (b) {
                          D = b;
                          break;
                        }
                        do
                          if (F) {
                            x = k[u + -4 >> 2] | 0;
                            if (!x) {
                              n = 9;
                              break;
                            }
                            if (!((x >>> 0) % 10 | 0)) {
                              b = 10;
                              n = 0;
                            } else {
                              n = 0;
                              break;
                            }
                            do {
                              b = b * 10 | 0;
                              n = n + 1 | 0;
                            } while (((x >>> 0) % (b >>> 0) | 0 | 0) == 0);
                          } else
                            n = 9;
 while (0);
                        b = ((u - E >> 2) * 9 | 0) + -9 | 0;
                        if ((m | 32 | 0) == 102) {
                          D = b - n | 0;
                          D = (D | 0) < 0 ? 0 : D;
                          o = (o | 0) < (D | 0) ? o : D;
                          D = 0;
                          break;
                        } else {
                          D = b + A - n | 0;
                          D = (D | 0) < 0 ? 0 : D;
                          o = (o | 0) < (D | 0) ? o : D;
                          D = 0;
                          break;
                        }
                      } else {
                        m = H;
                        D = L & 8;
                      }
 while (0);
                    E = o | D;
                    B = (E | 0) != 0 & 1;
                    C = (m | 32 | 0) == 102;
                    if (C) {
                      b = (A | 0) > 0 ? A : 0;
                      A = 0;
                    } else {
                      x = (A | 0) < 0 ? z : A;
                      if ((x | 0) < 0) {
                        b = Ja;
                        w = x;
                        n = ((x | 0) < 0) << 31 >> 31;
                        while (1) {
                          x = Gr(w | 0, n | 0, 10, 0) | 0;
                          b = b + -1 | 0;
                          i[b >> 0] = x | 48;
                          x = Fr(w | 0, n | 0, 10, 0) | 0;
                          if (n >>> 0 > 9 | (n | 0) == 9 & w >>> 0 > 4294967295) {
                            w = x;
                            n = O;
                          } else
                            break;
                        }
                      } else
                        b = Ja;
                      if (x)
                        while (1) {
                          b = b + -1 | 0;
                          i[b >> 0] = (x >>> 0) % 10 | 0 | 48;
                          if (x >>> 0 < 10)
                            break;
                          else
                            x = (x >>> 0) / 10 | 0;
                        }
                      if ((La - b | 0) < 2)
                        do {
                          b = b + -1 | 0;
                          i[b >> 0] = 48;
                        } while ((La - b | 0) < 2);
                      i[b + -1 >> 0] = (A >> 31 & 2) + 43;
                      A = b + -2 | 0;
                      i[A >> 0] = m;
                      b = La - A | 0;
                    }
                    G = I + 1 + o + B + b | 0;
                    B = L & 73728;
                    z = (M | 0) > (G | 0);
                    if ((B | 0) == 0 & z) {
                      b = M - G | 0;
                      wr(Xa | 0, 32, (b >>> 0 > 256 ? 256 : b) | 0) | 0;
                      if (b >>> 0 > 255) {
                        x = b;
                        do {
                          Wq(Xa, 256, a) | 0;
                          x = x + -256 | 0;
                        } while (x >>> 0 > 255);
                        b = b & 255;
                      }
                      Wq(Xa, b, a) | 0;
                    }
                    Wq(J, I, a) | 0;
                    if ((B | 0) == 65536 & z) {
                      b = M - G | 0;
                      wr(Xa | 0, 48, (b >>> 0 > 256 ? 256 : b) | 0) | 0;
                      if (b >>> 0 > 255) {
                        n = b;
                        do {
                          Wq(Xa, 256, a) | 0;
                          n = n + -256 | 0;
                        } while (n >>> 0 > 255);
                        b = b & 255;
                      }
                      Wq(Xa, b, a) | 0;
                    }
                    if (C) {
                      x = s >>> 0 > K >>> 0 ? K : s;
                      b = x;
                      do {
                        n = k[b >> 2] | 0;
                        if (!n)
                          s = xa;
                        else {
                          s = xa;
                          while (1) {
                            s = s + -1 | 0;
                            i[s >> 0] = (n >>> 0) % 10 | 0 | 48;
                            if (n >>> 0 < 10)
                              break;
                            else
                              n = (n >>> 0) / 10 | 0;
                          }
                        }
                        do
                          if ((b | 0) == (x | 0)) {
                            if ((s | 0) != (xa | 0))
                              break;
                            i[za >> 0] = 48;
                            s = za;
                          } else {
                            if (s >>> 0 <= Oa >>> 0)
                              break;
                            do {
                              s = s + -1 | 0;
                              i[s >> 0] = 48;
                            } while (s >>> 0 > Oa >>> 0);
                          }
 while (0);
                        Wq(s, ya - s | 0, a) | 0;
                        b = b + 4 | 0;
                      } while (b >>> 0 <= K >>> 0);
                      if (E)
                        Wq(1015609, 1, a) | 0;
                      if ((o | 0) > 0 & b >>> 0 < u >>> 0) {
                        n = b;
                        do {
                          s = k[n >> 2] | 0;
                          if (s) {
                            b = xa;
                            while (1) {
                              b = b + -1 | 0;
                              i[b >> 0] = (s >>> 0) % 10 | 0 | 48;
                              if (s >>> 0 < 10)
                                break;
                              else
                                s = (s >>> 0) / 10 | 0;
                            }
                            if (b >>> 0 > Oa >>> 0) {
                              _a = b;
                              P = 289;
                            } else
                              la = b;
                          } else {
                            _a = xa;
                            P = 289;
                          }
                          if ((P | 0) == 289)
                            while (1) {
                              P = 0;
                              b = _a + -1 | 0;
                              i[b >> 0] = 48;
                              if (b >>> 0 > Oa >>> 0)
                                _a = b;
                              else {
                                la = b;
                                break;
                              }
                            }
                          L = (o | 0) > 9;
                          Wq(la, L ? 9 : o, a) | 0;
                          n = n + 4 | 0;
                          o = o + -9 | 0;
                        } while (L & n >>> 0 < u >>> 0);
                      }
                      if ((o | 0) > 0) {
                        wr(Xa | 0, 48, (o >>> 0 > 256 ? 256 : o) | 0) | 0;
                        if (o >>> 0 > 255) {
                          b = o;
                          do {
                            Wq(Xa, 256, a) | 0;
                            b = b + -256 | 0;
                          } while (b >>> 0 > 255);
                          o = o & 255;
                        }
                        Wq(Xa, o, a) | 0;
                      }
                    } else {
                      w = F ? u : s + 4 | 0;
                      do
                        if ((o | 0) > -1) {
                          m = (D | 0) == 0;
                          x = s;
                          do {
                            u = k[x >> 2] | 0;
                            if (u) {
                              b = xa;
                              n = u;
                              while (1) {
                                u = b + -1 | 0;
                                i[u >> 0] = (n >>> 0) % 10 | 0 | 48;
                                if (n >>> 0 < 10)
                                  break;
                                else {
                                  b = u;
                                  n = (n >>> 0) / 10 | 0;
                                }
                              }
                              if ((u | 0) != (xa | 0)) {
                                ua = b;
                                $a = u;
                              } else
                                P = 303;
                            } else
                              P = 303;
                            if ((P | 0) == 303) {
                              P = 0;
                              i[za >> 0] = 48;
                              ua = xa;
                              $a = za;
                            }
                            do
                              if ((x | 0) == (s | 0)) {
                                Wq($a, 1, a) | 0;
                                if (m & (o | 0) < 1) {
                                  u = ua;
                                  break;
                                }
                                Wq(1015609, 1, a) | 0;
                                u = ua;
                              } else {
                                if ($a >>> 0 > Oa >>> 0)
                                  u = $a;
                                else {
                                  u = $a;
                                  break;
                                }
                                do {
                                  u = u + -1 | 0;
                                  i[u >> 0] = 48;
                                } while (u >>> 0 > Oa >>> 0);
                              }
 while (0);
                            L = ya - u | 0;
                            Wq(u, (o | 0) > (L | 0) ? L : o, a) | 0;
                            o = o - L | 0;
                            x = x + 4 | 0;
                          } while (x >>> 0 < w >>> 0 & (o | 0) > -1);
                          if ((o | 0) <= 0)
                            break;
                          wr(Xa | 0, 48, (o >>> 0 > 256 ? 256 : o) | 0) | 0;
                          if (o >>> 0 > 255) {
                            b = o;
                            do {
                              Wq(Xa, 256, a) | 0;
                              b = b + -256 | 0;
                            } while (b >>> 0 > 255);
                            o = o & 255;
                          }
                          Wq(Xa, o, a) | 0;
                        }
 while (0);
                      Wq(A, La - A | 0, a) | 0;
                    }
                    if ((B | 0) == 8192 & z) {
                      b = M - G | 0;
                      wr(Xa | 0, 32, (b >>> 0 > 256 ? 256 : b) | 0) | 0;
                      if (b >>> 0 > 255) {
                        o = b;
                        do {
                          Wq(Xa, 256, a) | 0;
                          o = o + -256 | 0;
                        } while (o >>> 0 > 255);
                        b = b & 255;
                      }
                      Wq(Xa, b, a) | 0;
                    }
                    n = z ? M : G;
                  } else {
                    n = (H & 32 | 0) != 0;
                    u = q != q | 0.0 != 0.0;
                    s = u ? 0 : I;
                    n = u ? (n ? 1015601 : 1015605) : n ? 1015593 : 1015597;
                    u = s + 3 | 0;
                    m = (M | 0) > (u | 0);
                    if ((L & 8192 | 0) == 0 & m) {
                      o = M - u | 0;
                      wr(Xa | 0, 32, (o >>> 0 > 256 ? 256 : o) | 0) | 0;
                      if (o >>> 0 > 255) {
                        b = o;
                        do {
                          Wq(Xa, 256, a) | 0;
                          b = b + -256 | 0;
                        } while (b >>> 0 > 255);
                        o = o & 255;
                      }
                      Wq(Xa, o, a) | 0;
                    }
                    Wq(J, s, a) | 0;
                    Wq(n, 3, a) | 0;
                    if ((L & 73728 | 0) == 8192 & m) {
                      b = M - u | 0;
                      wr(Xa | 0, 32, (b >>> 0 > 256 ? 256 : b) | 0) | 0;
                      if (b >>> 0 > 255) {
                        o = b;
                        do {
                          Wq(Xa, 256, a) | 0;
                          o = o + -256 | 0;
                        } while (o >>> 0 > 255);
                        b = b & 255;
                      }
                      Wq(Xa, b, a) | 0;
                    }
                    n = m ? M : u;
                  }
 while (0);
                G = Ca;
                E = Ba;
                u = aa;
                b = N;
                continue a;
              }
            case 110:
              switch (x | 0) {
                case 0:
                  {
                    k[Ba >> 2] = aa;
                    G = Ca;
                    E = Ba;
                    u = aa;
                    b = N;
                    continue a;
                  }
                case 1:
                  {
                    k[Ba >> 2] = aa;
                    G = Ca;
                    E = Ba;
                    u = aa;
                    b = N;
                    continue a;
                  }
                case 2:
                  {
                    G = Ba;
                    k[G >> 2] = aa;
                    k[G + 4 >> 2] = ((aa | 0) < 0) << 31 >> 31;
                    G = Ca;
                    E = Ba;
                    u = aa;
                    b = N;
                    continue a;
                  }
                case 3:
                  {
                    j[Ba >> 1] = aa;
                    G = Ca;
                    E = Ba;
                    u = aa;
                    b = N;
                    continue a;
                  }
                case 4:
                  {
                    i[Ba >> 0] = aa;
                    G = Ca;
                    E = Ba;
                    u = aa;
                    b = N;
                    continue a;
                  }
                case 6:
                  {
                    k[Ba >> 2] = aa;
                    G = Ca;
                    E = Ba;
                    u = aa;
                    b = N;
                    continue a;
                  }
                case 7:
                  {
                    G = Ba;
                    k[G >> 2] = aa;
                    k[G + 4 >> 2] = ((aa | 0) < 0) << 31 >> 31;
                    G = Ca;
                    E = Ba;
                    u = aa;
                    b = N;
                    continue a;
                  }
                default:
                  {
                    G = Ca;
                    E = Ba;
                    u = aa;
                    b = N;
                    continue a;
                  }
              }
            case 112:
              {
                Ra = L | 8;
                Va = z >>> 0 > 8 ? z : 8;
                ab = 120;
                P = 73;
                break;
              }
            case 88:
            case 120:
              {
                Ra = L;
                Va = z;
                ab = H;
                P = 73;
                break;
              }
            default:
              {
                ga = Ca;
                ha = Ba;
                ia = b;
                g = L;
                ba = z;
                ca = 0;
                da = 1015557;
                fa = Aa;
              }
          }
 while (0);
        if ((P | 0) == 73) {
          h = ab & 32;
          if (!((Ba | 0) == 0 & (Ca | 0) == 0)) {
            m = Aa;
            n = Ba;
            b = Ca;
            do {
              m = m + -1 | 0;
              i[m >> 0] = l[1015541 + (n & 15) >> 0] | h;
              n = tr(n | 0, b | 0, 4) | 0;
              b = O;
            } while (!((n | 0) == 0 & (b | 0) == 0));
            if (!(Ra & 8)) {
              U = Ba;
              V = Ca;
              h = m;
              Q = Ra;
              R = Va;
              S = 0;
              T = 1015557;
              P = 89;
            } else {
              U = Ba;
              V = Ca;
              h = m;
              Q = Ra;
              R = Va;
              S = 2;
              T = 1015557 + (ab >> 4) | 0;
              P = 89;
            }
          } else {
            U = Ba;
            V = Ca;
            h = Aa;
            Q = Ra;
            R = Va;
            S = 0;
            T = 1015557;
            P = 89;
          }
        } else if ((P | 0) == 84) {
          if (Ea >>> 0 > 0 | (Ea | 0) == 0 & Fa >>> 0 > 4294967295) {
            h = Aa;
            b = Fa;
            n = Ea;
            while (1) {
              m = Gr(b | 0, n | 0, 10, 0) | 0;
              h = h + -1 | 0;
              i[h >> 0] = m | 48;
              m = Fr(b | 0, n | 0, 10, 0) | 0;
              if (n >>> 0 > 9 | (n | 0) == 9 & b >>> 0 > 4294967295) {
                b = m;
                n = O;
              } else
                break;
            }
          } else {
            h = Aa;
            m = Fa;
          }
          if (!m) {
            U = Fa;
            V = Ea;
            Q = L;
            R = z;
            S = Ya;
            T = Za;
            P = 89;
          } else
            while (1) {
              h = h + -1 | 0;
              i[h >> 0] = (m >>> 0) % 10 | 0 | 48;
              if (m >>> 0 < 10) {
                U = Fa;
                V = Ea;
                Q = L;
                R = z;
                S = Ya;
                T = Za;
                P = 89;
                break;
              } else
                m = (m >>> 0) / 10 | 0;
            }
        } else if ((P | 0) == 94) {
          P = 0;
          fa = br(Ma, 0, z) | 0;
          K = (fa | 0) == 0;
          ga = Ca;
          ha = Ba;
          ia = Ma;
          g = s;
          ba = K ? z : fa - Ma | 0;
          ca = 0;
          da = 1015557;
          fa = K ? Ma + z | 0 : fa;
        } else if ((P | 0) == 97) {
          n = 0;
          b = 0;
          o = sa;
          while (1) {
            m = k[o >> 2] | 0;
            if (!m)
              break;
            b = Pq(Ua, m) | 0;
            if ((b | 0) < 0 | b >>> 0 > (Wa - n | 0) >>> 0)
              break;
            n = b + n | 0;
            if (Wa >>> 0 > n >>> 0)
              o = o + 4 | 0;
            else
              break;
          }
          if ((b | 0) < 0) {
            db = -1;
            P = 363;
            break;
          } else {
            _ = ta;
            $ = sa;
            Z = n;
            P = 102;
          }
        }
        if ((P | 0) == 89) {
          P = 0;
          g = (R | 0) > -1 ? Q & -65537 : Q;
          m = (U | 0) != 0 | (V | 0) != 0;
          if (m | (R | 0) != 0) {
            ba = (m & 1 ^ 1) + (Da - h) | 0;
            ga = V;
            ha = U;
            ia = h;
            ba = (R | 0) > (ba | 0) ? R : ba;
            ca = S;
            da = T;
            fa = Aa;
          } else {
            ga = V;
            ha = U;
            ia = Aa;
            ba = 0;
            ca = S;
            da = T;
            fa = Aa;
          }
        } else if ((P | 0) == 102) {
          P = 0;
          s = L & 73728;
          x = (M | 0) > (Z | 0);
          if ((s | 0) == 0 & x) {
            b = M - Z | 0;
            wr(Xa | 0, 32, (b >>> 0 > 256 ? 256 : b) | 0) | 0;
            if (b >>> 0 > 255) {
              o = b;
              do {
                Wq(Xa, 256, a) | 0;
                o = o + -256 | 0;
              } while (o >>> 0 > 255);
              b = b & 255;
            }
            Wq(Xa, b, a) | 0;
          }
          i: do
            if (Z) {
              b = 0;
              n = $;
              while (1) {
                o = k[n >> 2] | 0;
                if (!o)
                  break i;
                o = Pq(Ua, o) | 0;
                b = o + b | 0;
                if ((b | 0) > (Z | 0))
                  break i;
                Wq(Ua, o, a) | 0;
                if (b >>> 0 >= Z >>> 0)
                  break;
                else
                  n = n + 4 | 0;
              }
            }
 while (0);
          if ((s | 0) == 8192 & x) {
            b = M - Z | 0;
            wr(Xa | 0, 32, (b >>> 0 > 256 ? 256 : b) | 0) | 0;
            if (b >>> 0 > 255) {
              n = b;
              do {
                Wq(Xa, 256, a) | 0;
                n = n + -256 | 0;
              } while (n >>> 0 > 255);
              b = b & 255;
            }
            Wq(Xa, b, a) | 0;
          }
          G = Ca;
          E = _;
          u = aa;
          b = N;
          n = x ? M : Z;
          continue;
        }
        w = fa - ia | 0;
        u = (ba | 0) < (w | 0) ? w : ba;
        m = ca + u | 0;
        x = (M | 0) < (m | 0) ? m : M;
        s = g & 73728;
        n = (x | 0) > (m | 0);
        if ((s | 0) == 0 & n) {
          o = x - m | 0;
          wr(Xa | 0, 32, (o >>> 0 > 256 ? 256 : o) | 0) | 0;
          if (o >>> 0 > 255) {
            b = o;
            do {
              Wq(Xa, 256, a) | 0;
              b = b + -256 | 0;
            } while (b >>> 0 > 255);
            o = o & 255;
          }
          Wq(Xa, o, a) | 0;
        }
        Wq(da, ca, a) | 0;
        if ((s | 0) == 65536 & n) {
          o = x - m | 0;
          wr(Xa | 0, 48, (o >>> 0 > 256 ? 256 : o) | 0) | 0;
          if (o >>> 0 > 255) {
            b = o;
            do {
              Wq(Xa, 256, a) | 0;
              b = b + -256 | 0;
            } while (b >>> 0 > 255);
            o = o & 255;
          }
          Wq(Xa, o, a) | 0;
        }
        if ((u | 0) > (w | 0)) {
          o = u - w | 0;
          wr(Xa | 0, 48, (o >>> 0 > 256 ? 256 : o) | 0) | 0;
          if (o >>> 0 > 255) {
            b = o;
            do {
              Wq(Xa, 256, a) | 0;
              b = b + -256 | 0;
            } while (b >>> 0 > 255);
            o = o & 255;
          }
          Wq(Xa, o, a) | 0;
        }
        Wq(ia, w, a) | 0;
        if ((s | 0) == 8192 & n) {
          b = x - m | 0;
          wr(Xa | 0, 32, (b >>> 0 > 256 ? 256 : b) | 0) | 0;
          if (b >>> 0 > 255) {
            n = b;
            do {
              Wq(Xa, 256, a) | 0;
              n = n + -256 | 0;
            } while (n >>> 0 > 255);
            b = b & 255;
          }
          Wq(Xa, b, a) | 0;
        }
        G = ga;
        E = ha;
        u = aa;
        b = N;
        n = x;
      }
      if ((P | 0) == 344) {
        if (a) {
          e = Pa;
          r = eb;
          return e | 0;
        }
        if (!Ta) {
          e = 0;
          r = eb;
          return e | 0;
        } else
          m = 1;
        while (1) {
          g = k[e + (m << 2) >> 2] | 0;
          if (!g) {
            f = m;
            break;
          }
          h = d + (m << 3) | 0;
          j: do
            if (g >>> 0 <= 20)
              do
                switch (g | 0) {
                  case 9:
                    {
                      $a = (k[c >> 2] | 0) + (4 - 1) & ~(4 - 1);
                      ab = k[$a >> 2] | 0;
                      k[c >> 2] = $a + 4;
                      k[h >> 2] = ab;
                      break j;
                    }
                  case 10:
                    {
                      ab = (k[c >> 2] | 0) + (4 - 1) & ~(4 - 1);
                      $a = k[ab >> 2] | 0;
                      k[c >> 2] = ab + 4;
                      ab = h;
                      k[ab >> 2] = $a;
                      k[ab + 4 >> 2] = (($a | 0) < 0) << 31 >> 31;
                      break j;
                    }
                  case 11:
                    {
                      ab = (k[c >> 2] | 0) + (4 - 1) & ~(4 - 1);
                      $a = k[ab >> 2] | 0;
                      k[c >> 2] = ab + 4;
                      ab = h;
                      k[ab >> 2] = $a;
                      k[ab + 4 >> 2] = 0;
                      break j;
                    }
                  case 12:
                    {
                      ab = (k[c >> 2] | 0) + (8 - 1) & ~(8 - 1);
                      $a = ab;
                      _a = k[$a >> 2] | 0;
                      $a = k[$a + 4 >> 2] | 0;
                      k[c >> 2] = ab + 8;
                      ab = h;
                      k[ab >> 2] = _a;
                      k[ab + 4 >> 2] = $a;
                      break j;
                    }
                  case 13:
                    {
                      ab = (k[c >> 2] | 0) + (4 - 1) & ~(4 - 1);
                      $a = k[ab >> 2] | 0;
                      k[c >> 2] = ab + 4;
                      $a = ($a & 65535) << 16 >> 16;
                      ab = h;
                      k[ab >> 2] = $a;
                      k[ab + 4 >> 2] = (($a | 0) < 0) << 31 >> 31;
                      break j;
                    }
                  case 14:
                    {
                      ab = (k[c >> 2] | 0) + (4 - 1) & ~(4 - 1);
                      $a = k[ab >> 2] | 0;
                      k[c >> 2] = ab + 4;
                      ab = h;
                      k[ab >> 2] = $a & 65535;
                      k[ab + 4 >> 2] = 0;
                      break j;
                    }
                  case 15:
                    {
                      ab = (k[c >> 2] | 0) + (4 - 1) & ~(4 - 1);
                      $a = k[ab >> 2] | 0;
                      k[c >> 2] = ab + 4;
                      $a = ($a & 255) << 24 >> 24;
                      ab = h;
                      k[ab >> 2] = $a;
                      k[ab + 4 >> 2] = (($a | 0) < 0) << 31 >> 31;
                      break j;
                    }
                  case 16:
                    {
                      ab = (k[c >> 2] | 0) + (4 - 1) & ~(4 - 1);
                      $a = k[ab >> 2] | 0;
                      k[c >> 2] = ab + 4;
                      ab = h;
                      k[ab >> 2] = $a & 255;
                      k[ab + 4 >> 2] = 0;
                      break j;
                    }
                  case 17:
                    {
                      ab = (k[c >> 2] | 0) + (8 - 1) & ~(8 - 1);
                      y = +p[ab >> 3];
                      k[c >> 2] = ab + 8;
                      p[h >> 3] = y;
                      break j;
                    }
                  case 18:
                    {
                      ab = (k[c >> 2] | 0) + (8 - 1) & ~(8 - 1);
                      y = +p[ab >> 3];
                      k[c >> 2] = ab + 8;
                      p[h >> 3] = y;
                      break j;
                    }
                  default:
                    break j;
                }
 while (0);
 while (0);
          m = m + 1 | 0;
          if ((m | 0) >= 10) {
            db = 1;
            P = 363;
            break;
          }
        }
        if ((P | 0) == 363) {
          r = eb;
          return db | 0;
        }
        if ((f | 0) >= 10) {
          e = 1;
          r = eb;
          return e | 0;
        }
        while (1) {
          if (k[e + (f << 2) >> 2] | 0) {
            db = -1;
            P = 363;
            break;
          }
          f = f + 1 | 0;
          if ((f | 0) >= 10) {
            db = 1;
            P = 363;
            break;
          }
        }
        if ((P | 0) == 363) {
          r = eb;
          return db | 0;
        }
      } else if ((P | 0) == 363) {
        r = eb;
        return db | 0;
      }
      return 0;
    }
    function hr(a, b, c) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      var d = 0,
          e = 0;
      d = a + 20 | 0;
      e = k[d >> 2] | 0;
      a = (k[a + 16 >> 2] | 0) - e | 0;
      a = a >>> 0 > c >>> 0 ? c : a;
      rr(e | 0, b | 0, a | 0) | 0;
      k[d >> 2] = (k[d >> 2] | 0) + a;
      return c | 0;
    }
    function ir(a) {
      a = a | 0;
      var b = 0,
          c = 0,
          d = 0,
          e = 0,
          f = 0,
          g = 0,
          h = 0,
          i = 0,
          j = 0,
          l = 0,
          m = 0,
          n = 0,
          o = 0,
          p = 0,
          q = 0,
          r = 0,
          s = 0,
          t = 0,
          u = 0,
          v = 0,
          w = 0,
          x = 0,
          y = 0,
          z = 0,
          A = 0,
          B = 0,
          C = 0,
          D = 0,
          E = 0,
          F = 0,
          G = 0,
          H = 0,
          I = 0,
          J = 0,
          K = 0,
          L = 0,
          M = 0,
          N = 0;
      do
        if (a >>> 0 < 245) {
          q = a >>> 0 < 11 ? 16 : a + 11 & -8;
          a = q >>> 3;
          l = k[4660] | 0;
          i = l >>> a;
          if (i & 3) {
            d = (i & 1 ^ 1) + a | 0;
            e = d << 1;
            b = 18680 + (e << 2) | 0;
            e = 18680 + (e + 2 << 2) | 0;
            f = k[e >> 2] | 0;
            g = f + 8 | 0;
            h = k[g >> 2] | 0;
            do
              if ((b | 0) != (h | 0)) {
                if (h >>> 0 < (k[4664] | 0) >>> 0)
                  rc();
                c = h + 12 | 0;
                if ((k[c >> 2] | 0) == (f | 0)) {
                  k[c >> 2] = b;
                  k[e >> 2] = h;
                  break;
                } else
                  rc();
              } else
                k[4660] = l & ~(1 << d);
 while (0);
            N = d << 3;
            k[f + 4 >> 2] = N | 3;
            N = f + (N | 4) | 0;
            k[N >> 2] = k[N >> 2] | 1;
            N = g;
            return N | 0;
          }
          b = k[4662] | 0;
          if (q >>> 0 > b >>> 0) {
            if (i) {
              e = 2 << a;
              e = i << a & (e | 0 - e);
              e = (e & 0 - e) + -1 | 0;
              a = e >>> 12 & 16;
              e = e >>> a;
              d = e >>> 5 & 8;
              e = e >>> d;
              c = e >>> 2 & 4;
              e = e >>> c;
              f = e >>> 1 & 2;
              e = e >>> f;
              g = e >>> 1 & 1;
              g = (d | a | c | f | g) + (e >>> g) | 0;
              e = g << 1;
              f = 18680 + (e << 2) | 0;
              e = 18680 + (e + 2 << 2) | 0;
              c = k[e >> 2] | 0;
              a = c + 8 | 0;
              d = k[a >> 2] | 0;
              do
                if ((f | 0) != (d | 0)) {
                  if (d >>> 0 < (k[4664] | 0) >>> 0)
                    rc();
                  h = d + 12 | 0;
                  if ((k[h >> 2] | 0) == (c | 0)) {
                    k[h >> 2] = f;
                    k[e >> 2] = d;
                    j = k[4662] | 0;
                    break;
                  } else
                    rc();
                } else {
                  k[4660] = l & ~(1 << g);
                  j = b;
                }
 while (0);
              N = g << 3;
              b = N - q | 0;
              k[c + 4 >> 2] = q | 3;
              i = c + q | 0;
              k[c + (q | 4) >> 2] = b | 1;
              k[c + N >> 2] = b;
              if (j) {
                d = k[4665] | 0;
                f = j >>> 3;
                h = f << 1;
                e = 18680 + (h << 2) | 0;
                g = k[4660] | 0;
                f = 1 << f;
                if (g & f) {
                  g = 18680 + (h + 2 << 2) | 0;
                  h = k[g >> 2] | 0;
                  if (h >>> 0 < (k[4664] | 0) >>> 0)
                    rc();
                  else {
                    m = g;
                    n = h;
                  }
                } else {
                  k[4660] = g | f;
                  m = 18680 + (h + 2 << 2) | 0;
                  n = e;
                }
                k[m >> 2] = d;
                k[n + 12 >> 2] = d;
                k[d + 8 >> 2] = n;
                k[d + 12 >> 2] = e;
              }
              k[4662] = b;
              k[4665] = i;
              N = a;
              return N | 0;
            }
            a = k[4661] | 0;
            if (a) {
              g = (a & 0 - a) + -1 | 0;
              M = g >>> 12 & 16;
              g = g >>> M;
              L = g >>> 5 & 8;
              g = g >>> L;
              N = g >>> 2 & 4;
              g = g >>> N;
              h = g >>> 1 & 2;
              g = g >>> h;
              f = g >>> 1 & 1;
              f = k[18944 + ((L | M | N | h | f) + (g >>> f) << 2) >> 2] | 0;
              g = (k[f + 4 >> 2] & -8) - q | 0;
              h = f;
              while (1) {
                c = k[h + 16 >> 2] | 0;
                if (!c) {
                  c = k[h + 20 >> 2] | 0;
                  if (!c) {
                    l = g;
                    j = f;
                    break;
                  }
                }
                h = (k[c + 4 >> 2] & -8) - q | 0;
                N = h >>> 0 < g >>> 0;
                g = N ? h : g;
                h = c;
                f = N ? c : f;
              }
              a = k[4664] | 0;
              if (j >>> 0 < a >>> 0)
                rc();
              b = j + q | 0;
              if (j >>> 0 >= b >>> 0)
                rc();
              i = k[j + 24 >> 2] | 0;
              f = k[j + 12 >> 2] | 0;
              do
                if ((f | 0) == (j | 0)) {
                  g = j + 20 | 0;
                  h = k[g >> 2] | 0;
                  if (!h) {
                    g = j + 16 | 0;
                    h = k[g >> 2] | 0;
                    if (!h) {
                      d = 0;
                      break;
                    }
                  }
                  while (1) {
                    f = h + 20 | 0;
                    e = k[f >> 2] | 0;
                    if (e) {
                      h = e;
                      g = f;
                      continue;
                    }
                    f = h + 16 | 0;
                    e = k[f >> 2] | 0;
                    if (!e)
                      break;
                    else {
                      h = e;
                      g = f;
                    }
                  }
                  if (g >>> 0 < a >>> 0)
                    rc();
                  else {
                    k[g >> 2] = 0;
                    d = h;
                    break;
                  }
                } else {
                  e = k[j + 8 >> 2] | 0;
                  if (e >>> 0 < a >>> 0)
                    rc();
                  h = e + 12 | 0;
                  if ((k[h >> 2] | 0) != (j | 0))
                    rc();
                  g = f + 8 | 0;
                  if ((k[g >> 2] | 0) == (j | 0)) {
                    k[h >> 2] = f;
                    k[g >> 2] = e;
                    d = f;
                    break;
                  } else
                    rc();
                }
 while (0);
              do
                if (i) {
                  h = k[j + 28 >> 2] | 0;
                  g = 18944 + (h << 2) | 0;
                  if ((j | 0) == (k[g >> 2] | 0)) {
                    k[g >> 2] = d;
                    if (!d) {
                      k[4661] = k[4661] & ~(1 << h);
                      break;
                    }
                  } else {
                    if (i >>> 0 < (k[4664] | 0) >>> 0)
                      rc();
                    h = i + 16 | 0;
                    if ((k[h >> 2] | 0) == (j | 0))
                      k[h >> 2] = d;
                    else
                      k[i + 20 >> 2] = d;
                    if (!d)
                      break;
                  }
                  g = k[4664] | 0;
                  if (d >>> 0 < g >>> 0)
                    rc();
                  k[d + 24 >> 2] = i;
                  h = k[j + 16 >> 2] | 0;
                  do
                    if (h)
                      if (h >>> 0 < g >>> 0)
                        rc();
                      else {
                        k[d + 16 >> 2] = h;
                        k[h + 24 >> 2] = d;
                        break;
                      }
 while (0);
                  h = k[j + 20 >> 2] | 0;
                  if (h)
                    if (h >>> 0 < (k[4664] | 0) >>> 0)
                      rc();
                    else {
                      k[d + 20 >> 2] = h;
                      k[h + 24 >> 2] = d;
                      break;
                    }
                }
 while (0);
              if (l >>> 0 < 16) {
                N = l + q | 0;
                k[j + 4 >> 2] = N | 3;
                N = j + (N + 4) | 0;
                k[N >> 2] = k[N >> 2] | 1;
              } else {
                k[j + 4 >> 2] = q | 3;
                k[j + (q | 4) >> 2] = l | 1;
                k[j + (l + q) >> 2] = l;
                c = k[4662] | 0;
                if (c) {
                  d = k[4665] | 0;
                  f = c >>> 3;
                  h = f << 1;
                  e = 18680 + (h << 2) | 0;
                  g = k[4660] | 0;
                  f = 1 << f;
                  if (g & f) {
                    h = 18680 + (h + 2 << 2) | 0;
                    g = k[h >> 2] | 0;
                    if (g >>> 0 < (k[4664] | 0) >>> 0)
                      rc();
                    else {
                      p = h;
                      o = g;
                    }
                  } else {
                    k[4660] = g | f;
                    p = 18680 + (h + 2 << 2) | 0;
                    o = e;
                  }
                  k[p >> 2] = d;
                  k[o + 12 >> 2] = d;
                  k[d + 8 >> 2] = o;
                  k[d + 12 >> 2] = e;
                }
                k[4662] = l;
                k[4665] = b;
              }
              N = j + 8 | 0;
              return N | 0;
            } else
              z = q;
          } else
            z = q;
        } else if (a >>> 0 <= 4294967231) {
          a = a + 11 | 0;
          p = a & -8;
          j = k[4661] | 0;
          if (j) {
            i = 0 - p | 0;
            a = a >>> 8;
            if (a)
              if (p >>> 0 > 16777215)
                l = 31;
              else {
                q = (a + 1048320 | 0) >>> 16 & 8;
                w = a << q;
                o = (w + 520192 | 0) >>> 16 & 4;
                w = w << o;
                l = (w + 245760 | 0) >>> 16 & 2;
                l = 14 - (o | q | l) + (w << l >>> 15) | 0;
                l = p >>> (l + 7 | 0) & 1 | l << 1;
              }
            else
              l = 0;
            a = k[18944 + (l << 2) >> 2] | 0;
            a: do
              if (!a) {
                g = 0;
                a = 0;
                w = 86;
              } else {
                d = i;
                g = 0;
                c = p << ((l | 0) == 31 ? 0 : 25 - (l >>> 1) | 0);
                b = a;
                a = 0;
                while (1) {
                  f = k[b + 4 >> 2] & -8;
                  i = f - p | 0;
                  if (i >>> 0 < d >>> 0)
                    if ((f | 0) == (p | 0)) {
                      f = b;
                      a = b;
                      w = 90;
                      break a;
                    } else
                      a = b;
                  else
                    i = d;
                  w = k[b + 20 >> 2] | 0;
                  b = k[b + 16 + (c >>> 31 << 2) >> 2] | 0;
                  g = (w | 0) == 0 | (w | 0) == (b | 0) ? g : w;
                  if (!b) {
                    w = 86;
                    break;
                  } else {
                    d = i;
                    c = c << 1;
                  }
                }
              }
 while (0);
            if ((w | 0) == 86) {
              if ((g | 0) == 0 & (a | 0) == 0) {
                a = 2 << l;
                a = j & (a | 0 - a);
                if (!a) {
                  z = p;
                  break;
                }
                a = (a & 0 - a) + -1 | 0;
                n = a >>> 12 & 16;
                a = a >>> n;
                m = a >>> 5 & 8;
                a = a >>> m;
                o = a >>> 2 & 4;
                a = a >>> o;
                q = a >>> 1 & 2;
                a = a >>> q;
                g = a >>> 1 & 1;
                g = k[18944 + ((m | n | o | q | g) + (a >>> g) << 2) >> 2] | 0;
                a = 0;
              }
              if (!g) {
                n = i;
                q = a;
              } else {
                f = g;
                w = 90;
              }
            }
            if ((w | 0) == 90)
              while (1) {
                w = 0;
                q = (k[f + 4 >> 2] & -8) - p | 0;
                g = q >>> 0 < i >>> 0;
                i = g ? q : i;
                a = g ? f : a;
                g = k[f + 16 >> 2] | 0;
                if (g) {
                  f = g;
                  w = 90;
                  continue;
                }
                f = k[f + 20 >> 2] | 0;
                if (!f) {
                  n = i;
                  q = a;
                  break;
                } else
                  w = 90;
              }
            if ((q | 0) != 0 ? n >>> 0 < ((k[4662] | 0) - p | 0) >>> 0 : 0) {
              a = k[4664] | 0;
              if (q >>> 0 < a >>> 0)
                rc();
              m = q + p | 0;
              if (q >>> 0 >= m >>> 0)
                rc();
              i = k[q + 24 >> 2] | 0;
              f = k[q + 12 >> 2] | 0;
              do
                if ((f | 0) == (q | 0)) {
                  g = q + 20 | 0;
                  h = k[g >> 2] | 0;
                  if (!h) {
                    g = q + 16 | 0;
                    h = k[g >> 2] | 0;
                    if (!h) {
                      s = 0;
                      break;
                    }
                  }
                  while (1) {
                    f = h + 20 | 0;
                    e = k[f >> 2] | 0;
                    if (e) {
                      h = e;
                      g = f;
                      continue;
                    }
                    f = h + 16 | 0;
                    e = k[f >> 2] | 0;
                    if (!e)
                      break;
                    else {
                      h = e;
                      g = f;
                    }
                  }
                  if (g >>> 0 < a >>> 0)
                    rc();
                  else {
                    k[g >> 2] = 0;
                    s = h;
                    break;
                  }
                } else {
                  e = k[q + 8 >> 2] | 0;
                  if (e >>> 0 < a >>> 0)
                    rc();
                  h = e + 12 | 0;
                  if ((k[h >> 2] | 0) != (q | 0))
                    rc();
                  g = f + 8 | 0;
                  if ((k[g >> 2] | 0) == (q | 0)) {
                    k[h >> 2] = f;
                    k[g >> 2] = e;
                    s = f;
                    break;
                  } else
                    rc();
                }
 while (0);
              do
                if (i) {
                  h = k[q + 28 >> 2] | 0;
                  g = 18944 + (h << 2) | 0;
                  if ((q | 0) == (k[g >> 2] | 0)) {
                    k[g >> 2] = s;
                    if (!s) {
                      k[4661] = k[4661] & ~(1 << h);
                      break;
                    }
                  } else {
                    if (i >>> 0 < (k[4664] | 0) >>> 0)
                      rc();
                    h = i + 16 | 0;
                    if ((k[h >> 2] | 0) == (q | 0))
                      k[h >> 2] = s;
                    else
                      k[i + 20 >> 2] = s;
                    if (!s)
                      break;
                  }
                  g = k[4664] | 0;
                  if (s >>> 0 < g >>> 0)
                    rc();
                  k[s + 24 >> 2] = i;
                  h = k[q + 16 >> 2] | 0;
                  do
                    if (h)
                      if (h >>> 0 < g >>> 0)
                        rc();
                      else {
                        k[s + 16 >> 2] = h;
                        k[h + 24 >> 2] = s;
                        break;
                      }
 while (0);
                  h = k[q + 20 >> 2] | 0;
                  if (h)
                    if (h >>> 0 < (k[4664] | 0) >>> 0)
                      rc();
                    else {
                      k[s + 20 >> 2] = h;
                      k[h + 24 >> 2] = s;
                      break;
                    }
                }
 while (0);
              b: do
                if (n >>> 0 >= 16) {
                  k[q + 4 >> 2] = p | 3;
                  k[q + (p | 4) >> 2] = n | 1;
                  k[q + (n + p) >> 2] = n;
                  h = n >>> 3;
                  if (n >>> 0 < 256) {
                    g = h << 1;
                    e = 18680 + (g << 2) | 0;
                    f = k[4660] | 0;
                    h = 1 << h;
                    if (f & h) {
                      h = 18680 + (g + 2 << 2) | 0;
                      g = k[h >> 2] | 0;
                      if (g >>> 0 < (k[4664] | 0) >>> 0)
                        rc();
                      else {
                        t = h;
                        u = g;
                      }
                    } else {
                      k[4660] = f | h;
                      t = 18680 + (g + 2 << 2) | 0;
                      u = e;
                    }
                    k[t >> 2] = m;
                    k[u + 12 >> 2] = m;
                    k[q + (p + 8) >> 2] = u;
                    k[q + (p + 12) >> 2] = e;
                    break;
                  }
                  c = n >>> 8;
                  if (c)
                    if (n >>> 0 > 16777215)
                      e = 31;
                    else {
                      M = (c + 1048320 | 0) >>> 16 & 8;
                      N = c << M;
                      L = (N + 520192 | 0) >>> 16 & 4;
                      N = N << L;
                      e = (N + 245760 | 0) >>> 16 & 2;
                      e = 14 - (L | M | e) + (N << e >>> 15) | 0;
                      e = n >>> (e + 7 | 0) & 1 | e << 1;
                    }
                  else
                    e = 0;
                  h = 18944 + (e << 2) | 0;
                  k[q + (p + 28) >> 2] = e;
                  k[q + (p + 20) >> 2] = 0;
                  k[q + (p + 16) >> 2] = 0;
                  g = k[4661] | 0;
                  f = 1 << e;
                  if (!(g & f)) {
                    k[4661] = g | f;
                    k[h >> 2] = m;
                    k[q + (p + 24) >> 2] = h;
                    k[q + (p + 12) >> 2] = m;
                    k[q + (p + 8) >> 2] = m;
                    break;
                  }
                  c = k[h >> 2] | 0;
                  c: do
                    if ((k[c + 4 >> 2] & -8 | 0) != (n | 0)) {
                      g = n << ((e | 0) == 31 ? 0 : 25 - (e >>> 1) | 0);
                      while (1) {
                        b = c + 16 + (g >>> 31 << 2) | 0;
                        h = k[b >> 2] | 0;
                        if (!h)
                          break;
                        if ((k[h + 4 >> 2] & -8 | 0) == (n | 0)) {
                          z = h;
                          break c;
                        } else {
                          g = g << 1;
                          c = h;
                        }
                      }
                      if (b >>> 0 < (k[4664] | 0) >>> 0)
                        rc();
                      else {
                        k[b >> 2] = m;
                        k[q + (p + 24) >> 2] = c;
                        k[q + (p + 12) >> 2] = m;
                        k[q + (p + 8) >> 2] = m;
                        break b;
                      }
                    } else
                      z = c;
 while (0);
                  c = z + 8 | 0;
                  b = k[c >> 2] | 0;
                  N = k[4664] | 0;
                  if (b >>> 0 >= N >>> 0 & z >>> 0 >= N >>> 0) {
                    k[b + 12 >> 2] = m;
                    k[c >> 2] = m;
                    k[q + (p + 8) >> 2] = b;
                    k[q + (p + 12) >> 2] = z;
                    k[q + (p + 24) >> 2] = 0;
                    break;
                  } else
                    rc();
                } else {
                  N = n + p | 0;
                  k[q + 4 >> 2] = N | 3;
                  N = q + (N + 4) | 0;
                  k[N >> 2] = k[N >> 2] | 1;
                }
 while (0);
              N = q + 8 | 0;
              return N | 0;
            } else
              z = p;
          } else
            z = p;
        } else
          z = -1;
 while (0);
      a = k[4662] | 0;
      if (a >>> 0 >= z >>> 0) {
        b = a - z | 0;
        c = k[4665] | 0;
        if (b >>> 0 > 15) {
          k[4665] = c + z;
          k[4662] = b;
          k[c + (z + 4) >> 2] = b | 1;
          k[c + a >> 2] = b;
          k[c + 4 >> 2] = z | 3;
        } else {
          k[4662] = 0;
          k[4665] = 0;
          k[c + 4 >> 2] = a | 3;
          N = c + (a + 4) | 0;
          k[N >> 2] = k[N >> 2] | 1;
        }
        N = c + 8 | 0;
        return N | 0;
      }
      a = k[4663] | 0;
      if (a >>> 0 > z >>> 0) {
        M = a - z | 0;
        k[4663] = M;
        N = k[4666] | 0;
        k[4666] = N + z;
        k[N + (z + 4) >> 2] = M | 1;
        k[N + 4 >> 2] = z | 3;
        N = N + 8 | 0;
        return N | 0;
      }
      do
        if (!(k[4778] | 0)) {
          a = $a(30) | 0;
          if (!(a + -1 & a)) {
            k[4780] = a;
            k[4779] = a;
            k[4781] = -1;
            k[4782] = -1;
            k[4783] = 0;
            k[4771] = 0;
            u = (Hb(0) | 0) & -16 ^ 1431655768;
            k[4778] = u;
            break;
          } else
            rc();
        }
 while (0);
      l = z + 48 | 0;
      c = k[4780] | 0;
      j = z + 47 | 0;
      d = c + j | 0;
      c = 0 - c | 0;
      m = d & c;
      if (m >>> 0 <= z >>> 0) {
        N = 0;
        return N | 0;
      }
      a = k[4770] | 0;
      if ((a | 0) != 0 ? (t = k[4768] | 0, u = t + m | 0, u >>> 0 <= t >>> 0 | u >>> 0 > a >>> 0) : 0) {
        N = 0;
        return N | 0;
      }
      d: do
        if (!(k[4771] & 4)) {
          a = k[4666] | 0;
          e: do
            if (a) {
              g = 19088;
              while (1) {
                i = k[g >> 2] | 0;
                if (i >>> 0 <= a >>> 0 ? (r = g + 4 | 0, (i + (k[r >> 2] | 0) | 0) >>> 0 > a >>> 0) : 0) {
                  f = g;
                  a = r;
                  break;
                }
                g = k[g + 8 >> 2] | 0;
                if (!g) {
                  w = 174;
                  break e;
                }
              }
              i = d - (k[4663] | 0) & c;
              if (i >>> 0 < 2147483647) {
                g = Za(i | 0) | 0;
                u = (g | 0) == ((k[f >> 2] | 0) + (k[a >> 2] | 0) | 0);
                a = u ? i : 0;
                if (u) {
                  if ((g | 0) != (-1 | 0)) {
                    x = g;
                    w = 194;
                    break d;
                  }
                } else
                  w = 184;
              } else
                a = 0;
            } else
              w = 174;
 while (0);
          do
            if ((w | 0) == 174) {
              f = Za(0) | 0;
              if ((f | 0) != (-1 | 0)) {
                a = f;
                i = k[4779] | 0;
                g = i + -1 | 0;
                if (!(g & a))
                  i = m;
                else
                  i = m - a + (g + a & 0 - i) | 0;
                a = k[4768] | 0;
                g = a + i | 0;
                if (i >>> 0 > z >>> 0 & i >>> 0 < 2147483647) {
                  u = k[4770] | 0;
                  if ((u | 0) != 0 ? g >>> 0 <= a >>> 0 | g >>> 0 > u >>> 0 : 0) {
                    a = 0;
                    break;
                  }
                  g = Za(i | 0) | 0;
                  w = (g | 0) == (f | 0);
                  a = w ? i : 0;
                  if (w) {
                    x = f;
                    w = 194;
                    break d;
                  } else
                    w = 184;
                } else
                  a = 0;
              } else
                a = 0;
            }
 while (0);
          f: do
            if ((w | 0) == 184) {
              f = 0 - i | 0;
              do
                if (l >>> 0 > i >>> 0 & (i >>> 0 < 2147483647 & (g | 0) != (-1 | 0)) ? (v = k[4780] | 0, v = j - i + v & 0 - v, v >>> 0 < 2147483647) : 0)
                  if ((Za(v | 0) | 0) == (-1 | 0)) {
                    Za(f | 0) | 0;
                    break f;
                  } else {
                    i = v + i | 0;
                    break;
                  }
 while (0);
              if ((g | 0) != (-1 | 0)) {
                x = g;
                a = i;
                w = 194;
                break d;
              }
            }
 while (0);
          k[4771] = k[4771] | 4;
          w = 191;
        } else {
          a = 0;
          w = 191;
        }
 while (0);
      if ((((w | 0) == 191 ? m >>> 0 < 2147483647 : 0) ? (x = Za(m | 0) | 0, y = Za(0) | 0, x >>> 0 < y >>> 0 & ((x | 0) != (-1 | 0) & (y | 0) != (-1 | 0))) : 0) ? (A = y - x | 0, B = A >>> 0 > (z + 40 | 0) >>> 0, B) : 0) {
        a = B ? A : a;
        w = 194;
      }
      if ((w | 0) == 194) {
        i = (k[4768] | 0) + a | 0;
        k[4768] = i;
        if (i >>> 0 > (k[4769] | 0) >>> 0)
          k[4769] = i;
        n = k[4666] | 0;
        g: do
          if (n) {
            d = 19088;
            do {
              i = k[d >> 2] | 0;
              g = d + 4 | 0;
              f = k[g >> 2] | 0;
              if ((x | 0) == (i + f | 0)) {
                C = i;
                D = g;
                E = f;
                F = d;
                w = 204;
                break;
              }
              d = k[d + 8 >> 2] | 0;
            } while ((d | 0) != 0);
            if (((w | 0) == 204 ? (k[F + 12 >> 2] & 8 | 0) == 0 : 0) ? n >>> 0 < x >>> 0 & n >>> 0 >= C >>> 0 : 0) {
              k[D >> 2] = E + a;
              N = (k[4663] | 0) + a | 0;
              M = n + 8 | 0;
              M = (M & 7 | 0) == 0 ? 0 : 0 - M & 7;
              L = N - M | 0;
              k[4666] = n + M;
              k[4663] = L;
              k[n + (M + 4) >> 2] = L | 1;
              k[n + (N + 4) >> 2] = 40;
              k[4667] = k[4782];
              break;
            }
            i = k[4664] | 0;
            if (x >>> 0 < i >>> 0) {
              k[4664] = x;
              i = x;
            }
            g = x + a | 0;
            d = 19088;
            while (1) {
              if ((k[d >> 2] | 0) == (g | 0)) {
                f = d;
                g = d;
                w = 212;
                break;
              }
              d = k[d + 8 >> 2] | 0;
              if (!d) {
                f = 19088;
                break;
              }
            }
            if ((w | 0) == 212)
              if (!(k[g + 12 >> 2] & 8)) {
                k[f >> 2] = x;
                p = g + 4 | 0;
                k[p >> 2] = (k[p >> 2] | 0) + a;
                p = x + 8 | 0;
                p = (p & 7 | 0) == 0 ? 0 : 0 - p & 7;
                b = x + (a + 8) | 0;
                b = (b & 7 | 0) == 0 ? 0 : 0 - b & 7;
                h = x + (b + a) | 0;
                o = p + z | 0;
                q = x + o | 0;
                m = h - (x + p) - z | 0;
                k[x + (p + 4) >> 2] = z | 3;
                h: do
                  if ((h | 0) != (n | 0)) {
                    if ((h | 0) == (k[4665] | 0)) {
                      N = (k[4662] | 0) + m | 0;
                      k[4662] = N;
                      k[4665] = q;
                      k[x + (o + 4) >> 2] = N | 1;
                      k[x + (N + o) >> 2] = N;
                      break;
                    }
                    l = a + 4 | 0;
                    g = k[x + (l + b) >> 2] | 0;
                    if ((g & 3 | 0) == 1) {
                      j = g & -8;
                      d = g >>> 3;
                      i: do
                        if (g >>> 0 >= 256) {
                          c = k[x + ((b | 24) + a) >> 2] | 0;
                          f = k[x + (a + 12 + b) >> 2] | 0;
                          do
                            if ((f | 0) == (h | 0)) {
                              e = b | 16;
                              f = x + (l + e) | 0;
                              g = k[f >> 2] | 0;
                              if (!g) {
                                f = x + (e + a) | 0;
                                g = k[f >> 2] | 0;
                                if (!g) {
                                  K = 0;
                                  break;
                                }
                              }
                              while (1) {
                                e = g + 20 | 0;
                                d = k[e >> 2] | 0;
                                if (d) {
                                  g = d;
                                  f = e;
                                  continue;
                                }
                                e = g + 16 | 0;
                                d = k[e >> 2] | 0;
                                if (!d)
                                  break;
                                else {
                                  g = d;
                                  f = e;
                                }
                              }
                              if (f >>> 0 < i >>> 0)
                                rc();
                              else {
                                k[f >> 2] = 0;
                                K = g;
                                break;
                              }
                            } else {
                              e = k[x + ((b | 8) + a) >> 2] | 0;
                              if (e >>> 0 < i >>> 0)
                                rc();
                              i = e + 12 | 0;
                              if ((k[i >> 2] | 0) != (h | 0))
                                rc();
                              g = f + 8 | 0;
                              if ((k[g >> 2] | 0) == (h | 0)) {
                                k[i >> 2] = f;
                                k[g >> 2] = e;
                                K = f;
                                break;
                              } else
                                rc();
                            }
 while (0);
                          if (!c)
                            break;
                          i = k[x + (a + 28 + b) >> 2] | 0;
                          g = 18944 + (i << 2) | 0;
                          do
                            if ((h | 0) != (k[g >> 2] | 0)) {
                              if (c >>> 0 < (k[4664] | 0) >>> 0)
                                rc();
                              i = c + 16 | 0;
                              if ((k[i >> 2] | 0) == (h | 0))
                                k[i >> 2] = K;
                              else
                                k[c + 20 >> 2] = K;
                              if (!K)
                                break i;
                            } else {
                              k[g >> 2] = K;
                              if (K)
                                break;
                              k[4661] = k[4661] & ~(1 << i);
                              break i;
                            }
 while (0);
                          g = k[4664] | 0;
                          if (K >>> 0 < g >>> 0)
                            rc();
                          k[K + 24 >> 2] = c;
                          i = b | 16;
                          h = k[x + (i + a) >> 2] | 0;
                          do
                            if (h)
                              if (h >>> 0 < g >>> 0)
                                rc();
                              else {
                                k[K + 16 >> 2] = h;
                                k[h + 24 >> 2] = K;
                                break;
                              }
 while (0);
                          h = k[x + (l + i) >> 2] | 0;
                          if (!h)
                            break;
                          if (h >>> 0 < (k[4664] | 0) >>> 0)
                            rc();
                          else {
                            k[K + 20 >> 2] = h;
                            k[h + 24 >> 2] = K;
                            break;
                          }
                        } else {
                          f = k[x + ((b | 8) + a) >> 2] | 0;
                          e = k[x + (a + 12 + b) >> 2] | 0;
                          g = 18680 + (d << 1 << 2) | 0;
                          do
                            if ((f | 0) != (g | 0)) {
                              if (f >>> 0 < i >>> 0)
                                rc();
                              if ((k[f + 12 >> 2] | 0) == (h | 0))
                                break;
                              rc();
                            }
 while (0);
                          if ((e | 0) == (f | 0)) {
                            k[4660] = k[4660] & ~(1 << d);
                            break;
                          }
                          do
                            if ((e | 0) == (g | 0))
                              G = e + 8 | 0;
                            else {
                              if (e >>> 0 < i >>> 0)
                                rc();
                              i = e + 8 | 0;
                              if ((k[i >> 2] | 0) == (h | 0)) {
                                G = i;
                                break;
                              }
                              rc();
                            }
 while (0);
                          k[f + 12 >> 2] = e;
                          k[G >> 2] = f;
                        }
 while (0);
                      h = x + ((j | b) + a) | 0;
                      i = j + m | 0;
                    } else
                      i = m;
                    h = h + 4 | 0;
                    k[h >> 2] = k[h >> 2] & -2;
                    k[x + (o + 4) >> 2] = i | 1;
                    k[x + (i + o) >> 2] = i;
                    h = i >>> 3;
                    if (i >>> 0 < 256) {
                      g = h << 1;
                      e = 18680 + (g << 2) | 0;
                      f = k[4660] | 0;
                      h = 1 << h;
                      do
                        if (!(f & h)) {
                          k[4660] = f | h;
                          L = 18680 + (g + 2 << 2) | 0;
                          M = e;
                        } else {
                          h = 18680 + (g + 2 << 2) | 0;
                          g = k[h >> 2] | 0;
                          if (g >>> 0 >= (k[4664] | 0) >>> 0) {
                            L = h;
                            M = g;
                            break;
                          }
                          rc();
                        }
 while (0);
                      k[L >> 2] = q;
                      k[M + 12 >> 2] = q;
                      k[x + (o + 8) >> 2] = M;
                      k[x + (o + 12) >> 2] = e;
                      break;
                    }
                    c = i >>> 8;
                    do
                      if (!c)
                        e = 0;
                      else {
                        if (i >>> 0 > 16777215) {
                          e = 31;
                          break;
                        }
                        L = (c + 1048320 | 0) >>> 16 & 8;
                        M = c << L;
                        K = (M + 520192 | 0) >>> 16 & 4;
                        M = M << K;
                        e = (M + 245760 | 0) >>> 16 & 2;
                        e = 14 - (K | L | e) + (M << e >>> 15) | 0;
                        e = i >>> (e + 7 | 0) & 1 | e << 1;
                      }
 while (0);
                    h = 18944 + (e << 2) | 0;
                    k[x + (o + 28) >> 2] = e;
                    k[x + (o + 20) >> 2] = 0;
                    k[x + (o + 16) >> 2] = 0;
                    g = k[4661] | 0;
                    f = 1 << e;
                    if (!(g & f)) {
                      k[4661] = g | f;
                      k[h >> 2] = q;
                      k[x + (o + 24) >> 2] = h;
                      k[x + (o + 12) >> 2] = q;
                      k[x + (o + 8) >> 2] = q;
                      break;
                    }
                    c = k[h >> 2] | 0;
                    j: do
                      if ((k[c + 4 >> 2] & -8 | 0) != (i | 0)) {
                        g = i << ((e | 0) == 31 ? 0 : 25 - (e >>> 1) | 0);
                        while (1) {
                          b = c + 16 + (g >>> 31 << 2) | 0;
                          h = k[b >> 2] | 0;
                          if (!h)
                            break;
                          if ((k[h + 4 >> 2] & -8 | 0) == (i | 0)) {
                            N = h;
                            break j;
                          } else {
                            g = g << 1;
                            c = h;
                          }
                        }
                        if (b >>> 0 < (k[4664] | 0) >>> 0)
                          rc();
                        else {
                          k[b >> 2] = q;
                          k[x + (o + 24) >> 2] = c;
                          k[x + (o + 12) >> 2] = q;
                          k[x + (o + 8) >> 2] = q;
                          break h;
                        }
                      } else
                        N = c;
 while (0);
                    c = N + 8 | 0;
                    b = k[c >> 2] | 0;
                    M = k[4664] | 0;
                    if (b >>> 0 >= M >>> 0 & N >>> 0 >= M >>> 0) {
                      k[b + 12 >> 2] = q;
                      k[c >> 2] = q;
                      k[x + (o + 8) >> 2] = b;
                      k[x + (o + 12) >> 2] = N;
                      k[x + (o + 24) >> 2] = 0;
                      break;
                    } else
                      rc();
                  } else {
                    N = (k[4663] | 0) + m | 0;
                    k[4663] = N;
                    k[4666] = q;
                    k[x + (o + 4) >> 2] = N | 1;
                  }
 while (0);
                N = x + (p | 8) | 0;
                return N | 0;
              } else
                f = 19088;
            while (1) {
              g = k[f >> 2] | 0;
              if (g >>> 0 <= n >>> 0 ? (h = k[f + 4 >> 2] | 0, e = g + h | 0, e >>> 0 > n >>> 0) : 0)
                break;
              f = k[f + 8 >> 2] | 0;
            }
            i = g + (h + -39) | 0;
            g = g + (h + -47 + ((i & 7 | 0) == 0 ? 0 : 0 - i & 7)) | 0;
            i = n + 16 | 0;
            g = g >>> 0 < i >>> 0 ? n : g;
            h = g + 8 | 0;
            f = x + 8 | 0;
            f = (f & 7 | 0) == 0 ? 0 : 0 - f & 7;
            N = a + -40 - f | 0;
            k[4666] = x + f;
            k[4663] = N;
            k[x + (f + 4) >> 2] = N | 1;
            k[x + (a + -36) >> 2] = 40;
            k[4667] = k[4782];
            f = g + 4 | 0;
            k[f >> 2] = 27;
            k[h >> 2] = k[4772];
            k[h + 4 >> 2] = k[4773];
            k[h + 8 >> 2] = k[4774];
            k[h + 12 >> 2] = k[4775];
            k[4772] = x;
            k[4773] = a;
            k[4775] = 0;
            k[4774] = h;
            h = g + 28 | 0;
            k[h >> 2] = 7;
            if ((g + 32 | 0) >>> 0 < e >>> 0)
              do {
                N = h;
                h = h + 4 | 0;
                k[h >> 2] = 7;
              } while ((N + 8 | 0) >>> 0 < e >>> 0);
            if ((g | 0) != (n | 0)) {
              e = g - n | 0;
              k[f >> 2] = k[f >> 2] & -2;
              k[n + 4 >> 2] = e | 1;
              k[g >> 2] = e;
              h = e >>> 3;
              if (e >>> 0 < 256) {
                g = h << 1;
                e = 18680 + (g << 2) | 0;
                f = k[4660] | 0;
                h = 1 << h;
                if (f & h) {
                  c = 18680 + (g + 2 << 2) | 0;
                  b = k[c >> 2] | 0;
                  if (b >>> 0 < (k[4664] | 0) >>> 0)
                    rc();
                  else {
                    H = c;
                    I = b;
                  }
                } else {
                  k[4660] = f | h;
                  H = 18680 + (g + 2 << 2) | 0;
                  I = e;
                }
                k[H >> 2] = n;
                k[I + 12 >> 2] = n;
                k[n + 8 >> 2] = I;
                k[n + 12 >> 2] = e;
                break;
              }
              c = e >>> 8;
              if (c)
                if (e >>> 0 > 16777215)
                  g = 31;
                else {
                  M = (c + 1048320 | 0) >>> 16 & 8;
                  N = c << M;
                  L = (N + 520192 | 0) >>> 16 & 4;
                  N = N << L;
                  g = (N + 245760 | 0) >>> 16 & 2;
                  g = 14 - (L | M | g) + (N << g >>> 15) | 0;
                  g = e >>> (g + 7 | 0) & 1 | g << 1;
                }
              else
                g = 0;
              h = 18944 + (g << 2) | 0;
              k[n + 28 >> 2] = g;
              k[n + 20 >> 2] = 0;
              k[i >> 2] = 0;
              c = k[4661] | 0;
              b = 1 << g;
              if (!(c & b)) {
                k[4661] = c | b;
                k[h >> 2] = n;
                k[n + 24 >> 2] = h;
                k[n + 12 >> 2] = n;
                k[n + 8 >> 2] = n;
                break;
              }
              c = k[h >> 2] | 0;
              k: do
                if ((k[c + 4 >> 2] & -8 | 0) != (e | 0)) {
                  h = e << ((g | 0) == 31 ? 0 : 25 - (g >>> 1) | 0);
                  while (1) {
                    b = c + 16 + (h >>> 31 << 2) | 0;
                    d = k[b >> 2] | 0;
                    if (!d)
                      break;
                    if ((k[d + 4 >> 2] & -8 | 0) == (e | 0)) {
                      J = d;
                      break k;
                    } else {
                      h = h << 1;
                      c = d;
                    }
                  }
                  if (b >>> 0 < (k[4664] | 0) >>> 0)
                    rc();
                  else {
                    k[b >> 2] = n;
                    k[n + 24 >> 2] = c;
                    k[n + 12 >> 2] = n;
                    k[n + 8 >> 2] = n;
                    break g;
                  }
                } else
                  J = c;
 while (0);
              c = J + 8 | 0;
              b = k[c >> 2] | 0;
              N = k[4664] | 0;
              if (b >>> 0 >= N >>> 0 & J >>> 0 >= N >>> 0) {
                k[b + 12 >> 2] = n;
                k[c >> 2] = n;
                k[n + 8 >> 2] = b;
                k[n + 12 >> 2] = J;
                k[n + 24 >> 2] = 0;
                break;
              } else
                rc();
            }
          } else {
            N = k[4664] | 0;
            if ((N | 0) == 0 | x >>> 0 < N >>> 0)
              k[4664] = x;
            k[4772] = x;
            k[4773] = a;
            k[4775] = 0;
            k[4669] = k[4778];
            k[4668] = -1;
            c = 0;
            do {
              N = c << 1;
              M = 18680 + (N << 2) | 0;
              k[18680 + (N + 3 << 2) >> 2] = M;
              k[18680 + (N + 2 << 2) >> 2] = M;
              c = c + 1 | 0;
            } while ((c | 0) != 32);
            N = x + 8 | 0;
            N = (N & 7 | 0) == 0 ? 0 : 0 - N & 7;
            M = a + -40 - N | 0;
            k[4666] = x + N;
            k[4663] = M;
            k[x + (N + 4) >> 2] = M | 1;
            k[x + (a + -36) >> 2] = 40;
            k[4667] = k[4782];
          }
 while (0);
        b = k[4663] | 0;
        if (b >>> 0 > z >>> 0) {
          M = b - z | 0;
          k[4663] = M;
          N = k[4666] | 0;
          k[4666] = N + z;
          k[N + (z + 4) >> 2] = M | 1;
          k[N + 4 >> 2] = z | 3;
          N = N + 8 | 0;
          return N | 0;
        }
      }
      N = Yc() | 0;
      k[N >> 2] = 12;
      N = 0;
      return N | 0;
    }
    function jr(a) {
      a = a | 0;
      var b = 0,
          c = 0,
          d = 0,
          e = 0,
          f = 0,
          g = 0,
          h = 0,
          i = 0,
          j = 0,
          l = 0,
          m = 0,
          n = 0,
          o = 0,
          p = 0,
          q = 0,
          r = 0,
          s = 0,
          t = 0,
          u = 0;
      if (!a)
        return ;
      f = a + -8 | 0;
      g = k[4664] | 0;
      if (f >>> 0 < g >>> 0)
        rc();
      e = k[a + -4 >> 2] | 0;
      d = e & 3;
      if ((d | 0) == 1)
        rc();
      o = e & -8;
      q = a + (o + -8) | 0;
      do
        if (!(e & 1)) {
          f = k[f >> 2] | 0;
          if (!d)
            return ;
          h = -8 - f | 0;
          l = a + h | 0;
          m = f + o | 0;
          if (l >>> 0 < g >>> 0)
            rc();
          if ((l | 0) == (k[4665] | 0)) {
            f = a + (o + -4) | 0;
            e = k[f >> 2] | 0;
            if ((e & 3 | 0) != 3) {
              u = l;
              j = m;
              break;
            }
            k[4662] = m;
            k[f >> 2] = e & -2;
            k[a + (h + 4) >> 2] = m | 1;
            k[q >> 2] = m;
            return ;
          }
          c = f >>> 3;
          if (f >>> 0 < 256) {
            d = k[a + (h + 8) >> 2] | 0;
            e = k[a + (h + 12) >> 2] | 0;
            f = 18680 + (c << 1 << 2) | 0;
            if ((d | 0) != (f | 0)) {
              if (d >>> 0 < g >>> 0)
                rc();
              if ((k[d + 12 >> 2] | 0) != (l | 0))
                rc();
            }
            if ((e | 0) == (d | 0)) {
              k[4660] = k[4660] & ~(1 << c);
              u = l;
              j = m;
              break;
            }
            if ((e | 0) != (f | 0)) {
              if (e >>> 0 < g >>> 0)
                rc();
              f = e + 8 | 0;
              if ((k[f >> 2] | 0) == (l | 0))
                b = f;
              else
                rc();
            } else
              b = e + 8 | 0;
            k[d + 12 >> 2] = e;
            k[b >> 2] = d;
            u = l;
            j = m;
            break;
          }
          b = k[a + (h + 24) >> 2] | 0;
          d = k[a + (h + 12) >> 2] | 0;
          do
            if ((d | 0) == (l | 0)) {
              e = a + (h + 20) | 0;
              f = k[e >> 2] | 0;
              if (!f) {
                e = a + (h + 16) | 0;
                f = k[e >> 2] | 0;
                if (!f) {
                  i = 0;
                  break;
                }
              }
              while (1) {
                d = f + 20 | 0;
                c = k[d >> 2] | 0;
                if (c) {
                  f = c;
                  e = d;
                  continue;
                }
                d = f + 16 | 0;
                c = k[d >> 2] | 0;
                if (!c)
                  break;
                else {
                  f = c;
                  e = d;
                }
              }
              if (e >>> 0 < g >>> 0)
                rc();
              else {
                k[e >> 2] = 0;
                i = f;
                break;
              }
            } else {
              c = k[a + (h + 8) >> 2] | 0;
              if (c >>> 0 < g >>> 0)
                rc();
              f = c + 12 | 0;
              if ((k[f >> 2] | 0) != (l | 0))
                rc();
              e = d + 8 | 0;
              if ((k[e >> 2] | 0) == (l | 0)) {
                k[f >> 2] = d;
                k[e >> 2] = c;
                i = d;
                break;
              } else
                rc();
            }
 while (0);
          if (b) {
            f = k[a + (h + 28) >> 2] | 0;
            e = 18944 + (f << 2) | 0;
            if ((l | 0) == (k[e >> 2] | 0)) {
              k[e >> 2] = i;
              if (!i) {
                k[4661] = k[4661] & ~(1 << f);
                u = l;
                j = m;
                break;
              }
            } else {
              if (b >>> 0 < (k[4664] | 0) >>> 0)
                rc();
              f = b + 16 | 0;
              if ((k[f >> 2] | 0) == (l | 0))
                k[f >> 2] = i;
              else
                k[b + 20 >> 2] = i;
              if (!i) {
                u = l;
                j = m;
                break;
              }
            }
            e = k[4664] | 0;
            if (i >>> 0 < e >>> 0)
              rc();
            k[i + 24 >> 2] = b;
            f = k[a + (h + 16) >> 2] | 0;
            do
              if (f)
                if (f >>> 0 < e >>> 0)
                  rc();
                else {
                  k[i + 16 >> 2] = f;
                  k[f + 24 >> 2] = i;
                  break;
                }
 while (0);
            f = k[a + (h + 20) >> 2] | 0;
            if (f)
              if (f >>> 0 < (k[4664] | 0) >>> 0)
                rc();
              else {
                k[i + 20 >> 2] = f;
                k[f + 24 >> 2] = i;
                u = l;
                j = m;
                break;
              }
            else {
              u = l;
              j = m;
            }
          } else {
            u = l;
            j = m;
          }
        } else {
          u = f;
          j = o;
        }
 while (0);
      if (u >>> 0 >= q >>> 0)
        rc();
      f = a + (o + -4) | 0;
      e = k[f >> 2] | 0;
      if (!(e & 1))
        rc();
      if (!(e & 2)) {
        if ((q | 0) == (k[4666] | 0)) {
          t = (k[4663] | 0) + j | 0;
          k[4663] = t;
          k[4666] = u;
          k[u + 4 >> 2] = t | 1;
          if ((u | 0) != (k[4665] | 0))
            return ;
          k[4665] = 0;
          k[4662] = 0;
          return ;
        }
        if ((q | 0) == (k[4665] | 0)) {
          t = (k[4662] | 0) + j | 0;
          k[4662] = t;
          k[4665] = u;
          k[u + 4 >> 2] = t | 1;
          k[u + t >> 2] = t;
          return ;
        }
        g = (e & -8) + j | 0;
        b = e >>> 3;
        do
          if (e >>> 0 >= 256) {
            b = k[a + (o + 16) >> 2] | 0;
            f = k[a + (o | 4) >> 2] | 0;
            do
              if ((f | 0) == (q | 0)) {
                e = a + (o + 12) | 0;
                f = k[e >> 2] | 0;
                if (!f) {
                  e = a + (o + 8) | 0;
                  f = k[e >> 2] | 0;
                  if (!f) {
                    p = 0;
                    break;
                  }
                }
                while (1) {
                  d = f + 20 | 0;
                  c = k[d >> 2] | 0;
                  if (c) {
                    f = c;
                    e = d;
                    continue;
                  }
                  d = f + 16 | 0;
                  c = k[d >> 2] | 0;
                  if (!c)
                    break;
                  else {
                    f = c;
                    e = d;
                  }
                }
                if (e >>> 0 < (k[4664] | 0) >>> 0)
                  rc();
                else {
                  k[e >> 2] = 0;
                  p = f;
                  break;
                }
              } else {
                e = k[a + o >> 2] | 0;
                if (e >>> 0 < (k[4664] | 0) >>> 0)
                  rc();
                d = e + 12 | 0;
                if ((k[d >> 2] | 0) != (q | 0))
                  rc();
                c = f + 8 | 0;
                if ((k[c >> 2] | 0) == (q | 0)) {
                  k[d >> 2] = f;
                  k[c >> 2] = e;
                  p = f;
                  break;
                } else
                  rc();
              }
 while (0);
            if (b) {
              f = k[a + (o + 20) >> 2] | 0;
              e = 18944 + (f << 2) | 0;
              if ((q | 0) == (k[e >> 2] | 0)) {
                k[e >> 2] = p;
                if (!p) {
                  k[4661] = k[4661] & ~(1 << f);
                  break;
                }
              } else {
                if (b >>> 0 < (k[4664] | 0) >>> 0)
                  rc();
                f = b + 16 | 0;
                if ((k[f >> 2] | 0) == (q | 0))
                  k[f >> 2] = p;
                else
                  k[b + 20 >> 2] = p;
                if (!p)
                  break;
              }
              f = k[4664] | 0;
              if (p >>> 0 < f >>> 0)
                rc();
              k[p + 24 >> 2] = b;
              e = k[a + (o + 8) >> 2] | 0;
              do
                if (e)
                  if (e >>> 0 < f >>> 0)
                    rc();
                  else {
                    k[p + 16 >> 2] = e;
                    k[e + 24 >> 2] = p;
                    break;
                  }
 while (0);
              c = k[a + (o + 12) >> 2] | 0;
              if (c)
                if (c >>> 0 < (k[4664] | 0) >>> 0)
                  rc();
                else {
                  k[p + 20 >> 2] = c;
                  k[c + 24 >> 2] = p;
                  break;
                }
            }
          } else {
            c = k[a + o >> 2] | 0;
            d = k[a + (o | 4) >> 2] | 0;
            f = 18680 + (b << 1 << 2) | 0;
            if ((c | 0) != (f | 0)) {
              if (c >>> 0 < (k[4664] | 0) >>> 0)
                rc();
              if ((k[c + 12 >> 2] | 0) != (q | 0))
                rc();
            }
            if ((d | 0) == (c | 0)) {
              k[4660] = k[4660] & ~(1 << b);
              break;
            }
            if ((d | 0) != (f | 0)) {
              if (d >>> 0 < (k[4664] | 0) >>> 0)
                rc();
              e = d + 8 | 0;
              if ((k[e >> 2] | 0) == (q | 0))
                n = e;
              else
                rc();
            } else
              n = d + 8 | 0;
            k[c + 12 >> 2] = d;
            k[n >> 2] = c;
          }
 while (0);
        k[u + 4 >> 2] = g | 1;
        k[u + g >> 2] = g;
        if ((u | 0) == (k[4665] | 0)) {
          k[4662] = g;
          return ;
        } else
          f = g;
      } else {
        k[f >> 2] = e & -2;
        k[u + 4 >> 2] = j | 1;
        k[u + j >> 2] = j;
        f = j;
      }
      e = f >>> 3;
      if (f >>> 0 < 256) {
        d = e << 1;
        f = 18680 + (d << 2) | 0;
        b = k[4660] | 0;
        c = 1 << e;
        if (b & c) {
          c = 18680 + (d + 2 << 2) | 0;
          b = k[c >> 2] | 0;
          if (b >>> 0 < (k[4664] | 0) >>> 0)
            rc();
          else {
            r = c;
            s = b;
          }
        } else {
          k[4660] = b | c;
          r = 18680 + (d + 2 << 2) | 0;
          s = f;
        }
        k[r >> 2] = u;
        k[s + 12 >> 2] = u;
        k[u + 8 >> 2] = s;
        k[u + 12 >> 2] = f;
        return ;
      }
      b = f >>> 8;
      if (b)
        if (f >>> 0 > 16777215)
          e = 31;
        else {
          r = (b + 1048320 | 0) >>> 16 & 8;
          s = b << r;
          q = (s + 520192 | 0) >>> 16 & 4;
          s = s << q;
          e = (s + 245760 | 0) >>> 16 & 2;
          e = 14 - (q | r | e) + (s << e >>> 15) | 0;
          e = f >>> (e + 7 | 0) & 1 | e << 1;
        }
      else
        e = 0;
      c = 18944 + (e << 2) | 0;
      k[u + 28 >> 2] = e;
      k[u + 20 >> 2] = 0;
      k[u + 16 >> 2] = 0;
      b = k[4661] | 0;
      d = 1 << e;
      a: do
        if (b & d) {
          c = k[c >> 2] | 0;
          b: do
            if ((k[c + 4 >> 2] & -8 | 0) != (f | 0)) {
              e = f << ((e | 0) == 31 ? 0 : 25 - (e >>> 1) | 0);
              while (1) {
                b = c + 16 + (e >>> 31 << 2) | 0;
                d = k[b >> 2] | 0;
                if (!d)
                  break;
                if ((k[d + 4 >> 2] & -8 | 0) == (f | 0)) {
                  t = d;
                  break b;
                } else {
                  e = e << 1;
                  c = d;
                }
              }
              if (b >>> 0 < (k[4664] | 0) >>> 0)
                rc();
              else {
                k[b >> 2] = u;
                k[u + 24 >> 2] = c;
                k[u + 12 >> 2] = u;
                k[u + 8 >> 2] = u;
                break a;
              }
            } else
              t = c;
 while (0);
          b = t + 8 | 0;
          c = k[b >> 2] | 0;
          s = k[4664] | 0;
          if (c >>> 0 >= s >>> 0 & t >>> 0 >= s >>> 0) {
            k[c + 12 >> 2] = u;
            k[b >> 2] = u;
            k[u + 8 >> 2] = c;
            k[u + 12 >> 2] = t;
            k[u + 24 >> 2] = 0;
            break;
          } else
            rc();
        } else {
          k[4661] = b | d;
          k[c >> 2] = u;
          k[u + 24 >> 2] = c;
          k[u + 12 >> 2] = u;
          k[u + 8 >> 2] = u;
        }
 while (0);
      u = (k[4668] | 0) + -1 | 0;
      k[4668] = u;
      if (!u)
        b = 19096;
      else
        return ;
      while (1) {
        b = k[b >> 2] | 0;
        if (!b)
          break;
        else
          b = b + 8 | 0;
      }
      k[4668] = -1;
      return ;
    }
    function kr(a, b) {
      a = a | 0;
      b = b | 0;
      var c = 0,
          d = 0;
      if (!a) {
        a = ir(b) | 0;
        return a | 0;
      }
      if (b >>> 0 > 4294967231) {
        a = Yc() | 0;
        k[a >> 2] = 12;
        a = 0;
        return a | 0;
      }
      c = lr(a + -8 | 0, b >>> 0 < 11 ? 16 : b + 11 & -8) | 0;
      if (c) {
        a = c + 8 | 0;
        return a | 0;
      }
      c = ir(b) | 0;
      if (!c) {
        a = 0;
        return a | 0;
      }
      d = k[a + -4 >> 2] | 0;
      d = (d & -8) - ((d & 3 | 0) == 0 ? 8 : 4) | 0;
      rr(c | 0, a | 0, (d >>> 0 < b >>> 0 ? d : b) | 0) | 0;
      jr(a);
      a = c;
      return a | 0;
    }
    function lr(a, b) {
      a = a | 0;
      b = b | 0;
      var c = 0,
          d = 0,
          e = 0,
          f = 0,
          g = 0,
          h = 0,
          i = 0,
          j = 0,
          l = 0,
          m = 0,
          n = 0,
          o = 0,
          p = 0;
      o = a + 4 | 0;
      p = k[o >> 2] | 0;
      i = p & -8;
      l = a + i | 0;
      h = k[4664] | 0;
      d = p & 3;
      if (!((d | 0) != 1 & a >>> 0 >= h >>> 0 & a >>> 0 < l >>> 0))
        rc();
      c = a + (i | 4) | 0;
      f = k[c >> 2] | 0;
      if (!(f & 1))
        rc();
      if (!d) {
        if (b >>> 0 < 256) {
          a = 0;
          return a | 0;
        }
        if (i >>> 0 >= (b + 4 | 0) >>> 0 ? (i - b | 0) >>> 0 <= k[4780] << 1 >>> 0 : 0)
          return a | 0;
        a = 0;
        return a | 0;
      }
      if (i >>> 0 >= b >>> 0) {
        d = i - b | 0;
        if (d >>> 0 <= 15)
          return a | 0;
        k[o >> 2] = p & 1 | b | 2;
        k[a + (b + 4) >> 2] = d | 3;
        k[c >> 2] = k[c >> 2] | 1;
        mr(a + b | 0, d);
        return a | 0;
      }
      if ((l | 0) == (k[4666] | 0)) {
        d = (k[4663] | 0) + i | 0;
        if (d >>> 0 <= b >>> 0) {
          a = 0;
          return a | 0;
        }
        n = d - b | 0;
        k[o >> 2] = p & 1 | b | 2;
        k[a + (b + 4) >> 2] = n | 1;
        k[4666] = a + b;
        k[4663] = n;
        return a | 0;
      }
      if ((l | 0) == (k[4665] | 0)) {
        d = (k[4662] | 0) + i | 0;
        if (d >>> 0 < b >>> 0) {
          a = 0;
          return a | 0;
        }
        c = d - b | 0;
        if (c >>> 0 > 15) {
          k[o >> 2] = p & 1 | b | 2;
          k[a + (b + 4) >> 2] = c | 1;
          k[a + d >> 2] = c;
          d = a + (d + 4) | 0;
          k[d >> 2] = k[d >> 2] & -2;
          d = a + b | 0;
        } else {
          k[o >> 2] = p & 1 | d | 2;
          d = a + (d + 4) | 0;
          k[d >> 2] = k[d >> 2] | 1;
          d = 0;
          c = 0;
        }
        k[4662] = c;
        k[4665] = d;
        return a | 0;
      }
      if (f & 2) {
        a = 0;
        return a | 0;
      }
      m = (f & -8) + i | 0;
      if (m >>> 0 < b >>> 0) {
        a = 0;
        return a | 0;
      }
      n = m - b | 0;
      e = f >>> 3;
      do
        if (f >>> 0 >= 256) {
          g = k[a + (i + 24) >> 2] | 0;
          f = k[a + (i + 12) >> 2] | 0;
          do
            if ((f | 0) == (l | 0)) {
              c = a + (i + 20) | 0;
              d = k[c >> 2] | 0;
              if (!d) {
                c = a + (i + 16) | 0;
                d = k[c >> 2] | 0;
                if (!d) {
                  j = 0;
                  break;
                }
              }
              while (1) {
                e = d + 20 | 0;
                f = k[e >> 2] | 0;
                if (f) {
                  d = f;
                  c = e;
                  continue;
                }
                f = d + 16 | 0;
                e = k[f >> 2] | 0;
                if (!e)
                  break;
                else {
                  d = e;
                  c = f;
                }
              }
              if (c >>> 0 < h >>> 0)
                rc();
              else {
                k[c >> 2] = 0;
                j = d;
                break;
              }
            } else {
              e = k[a + (i + 8) >> 2] | 0;
              if (e >>> 0 < h >>> 0)
                rc();
              d = e + 12 | 0;
              if ((k[d >> 2] | 0) != (l | 0))
                rc();
              c = f + 8 | 0;
              if ((k[c >> 2] | 0) == (l | 0)) {
                k[d >> 2] = f;
                k[c >> 2] = e;
                j = f;
                break;
              } else
                rc();
            }
 while (0);
          if (g) {
            d = k[a + (i + 28) >> 2] | 0;
            c = 18944 + (d << 2) | 0;
            if ((l | 0) == (k[c >> 2] | 0)) {
              k[c >> 2] = j;
              if (!j) {
                k[4661] = k[4661] & ~(1 << d);
                break;
              }
            } else {
              if (g >>> 0 < (k[4664] | 0) >>> 0)
                rc();
              d = g + 16 | 0;
              if ((k[d >> 2] | 0) == (l | 0))
                k[d >> 2] = j;
              else
                k[g + 20 >> 2] = j;
              if (!j)
                break;
            }
            c = k[4664] | 0;
            if (j >>> 0 < c >>> 0)
              rc();
            k[j + 24 >> 2] = g;
            d = k[a + (i + 16) >> 2] | 0;
            do
              if (d)
                if (d >>> 0 < c >>> 0)
                  rc();
                else {
                  k[j + 16 >> 2] = d;
                  k[d + 24 >> 2] = j;
                  break;
                }
 while (0);
            d = k[a + (i + 20) >> 2] | 0;
            if (d)
              if (d >>> 0 < (k[4664] | 0) >>> 0)
                rc();
              else {
                k[j + 20 >> 2] = d;
                k[d + 24 >> 2] = j;
                break;
              }
          }
        } else {
          f = k[a + (i + 8) >> 2] | 0;
          c = k[a + (i + 12) >> 2] | 0;
          d = 18680 + (e << 1 << 2) | 0;
          if ((f | 0) != (d | 0)) {
            if (f >>> 0 < h >>> 0)
              rc();
            if ((k[f + 12 >> 2] | 0) != (l | 0))
              rc();
          }
          if ((c | 0) == (f | 0)) {
            k[4660] = k[4660] & ~(1 << e);
            break;
          }
          if ((c | 0) != (d | 0)) {
            if (c >>> 0 < h >>> 0)
              rc();
            d = c + 8 | 0;
            if ((k[d >> 2] | 0) == (l | 0))
              g = d;
            else
              rc();
          } else
            g = c + 8 | 0;
          k[f + 12 >> 2] = c;
          k[g >> 2] = f;
        }
 while (0);
      if (n >>> 0 < 16) {
        k[o >> 2] = m | p & 1 | 2;
        b = a + (m | 4) | 0;
        k[b >> 2] = k[b >> 2] | 1;
        return a | 0;
      } else {
        k[o >> 2] = p & 1 | b | 2;
        k[a + (b + 4) >> 2] = n | 3;
        p = a + (m | 4) | 0;
        k[p >> 2] = k[p >> 2] | 1;
        mr(a + b | 0, n);
        return a | 0;
      }
      return 0;
    }
    function mr(a, b) {
      a = a | 0;
      b = b | 0;
      var c = 0,
          d = 0,
          e = 0,
          f = 0,
          g = 0,
          h = 0,
          i = 0,
          j = 0,
          l = 0,
          m = 0,
          n = 0,
          o = 0,
          p = 0,
          q = 0,
          r = 0,
          s = 0,
          t = 0;
      q = a + b | 0;
      g = k[a + 4 >> 2] | 0;
      do
        if (!(g & 1)) {
          i = k[a >> 2] | 0;
          if (!(g & 3))
            return ;
          n = a + (0 - i) | 0;
          m = i + b | 0;
          h = k[4664] | 0;
          if (n >>> 0 < h >>> 0)
            rc();
          if ((n | 0) == (k[4665] | 0)) {
            f = a + (b + 4) | 0;
            g = k[f >> 2] | 0;
            if ((g & 3 | 0) != 3) {
              t = n;
              l = m;
              break;
            }
            k[4662] = m;
            k[f >> 2] = g & -2;
            k[a + (4 - i) >> 2] = m | 1;
            k[q >> 2] = m;
            return ;
          }
          d = i >>> 3;
          if (i >>> 0 < 256) {
            e = k[a + (8 - i) >> 2] | 0;
            f = k[a + (12 - i) >> 2] | 0;
            g = 18680 + (d << 1 << 2) | 0;
            if ((e | 0) != (g | 0)) {
              if (e >>> 0 < h >>> 0)
                rc();
              if ((k[e + 12 >> 2] | 0) != (n | 0))
                rc();
            }
            if ((f | 0) == (e | 0)) {
              k[4660] = k[4660] & ~(1 << d);
              t = n;
              l = m;
              break;
            }
            if ((f | 0) != (g | 0)) {
              if (f >>> 0 < h >>> 0)
                rc();
              g = f + 8 | 0;
              if ((k[g >> 2] | 0) == (n | 0))
                c = g;
              else
                rc();
            } else
              c = f + 8 | 0;
            k[e + 12 >> 2] = f;
            k[c >> 2] = e;
            t = n;
            l = m;
            break;
          }
          c = k[a + (24 - i) >> 2] | 0;
          e = k[a + (12 - i) >> 2] | 0;
          do
            if ((e | 0) == (n | 0)) {
              e = 16 - i | 0;
              f = a + (e + 4) | 0;
              g = k[f >> 2] | 0;
              if (!g) {
                f = a + e | 0;
                g = k[f >> 2] | 0;
                if (!g) {
                  j = 0;
                  break;
                }
              }
              while (1) {
                e = g + 20 | 0;
                d = k[e >> 2] | 0;
                if (d) {
                  g = d;
                  f = e;
                  continue;
                }
                e = g + 16 | 0;
                d = k[e >> 2] | 0;
                if (!d)
                  break;
                else {
                  g = d;
                  f = e;
                }
              }
              if (f >>> 0 < h >>> 0)
                rc();
              else {
                k[f >> 2] = 0;
                j = g;
                break;
              }
            } else {
              d = k[a + (8 - i) >> 2] | 0;
              if (d >>> 0 < h >>> 0)
                rc();
              g = d + 12 | 0;
              if ((k[g >> 2] | 0) != (n | 0))
                rc();
              f = e + 8 | 0;
              if ((k[f >> 2] | 0) == (n | 0)) {
                k[g >> 2] = e;
                k[f >> 2] = d;
                j = e;
                break;
              } else
                rc();
            }
 while (0);
          if (c) {
            g = k[a + (28 - i) >> 2] | 0;
            f = 18944 + (g << 2) | 0;
            if ((n | 0) == (k[f >> 2] | 0)) {
              k[f >> 2] = j;
              if (!j) {
                k[4661] = k[4661] & ~(1 << g);
                t = n;
                l = m;
                break;
              }
            } else {
              if (c >>> 0 < (k[4664] | 0) >>> 0)
                rc();
              g = c + 16 | 0;
              if ((k[g >> 2] | 0) == (n | 0))
                k[g >> 2] = j;
              else
                k[c + 20 >> 2] = j;
              if (!j) {
                t = n;
                l = m;
                break;
              }
            }
            e = k[4664] | 0;
            if (j >>> 0 < e >>> 0)
              rc();
            k[j + 24 >> 2] = c;
            g = 16 - i | 0;
            f = k[a + g >> 2] | 0;
            do
              if (f)
                if (f >>> 0 < e >>> 0)
                  rc();
                else {
                  k[j + 16 >> 2] = f;
                  k[f + 24 >> 2] = j;
                  break;
                }
 while (0);
            g = k[a + (g + 4) >> 2] | 0;
            if (g)
              if (g >>> 0 < (k[4664] | 0) >>> 0)
                rc();
              else {
                k[j + 20 >> 2] = g;
                k[g + 24 >> 2] = j;
                t = n;
                l = m;
                break;
              }
            else {
              t = n;
              l = m;
            }
          } else {
            t = n;
            l = m;
          }
        } else {
          t = a;
          l = b;
        }
 while (0);
      h = k[4664] | 0;
      if (q >>> 0 < h >>> 0)
        rc();
      g = a + (b + 4) | 0;
      f = k[g >> 2] | 0;
      if (!(f & 2)) {
        if ((q | 0) == (k[4666] | 0)) {
          s = (k[4663] | 0) + l | 0;
          k[4663] = s;
          k[4666] = t;
          k[t + 4 >> 2] = s | 1;
          if ((t | 0) != (k[4665] | 0))
            return ;
          k[4665] = 0;
          k[4662] = 0;
          return ;
        }
        if ((q | 0) == (k[4665] | 0)) {
          s = (k[4662] | 0) + l | 0;
          k[4662] = s;
          k[4665] = t;
          k[t + 4 >> 2] = s | 1;
          k[t + s >> 2] = s;
          return ;
        }
        i = (f & -8) + l | 0;
        c = f >>> 3;
        do
          if (f >>> 0 >= 256) {
            c = k[a + (b + 24) >> 2] | 0;
            e = k[a + (b + 12) >> 2] | 0;
            do
              if ((e | 0) == (q | 0)) {
                f = a + (b + 20) | 0;
                g = k[f >> 2] | 0;
                if (!g) {
                  f = a + (b + 16) | 0;
                  g = k[f >> 2] | 0;
                  if (!g) {
                    p = 0;
                    break;
                  }
                }
                while (1) {
                  e = g + 20 | 0;
                  d = k[e >> 2] | 0;
                  if (d) {
                    g = d;
                    f = e;
                    continue;
                  }
                  e = g + 16 | 0;
                  d = k[e >> 2] | 0;
                  if (!d)
                    break;
                  else {
                    g = d;
                    f = e;
                  }
                }
                if (f >>> 0 < h >>> 0)
                  rc();
                else {
                  k[f >> 2] = 0;
                  p = g;
                  break;
                }
              } else {
                d = k[a + (b + 8) >> 2] | 0;
                if (d >>> 0 < h >>> 0)
                  rc();
                g = d + 12 | 0;
                if ((k[g >> 2] | 0) != (q | 0))
                  rc();
                f = e + 8 | 0;
                if ((k[f >> 2] | 0) == (q | 0)) {
                  k[g >> 2] = e;
                  k[f >> 2] = d;
                  p = e;
                  break;
                } else
                  rc();
              }
 while (0);
            if (c) {
              g = k[a + (b + 28) >> 2] | 0;
              f = 18944 + (g << 2) | 0;
              if ((q | 0) == (k[f >> 2] | 0)) {
                k[f >> 2] = p;
                if (!p) {
                  k[4661] = k[4661] & ~(1 << g);
                  break;
                }
              } else {
                if (c >>> 0 < (k[4664] | 0) >>> 0)
                  rc();
                f = c + 16 | 0;
                if ((k[f >> 2] | 0) == (q | 0))
                  k[f >> 2] = p;
                else
                  k[c + 20 >> 2] = p;
                if (!p)
                  break;
              }
              e = k[4664] | 0;
              if (p >>> 0 < e >>> 0)
                rc();
              k[p + 24 >> 2] = c;
              f = k[a + (b + 16) >> 2] | 0;
              do
                if (f)
                  if (f >>> 0 < e >>> 0)
                    rc();
                  else {
                    k[p + 16 >> 2] = f;
                    k[f + 24 >> 2] = p;
                    break;
                  }
 while (0);
              e = k[a + (b + 20) >> 2] | 0;
              if (e)
                if (e >>> 0 < (k[4664] | 0) >>> 0)
                  rc();
                else {
                  k[p + 20 >> 2] = e;
                  k[e + 24 >> 2] = p;
                  break;
                }
            }
          } else {
            d = k[a + (b + 8) >> 2] | 0;
            e = k[a + (b + 12) >> 2] | 0;
            g = 18680 + (c << 1 << 2) | 0;
            if ((d | 0) != (g | 0)) {
              if (d >>> 0 < h >>> 0)
                rc();
              if ((k[d + 12 >> 2] | 0) != (q | 0))
                rc();
            }
            if ((e | 0) == (d | 0)) {
              k[4660] = k[4660] & ~(1 << c);
              break;
            }
            if ((e | 0) != (g | 0)) {
              if (e >>> 0 < h >>> 0)
                rc();
              f = e + 8 | 0;
              if ((k[f >> 2] | 0) == (q | 0))
                o = f;
              else
                rc();
            } else
              o = e + 8 | 0;
            k[d + 12 >> 2] = e;
            k[o >> 2] = d;
          }
 while (0);
        k[t + 4 >> 2] = i | 1;
        k[t + i >> 2] = i;
        if ((t | 0) == (k[4665] | 0)) {
          k[4662] = i;
          return ;
        } else
          g = i;
      } else {
        k[g >> 2] = f & -2;
        k[t + 4 >> 2] = l | 1;
        k[t + l >> 2] = l;
        g = l;
      }
      f = g >>> 3;
      if (g >>> 0 < 256) {
        d = f << 1;
        g = 18680 + (d << 2) | 0;
        c = k[4660] | 0;
        e = 1 << f;
        if (c & e) {
          e = 18680 + (d + 2 << 2) | 0;
          d = k[e >> 2] | 0;
          if (d >>> 0 < (k[4664] | 0) >>> 0)
            rc();
          else {
            r = e;
            s = d;
          }
        } else {
          k[4660] = c | e;
          r = 18680 + (d + 2 << 2) | 0;
          s = g;
        }
        k[r >> 2] = t;
        k[s + 12 >> 2] = t;
        k[t + 8 >> 2] = s;
        k[t + 12 >> 2] = g;
        return ;
      }
      c = g >>> 8;
      if (c)
        if (g >>> 0 > 16777215)
          f = 31;
        else {
          r = (c + 1048320 | 0) >>> 16 & 8;
          s = c << r;
          q = (s + 520192 | 0) >>> 16 & 4;
          s = s << q;
          f = (s + 245760 | 0) >>> 16 & 2;
          f = 14 - (q | r | f) + (s << f >>> 15) | 0;
          f = g >>> (f + 7 | 0) & 1 | f << 1;
        }
      else
        f = 0;
      e = 18944 + (f << 2) | 0;
      k[t + 28 >> 2] = f;
      k[t + 20 >> 2] = 0;
      k[t + 16 >> 2] = 0;
      d = k[4661] | 0;
      c = 1 << f;
      if (!(d & c)) {
        k[4661] = d | c;
        k[e >> 2] = t;
        k[t + 24 >> 2] = e;
        k[t + 12 >> 2] = t;
        k[t + 8 >> 2] = t;
        return ;
      }
      c = k[e >> 2] | 0;
      a: do
        if ((k[c + 4 >> 2] & -8 | 0) != (g | 0)) {
          f = g << ((f | 0) == 31 ? 0 : 25 - (f >>> 1) | 0);
          while (1) {
            d = c + 16 + (f >>> 31 << 2) | 0;
            e = k[d >> 2] | 0;
            if (!e)
              break;
            if ((k[e + 4 >> 2] & -8 | 0) == (g | 0)) {
              c = e;
              break a;
            } else {
              f = f << 1;
              c = e;
            }
          }
          if (d >>> 0 < (k[4664] | 0) >>> 0)
            rc();
          k[d >> 2] = t;
          k[t + 24 >> 2] = c;
          k[t + 12 >> 2] = t;
          k[t + 8 >> 2] = t;
          return ;
        }
 while (0);
      d = c + 8 | 0;
      e = k[d >> 2] | 0;
      s = k[4664] | 0;
      if (!(e >>> 0 >= s >>> 0 & c >>> 0 >= s >>> 0))
        rc();
      k[e + 12 >> 2] = t;
      k[d >> 2] = t;
      k[t + 8 >> 2] = e;
      k[t + 12 >> 2] = c;
      k[t + 24 >> 2] = 0;
      return ;
    }
    function nr() {}
    function or(a, b, c, d) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      d = d | 0;
      d = b - d - (c >>> 0 > a >>> 0 | 0) >>> 0;
      return (O = d, a - c >>> 0 | 0) | 0;
    }
    function pr(a, b, c, d) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      d = d | 0;
      c = a + c >>> 0;
      return (O = b + d + (c >>> 0 < a >>> 0 | 0) >>> 0, c | 0) | 0;
    }
    function qr(a, b, c) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      var d = 0,
          e = 0;
      while ((d | 0) < (c | 0)) {
        i[a + d >> 0] = e ? 0 : i[b + d >> 0] | 0;
        e = e ? 1 : (i[b + d >> 0] | 0) == 0;
        d = d + 1 | 0;
      }
      return a | 0;
    }
    function rr(a, b, c) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      var d = 0;
      if ((c | 0) >= 4096)
        return _a(a | 0, b | 0, c | 0) | 0;
      d = a | 0;
      if ((a & 3) == (b & 3)) {
        while (a & 3) {
          if (!c)
            return d | 0;
          i[a >> 0] = i[b >> 0] | 0;
          a = a + 1 | 0;
          b = b + 1 | 0;
          c = c - 1 | 0;
        }
        while ((c | 0) >= 4) {
          k[a >> 2] = k[b >> 2];
          a = a + 4 | 0;
          b = b + 4 | 0;
          c = c - 4 | 0;
        }
      }
      while ((c | 0) > 0) {
        i[a >> 0] = i[b >> 0] | 0;
        a = a + 1 | 0;
        b = b + 1 | 0;
        c = c - 1 | 0;
      }
      return d | 0;
    }
    function sr(a, b, c, d) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      d = d | 0;
      var e = 0;
      B = B + 1 | 0;
      k[a >> 2] = B;
      while ((e | 0) < (d | 0)) {
        if (!(k[c + (e << 3) >> 2] | 0)) {
          k[c + (e << 3) >> 2] = B;
          k[c + ((e << 3) + 4) >> 2] = b;
          k[c + ((e << 3) + 8) >> 2] = 0;
          O = d;
          return c | 0;
        }
        e = e + 1 | 0;
      }
      d = d * 2 | 0;
      c = kr(c | 0, 8 * (d + 1 | 0) | 0) | 0;
      c = sr(a | 0, b | 0, c | 0, d | 0) | 0;
      O = d;
      return c | 0;
    }
    function tr(a, b, c) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      if ((c | 0) < 32) {
        O = b >>> c;
        return a >>> c | (b & (1 << c) - 1) << 32 - c;
      }
      O = 0;
      return b >>> c - 32 | 0;
    }
    function ur(a, b, c) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      var d = 0,
          e = 0;
      while ((e | 0) < (c | 0)) {
        d = k[b + (e << 3) >> 2] | 0;
        if (!d)
          break;
        if ((d | 0) == (a | 0))
          return k[b + ((e << 3) + 4) >> 2] | 0;
        e = e + 1 | 0;
      }
      return 0;
    }
    function vr(a) {
      a = a | 0;
      return (a & 255) << 24 | (a >> 8 & 255) << 16 | (a >> 16 & 255) << 8 | a >>> 24 | 0;
    }
    function wr(a, b, c) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      var d = 0,
          e = 0,
          f = 0,
          g = 0;
      d = a + c | 0;
      if ((c | 0) >= 20) {
        b = b & 255;
        f = a & 3;
        g = b | b << 8 | b << 16 | b << 24;
        e = d & ~3;
        if (f) {
          f = a + 4 - f | 0;
          while ((a | 0) < (f | 0)) {
            i[a >> 0] = b;
            a = a + 1 | 0;
          }
        }
        while ((a | 0) < (e | 0)) {
          k[a >> 2] = g;
          a = a + 4 | 0;
        }
      }
      while ((a | 0) < (d | 0)) {
        i[a >> 0] = b;
        a = a + 1 | 0;
      }
      return a - c | 0;
    }
    function xr(a, b, c) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      if ((c | 0) < 32) {
        O = b << c | (a & (1 << c) - 1 << 32 - c) >>> 32 - c;
        return a << c;
      }
      O = a << c - 32;
      return 0;
    }
    function yr(a) {
      a = a | 0;
      var b = 0;
      b = a;
      while (i[b >> 0] | 0)
        b = b + 1 | 0;
      return b - a | 0;
    }
    function zr(a, b, c) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      if ((c | 0) < 32) {
        O = b >> c;
        return a >>> c | (b & (1 << c) - 1) << 32 - c;
      }
      O = (b | 0) < 0 ? -1 : 0;
      return b >> c - 32 | 0;
    }
    function Ar(a) {
      a = a | 0;
      var b = 0;
      b = i[v + (a & 255) >> 0] | 0;
      if ((b | 0) < 8)
        return b | 0;
      b = i[v + (a >> 8 & 255) >> 0] | 0;
      if ((b | 0) < 8)
        return b + 8 | 0;
      b = i[v + (a >> 16 & 255) >> 0] | 0;
      if ((b | 0) < 8)
        return b + 16 | 0;
      return (i[v + (a >>> 24) >> 0] | 0) + 24 | 0;
    }
    function Br(a, b) {
      a = a | 0;
      b = b | 0;
      var c = 0,
          d = 0,
          e = 0,
          f = 0;
      f = a & 65535;
      e = b & 65535;
      c = ka(e, f) | 0;
      d = a >>> 16;
      a = (c >>> 16) + (ka(e, d) | 0) | 0;
      e = b >>> 16;
      b = ka(e, f) | 0;
      return (O = (a >>> 16) + (ka(e, d) | 0) + (((a & 65535) + b | 0) >>> 16) | 0, a + b << 16 | c & 65535 | 0) | 0;
    }
    function Cr(a, b, c, d) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      d = d | 0;
      var e = 0,
          f = 0,
          g = 0,
          h = 0,
          i = 0,
          j = 0;
      j = b >> 31 | ((b | 0) < 0 ? -1 : 0) << 1;
      i = ((b | 0) < 0 ? -1 : 0) >> 31 | ((b | 0) < 0 ? -1 : 0) << 1;
      f = d >> 31 | ((d | 0) < 0 ? -1 : 0) << 1;
      e = ((d | 0) < 0 ? -1 : 0) >> 31 | ((d | 0) < 0 ? -1 : 0) << 1;
      h = or(j ^ a, i ^ b, j, i) | 0;
      g = O;
      a = f ^ j;
      b = e ^ i;
      return or((Hr(h, g, or(f ^ c, e ^ d, f, e) | 0, O, 0) | 0) ^ a, O ^ b, a, b) | 0;
    }
    function Dr(a, b, c, d) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      d = d | 0;
      var e = 0,
          f = 0,
          g = 0,
          h = 0,
          i = 0,
          j = 0;
      e = r;
      r = r + 8 | 0;
      h = e | 0;
      g = b >> 31 | ((b | 0) < 0 ? -1 : 0) << 1;
      f = ((b | 0) < 0 ? -1 : 0) >> 31 | ((b | 0) < 0 ? -1 : 0) << 1;
      j = d >> 31 | ((d | 0) < 0 ? -1 : 0) << 1;
      i = ((d | 0) < 0 ? -1 : 0) >> 31 | ((d | 0) < 0 ? -1 : 0) << 1;
      a = or(g ^ a, f ^ b, g, f) | 0;
      b = O;
      Hr(a, b, or(j ^ c, i ^ d, j, i) | 0, O, h) | 0;
      d = or(k[h >> 2] ^ g, k[h + 4 >> 2] ^ f, g, f) | 0;
      c = O;
      r = e;
      return (O = c, d) | 0;
    }
    function Er(a, b, c, d) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      d = d | 0;
      var e = 0,
          f = 0;
      e = a;
      f = c;
      c = Br(e, f) | 0;
      a = O;
      return (O = (ka(b, f) | 0) + (ka(d, e) | 0) + a | a & 0, c | 0 | 0) | 0;
    }
    function Fr(a, b, c, d) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      d = d | 0;
      return Hr(a, b, c, d, 0) | 0;
    }
    function Gr(a, b, c, d) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      d = d | 0;
      var e = 0,
          f = 0;
      f = r;
      r = r + 8 | 0;
      e = f | 0;
      Hr(a, b, c, d, e) | 0;
      r = f;
      return (O = k[e + 4 >> 2] | 0, k[e >> 2] | 0) | 0;
    }
    function Hr(a, b, c, d, e) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      d = d | 0;
      e = e | 0;
      var f = 0,
          g = 0,
          h = 0,
          i = 0,
          j = 0,
          l = 0,
          m = 0,
          n = 0,
          o = 0,
          p = 0;
      n = a;
      l = b;
      m = l;
      j = c;
      o = d;
      h = o;
      if (!m) {
        f = (e | 0) != 0;
        if (!h) {
          if (f) {
            k[e >> 2] = (n >>> 0) % (j >>> 0);
            k[e + 4 >> 2] = 0;
          }
          o = 0;
          e = (n >>> 0) / (j >>> 0) >>> 0;
          return (O = o, e) | 0;
        } else {
          if (!f) {
            o = 0;
            e = 0;
            return (O = o, e) | 0;
          }
          k[e >> 2] = a | 0;
          k[e + 4 >> 2] = b & 0;
          o = 0;
          e = 0;
          return (O = o, e) | 0;
        }
      }
      i = (h | 0) == 0;
      do
        if (j) {
          if (!i) {
            g = (ma(h | 0) | 0) - (ma(m | 0) | 0) | 0;
            if (g >>> 0 <= 31) {
              f = g + 1 | 0;
              l = 31 - g | 0;
              j = g - 31 >> 31;
              h = f;
              i = n >>> (f >>> 0) & j | m << l;
              j = m >>> (f >>> 0) & j;
              f = 0;
              g = n << l;
              break;
            }
            if (!e) {
              o = 0;
              e = 0;
              return (O = o, e) | 0;
            }
            k[e >> 2] = a | 0;
            k[e + 4 >> 2] = l | b & 0;
            o = 0;
            e = 0;
            return (O = o, e) | 0;
          }
          i = j - 1 | 0;
          if (i & j) {
            g = (ma(j | 0) | 0) + 33 - (ma(m | 0) | 0) | 0;
            p = 64 - g | 0;
            l = 32 - g | 0;
            a = l >> 31;
            b = g - 32 | 0;
            j = b >> 31;
            h = g;
            i = l - 1 >> 31 & m >>> (b >>> 0) | (m << l | n >>> (g >>> 0)) & j;
            j = j & m >>> (g >>> 0);
            f = n << p & a;
            g = (m << p | n >>> (b >>> 0)) & a | n << l & g - 33 >> 31;
            break;
          }
          if (e) {
            k[e >> 2] = i & n;
            k[e + 4 >> 2] = 0;
          }
          if ((j | 0) == 1) {
            e = l | b & 0;
            p = a | 0 | 0;
            return (O = e, p) | 0;
          } else {
            p = Ar(j | 0) | 0;
            e = m >>> (p >>> 0) | 0;
            p = m << 32 - p | n >>> (p >>> 0) | 0;
            return (O = e, p) | 0;
          }
        } else {
          if (i) {
            if (e) {
              k[e >> 2] = (m >>> 0) % (j >>> 0);
              k[e + 4 >> 2] = 0;
            }
            e = 0;
            p = (m >>> 0) / (j >>> 0) >>> 0;
            return (O = e, p) | 0;
          }
          if (!n) {
            if (e) {
              k[e >> 2] = 0;
              k[e + 4 >> 2] = (m >>> 0) % (h >>> 0);
            }
            e = 0;
            p = (m >>> 0) / (h >>> 0) >>> 0;
            return (O = e, p) | 0;
          }
          i = h - 1 | 0;
          if (!(i & h)) {
            if (e) {
              k[e >> 2] = a | 0;
              k[e + 4 >> 2] = i & m | b & 0;
            }
            e = 0;
            p = m >>> ((Ar(h | 0) | 0) >>> 0);
            return (O = e, p) | 0;
          }
          g = (ma(h | 0) | 0) - (ma(m | 0) | 0) | 0;
          if (g >>> 0 <= 30) {
            j = g + 1 | 0;
            g = 31 - g | 0;
            h = j;
            i = m << g | n >>> (j >>> 0);
            j = m >>> (j >>> 0);
            f = 0;
            g = n << g;
            break;
          }
          if (!e) {
            e = 0;
            p = 0;
            return (O = e, p) | 0;
          }
          k[e >> 2] = a | 0;
          k[e + 4 >> 2] = l | b & 0;
          e = 0;
          p = 0;
          return (O = e, p) | 0;
        }
 while (0);
      if (!h) {
        l = g;
        h = 0;
        g = 0;
      } else {
        m = c | 0 | 0;
        l = o | d & 0;
        b = pr(m | 0, l | 0, -1, -1) | 0;
        a = O;
        c = g;
        g = 0;
        do {
          n = c;
          c = f >>> 31 | c << 1;
          f = g | f << 1;
          n = i << 1 | n >>> 31 | 0;
          d = i >>> 31 | j << 1 | 0;
          or(b, a, n, d) | 0;
          p = O;
          o = p >> 31 | ((p | 0) < 0 ? -1 : 0) << 1;
          g = o & 1;
          i = or(n, d, o & m, (((p | 0) < 0 ? -1 : 0) >> 31 | ((p | 0) < 0 ? -1 : 0) << 1) & l) | 0;
          j = O;
          h = h - 1 | 0;
        } while ((h | 0) != 0);
        l = c;
        h = 0;
      }
      c = 0;
      if (e) {
        k[e >> 2] = i;
        k[e + 4 >> 2] = j;
      }
      e = (f | 0) >>> 31 | (l | c) << 1 | (c << 1 | f >>> 31) & 0 | h;
      p = (f << 1 | 0 >>> 31) & -2 | g;
      return (O = e, p) | 0;
    }
    function Ir(a, b, c, d) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      d = d | 0;
      return id[a & 63](b | 0, c | 0, d | 0) | 0;
    }
    function Jr(a, b, c) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      return qa(0, a | 0, b | 0, c | 0) | 0;
    }
    function Kr(a, b, c) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      return qa(1, a | 0, b | 0, c | 0) | 0;
    }
    function Lr(a, b, c) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      return qa(2, a | 0, b | 0, c | 0) | 0;
    }
    function Mr(a, b, c) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      return qa(3, a | 0, b | 0, c | 0) | 0;
    }
    function Nr(a, b, c) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      return qa(4, a | 0, b | 0, c | 0) | 0;
    }
    function Or(a, b, c) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      return qa(5, a | 0, b | 0, c | 0) | 0;
    }
    function Pr(a, b, c) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      return qa(6, a | 0, b | 0, c | 0) | 0;
    }
    function Qr(a, b, c) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      return qa(7, a | 0, b | 0, c | 0) | 0;
    }
    function Rr(a, b, c) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      return qa(8, a | 0, b | 0, c | 0) | 0;
    }
    function Sr(a, b, c) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      return qa(9, a | 0, b | 0, c | 0) | 0;
    }
    function Tr(a, b, c) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      return qa(10, a | 0, b | 0, c | 0) | 0;
    }
    function Ur(a, b, c) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      return qa(11, a | 0, b | 0, c | 0) | 0;
    }
    function Vr(a, b, c) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      return qa(12, a | 0, b | 0, c | 0) | 0;
    }
    function Wr(a, b, c) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      return qa(13, a | 0, b | 0, c | 0) | 0;
    }
    function Xr(a, b, c) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      return qa(14, a | 0, b | 0, c | 0) | 0;
    }
    function Yr(a, b, c) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      return qa(15, a | 0, b | 0, c | 0) | 0;
    }
    function Zr(a, b, c) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      return qa(16, a | 0, b | 0, c | 0) | 0;
    }
    function _r(a, b, c) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      return qa(17, a | 0, b | 0, c | 0) | 0;
    }
    function $r(a, b, c) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      return qa(18, a | 0, b | 0, c | 0) | 0;
    }
    function as(a, b, c) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      return qa(19, a | 0, b | 0, c | 0) | 0;
    }
    function bs(a, b, c, d, e, f) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      d = d | 0;
      e = e | 0;
      f = f | 0;
      jd[a & 63](b | 0, c | 0, d | 0, e | 0, f | 0);
    }
    function cs(a, b, c, d, e) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      d = d | 0;
      e = e | 0;
      sa(0, a | 0, b | 0, c | 0, d | 0, e | 0);
    }
    function ds(a, b, c, d, e) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      d = d | 0;
      e = e | 0;
      sa(1, a | 0, b | 0, c | 0, d | 0, e | 0);
    }
    function es(a, b, c, d, e) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      d = d | 0;
      e = e | 0;
      sa(2, a | 0, b | 0, c | 0, d | 0, e | 0);
    }
    function fs(a, b, c, d, e) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      d = d | 0;
      e = e | 0;
      sa(3, a | 0, b | 0, c | 0, d | 0, e | 0);
    }
    function gs(a, b, c, d, e) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      d = d | 0;
      e = e | 0;
      sa(4, a | 0, b | 0, c | 0, d | 0, e | 0);
    }
    function hs(a, b, c, d, e) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      d = d | 0;
      e = e | 0;
      sa(5, a | 0, b | 0, c | 0, d | 0, e | 0);
    }
    function is(a, b, c, d, e) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      d = d | 0;
      e = e | 0;
      sa(6, a | 0, b | 0, c | 0, d | 0, e | 0);
    }
    function js(a, b, c, d, e) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      d = d | 0;
      e = e | 0;
      sa(7, a | 0, b | 0, c | 0, d | 0, e | 0);
    }
    function ks(a, b, c, d, e) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      d = d | 0;
      e = e | 0;
      sa(8, a | 0, b | 0, c | 0, d | 0, e | 0);
    }
    function ls(a, b, c, d, e) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      d = d | 0;
      e = e | 0;
      sa(9, a | 0, b | 0, c | 0, d | 0, e | 0);
    }
    function ms(a, b, c, d, e) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      d = d | 0;
      e = e | 0;
      sa(10, a | 0, b | 0, c | 0, d | 0, e | 0);
    }
    function ns(a, b, c, d, e) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      d = d | 0;
      e = e | 0;
      sa(11, a | 0, b | 0, c | 0, d | 0, e | 0);
    }
    function os(a, b, c, d, e) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      d = d | 0;
      e = e | 0;
      sa(12, a | 0, b | 0, c | 0, d | 0, e | 0);
    }
    function ps(a, b, c, d, e) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      d = d | 0;
      e = e | 0;
      sa(13, a | 0, b | 0, c | 0, d | 0, e | 0);
    }
    function qs(a, b, c, d, e) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      d = d | 0;
      e = e | 0;
      sa(14, a | 0, b | 0, c | 0, d | 0, e | 0);
    }
    function rs(a, b, c, d, e) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      d = d | 0;
      e = e | 0;
      sa(15, a | 0, b | 0, c | 0, d | 0, e | 0);
    }
    function ss(a, b, c, d, e) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      d = d | 0;
      e = e | 0;
      sa(16, a | 0, b | 0, c | 0, d | 0, e | 0);
    }
    function ts(a, b, c, d, e) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      d = d | 0;
      e = e | 0;
      sa(17, a | 0, b | 0, c | 0, d | 0, e | 0);
    }
    function us(a, b, c, d, e) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      d = d | 0;
      e = e | 0;
      sa(18, a | 0, b | 0, c | 0, d | 0, e | 0);
    }
    function vs(a, b, c, d, e) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      d = d | 0;
      e = e | 0;
      sa(19, a | 0, b | 0, c | 0, d | 0, e | 0);
    }
    function ws(a) {
      a = a | 0;
      return kd[a & 63]() | 0;
    }
    function xs() {
      return ua(0) | 0;
    }
    function ys() {
      return ua(1) | 0;
    }
    function zs() {
      return ua(2) | 0;
    }
    function As() {
      return ua(3) | 0;
    }
    function Bs() {
      return ua(4) | 0;
    }
    function Cs() {
      return ua(5) | 0;
    }
    function Ds() {
      return ua(6) | 0;
    }
    function Es() {
      return ua(7) | 0;
    }
    function Fs() {
      return ua(8) | 0;
    }
    function Gs() {
      return ua(9) | 0;
    }
    function Hs() {
      return ua(10) | 0;
    }
    function Is() {
      return ua(11) | 0;
    }
    function Js() {
      return ua(12) | 0;
    }
    function Ks() {
      return ua(13) | 0;
    }
    function Ls() {
      return ua(14) | 0;
    }
    function Ms() {
      return ua(15) | 0;
    }
    function Ns() {
      return ua(16) | 0;
    }
    function Os() {
      return ua(17) | 0;
    }
    function Ps() {
      return ua(18) | 0;
    }
    function Qs() {
      return ua(19) | 0;
    }
    function Rs(a, b) {
      a = a | 0;
      b = b | 0;
      ld[a & 63](b | 0);
    }
    function Ss(a) {
      a = a | 0;
      wa(0, a | 0);
    }
    function Ts(a) {
      a = a | 0;
      wa(1, a | 0);
    }
    function Us(a) {
      a = a | 0;
      wa(2, a | 0);
    }
    function Vs(a) {
      a = a | 0;
      wa(3, a | 0);
    }
    function Ws(a) {
      a = a | 0;
      wa(4, a | 0);
    }
    function Xs(a) {
      a = a | 0;
      wa(5, a | 0);
    }
    function Ys(a) {
      a = a | 0;
      wa(6, a | 0);
    }
    function Zs(a) {
      a = a | 0;
      wa(7, a | 0);
    }
    function _s(a) {
      a = a | 0;
      wa(8, a | 0);
    }
    function $s(a) {
      a = a | 0;
      wa(9, a | 0);
    }
    function at(a) {
      a = a | 0;
      wa(10, a | 0);
    }
    function bt(a) {
      a = a | 0;
      wa(11, a | 0);
    }
    function ct(a) {
      a = a | 0;
      wa(12, a | 0);
    }
    function dt(a) {
      a = a | 0;
      wa(13, a | 0);
    }
    function et(a) {
      a = a | 0;
      wa(14, a | 0);
    }
    function ft(a) {
      a = a | 0;
      wa(15, a | 0);
    }
    function gt(a) {
      a = a | 0;
      wa(16, a | 0);
    }
    function ht(a) {
      a = a | 0;
      wa(17, a | 0);
    }
    function it(a) {
      a = a | 0;
      wa(18, a | 0);
    }
    function jt(a) {
      a = a | 0;
      wa(19, a | 0);
    }
    function kt(a, b, c) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      md[a & 63](b | 0, c | 0);
    }
    function lt(a, b) {
      a = a | 0;
      b = b | 0;
      ya(0, a | 0, b | 0);
    }
    function mt(a, b) {
      a = a | 0;
      b = b | 0;
      ya(1, a | 0, b | 0);
    }
    function nt(a, b) {
      a = a | 0;
      b = b | 0;
      ya(2, a | 0, b | 0);
    }
    function ot(a, b) {
      a = a | 0;
      b = b | 0;
      ya(3, a | 0, b | 0);
    }
    function pt(a, b) {
      a = a | 0;
      b = b | 0;
      ya(4, a | 0, b | 0);
    }
    function qt(a, b) {
      a = a | 0;
      b = b | 0;
      ya(5, a | 0, b | 0);
    }
    function rt(a, b) {
      a = a | 0;
      b = b | 0;
      ya(6, a | 0, b | 0);
    }
    function st(a, b) {
      a = a | 0;
      b = b | 0;
      ya(7, a | 0, b | 0);
    }
    function tt(a, b) {
      a = a | 0;
      b = b | 0;
      ya(8, a | 0, b | 0);
    }
    function ut(a, b) {
      a = a | 0;
      b = b | 0;
      ya(9, a | 0, b | 0);
    }
    function vt(a, b) {
      a = a | 0;
      b = b | 0;
      ya(10, a | 0, b | 0);
    }
    function wt(a, b) {
      a = a | 0;
      b = b | 0;
      ya(11, a | 0, b | 0);
    }
    function xt(a, b) {
      a = a | 0;
      b = b | 0;
      ya(12, a | 0, b | 0);
    }
    function yt(a, b) {
      a = a | 0;
      b = b | 0;
      ya(13, a | 0, b | 0);
    }
    function zt(a, b) {
      a = a | 0;
      b = b | 0;
      ya(14, a | 0, b | 0);
    }
    function At(a, b) {
      a = a | 0;
      b = b | 0;
      ya(15, a | 0, b | 0);
    }
    function Bt(a, b) {
      a = a | 0;
      b = b | 0;
      ya(16, a | 0, b | 0);
    }
    function Ct(a, b) {
      a = a | 0;
      b = b | 0;
      ya(17, a | 0, b | 0);
    }
    function Dt(a, b) {
      a = a | 0;
      b = b | 0;
      ya(18, a | 0, b | 0);
    }
    function Et(a, b) {
      a = a | 0;
      b = b | 0;
      ya(19, a | 0, b | 0);
    }
    function Ft(a, b) {
      a = a | 0;
      b = b | 0;
      return nd[a & 255](b | 0) | 0;
    }
    function Gt(a) {
      a = a | 0;
      return Aa(0, a | 0) | 0;
    }
    function Ht(a) {
      a = a | 0;
      return Aa(1, a | 0) | 0;
    }
    function It(a) {
      a = a | 0;
      return Aa(2, a | 0) | 0;
    }
    function Jt(a) {
      a = a | 0;
      return Aa(3, a | 0) | 0;
    }
    function Kt(a) {
      a = a | 0;
      return Aa(4, a | 0) | 0;
    }
    function Lt(a) {
      a = a | 0;
      return Aa(5, a | 0) | 0;
    }
    function Mt(a) {
      a = a | 0;
      return Aa(6, a | 0) | 0;
    }
    function Nt(a) {
      a = a | 0;
      return Aa(7, a | 0) | 0;
    }
    function Ot(a) {
      a = a | 0;
      return Aa(8, a | 0) | 0;
    }
    function Pt(a) {
      a = a | 0;
      return Aa(9, a | 0) | 0;
    }
    function Qt(a) {
      a = a | 0;
      return Aa(10, a | 0) | 0;
    }
    function Rt(a) {
      a = a | 0;
      return Aa(11, a | 0) | 0;
    }
    function St(a) {
      a = a | 0;
      return Aa(12, a | 0) | 0;
    }
    function Tt(a) {
      a = a | 0;
      return Aa(13, a | 0) | 0;
    }
    function Ut(a) {
      a = a | 0;
      return Aa(14, a | 0) | 0;
    }
    function Vt(a) {
      a = a | 0;
      return Aa(15, a | 0) | 0;
    }
    function Wt(a) {
      a = a | 0;
      return Aa(16, a | 0) | 0;
    }
    function Xt(a) {
      a = a | 0;
      return Aa(17, a | 0) | 0;
    }
    function Yt(a) {
      a = a | 0;
      return Aa(18, a | 0) | 0;
    }
    function Zt(a) {
      a = a | 0;
      return Aa(19, a | 0) | 0;
    }
    function _t(a, b, c, d) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      d = d | 0;
      od[a & 63](b | 0, c | 0, d | 0);
    }
    function $t(a, b, c) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      Ca(0, a | 0, b | 0, c | 0);
    }
    function au(a, b, c) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      Ca(1, a | 0, b | 0, c | 0);
    }
    function bu(a, b, c) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      Ca(2, a | 0, b | 0, c | 0);
    }
    function cu(a, b, c) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      Ca(3, a | 0, b | 0, c | 0);
    }
    function du(a, b, c) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      Ca(4, a | 0, b | 0, c | 0);
    }
    function eu(a, b, c) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      Ca(5, a | 0, b | 0, c | 0);
    }
    function fu(a, b, c) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      Ca(6, a | 0, b | 0, c | 0);
    }
    function gu(a, b, c) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      Ca(7, a | 0, b | 0, c | 0);
    }
    function hu(a, b, c) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      Ca(8, a | 0, b | 0, c | 0);
    }
    function iu(a, b, c) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      Ca(9, a | 0, b | 0, c | 0);
    }
    function ju(a, b, c) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      Ca(10, a | 0, b | 0, c | 0);
    }
    function ku(a, b, c) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      Ca(11, a | 0, b | 0, c | 0);
    }
    function lu(a, b, c) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      Ca(12, a | 0, b | 0, c | 0);
    }
    function mu(a, b, c) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      Ca(13, a | 0, b | 0, c | 0);
    }
    function nu(a, b, c) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      Ca(14, a | 0, b | 0, c | 0);
    }
    function ou(a, b, c) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      Ca(15, a | 0, b | 0, c | 0);
    }
    function pu(a, b, c) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      Ca(16, a | 0, b | 0, c | 0);
    }
    function qu(a, b, c) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      Ca(17, a | 0, b | 0, c | 0);
    }
    function ru(a, b, c) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      Ca(18, a | 0, b | 0, c | 0);
    }
    function su(a, b, c) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      Ca(19, a | 0, b | 0, c | 0);
    }
    function tu(a) {
      a = a | 0;
      pd[a & 63]();
    }
    function uu() {
      Ea(0);
    }
    function vu() {
      Ea(1);
    }
    function wu() {
      Ea(2);
    }
    function xu() {
      Ea(3);
    }
    function yu() {
      Ea(4);
    }
    function zu() {
      Ea(5);
    }
    function Au() {
      Ea(6);
    }
    function Bu() {
      Ea(7);
    }
    function Cu() {
      Ea(8);
    }
    function Du() {
      Ea(9);
    }
    function Eu() {
      Ea(10);
    }
    function Fu() {
      Ea(11);
    }
    function Gu() {
      Ea(12);
    }
    function Hu() {
      Ea(13);
    }
    function Iu() {
      Ea(14);
    }
    function Ju() {
      Ea(15);
    }
    function Ku() {
      Ea(16);
    }
    function Lu() {
      Ea(17);
    }
    function Mu() {
      Ea(18);
    }
    function Nu() {
      Ea(19);
    }
    function Ou(a, b, c, d, e) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      d = d | 0;
      e = e | 0;
      return qd[a & 63](b | 0, c | 0, d | 0, e | 0) | 0;
    }
    function Pu(a, b, c, d) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      d = d | 0;
      return Ga(0, a | 0, b | 0, c | 0, d | 0) | 0;
    }
    function Qu(a, b, c, d) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      d = d | 0;
      return Ga(1, a | 0, b | 0, c | 0, d | 0) | 0;
    }
    function Ru(a, b, c, d) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      d = d | 0;
      return Ga(2, a | 0, b | 0, c | 0, d | 0) | 0;
    }
    function Su(a, b, c, d) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      d = d | 0;
      return Ga(3, a | 0, b | 0, c | 0, d | 0) | 0;
    }
    function Tu(a, b, c, d) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      d = d | 0;
      return Ga(4, a | 0, b | 0, c | 0, d | 0) | 0;
    }
    function Uu(a, b, c, d) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      d = d | 0;
      return Ga(5, a | 0, b | 0, c | 0, d | 0) | 0;
    }
    function Vu(a, b, c, d) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      d = d | 0;
      return Ga(6, a | 0, b | 0, c | 0, d | 0) | 0;
    }
    function Wu(a, b, c, d) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      d = d | 0;
      return Ga(7, a | 0, b | 0, c | 0, d | 0) | 0;
    }
    function Xu(a, b, c, d) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      d = d | 0;
      return Ga(8, a | 0, b | 0, c | 0, d | 0) | 0;
    }
    function Yu(a, b, c, d) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      d = d | 0;
      return Ga(9, a | 0, b | 0, c | 0, d | 0) | 0;
    }
    function Zu(a, b, c, d) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      d = d | 0;
      return Ga(10, a | 0, b | 0, c | 0, d | 0) | 0;
    }
    function _u(a, b, c, d) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      d = d | 0;
      return Ga(11, a | 0, b | 0, c | 0, d | 0) | 0;
    }
    function $u(a, b, c, d) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      d = d | 0;
      return Ga(12, a | 0, b | 0, c | 0, d | 0) | 0;
    }
    function av(a, b, c, d) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      d = d | 0;
      return Ga(13, a | 0, b | 0, c | 0, d | 0) | 0;
    }
    function bv(a, b, c, d) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      d = d | 0;
      return Ga(14, a | 0, b | 0, c | 0, d | 0) | 0;
    }
    function cv(a, b, c, d) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      d = d | 0;
      return Ga(15, a | 0, b | 0, c | 0, d | 0) | 0;
    }
    function dv(a, b, c, d) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      d = d | 0;
      return Ga(16, a | 0, b | 0, c | 0, d | 0) | 0;
    }
    function ev(a, b, c, d) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      d = d | 0;
      return Ga(17, a | 0, b | 0, c | 0, d | 0) | 0;
    }
    function fv(a, b, c, d) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      d = d | 0;
      return Ga(18, a | 0, b | 0, c | 0, d | 0) | 0;
    }
    function gv(a, b, c, d) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      d = d | 0;
      return Ga(19, a | 0, b | 0, c | 0, d | 0) | 0;
    }
    function hv(a, b, c, d, e, f, g) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      d = d | 0;
      e = e | 0;
      f = f | 0;
      g = g | 0;
      rd[a & 63](b | 0, c | 0, d | 0, e | 0, f | 0, g | 0);
    }
    function iv(a, b, c, d, e, f) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      d = d | 0;
      e = e | 0;
      f = f | 0;
      Ia(0, a | 0, b | 0, c | 0, d | 0, e | 0, f | 0);
    }
    function jv(a, b, c, d, e, f) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      d = d | 0;
      e = e | 0;
      f = f | 0;
      Ia(1, a | 0, b | 0, c | 0, d | 0, e | 0, f | 0);
    }
    function kv(a, b, c, d, e, f) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      d = d | 0;
      e = e | 0;
      f = f | 0;
      Ia(2, a | 0, b | 0, c | 0, d | 0, e | 0, f | 0);
    }
    function lv(a, b, c, d, e, f) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      d = d | 0;
      e = e | 0;
      f = f | 0;
      Ia(3, a | 0, b | 0, c | 0, d | 0, e | 0, f | 0);
    }
    function mv(a, b, c, d, e, f) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      d = d | 0;
      e = e | 0;
      f = f | 0;
      Ia(4, a | 0, b | 0, c | 0, d | 0, e | 0, f | 0);
    }
    function nv(a, b, c, d, e, f) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      d = d | 0;
      e = e | 0;
      f = f | 0;
      Ia(5, a | 0, b | 0, c | 0, d | 0, e | 0, f | 0);
    }
    function ov(a, b, c, d, e, f) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      d = d | 0;
      e = e | 0;
      f = f | 0;
      Ia(6, a | 0, b | 0, c | 0, d | 0, e | 0, f | 0);
    }
    function pv(a, b, c, d, e, f) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      d = d | 0;
      e = e | 0;
      f = f | 0;
      Ia(7, a | 0, b | 0, c | 0, d | 0, e | 0, f | 0);
    }
    function qv(a, b, c, d, e, f) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      d = d | 0;
      e = e | 0;
      f = f | 0;
      Ia(8, a | 0, b | 0, c | 0, d | 0, e | 0, f | 0);
    }
    function rv(a, b, c, d, e, f) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      d = d | 0;
      e = e | 0;
      f = f | 0;
      Ia(9, a | 0, b | 0, c | 0, d | 0, e | 0, f | 0);
    }
    function sv(a, b, c, d, e, f) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      d = d | 0;
      e = e | 0;
      f = f | 0;
      Ia(10, a | 0, b | 0, c | 0, d | 0, e | 0, f | 0);
    }
    function tv(a, b, c, d, e, f) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      d = d | 0;
      e = e | 0;
      f = f | 0;
      Ia(11, a | 0, b | 0, c | 0, d | 0, e | 0, f | 0);
    }
    function uv(a, b, c, d, e, f) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      d = d | 0;
      e = e | 0;
      f = f | 0;
      Ia(12, a | 0, b | 0, c | 0, d | 0, e | 0, f | 0);
    }
    function vv(a, b, c, d, e, f) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      d = d | 0;
      e = e | 0;
      f = f | 0;
      Ia(13, a | 0, b | 0, c | 0, d | 0, e | 0, f | 0);
    }
    function wv(a, b, c, d, e, f) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      d = d | 0;
      e = e | 0;
      f = f | 0;
      Ia(14, a | 0, b | 0, c | 0, d | 0, e | 0, f | 0);
    }
    function xv(a, b, c, d, e, f) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      d = d | 0;
      e = e | 0;
      f = f | 0;
      Ia(15, a | 0, b | 0, c | 0, d | 0, e | 0, f | 0);
    }
    function yv(a, b, c, d, e, f) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      d = d | 0;
      e = e | 0;
      f = f | 0;
      Ia(16, a | 0, b | 0, c | 0, d | 0, e | 0, f | 0);
    }
    function zv(a, b, c, d, e, f) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      d = d | 0;
      e = e | 0;
      f = f | 0;
      Ia(17, a | 0, b | 0, c | 0, d | 0, e | 0, f | 0);
    }
    function Av(a, b, c, d, e, f) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      d = d | 0;
      e = e | 0;
      f = f | 0;
      Ia(18, a | 0, b | 0, c | 0, d | 0, e | 0, f | 0);
    }
    function Bv(a, b, c, d, e, f) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      d = d | 0;
      e = e | 0;
      f = f | 0;
      Ia(19, a | 0, b | 0, c | 0, d | 0, e | 0, f | 0);
    }
    function Cv(a, b, c) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      return sd[a & 63](b | 0, c | 0) | 0;
    }
    function Dv(a, b) {
      a = a | 0;
      b = b | 0;
      return Ka(0, a | 0, b | 0) | 0;
    }
    function Ev(a, b) {
      a = a | 0;
      b = b | 0;
      return Ka(1, a | 0, b | 0) | 0;
    }
    function Fv(a, b) {
      a = a | 0;
      b = b | 0;
      return Ka(2, a | 0, b | 0) | 0;
    }
    function Gv(a, b) {
      a = a | 0;
      b = b | 0;
      return Ka(3, a | 0, b | 0) | 0;
    }
    function Hv(a, b) {
      a = a | 0;
      b = b | 0;
      return Ka(4, a | 0, b | 0) | 0;
    }
    function Iv(a, b) {
      a = a | 0;
      b = b | 0;
      return Ka(5, a | 0, b | 0) | 0;
    }
    function Jv(a, b) {
      a = a | 0;
      b = b | 0;
      return Ka(6, a | 0, b | 0) | 0;
    }
    function Kv(a, b) {
      a = a | 0;
      b = b | 0;
      return Ka(7, a | 0, b | 0) | 0;
    }
    function Lv(a, b) {
      a = a | 0;
      b = b | 0;
      return Ka(8, a | 0, b | 0) | 0;
    }
    function Mv(a, b) {
      a = a | 0;
      b = b | 0;
      return Ka(9, a | 0, b | 0) | 0;
    }
    function Nv(a, b) {
      a = a | 0;
      b = b | 0;
      return Ka(10, a | 0, b | 0) | 0;
    }
    function Ov(a, b) {
      a = a | 0;
      b = b | 0;
      return Ka(11, a | 0, b | 0) | 0;
    }
    function Pv(a, b) {
      a = a | 0;
      b = b | 0;
      return Ka(12, a | 0, b | 0) | 0;
    }
    function Qv(a, b) {
      a = a | 0;
      b = b | 0;
      return Ka(13, a | 0, b | 0) | 0;
    }
    function Rv(a, b) {
      a = a | 0;
      b = b | 0;
      return Ka(14, a | 0, b | 0) | 0;
    }
    function Sv(a, b) {
      a = a | 0;
      b = b | 0;
      return Ka(15, a | 0, b | 0) | 0;
    }
    function Tv(a, b) {
      a = a | 0;
      b = b | 0;
      return Ka(16, a | 0, b | 0) | 0;
    }
    function Uv(a, b) {
      a = a | 0;
      b = b | 0;
      return Ka(17, a | 0, b | 0) | 0;
    }
    function Vv(a, b) {
      a = a | 0;
      b = b | 0;
      return Ka(18, a | 0, b | 0) | 0;
    }
    function Wv(a, b) {
      a = a | 0;
      b = b | 0;
      return Ka(19, a | 0, b | 0) | 0;
    }
    function Xv(a, b, c, d, e) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      d = d | 0;
      e = e | 0;
      td[a & 63](b | 0, c | 0, d | 0, e | 0);
    }
    function Yv(a, b, c, d) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      d = d | 0;
      Ma(0, a | 0, b | 0, c | 0, d | 0);
    }
    function Zv(a, b, c, d) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      d = d | 0;
      Ma(1, a | 0, b | 0, c | 0, d | 0);
    }
    function _v(a, b, c, d) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      d = d | 0;
      Ma(2, a | 0, b | 0, c | 0, d | 0);
    }
    function $v(a, b, c, d) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      d = d | 0;
      Ma(3, a | 0, b | 0, c | 0, d | 0);
    }
    function aw(a, b, c, d) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      d = d | 0;
      Ma(4, a | 0, b | 0, c | 0, d | 0);
    }
    function bw(a, b, c, d) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      d = d | 0;
      Ma(5, a | 0, b | 0, c | 0, d | 0);
    }
    function cw(a, b, c, d) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      d = d | 0;
      Ma(6, a | 0, b | 0, c | 0, d | 0);
    }
    function dw(a, b, c, d) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      d = d | 0;
      Ma(7, a | 0, b | 0, c | 0, d | 0);
    }
    function ew(a, b, c, d) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      d = d | 0;
      Ma(8, a | 0, b | 0, c | 0, d | 0);
    }
    function fw(a, b, c, d) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      d = d | 0;
      Ma(9, a | 0, b | 0, c | 0, d | 0);
    }
    function gw(a, b, c, d) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      d = d | 0;
      Ma(10, a | 0, b | 0, c | 0, d | 0);
    }
    function hw(a, b, c, d) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      d = d | 0;
      Ma(11, a | 0, b | 0, c | 0, d | 0);
    }
    function iw(a, b, c, d) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      d = d | 0;
      Ma(12, a | 0, b | 0, c | 0, d | 0);
    }
    function jw(a, b, c, d) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      d = d | 0;
      Ma(13, a | 0, b | 0, c | 0, d | 0);
    }
    function kw(a, b, c, d) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      d = d | 0;
      Ma(14, a | 0, b | 0, c | 0, d | 0);
    }
    function lw(a, b, c, d) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      d = d | 0;
      Ma(15, a | 0, b | 0, c | 0, d | 0);
    }
    function mw(a, b, c, d) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      d = d | 0;
      Ma(16, a | 0, b | 0, c | 0, d | 0);
    }
    function nw(a, b, c, d) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      d = d | 0;
      Ma(17, a | 0, b | 0, c | 0, d | 0);
    }
    function ow(a, b, c, d) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      d = d | 0;
      Ma(18, a | 0, b | 0, c | 0, d | 0);
    }
    function pw(a, b, c, d) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      d = d | 0;
      Ma(19, a | 0, b | 0, c | 0, d | 0);
    }
    function qw(a, b, c) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      na(0);
      return 0;
    }
    function rw(a, b, c, d, e) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      d = d | 0;
      e = e | 0;
      na(1);
    }
    function sw() {
      na(2);
      return 0;
    }
    function tw(a) {
      a = a | 0;
      na(3);
    }
    function uw(a, b) {
      a = a | 0;
      b = b | 0;
      na(4);
    }
    function vw(a) {
      a = a | 0;
      na(5);
      return 0;
    }
    function ww(a, b, c) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      na(6);
    }
    function xw() {
      na(7);
    }
    function yw() {
      Vb();
    }
    function zw(a, b, c, d) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      d = d | 0;
      na(8);
      return 0;
    }
    function Aw(a, b, c, d) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      d = d | 0;
      return Mb(a | 0, b | 0, c | 0, d | 0) | 0;
    }
    function Bw(a, b, c, d, e, f) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      d = d | 0;
      e = e | 0;
      f = f | 0;
      na(9);
    }
    function Cw(a, b) {
      a = a | 0;
      b = b | 0;
      na(10);
      return 0;
    }
    function Dw(a, b) {
      a = a | 0;
      b = b | 0;
      return pc(a | 0, b | 0) | 0;
    }
    function Ew(a, b) {
      a = a | 0;
      b = b | 0;
      return Ta(a | 0, b | 0) | 0;
    }
    function Fw(a, b, c, d) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      d = d | 0;
      na(11);
    }
    function Gw(a, b, c, d) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      d = d | 0;
      ab(a | 0, b | 0, c | 0, d | 0);
    }
    function jk(a) {
      a = a | 0;
      var b = 0,
          c = 0,
          d = 0,
          e = 0,
          f = 0,
          g = 0,
          h = 0,
          n = 0,
          o = 0,
          p = 0,
          q = 0,
          s = 0,
          t = 0,
          u = 0,
          v = 0,
          x = 0,
          y = 0,
          z = 0,
          A = 0,
          B = 0,
          C = 0,
          D = 0,
          E = 0,
          F = 0,
          G = 0,
          H = 0,
          I = 0,
          J = 0,
          K = 0,
          L = 0,
          M = 0,
          N = 0,
          O = 0,
          P = 0,
          Q = 0,
          R = 0,
          S = 0,
          T = 0,
          U = 0,
          V = 0,
          W = 0,
          X = 0,
          Y = 0,
          Z = 0,
          _ = 0,
          $ = 0,
          aa = 0,
          ba = 0,
          ca = 0,
          da = 0,
          ea = 0,
          fa = 0,
          ga = 0,
          ha = 0,
          ia = 0,
          ja = 0,
          ka = 0,
          la = 0,
          ma = 0,
          na = 0,
          oa = 0,
          pa = 0,
          qa = 0,
          ra = 0,
          sa = 0,
          ta = 0,
          ua = 0,
          va = 0,
          wa = 0,
          xa = 0,
          ya = 0,
          za = 0,
          Aa = 0,
          Ba = 0,
          Ca = 0,
          Da = 0,
          Ea = 0,
          Fa = 0,
          Ga = 0,
          Ha = 0,
          Ia = 0,
          Ja = 0,
          Ka = 0,
          La = 0,
          Ma = 0,
          Na = 0,
          Oa = 0,
          Pa = 0,
          Qa = 0,
          Ra = 0,
          Sa = 0,
          Ta = 0,
          Ua = 0,
          Va = 0,
          Wa = 0,
          Xa = 0,
          Ya = 0,
          Za = 0,
          _a = 0,
          $a = 0,
          ab = 0,
          bb = 0,
          cb = 0,
          db = 0,
          eb = 0;
      eb = r;
      r = r + 16 | 0;
      Qa = eb;
      Ya = eb + 4 | 0;
      Na = k[a >> 2] | 0;
      cb = a + 4 | 0;
      P = k[cb >> 2] | 0;
      db = a + 64020 | 0;
      a: do
        if ((P | 0) == 10) {
          n = a + 64024 | 0;
          o = a + 64028 | 0;
          p = a + 64032 | 0;
          q = a + 64036 | 0;
          s = a + 64040 | 0;
          t = a + 64044 | 0;
          u = a + 64048 | 0;
          v = a + 64052 | 0;
          z = a + 64056 | 0;
          C = a + 64060 | 0;
          D = a + 64064 | 0;
          B = a + 64068 | 0;
          A = a + 64072 | 0;
          y = a + 64076 | 0;
          x = a + 64080 | 0;
          F = a + 64084 | 0;
          G = a + 64088 | 0;
          H = a + 64092 | 0;
          I = a + 64096 | 0;
          J = a + 64100 | 0;
          K = a + 64104 | 0;
          M = a + 64108 | 0;
          N = a + 64112 | 0;
          b = db;
          c = b + 96 | 0;
          do {
            k[b >> 2] = 0;
            b = b + 4 | 0;
          } while ((b | 0) < (c | 0));
          k[cb >> 2] = 10;
          E = a + 32 | 0;
          b = k[E >> 2] | 0;
          h = a + 28 | 0;
          if ((b | 0) > 7)
            c = k[h >> 2] | 0;
          else {
            d = Na + 4 | 0;
            e = Na + 8 | 0;
            f = Na + 12 | 0;
            g = k[d >> 2] | 0;
            do {
              if (!g) {
                ca = M;
                T = 0;
                Y = 0;
                U = 0;
                $ = 0;
                S = 0;
                c = 0;
                f = 0;
                P = 0;
                R = 0;
                L = 0;
                M = 0;
                E = 0;
                g = 0;
                e = 0;
                d = 0;
                ga = 0;
                da = 0;
                O = 0;
                W = 0;
                ba = 0;
                b = 0;
                ea = 0;
                V = 0;
                Q = 0;
                h = 0;
                _a = 511;
                break a;
              }
              _a = k[Na >> 2] | 0;
              c = l[_a >> 0] | k[h >> 2] << 8;
              k[h >> 2] = c;
              b = b + 8 | 0;
              k[E >> 2] = b;
              k[Na >> 2] = _a + 1;
              g = g + -1 | 0;
              k[d >> 2] = g;
              _a = (k[e >> 2] | 0) + 1 | 0;
              k[e >> 2] = _a;
              if (!_a)
                k[f >> 2] = (k[f >> 2] | 0) + 1;
            } while ((b | 0) <= 7);
          }
          g = b + -8 | 0;
          k[E >> 2] = g;
          if ((c >>> g & 255 | 0) == 66) {
            P = v;
            ea = D;
            fa = B;
            ga = A;
            ha = y;
            ia = x;
            ca = M;
            e = 0;
            d = 0;
            pa = 0;
            $ = 0;
            la = 0;
            da = 0;
            Y = 0;
            aa = 0;
            _ = 0;
            ba = 0;
            W = 0;
            O = 0;
            c = 0;
            U = 0;
            S = 0;
            T = 0;
            Q = 0;
            h = 0;
            V = 0;
            M = 0;
            R = 0;
            b = 0;
            f = 0;
            L = 0;
            _a = 42;
          } else {
            ca = M;
            T = 0;
            Y = 0;
            U = 0;
            $ = 0;
            S = 0;
            c = 0;
            f = 0;
            P = 0;
            R = 0;
            L = 0;
            M = 0;
            E = 0;
            g = 0;
            e = 0;
            d = 0;
            ga = 0;
            da = 0;
            O = 0;
            W = 0;
            ba = 0;
            b = -5;
            ea = 0;
            V = 0;
            Q = 0;
            h = 0;
            _a = 511;
          }
        } else {
          e = k[db >> 2] | 0;
          n = a + 64024 | 0;
          d = k[n >> 2] | 0;
          fa = a + 64028 | 0;
          Ua = k[fa >> 2] | 0;
          p = a + 64032 | 0;
          Ta = k[p >> 2] | 0;
          q = a + 64036 | 0;
          Va = k[q >> 2] | 0;
          s = a + 64040 | 0;
          da = k[s >> 2] | 0;
          t = a + 64044 | 0;
          Y = k[t >> 2] | 0;
          u = a + 64048 | 0;
          aa = k[u >> 2] | 0;
          v = a + 64052 | 0;
          _ = k[v >> 2] | 0;
          Oa = a + 64056 | 0;
          ba = k[Oa >> 2] | 0;
          Pa = a + 64060 | 0;
          Wa = k[Pa >> 2] | 0;
          D = a + 64064 | 0;
          Z = k[D >> 2] | 0;
          B = a + 64068 | 0;
          c = k[B >> 2] | 0;
          ga = a + 64072 | 0;
          Xa = k[ga >> 2] | 0;
          ha = a + 64076 | 0;
          S = k[ha >> 2] | 0;
          ia = a + 64080 | 0;
          T = k[ia >> 2] | 0;
          F = a + 64084 | 0;
          Q = k[F >> 2] | 0;
          G = a + 64088 | 0;
          h = k[G >> 2] | 0;
          Ra = a + 64092 | 0;
          X = k[Ra >> 2] | 0;
          I = a + 64096 | 0;
          M = k[I >> 2] | 0;
          Sa = a + 64100 | 0;
          R = k[Sa >> 2] | 0;
          K = a + 64104 | 0;
          b = k[K >> 2] | 0;
          ca = a + 64108 | 0;
          Za = k[ca >> 2] | 0;
          N = a + 64112 | 0;
          L = k[N >> 2] | 0;
          do
            switch (P | 0) {
              case 19:
                {
                  _a = a + 32 | 0;
                  o = fa;
                  qa = v;
                  z = Oa;
                  C = Pa;
                  ea = D;
                  fa = B;
                  H = Ra;
                  J = Sa;
                  E = _a;
                  pa = Ua;
                  $ = Ta;
                  la = Va;
                  W = Wa;
                  U = Xa;
                  V = X;
                  O = Za;
                  v = k[_a >> 2] | 0;
                  _a = 109;
                  break a;
                }
              case 18:
                {
                  g = a + 32 | 0;
                  o = fa;
                  qa = v;
                  z = Oa;
                  C = Pa;
                  ea = D;
                  fa = B;
                  H = Ra;
                  J = Sa;
                  E = g;
                  pa = Ua;
                  $ = Ta;
                  la = Va;
                  W = Wa;
                  U = Xa;
                  V = X;
                  O = Za;
                  g = k[g >> 2] | 0;
                  _a = 101;
                  break a;
                }
              case 17:
                {
                  g = a + 32 | 0;
                  o = fa;
                  P = v;
                  z = Oa;
                  C = Pa;
                  ea = D;
                  fa = B;
                  H = Ra;
                  J = Sa;
                  E = g;
                  g = k[g >> 2] | 0;
                  pa = Ua;
                  $ = Ta;
                  la = Va;
                  W = Wa;
                  U = Xa;
                  V = X;
                  O = Za;
                  _a = 93;
                  break a;
                }
              case 25:
                {
                  f = a + 32 | 0;
                  o = fa;
                  z = Oa;
                  oa = Pa;
                  fa = B;
                  H = Ra;
                  J = Sa;
                  E = f;
                  ea = Ua;
                  $ = Ta;
                  la = Va;
                  W = Wa;
                  ka = c;
                  U = Xa;
                  V = X;
                  O = Za;
                  f = k[f >> 2] | 0;
                  _a = 160;
                  break a;
                }
              case 24:
                {
                  f = a + 32 | 0;
                  o = fa;
                  z = Oa;
                  oa = Pa;
                  fa = B;
                  H = Ra;
                  J = Sa;
                  E = f;
                  ea = Ua;
                  $ = Ta;
                  la = Va;
                  W = Wa;
                  ka = c;
                  U = Xa;
                  V = X;
                  P = b;
                  O = Za;
                  f = k[f >> 2] | 0;
                  _a = 152;
                  break a;
                }
              case 14:
                {
                  o = fa;
                  P = v;
                  z = Oa;
                  C = Pa;
                  ea = D;
                  fa = B;
                  H = Ra;
                  J = Sa;
                  E = a + 32 | 0;
                  pa = Ua;
                  $ = Ta;
                  la = Va;
                  W = Wa;
                  U = Xa;
                  O = Za;
                  _a = 69;
                  break a;
                }
              case 20:
                {
                  o = fa;
                  z = Oa;
                  oa = Pa;
                  fa = B;
                  H = Ra;
                  J = Sa;
                  E = a + 32 | 0;
                  ea = Ua;
                  $ = Ta;
                  la = Va;
                  W = Wa;
                  ka = c;
                  U = Xa;
                  V = X;
                  O = Za;
                  _a = 120;
                  break a;
                }
              case 50:
                {
                  f = a + 32 | 0;
                  o = fa;
                  ka = v;
                  fa = Oa;
                  C = Pa;
                  A = ga;
                  H = Ra;
                  J = Sa;
                  E = f;
                  f = k[f >> 2] | 0;
                  ea = Ua;
                  $ = Ta;
                  ga = Va;
                  W = Wa;
                  V = c;
                  U = Xa;
                  P = b;
                  O = Za;
                  _a = 502;
                  break a;
                }
              case 49:
                {
                  f = a + 32 | 0;
                  o = fa;
                  ka = v;
                  fa = Oa;
                  C = Pa;
                  A = ga;
                  H = Ra;
                  J = Sa;
                  E = f;
                  f = k[f >> 2] | 0;
                  ea = Ua;
                  $ = Ta;
                  ga = Va;
                  W = Wa;
                  V = c;
                  U = Xa;
                  P = b;
                  O = Za;
                  _a = 494;
                  break a;
                }
              case 48:
                {
                  f = a + 32 | 0;
                  o = fa;
                  ka = v;
                  fa = Oa;
                  C = Pa;
                  A = ga;
                  H = Ra;
                  J = Sa;
                  E = f;
                  f = k[f >> 2] | 0;
                  ea = Ua;
                  $ = Ta;
                  ga = Va;
                  W = Wa;
                  V = c;
                  U = Xa;
                  P = b;
                  O = Za;
                  _a = 486;
                  break a;
                }
              case 16:
                {
                  g = a + 32 | 0;
                  o = fa;
                  P = v;
                  z = Oa;
                  C = Pa;
                  ea = D;
                  fa = B;
                  H = Ra;
                  J = Sa;
                  E = g;
                  g = k[g >> 2] | 0;
                  pa = Ua;
                  $ = Ta;
                  la = Va;
                  W = Wa;
                  U = Xa;
                  V = X;
                  O = Za;
                  _a = 85;
                  break a;
                }
              case 15:
                {
                  f = a + 32 | 0;
                  o = fa;
                  P = v;
                  z = Oa;
                  C = Pa;
                  ea = D;
                  fa = B;
                  H = Ra;
                  J = Sa;
                  E = f;
                  f = k[f >> 2] | 0;
                  pa = Ua;
                  $ = Ta;
                  la = Va;
                  W = Wa;
                  U = Xa;
                  V = X;
                  O = Za;
                  _a = 77;
                  break a;
                }
              case 13:
                {
                  pa = a + 32 | 0;
                  o = fa;
                  P = v;
                  ua = Oa;
                  C = Pa;
                  ea = D;
                  fa = B;
                  H = Ra;
                  J = Sa;
                  E = pa;
                  v = k[pa >> 2] | 0;
                  pa = Ua;
                  $ = Ta;
                  la = Va;
                  W = Wa;
                  O = Z;
                  U = Xa;
                  V = X;
                  f = Za;
                  _a = 58;
                  break a;
                }
              case 12:
                {
                  g = a + 32 | 0;
                  o = fa;
                  P = v;
                  z = Oa;
                  C = Pa;
                  ea = D;
                  fa = B;
                  H = Ra;
                  J = Sa;
                  E = g;
                  pa = Ua;
                  $ = Ta;
                  la = Va;
                  W = Wa;
                  O = Z;
                  U = Xa;
                  V = X;
                  f = Za;
                  g = k[g >> 2] | 0;
                  _a = 50;
                  break a;
                }
              case 37:
                {
                  f = a + 32 | 0;
                  o = fa;
                  ka = Oa;
                  ja = Pa;
                  H = Ra;
                  J = Sa;
                  W = f;
                  la = c;
                  U = Xa;
                  f = k[f >> 2] | 0;
                  $ = Ta;
                  na = Za;
                  P = b;
                  E = aa;
                  fa = Va;
                  O = Z;
                  ma = Wa;
                  ea = Ua;
                  V = X;
                  _a = 302;
                  break a;
                }
              case 39:
                {
                  f = a + 32 | 0;
                  o = fa;
                  ma = Oa;
                  la = Pa;
                  H = Ra;
                  J = Sa;
                  W = f;
                  f = k[f >> 2] | 0;
                  U = Xa;
                  $ = Ta;
                  na = c;
                  oa = Za;
                  P = b;
                  E = aa;
                  fa = Va;
                  O = Z;
                  ka = Wa;
                  ea = Ua;
                  V = X;
                  _a = 333;
                  break a;
                }
              case 41:
                {
                  f = a + 32 | 0;
                  o = fa;
                  z = Oa;
                  na = Pa;
                  ma = B;
                  H = Ra;
                  J = Sa;
                  W = f;
                  f = k[f >> 2] | 0;
                  U = Xa;
                  $ = Ta;
                  oa = c;
                  la = Za;
                  P = b;
                  E = aa;
                  fa = Va;
                  O = Z;
                  ka = Wa;
                  ea = Ua;
                  V = X;
                  _a = 386;
                  break a;
                }
              case 47:
                {
                  f = a + 32 | 0;
                  o = fa;
                  ka = v;
                  fa = Oa;
                  C = Pa;
                  A = ga;
                  H = Ra;
                  J = Sa;
                  E = f;
                  f = k[f >> 2] | 0;
                  ea = Ua;
                  $ = Ta;
                  ga = Va;
                  W = Wa;
                  V = c;
                  U = Xa;
                  P = b;
                  O = Za;
                  _a = 478;
                  break a;
                }
              case 46:
                {
                  f = a + 32 | 0;
                  o = fa;
                  ka = v;
                  fa = Oa;
                  C = Pa;
                  A = ga;
                  H = Ra;
                  J = Sa;
                  E = f;
                  f = k[f >> 2] | 0;
                  ea = Ua;
                  $ = Ta;
                  ga = Va;
                  W = Wa;
                  V = c;
                  U = Xa;
                  P = b;
                  O = Za;
                  _a = 469;
                  break a;
                }
              case 45:
                {
                  f = a + 32 | 0;
                  o = fa;
                  ka = v;
                  fa = Oa;
                  C = Pa;
                  A = ga;
                  H = Ra;
                  J = Sa;
                  E = f;
                  f = k[f >> 2] | 0;
                  ea = Ua;
                  $ = Ta;
                  ga = Va;
                  W = Wa;
                  V = c;
                  U = Xa;
                  P = b;
                  O = Za;
                  _a = 461;
                  break a;
                }
              case 44:
                {
                  f = a + 32 | 0;
                  o = fa;
                  ka = v;
                  fa = Oa;
                  C = Pa;
                  A = ga;
                  H = Ra;
                  J = Sa;
                  E = f;
                  f = k[f >> 2] | 0;
                  ea = Ua;
                  $ = Ta;
                  ga = Va;
                  W = Wa;
                  V = c;
                  U = Xa;
                  P = b;
                  O = Za;
                  _a = 453;
                  break a;
                }
              case 43:
                {
                  f = a + 32 | 0;
                  o = fa;
                  ka = v;
                  fa = Oa;
                  C = Pa;
                  A = ga;
                  H = Ra;
                  J = Sa;
                  E = f;
                  f = k[f >> 2] | 0;
                  ea = Ua;
                  $ = Ta;
                  ga = Va;
                  W = Wa;
                  V = c;
                  U = Xa;
                  P = b;
                  O = Za;
                  _a = 445;
                  break a;
                }
              case 42:
                {
                  f = a + 32 | 0;
                  o = fa;
                  ka = v;
                  ma = Oa;
                  C = Pa;
                  A = ga;
                  H = Ra;
                  J = Sa;
                  E = f;
                  f = k[f >> 2] | 0;
                  ea = Ua;
                  $ = Ta;
                  ga = Va;
                  W = Wa;
                  V = c;
                  U = Xa;
                  P = b;
                  O = Za;
                  _a = 437;
                  break a;
                }
              case 35:
                {
                  f = a + 32 | 0;
                  o = fa;
                  z = Oa;
                  oa = Pa;
                  na = B;
                  H = Ra;
                  J = Sa;
                  la = N;
                  N = f;
                  E = aa;
                  W = Wa;
                  O = Z;
                  ma = c;
                  U = Xa;
                  V = X;
                  P = b;
                  ka = Za;
                  f = k[f >> 2] | 0;
                  $ = Ta;
                  fa = Va;
                  ea = Ua;
                  _a = 274;
                  break a;
                }
              case 23:
                {
                  f = a + 32 | 0;
                  o = fa;
                  z = Oa;
                  oa = Pa;
                  fa = B;
                  H = Ra;
                  J = Sa;
                  E = f;
                  ea = Ua;
                  $ = Ta;
                  la = Va;
                  W = Wa;
                  ka = c;
                  U = Xa;
                  V = X;
                  O = Za;
                  f = k[f >> 2] | 0;
                  _a = 144;
                  break a;
                }
              case 22:
                {
                  f = a + 32 | 0;
                  o = fa;
                  z = Oa;
                  oa = Pa;
                  fa = B;
                  H = Ra;
                  J = Sa;
                  E = f;
                  ea = Ua;
                  $ = Ta;
                  la = Va;
                  W = Wa;
                  ka = c;
                  U = Xa;
                  V = X;
                  O = Za;
                  f = k[f >> 2] | 0;
                  _a = 136;
                  break a;
                }
              case 21:
                {
                  f = a + 32 | 0;
                  o = fa;
                  z = Oa;
                  oa = Pa;
                  fa = B;
                  H = Ra;
                  J = Sa;
                  E = f;
                  ea = Ua;
                  $ = Ta;
                  la = Va;
                  W = Wa;
                  ka = c;
                  U = Xa;
                  V = X;
                  O = Za;
                  f = k[f >> 2] | 0;
                  _a = 128;
                  break a;
                }
              case 31:
                {
                  f = a + 32 | 0;
                  o = fa;
                  z = Oa;
                  pa = Pa;
                  oa = B;
                  H = Ra;
                  J = Sa;
                  O = f;
                  ea = Ua;
                  E = aa;
                  W = Wa;
                  la = c;
                  U = Xa;
                  V = X;
                  ka = Za;
                  f = k[f >> 2] | 0;
                  $ = Ta;
                  fa = Va;
                  _a = 223;
                  break a;
                }
              case 27:
                {
                  f = a + 32 | 0;
                  o = fa;
                  z = Oa;
                  oa = Pa;
                  fa = B;
                  H = Ra;
                  J = Sa;
                  E = f;
                  ea = Ua;
                  $ = Ta;
                  la = Va;
                  W = Wa;
                  ka = c;
                  U = Xa;
                  V = X;
                  O = Za;
                  f = k[f >> 2] | 0;
                  _a = 176;
                  break a;
                }
              case 26:
                {
                  f = a + 32 | 0;
                  o = fa;
                  z = Oa;
                  oa = Pa;
                  fa = B;
                  H = Ra;
                  J = Sa;
                  E = f;
                  ea = Ua;
                  $ = Ta;
                  la = Va;
                  W = Wa;
                  ka = c;
                  U = Xa;
                  V = X;
                  O = Za;
                  f = k[f >> 2] | 0;
                  _a = 168;
                  break a;
                }
              case 11:
                {
                  g = a + 32 | 0;
                  o = fa;
                  P = v;
                  z = Oa;
                  C = Pa;
                  ea = D;
                  fa = B;
                  H = Ra;
                  J = Sa;
                  E = g;
                  pa = Ua;
                  $ = Ta;
                  la = Va;
                  W = Wa;
                  O = Z;
                  U = Xa;
                  V = X;
                  f = Za;
                  g = k[g >> 2] | 0;
                  _a = 42;
                  break a;
                }
              case 28:
                {
                  o = fa;
                  z = Oa;
                  na = Pa;
                  ma = B;
                  H = Ra;
                  J = Sa;
                  ea = Ua;
                  $ = Ta;
                  fa = Va;
                  W = Wa;
                  la = c;
                  U = Xa;
                  V = X;
                  P = b;
                  O = Za;
                  _a = 187;
                  break a;
                }
              case 29:
                {
                  o = fa;
                  z = Oa;
                  na = Pa;
                  ma = B;
                  H = Ra;
                  J = Sa;
                  ea = Ua;
                  $ = Ta;
                  fa = Va;
                  W = Wa;
                  la = c;
                  U = Xa;
                  V = X;
                  P = b;
                  O = Za;
                  _a = 198;
                  break a;
                }
              case 30:
                {
                  o = fa;
                  z = Oa;
                  pa = Pa;
                  oa = B;
                  H = Ra;
                  J = Sa;
                  ea = Ua;
                  fa = Va;
                  E = aa;
                  W = Wa;
                  la = c;
                  U = Xa;
                  V = X;
                  ka = Za;
                  $ = Ta;
                  _a = 215;
                  break a;
                }
              case 32:
                {
                  o = fa;
                  qa = v;
                  z = Oa;
                  pa = Pa;
                  oa = B;
                  H = Ra;
                  J = Sa;
                  ea = Ua;
                  W = Wa;
                  O = Z;
                  la = c;
                  U = Xa;
                  V = X;
                  ka = Za;
                  $ = Ta;
                  fa = Va;
                  _a = 233;
                  break a;
                }
              case 33:
                {
                  o = fa;
                  z = Oa;
                  la = Pa;
                  ja = B;
                  H = Ra;
                  J = Sa;
                  E = aa;
                  W = Wa;
                  O = Z;
                  ma = c;
                  U = Xa;
                  V = X;
                  P = b;
                  ka = Za;
                  $ = Ta;
                  fa = Va;
                  ea = Ua;
                  _a = 256;
                  break a;
                }
              case 34:
                {
                  o = fa;
                  z = Oa;
                  oa = Pa;
                  na = B;
                  H = Ra;
                  J = Sa;
                  la = N;
                  E = aa;
                  W = Wa;
                  O = Z;
                  ma = c;
                  U = Xa;
                  V = X;
                  P = b;
                  ka = Za;
                  $ = Ta;
                  fa = Va;
                  ea = Ua;
                  _a = 266;
                  break a;
                }
              case 36:
                {
                  o = fa;
                  z = Oa;
                  C = Pa;
                  ja = D;
                  ka = B;
                  H = Ra;
                  J = Sa;
                  la = c;
                  U = Xa;
                  V = X;
                  $ = Ta;
                  X = Za;
                  P = b;
                  E = aa;
                  fa = Va;
                  O = Z;
                  W = Wa;
                  ea = Ua;
                  oa = Q;
                  _a = 291;
                  break a;
                }
              case 38:
                {
                  o = fa;
                  ma = v;
                  z = Oa;
                  la = Pa;
                  ka = B;
                  H = Ra;
                  J = Sa;
                  U = Xa;
                  $ = Ta;
                  na = c;
                  ja = Za;
                  oa = R;
                  E = aa;
                  fa = Va;
                  O = Z;
                  W = Wa;
                  ea = Ua;
                  V = X;
                  qa = Q;
                  _a = 322;
                  break a;
                }
              case 40:
                {
                  o = fa;
                  z = Oa;
                  ma = Pa;
                  ka = B;
                  H = Ra;
                  J = Sa;
                  U = Xa;
                  $ = Ta;
                  la = c;
                  na = Za;
                  P = b;
                  E = aa;
                  fa = Va;
                  O = Z;
                  W = Wa;
                  ea = Ua;
                  V = X;
                  qa = Q;
                  _a = 375;
                  break a;
                }
              default:
                kk(4001);
            }
 while (0);
        }
 while (0);
      b: do
        if ((_a | 0) == 42) {
          k[cb >> 2] = 11;
          D = a + 28 | 0;
          if ((g | 0) > 7)
            v = k[D >> 2] | 0;
          else {
            B = Na + 4 | 0;
            A = Na + 8 | 0;
            y = Na + 12 | 0;
            x = k[B >> 2] | 0;
            do {
              if (!x) {
                v = P;
                D = ea;
                B = fa;
                A = ga;
                y = ha;
                x = ia;
                P = b;
                E = aa;
                g = _;
                ga = la;
                b = 0;
                ea = pa;
                _a = 511;
                break b;
              }
              _a = k[Na >> 2] | 0;
              v = l[_a >> 0] | k[D >> 2] << 8;
              k[D >> 2] = v;
              g = g + 8 | 0;
              k[E >> 2] = g;
              k[Na >> 2] = _a + 1;
              x = x + -1 | 0;
              k[B >> 2] = x;
              _a = (k[A >> 2] | 0) + 1 | 0;
              k[A >> 2] = _a;
              if (!_a)
                k[y >> 2] = (k[y >> 2] | 0) + 1;
            } while ((g | 0) <= 7);
          }
          g = g + -8 | 0;
          k[E >> 2] = g;
          if ((v >>> g & 255 | 0) == 90)
            _a = 50;
          else {
            v = P;
            D = ea;
            B = fa;
            A = ga;
            y = ha;
            x = ia;
            P = b;
            E = aa;
            g = _;
            ga = la;
            b = -5;
            ea = pa;
            _a = 511;
          }
        }
 while (0);
      c: do
        if ((_a | 0) == 50) {
          k[cb >> 2] = 12;
          D = a + 28 | 0;
          if ((g | 0) > 7)
            v = k[D >> 2] | 0;
          else {
            A = Na + 4 | 0;
            y = Na + 8 | 0;
            x = Na + 12 | 0;
            B = k[A >> 2] | 0;
            do {
              if (!B) {
                v = P;
                D = ea;
                B = fa;
                A = ga;
                y = ha;
                x = ia;
                P = b;
                E = aa;
                g = _;
                ga = la;
                b = 0;
                ea = pa;
                _a = 511;
                break c;
              }
              _a = k[Na >> 2] | 0;
              v = l[_a >> 0] | k[D >> 2] << 8;
              k[D >> 2] = v;
              g = g + 8 | 0;
              k[E >> 2] = g;
              k[Na >> 2] = _a + 1;
              B = B + -1 | 0;
              k[A >> 2] = B;
              _a = (k[y >> 2] | 0) + 1 | 0;
              k[y >> 2] = _a;
              if (!_a)
                k[x >> 2] = (k[x >> 2] | 0) + 1;
            } while ((g | 0) <= 7);
          }
          D = g + -8 | 0;
          k[E >> 2] = D;
          if ((v >>> D & 255 | 0) == 104) {
            ua = z;
            v = D;
            _a = 58;
          } else {
            v = P;
            D = ea;
            B = fa;
            A = ga;
            y = ha;
            x = ia;
            P = b;
            E = aa;
            g = _;
            ga = la;
            b = -5;
            ea = pa;
            _a = 511;
          }
        }
 while (0);
      d: do
        if ((_a | 0) == 58) {
          k[cb >> 2] = 13;
          D = a + 28 | 0;
          if ((v | 0) > 7)
            g = k[D >> 2] | 0;
          else {
            B = Na + 4 | 0;
            A = Na + 8 | 0;
            z = Na + 12 | 0;
            y = k[B >> 2] | 0;
            do {
              if (!y) {
                v = P;
                z = ua;
                D = ea;
                B = fa;
                A = ga;
                y = ha;
                x = ia;
                P = b;
                E = aa;
                g = _;
                ga = la;
                b = 0;
                ea = pa;
                _a = 511;
                break d;
              }
              _a = k[Na >> 2] | 0;
              g = l[_a >> 0] | k[D >> 2] << 8;
              k[D >> 2] = g;
              v = v + 8 | 0;
              k[E >> 2] = v;
              k[Na >> 2] = _a + 1;
              y = y + -1 | 0;
              k[B >> 2] = y;
              _a = (k[A >> 2] | 0) + 1 | 0;
              k[A >> 2] = _a;
              if (!_a)
                k[z >> 2] = (k[z >> 2] | 0) + 1;
            } while ((v | 0) <= 7);
          }
          A = v + -8 | 0;
          g = g >>> A & 255;
          k[E >> 2] = A;
          A = a + 36 | 0;
          k[A >> 2] = g;
          if ((g + -49 | 0) >>> 0 <= 8) {
            x = g + -48 | 0;
            k[A >> 2] = x;
            v = Na + 36 | 0;
            g = k[v >> 2] | 0;
            z = Na + 44 | 0;
            y = k[z >> 2] | 0;
            if (!(i[a + 40 >> 0] | 0)) {
              _a = id[g & 63](y, x * 4e5 | 0, 1) | 0;
              k[a + 3148 >> 2] = _a;
              if (!_a) {
                v = P;
                z = ua;
                D = ea;
                B = fa;
                A = ga;
                y = ha;
                x = ia;
                P = b;
                E = aa;
                g = _;
                ga = la;
                b = -3;
                ea = pa;
                _a = 511;
                break;
              } else {
                z = ua;
                Z = O;
                X = V;
                O = f;
                _a = 69;
                break;
              }
            } else {
              Za = id[g & 63](y, x * 2e5 | 0, 1) | 0;
              _a = a + 3152 | 0;
              k[_a >> 2] = Za;
              Za = id[k[v >> 2] & 63](k[z >> 2] | 0, (k[A >> 2] | 0) * 1e5 >> 1, 1) | 0;
              k[a + 3156 >> 2] = Za;
              if ((Za | 0) == 0 | (k[_a >> 2] | 0) == 0) {
                v = P;
                z = ua;
                D = ea;
                B = fa;
                A = ga;
                y = ha;
                x = ia;
                P = b;
                E = aa;
                g = _;
                ga = la;
                b = -3;
                ea = pa;
                _a = 511;
                break;
              } else {
                z = ua;
                Z = O;
                X = V;
                O = f;
                _a = 69;
                break;
              }
            }
          } else {
            v = P;
            z = ua;
            D = ea;
            B = fa;
            A = ga;
            y = ha;
            x = ia;
            P = b;
            E = aa;
            g = _;
            ga = la;
            b = -5;
            ea = pa;
            _a = 511;
          }
        }
 while (0);
      e: do
        if ((_a | 0) == 69) {
          k[cb >> 2] = 14;
          g = k[E >> 2] | 0;
          D = a + 28 | 0;
          if ((g | 0) > 7)
            v = k[D >> 2] | 0;
          else {
            A = k[a >> 2] | 0;
            B = A + 4 | 0;
            y = A + 8 | 0;
            x = A + 12 | 0;
            f = k[B >> 2] | 0;
            do {
              if (!f) {
                v = P;
                D = ea;
                B = fa;
                A = ga;
                y = ha;
                x = ia;
                f = O;
                P = b;
                E = aa;
                g = _;
                ga = la;
                O = Z;
                b = 0;
                ea = pa;
                V = X;
                _a = 511;
                break e;
              }
              _a = k[A >> 2] | 0;
              v = l[_a >> 0] | k[D >> 2] << 8;
              k[D >> 2] = v;
              g = g + 8 | 0;
              k[E >> 2] = g;
              k[A >> 2] = _a + 1;
              f = f + -1 | 0;
              k[B >> 2] = f;
              _a = (k[y >> 2] | 0) + 1 | 0;
              k[y >> 2] = _a;
              if (!_a)
                k[x >> 2] = (k[x >> 2] | 0) + 1;
            } while ((g | 0) <= 7);
          }
          f = g + -8 | 0;
          k[E >> 2] = f;
          switch (v >>> f & 255 | 0) {
            case 49:
              {
                V = X;
                _a = 77;
                break;
              }
            case 23:
              {
                ka = P;
                ma = z;
                D = ea;
                B = fa;
                A = ga;
                ea = pa;
                ga = la;
                V = c;
                P = b;
                _a = 437;
                break;
              }
            default:
              {
                v = P;
                D = ea;
                B = fa;
                A = ga;
                y = ha;
                x = ia;
                f = O;
                P = b;
                E = aa;
                g = _;
                ga = la;
                O = Z;
                b = -4;
                ea = pa;
                V = X;
                _a = 511;
              }
          }
        }
 while (0);
      f: do
        if ((_a | 0) == 77) {
          k[cb >> 2] = 15;
          D = a + 28 | 0;
          if ((f | 0) > 7)
            v = k[D >> 2] | 0;
          else {
            A = k[a >> 2] | 0;
            B = A + 4 | 0;
            y = A + 8 | 0;
            x = A + 12 | 0;
            g = k[B >> 2] | 0;
            do {
              if (!g) {
                v = P;
                D = ea;
                B = fa;
                A = ga;
                y = ha;
                x = ia;
                f = O;
                P = b;
                E = aa;
                g = _;
                ga = la;
                O = Z;
                b = 0;
                ea = pa;
                _a = 511;
                break f;
              }
              _a = k[A >> 2] | 0;
              v = l[_a >> 0] | k[D >> 2] << 8;
              k[D >> 2] = v;
              f = f + 8 | 0;
              k[E >> 2] = f;
              k[A >> 2] = _a + 1;
              g = g + -1 | 0;
              k[B >> 2] = g;
              _a = (k[y >> 2] | 0) + 1 | 0;
              k[y >> 2] = _a;
              if (!_a)
                k[x >> 2] = (k[x >> 2] | 0) + 1;
            } while ((f | 0) <= 7);
          }
          g = f + -8 | 0;
          k[E >> 2] = g;
          if ((v >>> g & 255 | 0) == 65)
            _a = 85;
          else {
            v = P;
            D = ea;
            B = fa;
            A = ga;
            y = ha;
            x = ia;
            f = O;
            P = b;
            E = aa;
            g = _;
            ga = la;
            O = Z;
            b = -4;
            ea = pa;
            _a = 511;
          }
        } else if ((_a | 0) == 437) {
          k[cb >> 2] = 42;
          z = a + 28 | 0;
          if ((f | 0) > 7)
            g = k[z >> 2] | 0;
          else {
            c = k[a >> 2] | 0;
            v = c + 4 | 0;
            b = c + 8 | 0;
            x = c + 12 | 0;
            y = k[v >> 2] | 0;
            do {
              if (!y) {
                v = ka;
                z = ma;
                y = ha;
                x = ia;
                c = V;
                f = O;
                E = aa;
                g = _;
                O = Z;
                b = 0;
                V = X;
                _a = 511;
                break f;
              }
              bb = k[c >> 2] | 0;
              g = l[bb >> 0] | k[z >> 2] << 8;
              k[z >> 2] = g;
              f = f + 8 | 0;
              k[E >> 2] = f;
              k[c >> 2] = bb + 1;
              y = y + -1 | 0;
              k[v >> 2] = y;
              bb = (k[b >> 2] | 0) + 1 | 0;
              k[b >> 2] = bb;
              if (!bb)
                k[x >> 2] = (k[x >> 2] | 0) + 1;
            } while ((f | 0) <= 7);
          }
          f = f + -8 | 0;
          k[E >> 2] = f;
          if ((g >>> f & 255 | 0) == 114) {
            fa = ma;
            _a = 445;
          } else {
            v = ka;
            z = ma;
            y = ha;
            x = ia;
            c = V;
            f = O;
            E = aa;
            g = _;
            O = Z;
            b = -4;
            V = X;
            _a = 511;
          }
        }
 while (0);
      g: do
        if ((_a | 0) == 85) {
          k[cb >> 2] = 16;
          D = a + 28 | 0;
          if ((g | 0) > 7)
            v = k[D >> 2] | 0;
          else {
            A = k[a >> 2] | 0;
            B = A + 4 | 0;
            y = A + 8 | 0;
            x = A + 12 | 0;
            f = k[B >> 2] | 0;
            do {
              if (!f) {
                v = P;
                D = ea;
                B = fa;
                A = ga;
                y = ha;
                x = ia;
                f = O;
                P = b;
                E = aa;
                g = _;
                ga = la;
                O = Z;
                b = 0;
                ea = pa;
                _a = 511;
                break g;
              }
              _a = k[A >> 2] | 0;
              v = l[_a >> 0] | k[D >> 2] << 8;
              k[D >> 2] = v;
              g = g + 8 | 0;
              k[E >> 2] = g;
              k[A >> 2] = _a + 1;
              f = f + -1 | 0;
              k[B >> 2] = f;
              _a = (k[y >> 2] | 0) + 1 | 0;
              k[y >> 2] = _a;
              if (!_a)
                k[x >> 2] = (k[x >> 2] | 0) + 1;
            } while ((g | 0) <= 7);
          }
          g = g + -8 | 0;
          k[E >> 2] = g;
          if ((v >>> g & 255 | 0) == 89)
            _a = 93;
          else {
            v = P;
            D = ea;
            B = fa;
            A = ga;
            y = ha;
            x = ia;
            f = O;
            P = b;
            E = aa;
            g = _;
            ga = la;
            O = Z;
            b = -4;
            ea = pa;
            _a = 511;
          }
        } else if ((_a | 0) == 445) {
          k[cb >> 2] = 43;
          z = a + 28 | 0;
          if ((f | 0) > 7)
            g = k[z >> 2] | 0;
          else {
            c = k[a >> 2] | 0;
            v = c + 4 | 0;
            y = c + 8 | 0;
            x = c + 12 | 0;
            b = k[v >> 2] | 0;
            do {
              if (!b) {
                v = ka;
                z = fa;
                y = ha;
                x = ia;
                c = V;
                f = O;
                E = aa;
                g = _;
                O = Z;
                b = 0;
                V = X;
                _a = 511;
                break g;
              }
              bb = k[c >> 2] | 0;
              g = l[bb >> 0] | k[z >> 2] << 8;
              k[z >> 2] = g;
              f = f + 8 | 0;
              k[E >> 2] = f;
              k[c >> 2] = bb + 1;
              b = b + -1 | 0;
              k[v >> 2] = b;
              bb = (k[y >> 2] | 0) + 1 | 0;
              k[y >> 2] = bb;
              if (!bb)
                k[x >> 2] = (k[x >> 2] | 0) + 1;
            } while ((f | 0) <= 7);
          }
          f = f + -8 | 0;
          k[E >> 2] = f;
          if ((g >>> f & 255 | 0) == 69)
            _a = 453;
          else {
            v = ka;
            z = fa;
            y = ha;
            x = ia;
            c = V;
            f = O;
            E = aa;
            g = _;
            O = Z;
            b = -4;
            V = X;
            _a = 511;
          }
        }
 while (0);
      h: do
        if ((_a | 0) == 93) {
          k[cb >> 2] = 17;
          D = a + 28 | 0;
          if ((g | 0) > 7)
            v = k[D >> 2] | 0;
          else {
            A = k[a >> 2] | 0;
            B = A + 4 | 0;
            y = A + 8 | 0;
            x = A + 12 | 0;
            f = k[B >> 2] | 0;
            do {
              if (!f) {
                v = P;
                D = ea;
                B = fa;
                A = ga;
                y = ha;
                x = ia;
                f = O;
                P = b;
                E = aa;
                g = _;
                ga = la;
                O = Z;
                b = 0;
                ea = pa;
                _a = 511;
                break h;
              }
              _a = k[A >> 2] | 0;
              v = l[_a >> 0] | k[D >> 2] << 8;
              k[D >> 2] = v;
              g = g + 8 | 0;
              k[E >> 2] = g;
              k[A >> 2] = _a + 1;
              f = f + -1 | 0;
              k[B >> 2] = f;
              _a = (k[y >> 2] | 0) + 1 | 0;
              k[y >> 2] = _a;
              if (!_a)
                k[x >> 2] = (k[x >> 2] | 0) + 1;
            } while ((g | 0) <= 7);
          }
          g = g + -8 | 0;
          k[E >> 2] = g;
          if ((v >>> g & 255 | 0) == 38) {
            qa = P;
            _a = 101;
          } else {
            v = P;
            D = ea;
            B = fa;
            A = ga;
            y = ha;
            x = ia;
            f = O;
            P = b;
            E = aa;
            g = _;
            ga = la;
            O = Z;
            b = -4;
            ea = pa;
            _a = 511;
          }
        } else if ((_a | 0) == 453) {
          k[cb >> 2] = 44;
          z = a + 28 | 0;
          if ((f | 0) > 7)
            g = k[z >> 2] | 0;
          else {
            c = k[a >> 2] | 0;
            v = c + 4 | 0;
            y = c + 8 | 0;
            x = c + 12 | 0;
            b = k[v >> 2] | 0;
            do {
              if (!b) {
                v = ka;
                z = fa;
                y = ha;
                x = ia;
                c = V;
                f = O;
                E = aa;
                g = _;
                O = Z;
                b = 0;
                V = X;
                _a = 511;
                break h;
              }
              bb = k[c >> 2] | 0;
              g = l[bb >> 0] | k[z >> 2] << 8;
              k[z >> 2] = g;
              f = f + 8 | 0;
              k[E >> 2] = f;
              k[c >> 2] = bb + 1;
              b = b + -1 | 0;
              k[v >> 2] = b;
              bb = (k[y >> 2] | 0) + 1 | 0;
              k[y >> 2] = bb;
              if (!bb)
                k[x >> 2] = (k[x >> 2] | 0) + 1;
            } while ((f | 0) <= 7);
          }
          f = f + -8 | 0;
          k[E >> 2] = f;
          if ((g >>> f & 255 | 0) == 56)
            _a = 461;
          else {
            v = ka;
            z = fa;
            y = ha;
            x = ia;
            c = V;
            f = O;
            E = aa;
            g = _;
            O = Z;
            b = -4;
            V = X;
            _a = 511;
          }
        }
 while (0);
      i: do
        if ((_a | 0) == 101) {
          k[cb >> 2] = 18;
          D = a + 28 | 0;
          if ((g | 0) > 7)
            v = k[D >> 2] | 0;
          else {
            A = k[a >> 2] | 0;
            B = A + 4 | 0;
            y = A + 8 | 0;
            x = A + 12 | 0;
            f = k[B >> 2] | 0;
            do {
              if (!f) {
                v = qa;
                D = ea;
                B = fa;
                A = ga;
                y = ha;
                x = ia;
                f = O;
                P = b;
                E = aa;
                g = _;
                ga = la;
                O = Z;
                b = 0;
                ea = pa;
                _a = 511;
                break i;
              }
              _a = k[A >> 2] | 0;
              v = l[_a >> 0] | k[D >> 2] << 8;
              k[D >> 2] = v;
              g = g + 8 | 0;
              k[E >> 2] = g;
              k[A >> 2] = _a + 1;
              f = f + -1 | 0;
              k[B >> 2] = f;
              _a = (k[y >> 2] | 0) + 1 | 0;
              k[y >> 2] = _a;
              if (!_a)
                k[x >> 2] = (k[x >> 2] | 0) + 1;
            } while ((g | 0) <= 7);
          }
          P = g + -8 | 0;
          k[E >> 2] = P;
          if ((v >>> P & 255 | 0) == 83) {
            v = P;
            _a = 109;
          } else {
            v = qa;
            D = ea;
            B = fa;
            A = ga;
            y = ha;
            x = ia;
            f = O;
            P = b;
            E = aa;
            g = _;
            ga = la;
            O = Z;
            b = -4;
            ea = pa;
            _a = 511;
          }
        } else if ((_a | 0) == 461) {
          k[cb >> 2] = 45;
          z = a + 28 | 0;
          if ((f | 0) > 7)
            g = k[z >> 2] | 0;
          else {
            c = k[a >> 2] | 0;
            v = c + 4 | 0;
            y = c + 8 | 0;
            x = c + 12 | 0;
            b = k[v >> 2] | 0;
            do {
              if (!b) {
                v = ka;
                z = fa;
                y = ha;
                x = ia;
                c = V;
                f = O;
                E = aa;
                g = _;
                O = Z;
                b = 0;
                V = X;
                _a = 511;
                break i;
              }
              bb = k[c >> 2] | 0;
              g = l[bb >> 0] | k[z >> 2] << 8;
              k[z >> 2] = g;
              f = f + 8 | 0;
              k[E >> 2] = f;
              k[c >> 2] = bb + 1;
              b = b + -1 | 0;
              k[v >> 2] = b;
              bb = (k[y >> 2] | 0) + 1 | 0;
              k[y >> 2] = bb;
              if (!bb)
                k[x >> 2] = (k[x >> 2] | 0) + 1;
            } while ((f | 0) <= 7);
          }
          f = f + -8 | 0;
          k[E >> 2] = f;
          if ((g >>> f & 255 | 0) == 80)
            _a = 469;
          else {
            v = ka;
            z = fa;
            y = ha;
            x = ia;
            c = V;
            f = O;
            E = aa;
            g = _;
            O = Z;
            b = -4;
            V = X;
            _a = 511;
          }
        }
 while (0);
      j: do
        if ((_a | 0) == 109) {
          k[cb >> 2] = 19;
          D = a + 28 | 0;
          if ((v | 0) > 7)
            g = k[D >> 2] | 0;
          else {
            A = k[a >> 2] | 0;
            B = A + 4 | 0;
            y = A + 8 | 0;
            x = A + 12 | 0;
            f = k[B >> 2] | 0;
            do {
              if (!f) {
                v = qa;
                D = ea;
                B = fa;
                A = ga;
                y = ha;
                x = ia;
                f = O;
                P = b;
                E = aa;
                g = _;
                ga = la;
                O = Z;
                b = 0;
                ea = pa;
                _a = 511;
                break j;
              }
              _a = k[A >> 2] | 0;
              g = l[_a >> 0] | k[D >> 2] << 8;
              k[D >> 2] = g;
              v = v + 8 | 0;
              k[E >> 2] = v;
              k[A >> 2] = _a + 1;
              f = f + -1 | 0;
              k[B >> 2] = f;
              _a = (k[y >> 2] | 0) + 1 | 0;
              k[y >> 2] = _a;
              if (!_a)
                k[x >> 2] = (k[x >> 2] | 0) + 1;
            } while ((v | 0) <= 7);
          }
          _a = v + -8 | 0;
          k[E >> 2] = _a;
          if ((g >>> _a & 255 | 0) == 89) {
            _a = a + 44 | 0;
            g = (k[_a >> 2] | 0) + 1 | 0;
            k[_a >> 2] = g;
            if ((k[a + 48 >> 2] | 0) > 1) {
              _a = k[w >> 2] | 0;
              k[Qa >> 2] = g;
              Ib(_a | 0, 1003153, Qa | 0) | 0;
            }
            k[a + 3160 >> 2] = 0;
            v = qa;
            oa = C;
            D = ea;
            ea = pa;
            ka = c;
            _a = 120;
          } else {
            v = qa;
            D = ea;
            B = fa;
            A = ga;
            y = ha;
            x = ia;
            f = O;
            P = b;
            E = aa;
            g = _;
            ga = la;
            O = Z;
            b = -4;
            ea = pa;
            _a = 511;
          }
        } else if ((_a | 0) == 469) {
          k[cb >> 2] = 46;
          z = a + 28 | 0;
          if ((f | 0) > 7)
            g = k[z >> 2] | 0;
          else {
            c = k[a >> 2] | 0;
            v = c + 4 | 0;
            y = c + 8 | 0;
            x = c + 12 | 0;
            b = k[v >> 2] | 0;
            do {
              if (!b) {
                v = ka;
                z = fa;
                y = ha;
                x = ia;
                c = V;
                f = O;
                E = aa;
                g = _;
                O = Z;
                b = 0;
                V = X;
                _a = 511;
                break j;
              }
              bb = k[c >> 2] | 0;
              g = l[bb >> 0] | k[z >> 2] << 8;
              k[z >> 2] = g;
              f = f + 8 | 0;
              k[E >> 2] = f;
              k[c >> 2] = bb + 1;
              b = b + -1 | 0;
              k[v >> 2] = b;
              bb = (k[y >> 2] | 0) + 1 | 0;
              k[y >> 2] = bb;
              if (!bb)
                k[x >> 2] = (k[x >> 2] | 0) + 1;
            } while ((f | 0) <= 7);
          }
          f = f + -8 | 0;
          k[E >> 2] = f;
          if ((g >>> f & 255 | 0) == 144) {
            k[a + 3164 >> 2] = 0;
            _a = 478;
          } else {
            v = ka;
            z = fa;
            y = ha;
            x = ia;
            c = V;
            f = O;
            E = aa;
            g = _;
            O = Z;
            b = -4;
            V = X;
            _a = 511;
          }
        }
 while (0);
      k: do
        if ((_a | 0) == 120) {
          k[cb >> 2] = 20;
          f = k[E >> 2] | 0;
          c = a + 28 | 0;
          if ((f | 0) > 7)
            g = k[c >> 2] | 0;
          else {
            B = k[a >> 2] | 0;
            C = B + 4 | 0;
            A = B + 8 | 0;
            y = B + 12 | 0;
            x = k[C >> 2] | 0;
            do {
              if (!x) {
                C = oa;
                B = fa;
                A = ga;
                y = ha;
                x = ia;
                c = ka;
                f = O;
                P = b;
                E = aa;
                g = _;
                ga = la;
                O = Z;
                b = 0;
                _a = 511;
                break k;
              }
              _a = k[B >> 2] | 0;
              g = l[_a >> 0] | k[c >> 2] << 8;
              k[c >> 2] = g;
              f = f + 8 | 0;
              k[E >> 2] = f;
              k[B >> 2] = _a + 1;
              x = x + -1 | 0;
              k[C >> 2] = x;
              _a = (k[A >> 2] | 0) + 1 | 0;
              k[A >> 2] = _a;
              if (!_a)
                k[y >> 2] = (k[y >> 2] | 0) + 1;
            } while ((f | 0) <= 7);
          }
          f = f + -8 | 0;
          k[E >> 2] = f;
          _a = a + 3160 | 0;
          k[_a >> 2] = k[_a >> 2] << 8 | g >>> f & 255;
          _a = 128;
        } else if ((_a | 0) == 478) {
          k[cb >> 2] = 47;
          z = a + 28 | 0;
          if ((f | 0) > 7)
            g = k[z >> 2] | 0;
          else {
            c = k[a >> 2] | 0;
            v = c + 4 | 0;
            y = c + 8 | 0;
            x = c + 12 | 0;
            b = k[v >> 2] | 0;
            do {
              if (!b) {
                v = ka;
                z = fa;
                y = ha;
                x = ia;
                c = V;
                f = O;
                E = aa;
                g = _;
                O = Z;
                b = 0;
                V = X;
                _a = 511;
                break k;
              }
              bb = k[c >> 2] | 0;
              g = l[bb >> 0] | k[z >> 2] << 8;
              k[z >> 2] = g;
              f = f + 8 | 0;
              k[E >> 2] = f;
              k[c >> 2] = bb + 1;
              b = b + -1 | 0;
              k[v >> 2] = b;
              bb = (k[y >> 2] | 0) + 1 | 0;
              k[y >> 2] = bb;
              if (!bb)
                k[x >> 2] = (k[x >> 2] | 0) + 1;
            } while ((f | 0) <= 7);
          }
          f = f + -8 | 0;
          k[E >> 2] = f;
          _a = a + 3164 | 0;
          k[_a >> 2] = k[_a >> 2] << 8 | g >>> f & 255;
          _a = 486;
        }
 while (0);
      l: do
        if ((_a | 0) == 128) {
          k[cb >> 2] = 21;
          c = a + 28 | 0;
          if ((f | 0) > 7)
            g = k[c >> 2] | 0;
          else {
            B = k[a >> 2] | 0;
            C = B + 4 | 0;
            A = B + 8 | 0;
            y = B + 12 | 0;
            x = k[C >> 2] | 0;
            do {
              if (!x) {
                C = oa;
                B = fa;
                A = ga;
                y = ha;
                x = ia;
                c = ka;
                f = O;
                P = b;
                E = aa;
                g = _;
                ga = la;
                O = Z;
                b = 0;
                _a = 511;
                break l;
              }
              _a = k[B >> 2] | 0;
              g = l[_a >> 0] | k[c >> 2] << 8;
              k[c >> 2] = g;
              f = f + 8 | 0;
              k[E >> 2] = f;
              k[B >> 2] = _a + 1;
              x = x + -1 | 0;
              k[C >> 2] = x;
              _a = (k[A >> 2] | 0) + 1 | 0;
              k[A >> 2] = _a;
              if (!_a)
                k[y >> 2] = (k[y >> 2] | 0) + 1;
            } while ((f | 0) <= 7);
          }
          f = f + -8 | 0;
          k[E >> 2] = f;
          _a = a + 3160 | 0;
          k[_a >> 2] = k[_a >> 2] << 8 | g >>> f & 255;
          _a = 136;
        } else if ((_a | 0) == 486) {
          k[cb >> 2] = 48;
          z = a + 28 | 0;
          if ((f | 0) > 7)
            g = k[z >> 2] | 0;
          else {
            c = k[a >> 2] | 0;
            v = c + 4 | 0;
            y = c + 8 | 0;
            x = c + 12 | 0;
            b = k[v >> 2] | 0;
            do {
              if (!b) {
                v = ka;
                z = fa;
                y = ha;
                x = ia;
                c = V;
                f = O;
                E = aa;
                g = _;
                O = Z;
                b = 0;
                V = X;
                _a = 511;
                break l;
              }
              bb = k[c >> 2] | 0;
              g = l[bb >> 0] | k[z >> 2] << 8;
              k[z >> 2] = g;
              f = f + 8 | 0;
              k[E >> 2] = f;
              k[c >> 2] = bb + 1;
              b = b + -1 | 0;
              k[v >> 2] = b;
              bb = (k[y >> 2] | 0) + 1 | 0;
              k[y >> 2] = bb;
              if (!bb)
                k[x >> 2] = (k[x >> 2] | 0) + 1;
            } while ((f | 0) <= 7);
          }
          f = f + -8 | 0;
          k[E >> 2] = f;
          _a = a + 3164 | 0;
          k[_a >> 2] = k[_a >> 2] << 8 | g >>> f & 255;
          _a = 494;
        }
 while (0);
      m: do
        if ((_a | 0) == 136) {
          k[cb >> 2] = 22;
          c = a + 28 | 0;
          if ((f | 0) > 7)
            g = k[c >> 2] | 0;
          else {
            B = k[a >> 2] | 0;
            C = B + 4 | 0;
            A = B + 8 | 0;
            y = B + 12 | 0;
            x = k[C >> 2] | 0;
            do {
              if (!x) {
                C = oa;
                B = fa;
                A = ga;
                y = ha;
                x = ia;
                c = ka;
                f = O;
                P = b;
                E = aa;
                g = _;
                ga = la;
                O = Z;
                b = 0;
                _a = 511;
                break m;
              }
              _a = k[B >> 2] | 0;
              g = l[_a >> 0] | k[c >> 2] << 8;
              k[c >> 2] = g;
              f = f + 8 | 0;
              k[E >> 2] = f;
              k[B >> 2] = _a + 1;
              x = x + -1 | 0;
              k[C >> 2] = x;
              _a = (k[A >> 2] | 0) + 1 | 0;
              k[A >> 2] = _a;
              if (!_a)
                k[y >> 2] = (k[y >> 2] | 0) + 1;
            } while ((f | 0) <= 7);
          }
          f = f + -8 | 0;
          k[E >> 2] = f;
          _a = a + 3160 | 0;
          k[_a >> 2] = k[_a >> 2] << 8 | g >>> f & 255;
          _a = 144;
        } else if ((_a | 0) == 494) {
          k[cb >> 2] = 49;
          z = a + 28 | 0;
          if ((f | 0) > 7)
            g = k[z >> 2] | 0;
          else {
            c = k[a >> 2] | 0;
            v = c + 4 | 0;
            y = c + 8 | 0;
            x = c + 12 | 0;
            b = k[v >> 2] | 0;
            do {
              if (!b) {
                v = ka;
                z = fa;
                y = ha;
                x = ia;
                c = V;
                f = O;
                E = aa;
                g = _;
                O = Z;
                b = 0;
                V = X;
                _a = 511;
                break m;
              }
              bb = k[c >> 2] | 0;
              g = l[bb >> 0] | k[z >> 2] << 8;
              k[z >> 2] = g;
              f = f + 8 | 0;
              k[E >> 2] = f;
              k[c >> 2] = bb + 1;
              b = b + -1 | 0;
              k[v >> 2] = b;
              bb = (k[y >> 2] | 0) + 1 | 0;
              k[y >> 2] = bb;
              if (!bb)
                k[x >> 2] = (k[x >> 2] | 0) + 1;
            } while ((f | 0) <= 7);
          }
          f = f + -8 | 0;
          k[E >> 2] = f;
          _a = a + 3164 | 0;
          k[_a >> 2] = k[_a >> 2] << 8 | g >>> f & 255;
          _a = 502;
        }
 while (0);
      n: do
        if ((_a | 0) == 144) {
          k[cb >> 2] = 23;
          c = a + 28 | 0;
          if ((f | 0) > 7)
            g = k[c >> 2] | 0;
          else {
            B = k[a >> 2] | 0;
            C = B + 4 | 0;
            A = B + 8 | 0;
            y = B + 12 | 0;
            x = k[C >> 2] | 0;
            do {
              if (!x) {
                C = oa;
                B = fa;
                A = ga;
                y = ha;
                x = ia;
                c = ka;
                f = O;
                P = b;
                E = aa;
                g = _;
                ga = la;
                O = Z;
                b = 0;
                _a = 511;
                break n;
              }
              _a = k[B >> 2] | 0;
              g = l[_a >> 0] | k[c >> 2] << 8;
              k[c >> 2] = g;
              f = f + 8 | 0;
              k[E >> 2] = f;
              k[B >> 2] = _a + 1;
              x = x + -1 | 0;
              k[C >> 2] = x;
              _a = (k[A >> 2] | 0) + 1 | 0;
              k[A >> 2] = _a;
              if (!_a)
                k[y >> 2] = (k[y >> 2] | 0) + 1;
            } while ((f | 0) <= 7);
          }
          f = f + -8 | 0;
          k[E >> 2] = f;
          P = a + 3160 | 0;
          k[P >> 2] = k[P >> 2] << 8 | g >>> f & 255;
          P = b;
          _a = 152;
        } else if ((_a | 0) == 502) {
          k[cb >> 2] = 50;
          z = a + 28 | 0;
          if ((f | 0) > 7)
            g = k[z >> 2] | 0;
          else {
            c = k[a >> 2] | 0;
            v = c + 4 | 0;
            y = c + 8 | 0;
            x = c + 12 | 0;
            b = k[v >> 2] | 0;
            do {
              if (!b) {
                v = ka;
                z = fa;
                y = ha;
                x = ia;
                c = V;
                f = O;
                E = aa;
                g = _;
                O = Z;
                b = 0;
                V = X;
                _a = 511;
                break n;
              }
              bb = k[c >> 2] | 0;
              g = l[bb >> 0] | k[z >> 2] << 8;
              k[z >> 2] = g;
              f = f + 8 | 0;
              k[E >> 2] = f;
              k[c >> 2] = bb + 1;
              b = b + -1 | 0;
              k[v >> 2] = b;
              bb = (k[y >> 2] | 0) + 1 | 0;
              k[y >> 2] = bb;
              if (!bb)
                k[x >> 2] = (k[x >> 2] | 0) + 1;
            } while ((f | 0) <= 7);
          }
          z = f + -8 | 0;
          k[E >> 2] = z;
          v = a + 3164 | 0;
          k[v >> 2] = k[v >> 2] << 8 | g >>> z & 255;
          k[cb >> 2] = 1;
          v = ka;
          z = fa;
          y = ha;
          x = ia;
          c = V;
          f = O;
          E = aa;
          g = _;
          O = Z;
          b = 4;
          V = X;
          _a = 511;
        }
 while (0);
      o: do
        if ((_a | 0) == 152) {
          k[cb >> 2] = 24;
          b = a + 28 | 0;
          if ((f | 0) > 0)
            g = k[b >> 2] | 0;
          else {
            A = k[a >> 2] | 0;
            C = A + 4 | 0;
            y = A + 8 | 0;
            x = A + 12 | 0;
            c = k[C >> 2] | 0;
            B = f;
            while (1) {
              if (!c) {
                C = oa;
                B = fa;
                A = ga;
                y = ha;
                x = ia;
                c = ka;
                f = O;
                E = aa;
                g = _;
                ga = la;
                O = Z;
                b = 0;
                _a = 511;
                break o;
              }
              _a = k[A >> 2] | 0;
              g = l[_a >> 0] | k[b >> 2] << 8;
              k[b >> 2] = g;
              f = B + 8 | 0;
              k[E >> 2] = f;
              k[A >> 2] = _a + 1;
              c = c + -1 | 0;
              k[C >> 2] = c;
              _a = (k[y >> 2] | 0) + 1 | 0;
              k[y >> 2] = _a;
              if (!_a)
                k[x >> 2] = (k[x >> 2] | 0) + 1;
              if ((B | 0) > -8)
                break;
              else
                B = f;
            }
          }
          f = f + -1 | 0;
          k[E >> 2] = f;
          i[a + 16 >> 0] = g >>> f & 1;
          k[a + 52 >> 2] = 0;
          b = P;
          _a = 160;
        }
 while (0);
      p: do
        if ((_a | 0) == 160) {
          k[cb >> 2] = 25;
          c = a + 28 | 0;
          if ((f | 0) > 7)
            g = k[c >> 2] | 0;
          else {
            B = k[a >> 2] | 0;
            C = B + 4 | 0;
            A = B + 8 | 0;
            y = B + 12 | 0;
            x = k[C >> 2] | 0;
            do {
              if (!x) {
                C = oa;
                B = fa;
                A = ga;
                y = ha;
                x = ia;
                c = ka;
                f = O;
                P = b;
                E = aa;
                g = _;
                ga = la;
                O = Z;
                b = 0;
                _a = 511;
                break p;
              }
              _a = k[B >> 2] | 0;
              g = l[_a >> 0] | k[c >> 2] << 8;
              k[c >> 2] = g;
              f = f + 8 | 0;
              k[E >> 2] = f;
              k[B >> 2] = _a + 1;
              x = x + -1 | 0;
              k[C >> 2] = x;
              _a = (k[A >> 2] | 0) + 1 | 0;
              k[A >> 2] = _a;
              if (!_a)
                k[y >> 2] = (k[y >> 2] | 0) + 1;
            } while ((f | 0) <= 7);
          }
          f = f + -8 | 0;
          k[E >> 2] = f;
          _a = a + 52 | 0;
          k[_a >> 2] = k[_a >> 2] << 8 | g >>> f & 255;
          _a = 168;
        }
 while (0);
      q: do
        if ((_a | 0) == 168) {
          k[cb >> 2] = 26;
          c = a + 28 | 0;
          if ((f | 0) > 7)
            g = k[c >> 2] | 0;
          else {
            B = k[a >> 2] | 0;
            C = B + 4 | 0;
            A = B + 8 | 0;
            y = B + 12 | 0;
            x = k[C >> 2] | 0;
            do {
              if (!x) {
                C = oa;
                B = fa;
                A = ga;
                y = ha;
                x = ia;
                c = ka;
                f = O;
                P = b;
                E = aa;
                g = _;
                ga = la;
                O = Z;
                b = 0;
                _a = 511;
                break q;
              }
              _a = k[B >> 2] | 0;
              g = l[_a >> 0] | k[c >> 2] << 8;
              k[c >> 2] = g;
              f = f + 8 | 0;
              k[E >> 2] = f;
              k[B >> 2] = _a + 1;
              x = x + -1 | 0;
              k[C >> 2] = x;
              _a = (k[A >> 2] | 0) + 1 | 0;
              k[A >> 2] = _a;
              if (!_a)
                k[y >> 2] = (k[y >> 2] | 0) + 1;
            } while ((f | 0) <= 7);
          }
          f = f + -8 | 0;
          k[E >> 2] = f;
          _a = a + 52 | 0;
          k[_a >> 2] = k[_a >> 2] << 8 | g >>> f & 255;
          _a = 176;
        }
 while (0);
      r: do
        if ((_a | 0) == 176) {
          k[cb >> 2] = 27;
          c = a + 28 | 0;
          if ((f | 0) > 7)
            g = k[c >> 2] | 0;
          else {
            B = k[a >> 2] | 0;
            C = B + 4 | 0;
            A = B + 8 | 0;
            y = B + 12 | 0;
            x = k[C >> 2] | 0;
            do {
              if (!x) {
                C = oa;
                B = fa;
                A = ga;
                y = ha;
                x = ia;
                c = ka;
                f = O;
                P = b;
                E = aa;
                g = _;
                ga = la;
                O = Z;
                b = 0;
                _a = 511;
                break r;
              }
              _a = k[B >> 2] | 0;
              g = l[_a >> 0] | k[c >> 2] << 8;
              k[c >> 2] = g;
              f = f + 8 | 0;
              k[E >> 2] = f;
              k[B >> 2] = _a + 1;
              x = x + -1 | 0;
              k[C >> 2] = x;
              _a = (k[A >> 2] | 0) + 1 | 0;
              k[A >> 2] = _a;
              if (!_a)
                k[y >> 2] = (k[y >> 2] | 0) + 1;
            } while ((f | 0) <= 7);
          }
          _a = f + -8 | 0;
          k[E >> 2] = _a;
          Za = a + 52 | 0;
          _a = k[Za >> 2] << 8 | g >>> _a & 255;
          k[Za >> 2] = _a;
          if ((_a | 0) >= 0 ? (_a | 0) <= ((k[a + 36 >> 2] | 0) * 1e5 | 10 | 0) : 0) {
            C = oa;
            B = fa;
            A = ga;
            y = ha;
            x = ia;
            fa = la;
            E = aa;
            X = ka;
            e = 0;
            _a = 185;
          } else {
            C = oa;
            B = fa;
            A = ga;
            y = ha;
            x = ia;
            c = ka;
            f = O;
            P = b;
            E = aa;
            g = _;
            ga = la;
            O = Z;
            b = -4;
            _a = 511;
          }
        }
 while (0);
      s: while (1) {
        switch (_a | 0) {
          case 185:
            {
              if ((e | 0) < 16) {
                na = C;
                ma = B;
                ga = A;
                ha = y;
                ia = x;
                aa = E;
                la = X;
                P = b;
                _a = 187;
                continue s;
              }
              wr(a + 3180 | 0, 0, 256) | 0;
              e = 0;
              _a = 195;
              break;
            }
          case 187:
            {
              k[cb >> 2] = 28;
              E = a + 32 | 0;
              f = k[E >> 2] | 0;
              b = a + 28 | 0;
              if ((f | 0) > 0)
                g = k[b >> 2] | 0;
              else {
                C = k[a >> 2] | 0;
                A = C + 4 | 0;
                y = C + 8 | 0;
                x = C + 12 | 0;
                c = k[A >> 2] | 0;
                B = f;
                while (1) {
                  if (!c) {
                    C = na;
                    B = ma;
                    A = ga;
                    y = ha;
                    x = ia;
                    c = la;
                    f = O;
                    E = aa;
                    g = _;
                    ga = fa;
                    O = Z;
                    b = 0;
                    _a = 511;
                    continue s;
                  }
                  _a = k[C >> 2] | 0;
                  g = l[_a >> 0] | k[b >> 2] << 8;
                  k[b >> 2] = g;
                  f = B + 8 | 0;
                  k[E >> 2] = f;
                  k[C >> 2] = _a + 1;
                  c = c + -1 | 0;
                  k[A >> 2] = c;
                  _a = (k[y >> 2] | 0) + 1 | 0;
                  k[y >> 2] = _a;
                  if (!_a)
                    k[x >> 2] = (k[x >> 2] | 0) + 1;
                  if ((B | 0) > -8)
                    break;
                  else
                    B = f;
                }
              }
              C = f + -1 | 0;
              k[E >> 2] = C;
              i[a + 3436 + e >> 0] = (g & 1 << C | 0) != 0 & 1;
              C = na;
              B = ma;
              A = ga;
              y = ha;
              x = ia;
              E = aa;
              X = la;
              b = P;
              e = e + 1 | 0;
              _a = 185;
              continue s;
            }
          case 198:
            {
              k[cb >> 2] = 29;
              E = a + 32 | 0;
              f = k[E >> 2] | 0;
              b = a + 28 | 0;
              if ((f | 0) > 0)
                g = k[b >> 2] | 0;
              else {
                C = k[a >> 2] | 0;
                A = C + 4 | 0;
                y = C + 8 | 0;
                x = C + 12 | 0;
                c = k[A >> 2] | 0;
                B = f;
                while (1) {
                  if (!c) {
                    C = na;
                    B = ma;
                    A = ga;
                    y = ha;
                    x = ia;
                    c = la;
                    f = O;
                    E = aa;
                    g = _;
                    ga = fa;
                    O = Z;
                    b = 0;
                    _a = 511;
                    continue s;
                  }
                  _a = k[C >> 2] | 0;
                  g = l[_a >> 0] | k[b >> 2] << 8;
                  k[b >> 2] = g;
                  f = B + 8 | 0;
                  k[E >> 2] = f;
                  k[C >> 2] = _a + 1;
                  c = c + -1 | 0;
                  k[A >> 2] = c;
                  _a = (k[y >> 2] | 0) + 1 | 0;
                  k[y >> 2] = _a;
                  if (!_a)
                    k[x >> 2] = (k[x >> 2] | 0) + 1;
                  if ((B | 0) > -8)
                    break;
                  else
                    B = f;
                }
              }
              _a = f + -1 | 0;
              k[E >> 2] = _a;
              if (g & 1 << _a)
                i[(e << 4) + d + (a + 3180) >> 0] = 1;
              C = na;
              B = ma;
              A = ga;
              y = ha;
              x = ia;
              E = aa;
              X = la;
              b = P;
              d = d + 1 | 0;
              _a = 197;
              break;
            }
          case 215:
            {
              k[cb >> 2] = 30;
              O = a + 32 | 0;
              f = k[O >> 2] | 0;
              c = a + 28 | 0;
              if ((f | 0) > 2)
                g = k[c >> 2] | 0;
              else {
                B = k[a >> 2] | 0;
                C = B + 4 | 0;
                A = B + 8 | 0;
                y = B + 12 | 0;
                x = k[C >> 2] | 0;
                while (1) {
                  if (!x) {
                    C = pa;
                    B = oa;
                    A = ga;
                    y = ha;
                    x = ia;
                    c = la;
                    f = ka;
                    P = b;
                    g = _;
                    ga = fa;
                    O = Z;
                    b = 0;
                    _a = 511;
                    continue s;
                  }
                  _a = k[B >> 2] | 0;
                  g = l[_a >> 0] | k[c >> 2] << 8;
                  k[c >> 2] = g;
                  f = f + 8 | 0;
                  k[O >> 2] = f;
                  k[B >> 2] = _a + 1;
                  x = x + -1 | 0;
                  k[C >> 2] = x;
                  _a = (k[A >> 2] | 0) + 1 | 0;
                  k[A >> 2] = _a;
                  if (!_a)
                    k[y >> 2] = (k[y >> 2] | 0) + 1;
                  if ((f | 0) > 2)
                    break;
                }
              }
              f = f + -3 | 0;
              fa = g >>> f & 7;
              k[O >> 2] = f;
              switch (fa | 0) {
                case 0:
                case 1:
                case 7:
                  {
                    C = pa;
                    B = oa;
                    A = ga;
                    y = ha;
                    x = ia;
                    c = la;
                    f = ka;
                    P = b;
                    g = _;
                    ga = fa;
                    O = Z;
                    b = -4;
                    _a = 511;
                    continue s;
                  }
                default:
                  {
                    _a = 223;
                    continue s;
                  }
              }
            }
          case 223:
            {
              k[cb >> 2] = 31;
              c = a + 28 | 0;
              if ((f | 0) > 14)
                g = k[c >> 2] | 0;
              else {
                B = k[a >> 2] | 0;
                C = B + 4 | 0;
                A = B + 8 | 0;
                y = B + 12 | 0;
                x = k[C >> 2] | 0;
                while (1) {
                  if (!x) {
                    C = pa;
                    B = oa;
                    A = ga;
                    y = ha;
                    x = ia;
                    c = la;
                    f = ka;
                    P = b;
                    g = _;
                    ga = fa;
                    O = Z;
                    b = 0;
                    _a = 511;
                    continue s;
                  }
                  _a = k[B >> 2] | 0;
                  g = l[_a >> 0] | k[c >> 2] << 8;
                  k[c >> 2] = g;
                  f = f + 8 | 0;
                  k[O >> 2] = f;
                  k[B >> 2] = _a + 1;
                  x = x + -1 | 0;
                  k[C >> 2] = x;
                  _a = (k[A >> 2] | 0) + 1 | 0;
                  k[A >> 2] = _a;
                  if (!_a)
                    k[y >> 2] = (k[y >> 2] | 0) + 1;
                  if ((f | 0) > 14)
                    break;
                }
              }
              _a = f + -15 | 0;
              g = g >>> _a & 32767;
              k[O >> 2] = _a;
              if (!g) {
                C = pa;
                B = oa;
                A = ga;
                y = ha;
                x = ia;
                c = la;
                f = ka;
                P = b;
                g = _;
                ga = fa;
                da = 0;
                O = Z;
                b = -4;
                _a = 511;
                continue s;
              } else {
                C = pa;
                B = oa;
                A = ga;
                y = ha;
                x = ia;
                f = ea;
                X = Y;
                O = Z;
                P = b;
                e = 0;
                da = g;
                _a = 231;
              }
              break;
            }
          case 233:
            {
              E = a + 32 | 0;
              c = a + 28 | 0;
              g = k[E >> 2] | 0;
              while (1) {
                k[cb >> 2] = 32;
                if ((g | 0) > 0)
                  v = k[c >> 2] | 0;
                else {
                  C = k[a >> 2] | 0;
                  A = C + 4 | 0;
                  y = C + 8 | 0;
                  x = C + 12 | 0;
                  f = k[A >> 2] | 0;
                  B = g;
                  while (1) {
                    if (!f) {
                      v = qa;
                      C = pa;
                      B = oa;
                      A = ga;
                      y = ha;
                      x = ia;
                      c = la;
                      f = ka;
                      P = b;
                      E = aa;
                      g = _;
                      ga = fa;
                      b = 0;
                      _a = 511;
                      continue s;
                    }
                    _a = k[C >> 2] | 0;
                    v = l[_a >> 0] | k[c >> 2] << 8;
                    k[c >> 2] = v;
                    g = B + 8 | 0;
                    k[E >> 2] = g;
                    k[C >> 2] = _a + 1;
                    f = f + -1 | 0;
                    k[A >> 2] = f;
                    _a = (k[y >> 2] | 0) + 1 | 0;
                    k[y >> 2] = _a;
                    if (!_a)
                      k[x >> 2] = (k[x >> 2] | 0) + 1;
                    if ((B | 0) > -8)
                      break;
                    else
                      B = g;
                  }
                }
                g = g + -1 | 0;
                k[E >> 2] = g;
                if (!(v & 1 << g))
                  break;
                d = d + 1 | 0;
                if ((d | 0) >= (fa | 0)) {
                  v = qa;
                  C = pa;
                  B = oa;
                  A = ga;
                  y = ha;
                  x = ia;
                  c = la;
                  f = ka;
                  P = b;
                  E = aa;
                  g = _;
                  ga = fa;
                  b = -4;
                  _a = 511;
                  continue s;
                }
              }
              i[a + 25870 + e >> 0] = d;
              v = qa;
              C = pa;
              B = oa;
              A = ga;
              y = ha;
              x = ia;
              f = ea;
              X = Y;
              E = aa;
              P = b;
              e = e + 1 | 0;
              _a = 231;
              break;
            }
          case 256:
            {
              k[cb >> 2] = 33;
              b = a + 32 | 0;
              g = k[b >> 2] | 0;
              C = a + 28 | 0;
              if ((g | 0) > 4)
                c = k[C >> 2] | 0;
              else {
                x = k[a >> 2] | 0;
                y = x + 4 | 0;
                B = x + 8 | 0;
                A = x + 12 | 0;
                f = k[y >> 2] | 0;
                while (1) {
                  if (!f) {
                    C = la;
                    B = ja;
                    A = ga;
                    y = ha;
                    x = ia;
                    c = ma;
                    f = ka;
                    g = _;
                    ga = fa;
                    b = 0;
                    _a = 511;
                    continue s;
                  }
                  _a = k[x >> 2] | 0;
                  c = l[_a >> 0] | k[C >> 2] << 8;
                  k[C >> 2] = c;
                  g = g + 8 | 0;
                  k[b >> 2] = g;
                  k[x >> 2] = _a + 1;
                  f = f + -1 | 0;
                  k[y >> 2] = f;
                  _a = (k[B >> 2] | 0) + 1 | 0;
                  k[B >> 2] = _a;
                  if (!_a)
                    k[A >> 2] = (k[A >> 2] | 0) + 1;
                  if ((g | 0) > 4)
                    break;
                }
              }
              S = g + -5 | 0;
              k[b >> 2] = S;
              C = la;
              B = ja;
              A = ga;
              y = ha;
              x = ia;
              X = Y;
              g = _;
              ia = ma;
              f = ka;
              S = c >>> S & 31;
              e = 0;
              _a = 264;
              break;
            }
          case 266:
            {
              k[cb >> 2] = 34;
              N = a + 32 | 0;
              f = k[N >> 2] | 0;
              C = a + 28 | 0;
              if ((f | 0) > 0)
                g = k[C >> 2] | 0;
              else {
                c = k[a >> 2] | 0;
                x = c + 4 | 0;
                B = c + 8 | 0;
                A = c + 12 | 0;
                b = k[x >> 2] | 0;
                y = f;
                while (1) {
                  if (!b) {
                    C = oa;
                    B = na;
                    A = ga;
                    y = ha;
                    x = ia;
                    N = la;
                    c = ma;
                    f = ka;
                    g = _;
                    ga = fa;
                    b = 0;
                    _a = 511;
                    continue s;
                  }
                  _a = k[c >> 2] | 0;
                  g = l[_a >> 0] | k[C >> 2] << 8;
                  k[C >> 2] = g;
                  f = y + 8 | 0;
                  k[N >> 2] = f;
                  k[c >> 2] = _a + 1;
                  b = b + -1 | 0;
                  k[x >> 2] = b;
                  _a = (k[B >> 2] | 0) + 1 | 0;
                  k[B >> 2] = _a;
                  if (!_a)
                    k[A >> 2] = (k[A >> 2] | 0) + 1;
                  if ((y | 0) > -8)
                    break;
                  else
                    y = f;
                }
              }
              f = f + -1 | 0;
              k[N >> 2] = f;
              if (g & 1 << f) {
                _a = 274;
                continue s;
              }
              i[a + 43872 + (ea * 258 | 0) + e >> 0] = S;
              C = oa;
              B = na;
              A = ga;
              y = ha;
              x = ia;
              N = la;
              X = Y;
              g = _;
              ia = ma;
              f = ka;
              e = e + 1 | 0;
              _a = 264;
              break;
            }
          case 274:
            {
              k[cb >> 2] = 35;
              C = a + 28 | 0;
              if ((f | 0) > 0)
                g = k[C >> 2] | 0;
              else {
                c = k[a >> 2] | 0;
                x = c + 4 | 0;
                B = c + 8 | 0;
                A = c + 12 | 0;
                b = k[x >> 2] | 0;
                y = f;
                while (1) {
                  if (!b) {
                    C = oa;
                    B = na;
                    A = ga;
                    y = ha;
                    x = ia;
                    N = la;
                    c = ma;
                    f = ka;
                    g = _;
                    ga = fa;
                    b = 0;
                    _a = 511;
                    continue s;
                  }
                  _a = k[c >> 2] | 0;
                  g = l[_a >> 0] | k[C >> 2] << 8;
                  k[C >> 2] = g;
                  f = y + 8 | 0;
                  k[N >> 2] = f;
                  k[c >> 2] = _a + 1;
                  b = b + -1 | 0;
                  k[x >> 2] = b;
                  _a = (k[B >> 2] | 0) + 1 | 0;
                  k[B >> 2] = _a;
                  if (!_a)
                    k[A >> 2] = (k[A >> 2] | 0) + 1;
                  if ((y | 0) > -8)
                    break;
                  else
                    y = f;
                }
              }
              _a = f + -1 | 0;
              k[N >> 2] = _a;
              if (!(g & 1 << _a)) {
                C = oa;
                B = na;
                A = ga;
                y = ha;
                x = ia;
                N = la;
                X = Y;
                g = _;
                c = ma;
                f = ka;
                S = S + 1 | 0;
                _a = 265;
                break;
              } else {
                C = oa;
                B = na;
                A = ga;
                y = ha;
                x = ia;
                N = la;
                X = Y;
                g = _;
                c = ma;
                f = ka;
                S = S + -1 | 0;
                _a = 265;
                break;
              }
            }
          case 291:
            {
              k[cb >> 2] = 36;
              D = a + 32 | 0;
              y = k[D >> 2] | 0;
              b = a + 28 | 0;
              if ((y | 0) < (oa | 0)) {
                g = k[a >> 2] | 0;
                x = g + 4 | 0;
                B = g + 8 | 0;
                A = g + 12 | 0;
                f = k[x >> 2] | 0;
                while (1) {
                  if (!f) {
                    D = ja;
                    B = ka;
                    A = ga;
                    y = ha;
                    x = ia;
                    c = la;
                    f = X;
                    g = _;
                    ga = fa;
                    b = 0;
                    Q = oa;
                    _a = 511;
                    continue s;
                  }
                  _a = k[g >> 2] | 0;
                  c = l[_a >> 0] | k[b >> 2] << 8;
                  k[b >> 2] = c;
                  y = y + 8 | 0;
                  k[D >> 2] = y;
                  k[g >> 2] = _a + 1;
                  f = f + -1 | 0;
                  k[x >> 2] = f;
                  _a = (k[B >> 2] | 0) + 1 | 0;
                  k[B >> 2] = _a;
                  if (!_a)
                    k[A >> 2] = (k[A >> 2] | 0) + 1;
                  if ((y | 0) >= (oa | 0)) {
                    h = y;
                    break;
                  }
                }
              } else {
                h = y;
                c = k[b >> 2] | 0;
              }
              h = h - oa | 0;
              k[D >> 2] = h;
              D = ja;
              B = ka;
              A = ga;
              y = ha;
              x = ia;
              f = h;
              Ga = L;
              g = _;
              ma = W;
              Q = oa;
              h = c >>> h & (1 << oa) + -1;
              _a = 299;
              break;
            }
          case 302:
            {
              k[cb >> 2] = 37;
              C = a + 28 | 0;
              if ((f | 0) > 0)
                g = k[C >> 2] | 0;
              else {
                x = k[a >> 2] | 0;
                y = x + 4 | 0;
                c = x + 8 | 0;
                b = x + 12 | 0;
                A = k[y >> 2] | 0;
                z = f;
                while (1) {
                  if (!A) {
                    z = ka;
                    C = ja;
                    A = ga;
                    y = ha;
                    x = ia;
                    c = la;
                    f = na;
                    g = _;
                    ga = fa;
                    W = ma;
                    b = 0;
                    _a = 511;
                    continue s;
                  }
                  _a = k[x >> 2] | 0;
                  g = l[_a >> 0] | k[C >> 2] << 8;
                  k[C >> 2] = g;
                  f = z + 8 | 0;
                  k[W >> 2] = f;
                  k[x >> 2] = _a + 1;
                  A = A + -1 | 0;
                  k[y >> 2] = A;
                  _a = (k[c >> 2] | 0) + 1 | 0;
                  k[c >> 2] = _a;
                  if (!_a)
                    k[b >> 2] = (k[b >> 2] | 0) + 1;
                  if ((z | 0) > -8)
                    break;
                  else
                    z = f;
                }
              }
              f = f + -1 | 0;
              _a = g >>> f & 1;
              k[W >> 2] = f;
              z = ka;
              C = ja;
              A = ga;
              y = ha;
              x = ia;
              X = na;
              Ga = L;
              g = _;
              V = _a;
              h = _a | h << 1;
              _a = 299;
              break;
            }
          case 322:
            {
              k[cb >> 2] = 38;
              B = a + 32 | 0;
              v = k[B >> 2] | 0;
              C = a + 28 | 0;
              if ((v | 0) < (qa | 0)) {
                x = k[a >> 2] | 0;
                y = x + 4 | 0;
                A = x + 8 | 0;
                g = x + 12 | 0;
                f = k[y >> 2] | 0;
                while (1) {
                  if (!f) {
                    v = ma;
                    C = la;
                    B = ka;
                    A = ga;
                    y = ha;
                    x = ia;
                    c = na;
                    f = ja;
                    P = b;
                    R = oa;
                    g = _;
                    ga = fa;
                    b = 0;
                    Q = qa;
                    _a = 511;
                    continue s;
                  }
                  _a = k[x >> 2] | 0;
                  c = l[_a >> 0] | k[C >> 2] << 8;
                  k[C >> 2] = c;
                  v = v + 8 | 0;
                  k[B >> 2] = v;
                  k[x >> 2] = _a + 1;
                  f = f + -1 | 0;
                  k[y >> 2] = f;
                  _a = (k[A >> 2] | 0) + 1 | 0;
                  k[A >> 2] = _a;
                  if (!_a)
                    k[g >> 2] = (k[g >> 2] | 0) + 1;
                  if ((v | 0) >= (qa | 0)) {
                    h = v;
                    break;
                  }
                }
              } else {
                h = v;
                c = k[C >> 2] | 0;
              }
              h = h - qa | 0;
              k[B >> 2] = h;
              v = ma;
              ma = z;
              C = la;
              B = ka;
              A = ga;
              y = ha;
              x = ia;
              f = h;
              X = ja;
              R = oa;
              Ma = E;
              ka = W;
              Q = qa;
              h = c >>> h & (1 << qa) + -1;
              _a = 330;
              break;
            }
          case 333:
            {
              k[cb >> 2] = 39;
              C = a + 28 | 0;
              if ((f | 0) > 0)
                g = k[C >> 2] | 0;
              else {
                x = k[a >> 2] | 0;
                y = x + 4 | 0;
                A = x + 8 | 0;
                c = x + 12 | 0;
                b = k[y >> 2] | 0;
                z = f;
                while (1) {
                  if (!b) {
                    z = ma;
                    C = la;
                    A = ga;
                    y = ha;
                    x = ia;
                    c = na;
                    f = oa;
                    g = _;
                    ga = fa;
                    W = ka;
                    b = 0;
                    _a = 511;
                    continue s;
                  }
                  _a = k[x >> 2] | 0;
                  g = l[_a >> 0] | k[C >> 2] << 8;
                  k[C >> 2] = g;
                  f = z + 8 | 0;
                  k[W >> 2] = f;
                  k[x >> 2] = _a + 1;
                  b = b + -1 | 0;
                  k[y >> 2] = b;
                  _a = (k[A >> 2] | 0) + 1 | 0;
                  k[A >> 2] = _a;
                  if (!_a)
                    k[c >> 2] = (k[c >> 2] | 0) + 1;
                  if ((z | 0) > -8)
                    break;
                  else
                    z = f;
                }
              }
              f = f + -1 | 0;
              _a = g >>> f & 1;
              k[W >> 2] = f;
              C = la;
              A = ga;
              y = ha;
              x = ia;
              X = oa;
              b = P;
              Ma = E;
              V = _a;
              h = _a | h << 1;
              _a = 330;
              break;
            }
          case 375:
            {
              k[cb >> 2] = 40;
              B = a + 32 | 0;
              g = k[B >> 2] | 0;
              C = a + 28 | 0;
              if ((g | 0) < (qa | 0)) {
                x = k[a >> 2] | 0;
                y = x + 4 | 0;
                A = x + 8 | 0;
                f = x + 12 | 0;
                c = k[y >> 2] | 0;
                while (1) {
                  if (!c) {
                    C = ma;
                    B = ka;
                    A = ga;
                    y = ha;
                    x = ia;
                    c = la;
                    f = na;
                    g = _;
                    ga = fa;
                    b = 0;
                    Q = qa;
                    _a = 511;
                    continue s;
                  }
                  _a = k[x >> 2] | 0;
                  b = l[_a >> 0] | k[C >> 2] << 8;
                  k[C >> 2] = b;
                  g = g + 8 | 0;
                  k[B >> 2] = g;
                  k[x >> 2] = _a + 1;
                  c = c + -1 | 0;
                  k[y >> 2] = c;
                  _a = (k[A >> 2] | 0) + 1 | 0;
                  k[A >> 2] = _a;
                  if (!_a)
                    k[f >> 2] = (k[f >> 2] | 0) + 1;
                  if ((g | 0) >= (qa | 0)) {
                    h = g;
                    break;
                  }
                }
              } else {
                h = g;
                b = k[C >> 2] | 0;
              }
              h = h - qa | 0;
              k[B >> 2] = h;
              C = ma;
              B = ka;
              A = ga;
              y = ha;
              x = ia;
              f = h;
              c = la;
              X = na;
              Ha = L;
              g = _;
              ka = W;
              Q = qa;
              h = b >>> h & (1 << qa) + -1;
              _a = 383;
              break;
            }
          case 386:
            {
              k[cb >> 2] = 41;
              C = a + 28 | 0;
              if ((f | 0) > 0)
                g = k[C >> 2] | 0;
              else {
                c = k[a >> 2] | 0;
                x = c + 4 | 0;
                A = c + 8 | 0;
                b = c + 12 | 0;
                B = k[x >> 2] | 0;
                y = f;
                while (1) {
                  if (!B) {
                    C = na;
                    B = ma;
                    A = ga;
                    y = ha;
                    x = ia;
                    c = oa;
                    f = la;
                    g = _;
                    ga = fa;
                    W = ka;
                    b = 0;
                    _a = 511;
                    continue s;
                  }
                  _a = k[c >> 2] | 0;
                  g = l[_a >> 0] | k[C >> 2] << 8;
                  k[C >> 2] = g;
                  f = y + 8 | 0;
                  k[W >> 2] = f;
                  k[c >> 2] = _a + 1;
                  B = B + -1 | 0;
                  k[x >> 2] = B;
                  _a = (k[A >> 2] | 0) + 1 | 0;
                  k[A >> 2] = _a;
                  if (!_a)
                    k[b >> 2] = (k[b >> 2] | 0) + 1;
                  if ((y | 0) > -8)
                    break;
                  else
                    y = f;
                }
              }
              f = f + -1 | 0;
              _a = g >>> f & 1;
              k[W >> 2] = f;
              C = na;
              B = ma;
              A = ga;
              y = ha;
              x = ia;
              c = oa;
              X = la;
              Ha = L;
              g = _;
              V = _a;
              h = _a | h << 1;
              _a = 383;
              break;
            }
          case 511:
            {
              k[db >> 2] = e;
              k[n >> 2] = d;
              k[o >> 2] = ea;
              k[p >> 2] = $;
              k[q >> 2] = ga;
              k[s >> 2] = da;
              k[t >> 2] = Y;
              k[u >> 2] = E;
              k[v >> 2] = g;
              k[z >> 2] = ba;
              k[C >> 2] = W;
              k[D >> 2] = O;
              k[B >> 2] = c;
              k[A >> 2] = U;
              k[y >> 2] = S;
              k[x >> 2] = T;
              k[F >> 2] = Q;
              k[G >> 2] = h;
              k[H >> 2] = V;
              k[I >> 2] = M;
              k[J >> 2] = R;
              k[K >> 2] = P;
              k[ca >> 2] = f;
              k[N >> 2] = L;
              _a = 512;
              break s;
            }
        }
        do
          if ((_a | 0) == 231) {
            if ((e | 0) < (da | 0)) {
              qa = v;
              pa = C;
              oa = B;
              ga = A;
              ha = y;
              ia = x;
              ea = f;
              Y = X;
              aa = E;
              b = P;
              d = 0;
              _a = 233;
              continue s;
            }
            if ((fa | 0) > 0) {
              g = 0;
              f = 0;
              do {
                i[Ya + g >> 0] = f;
                f = f + 1 << 24 >> 24;
                g = f & 255;
              } while ((g | 0) < (fa | 0));
            }
            if ((da | 0) > 0) {
              b = 0;
              do {
                _a = i[a + 25870 + b >> 0] | 0;
                g = _a & 255;
                c = i[Ya + g >> 0] | 0;
                if (_a << 24 >> 24) {
                  f = g;
                  e = g;
                  while (1) {
                    i[Ya + f >> 0] = i[Ya + (f + -1) >> 0] | 0;
                    g = (e & 255) + -1 << 24 >> 24;
                    if (!(g << 24 >> 24))
                      break;
                    else {
                      f = g & 255;
                      e = e + -1 | 0;
                    }
                  }
                }
                i[Ya >> 0] = c;
                i[a + 7868 + b >> 0] = c;
                b = b + 1 | 0;
              } while ((b | 0) != (da | 0));
              g = _;
              c = la;
              Ma = h;
              e = da;
              f = 0;
              _a = 250;
            } else {
              g = _;
              c = la;
              Ma = h;
              e = 0;
              f = 0;
              _a = 250;
            }
          } else if ((_a | 0) == 264)
            if ((e | 0) < ($ | 0)) {
              c = ia;
              _a = 265;
            } else {
              c = ia;
              Ma = h;
              ka = f;
              f = ea + 1 | 0;
              _a = 250;
            }
          else if ((_a | 0) == 299) {
            if ((Q | 0) > 20) {
              c = la;
              f = X;
              L = Ga;
              ga = fa;
              W = ma;
              b = -4;
              _a = 511;
              continue s;
            }
            if ((h | 0) > (k[P + (Q << 2) >> 2] | 0)) {
              ka = z;
              ja = C;
              ga = A;
              ha = y;
              ia = x;
              W = a + 32 | 0;
              na = X;
              L = Ga;
              _ = g;
              Q = Q + 1 | 0;
              _a = 302;
              continue s;
            }
            f = h - (k[X + (Q << 2) >> 2] | 0) | 0;
            if (f >>> 0 > 257) {
              c = la;
              f = X;
              L = Ga;
              ga = fa;
              W = ma;
              b = -4;
              _a = 511;
              continue s;
            }
            Fa = v;
            ga = A;
            ha = y;
            L = Ga;
            Ka = E;
            _ = g;
            La = e;
            Ja = d;
            Ma = O;
            W = ma;
            ba = k[Ga + (f << 2) >> 2] | 0;
            Ia = h;
            _a = 312;
          } else if ((_a | 0) == 330) {
            if ((Q | 0) > 20) {
              z = ma;
              c = na;
              f = X;
              P = b;
              E = Ma;
              g = _;
              ga = fa;
              W = ka;
              b = -4;
              _a = 511;
              continue s;
            }
            if ((h | 0) > (k[b + (Q << 2) >> 2] | 0)) {
              la = C;
              ga = A;
              ha = y;
              ia = x;
              W = a + 32 | 0;
              oa = X;
              P = b;
              E = Ma;
              Q = Q + 1 | 0;
              _a = 333;
              continue s;
            }
            g = h - (k[X + (Q << 2) >> 2] | 0) | 0;
            if (g >>> 0 > 257) {
              z = ma;
              c = na;
              f = X;
              P = b;
              E = Ma;
              g = _;
              ga = fa;
              W = ka;
              b = -4;
              _a = 511;
              continue s;
            }
            ba = k[L + (g << 2) >> 2] | 0;
            if (ba >>> 0 >= 2) {
              c = na + 1 | 0;
              f = i[(l[(k[a + 7804 >> 2] | 0) + (a + 3708) >> 0] | 0) + (a + 3452) >> 0] | 0;
              z = f & 255;
              g = a + 64 + (z << 2) | 0;
              k[g >> 2] = (k[g >> 2] | 0) + c;
              g = (na | 0) > -1;
              if (!(i[a + 40 >> 0] | 0)) {
                if (!g) {
                  Fa = v;
                  z = ma;
                  ga = A;
                  ha = y;
                  la = c;
                  P = b;
                  Ka = Ma;
                  La = e;
                  Ja = d;
                  Ma = O;
                  W = ka;
                  Ia = h;
                  _a = 312;
                  break;
                }
                g = a + 3148 | 0;
                while (1) {
                  if ((O | 0) >= (ka | 0)) {
                    z = ma;
                    f = X;
                    P = b;
                    E = Ma;
                    g = _;
                    ga = fa;
                    W = ka;
                    b = -4;
                    _a = 511;
                    continue s;
                  }
                  k[(k[g >> 2] | 0) + (O << 2) >> 2] = z;
                  O = O + 1 | 0;
                  E = c + -1 | 0;
                  if ((c | 0) > 1)
                    c = E;
                  else {
                    Fa = v;
                    z = ma;
                    ga = A;
                    ha = y;
                    la = E;
                    P = b;
                    Ka = Ma;
                    La = e;
                    Ja = d;
                    Ma = O;
                    W = ka;
                    Ia = h;
                    _a = 312;
                    break;
                  }
                }
              } else {
                if (!g) {
                  Fa = v;
                  z = ma;
                  ga = A;
                  ha = y;
                  la = c;
                  P = b;
                  Ka = Ma;
                  La = e;
                  Ja = d;
                  Ma = O;
                  W = ka;
                  Ia = h;
                  _a = 312;
                  break;
                }
                g = f & 255;
                f = a + 3152 | 0;
                while (1) {
                  if ((O | 0) >= (ka | 0)) {
                    z = ma;
                    f = X;
                    P = b;
                    E = Ma;
                    g = _;
                    ga = fa;
                    W = ka;
                    b = -4;
                    _a = 511;
                    continue s;
                  }
                  j[(k[f >> 2] | 0) + (O << 1) >> 1] = g;
                  O = O + 1 | 0;
                  E = c + -1 | 0;
                  if ((c | 0) > 1)
                    c = E;
                  else {
                    Fa = v;
                    z = ma;
                    ga = A;
                    ha = y;
                    la = E;
                    P = b;
                    Ka = Ma;
                    La = e;
                    Ja = d;
                    Ma = O;
                    W = ka;
                    Ia = h;
                    _a = 312;
                    break;
                  }
                }
              }
            } else {
              z = ma;
              c = na;
              f = X;
              E = Ma;
              g = _;
              W = ka;
              _a = 314;
            }
          } else if ((_a | 0) == 383) {
            if ((Q | 0) > 20) {
              f = X;
              L = Ha;
              ga = fa;
              W = ka;
              b = -4;
              _a = 511;
              continue s;
            }
            if ((h | 0) > (k[P + (Q << 2) >> 2] | 0)) {
              na = C;
              ma = B;
              ga = A;
              ha = y;
              ia = x;
              W = a + 32 | 0;
              oa = c;
              la = X;
              L = Ha;
              _ = g;
              Q = Q + 1 | 0;
              _a = 386;
              continue s;
            }
            f = h - (k[X + (Q << 2) >> 2] | 0) | 0;
            if (f >>> 0 > 257) {
              f = X;
              L = Ha;
              ga = fa;
              W = ka;
              b = -4;
              _a = 511;
              continue s;
            }
            Fa = v;
            ga = A;
            ha = y;
            la = c;
            L = Ha;
            Ka = E;
            _ = g;
            La = e;
            Ja = d;
            Ma = O;
            W = ka;
            ba = k[Ha + (f << 2) >> 2] | 0;
            Ia = h;
            _a = 312;
          }
 while (0);
        do
          if ((_a | 0) == 250) {
            if ((f | 0) < (fa | 0)) {
              la = C;
              ja = B;
              ga = A;
              ha = y;
              ia = x;
              Y = X;
              _ = g;
              ma = c;
              h = Ma;
              ea = f;
              _a = 256;
              continue s;
            }
            t: do
              if ((fa | 0) > 0) {
                if (($ | 0) > 0)
                  e = 0;
                else {
                  h = 0;
                  while (1) {
                    ik(a + 45420 + (h * 1032 | 0) | 0, a + 51612 + (h * 1032 | 0) | 0, a + 57804 + (h * 1032 | 0) | 0, a + 43872 + (h * 258 | 0) | 0, 32, 0, $);
                    k[a + 63996 + (h << 2) >> 2] = 32;
                    h = h + 1 | 0;
                    if ((h | 0) == (fa | 0)) {
                      ea = fa;
                      break t;
                    }
                  }
                }
                do {
                  f = 0;
                  g = 0;
                  h = 32;
                  do {
                    _a = l[a + 43872 + (e * 258 | 0) + f >> 0] | 0;
                    g = (_a | 0) > (g | 0) ? _a : g;
                    h = (_a | 0) < (h | 0) ? _a : h;
                    f = f + 1 | 0;
                  } while ((f | 0) != ($ | 0));
                  ik(a + 45420 + (e * 1032 | 0) | 0, a + 51612 + (e * 1032 | 0) | 0, a + 57804 + (e * 1032 | 0) | 0, a + 43872 + (e * 258 | 0) | 0, h, g, $);
                  k[a + 63996 + (e << 2) >> 2] = h;
                  e = e + 1 | 0;
                } while ((e | 0) != (fa | 0));
                ea = fa;
              } else
                ea = 0;
 while (0);
            O = k[a + 3176 >> 2] | 0;
            W = k[a + 36 >> 2] | 0;
            wr(a + 64 | 0, 0, 1024) | 0;
            O = O + 1 | 0;
            W = W * 1e5 | 0;
            h = 15;
            g = 4080;
            f = 4095;
            while (1) {
              _a = h << 4;
              i[a + 3708 + f >> 0] = _a | 15;
              i[f + -1 + (a + 3708) >> 0] = _a | 14;
              i[f + -2 + (a + 3708) >> 0] = _a | 13;
              i[f + -3 + (a + 3708) >> 0] = _a | 12;
              i[f + -4 + (a + 3708) >> 0] = _a | 11;
              i[f + -5 + (a + 3708) >> 0] = _a | 10;
              i[f + -6 + (a + 3708) >> 0] = _a | 9;
              i[f + -7 + (a + 3708) >> 0] = _a | 8;
              i[f + -8 + (a + 3708) >> 0] = _a | 7;
              i[f + -9 + (a + 3708) >> 0] = _a | 6;
              i[f + -10 + (a + 3708) >> 0] = _a | 5;
              i[f + -11 + (a + 3708) >> 0] = _a | 4;
              i[f + -12 + (a + 3708) >> 0] = _a | 3;
              i[f + -13 + (a + 3708) >> 0] = _a | 2;
              i[f + -14 + (a + 3708) >> 0] = _a | 1;
              i[f + -15 + (a + 3708) >> 0] = _a;
              k[a + 7804 + (h << 2) >> 2] = g;
              if ((h | 0) > 0) {
                h = h + -1 | 0;
                g = g + -16 | 0;
                f = f + -16 | 0;
              } else
                break;
            }
            if ((da | 0) < 1) {
              Y = O;
              f = ka;
              E = 0;
              g = 0;
              e = 256;
              ga = fa;
              O = 0;
              b = -4;
              h = Ma;
              _a = 511;
              continue s;
            }
            M = l[a + 7868 >> 0] | 0;
            oa = k[a + 63996 + (M << 2) >> 2] | 0;
            ja = D;
            ka = B;
            ga = A;
            ha = y;
            ia = x;
            la = c;
            h = Ma;
            Y = O;
            X = a + 51612 + (M * 1032 | 0) | 0;
            P = a + 45420 + (M * 1032 | 0) | 0;
            R = oa;
            L = a + 57804 + (M * 1032 | 0) | 0;
            E = 0;
            _ = 49;
            e = 256;
            O = 0;
            _a = 291;
            continue s;
          } else if ((_a | 0) == 265)
            if ((S + -1 | 0) >>> 0 > 19) {
              Y = X;
              ga = fa;
              b = -4;
              _a = 511;
              continue s;
            } else {
              oa = C;
              na = B;
              ga = A;
              ha = y;
              ia = x;
              la = N;
              Y = X;
              _ = g;
              ma = c;
              ka = f;
              _a = 266;
              continue s;
            }
          else if ((_a | 0) == 312) {
            _a = 0;
            if ((ba | 0) != (Y | 0)) {
              if (ba >>> 0 < 2) {
                v = Fa;
                A = ga;
                y = ha;
                U = 1;
                c = -1;
                f = X;
                b = P;
                E = Ka;
                g = _;
                e = La;
                d = Ja;
                O = Ma;
                h = Ia;
                _a = 314;
                break;
              }
              if ((Ma | 0) >= (W | 0)) {
                v = Fa;
                A = ga;
                y = ha;
                c = la;
                f = X;
                E = Ka;
                g = _;
                e = La;
                d = Ja;
                ga = fa;
                O = Ma;
                b = -4;
                h = Ia;
                _a = 511;
                continue s;
              }
              g = ba + -1 | 0;
              if (g >>> 0 >= 16) {
                A = g >>> 4;
                Za = g & 15;
                y = a + 7804 + (A << 2) | 0;
                v = k[y >> 2] | 0;
                f = v + Za | 0;
                h = i[a + 3708 + f >> 0] | 0;
                if (Za) {
                  v = f;
                  do {
                    f = v;
                    v = v + -1 | 0;
                    i[a + 3708 + f >> 0] = i[a + 3708 + v >> 0] | 0;
                    f = k[y >> 2] | 0;
                  } while ((v | 0) > (f | 0));
                  f = f + 1 | 0;
                  k[y >> 2] = f;
                  if (A) {
                    $a = f;
                    _a = 364;
                  }
                } else {
                  $a = v + 1 | 0;
                  k[y >> 2] = $a;
                  _a = 364;
                }
                if ((_a | 0) == 364 ? (0, _a = $a + -1 | 0, k[a + 7804 + (A << 2) >> 2] = _a, ab = A + -1 | 0, bb = a + 7804 + (ab << 2) | 0, i[a + 3708 + _a >> 0] = i[(k[bb >> 2] | 0) + 15 + (a + 3708) >> 0] | 0, g >>> 0 > 31) : 0) {
                  g = bb;
                  f = ab;
                  do {
                    Za = (k[g >> 2] | 0) + -1 | 0;
                    k[a + 7804 + (f << 2) >> 2] = Za;
                    _a = f;
                    f = f + -1 | 0;
                    g = a + 7804 + (f << 2) | 0;
                    i[a + 3708 + Za >> 0] = i[(k[g >> 2] | 0) + 15 + (a + 3708) >> 0] | 0;
                  } while ((_a | 0) > 1);
                }
                _a = a + 7804 | 0;
                Za = (k[_a >> 2] | 0) + -1 | 0;
                k[_a >> 2] = Za;
                i[a + 3708 + Za >> 0] = h;
                if (!(k[_a >> 2] | 0)) {
                  g = 15;
                  f = 4080;
                  e = 4095;
                  while (1) {
                    _a = a + 7804 + (g << 2) | 0;
                    i[a + 3708 + e >> 0] = i[(k[_a >> 2] | 0) + 15 + (a + 3708) >> 0] | 0;
                    i[e + -1 + (a + 3708) >> 0] = i[(k[_a >> 2] | 0) + 14 + (a + 3708) >> 0] | 0;
                    i[e + -2 + (a + 3708) >> 0] = i[(k[_a >> 2] | 0) + 13 + (a + 3708) >> 0] | 0;
                    i[e + -3 + (a + 3708) >> 0] = i[(k[_a >> 2] | 0) + 12 + (a + 3708) >> 0] | 0;
                    i[e + -4 + (a + 3708) >> 0] = i[(k[_a >> 2] | 0) + 11 + (a + 3708) >> 0] | 0;
                    i[e + -5 + (a + 3708) >> 0] = i[(k[_a >> 2] | 0) + 10 + (a + 3708) >> 0] | 0;
                    i[e + -6 + (a + 3708) >> 0] = i[(k[_a >> 2] | 0) + 9 + (a + 3708) >> 0] | 0;
                    i[e + -7 + (a + 3708) >> 0] = i[(k[_a >> 2] | 0) + 8 + (a + 3708) >> 0] | 0;
                    i[e + -8 + (a + 3708) >> 0] = i[(k[_a >> 2] | 0) + 7 + (a + 3708) >> 0] | 0;
                    i[e + -9 + (a + 3708) >> 0] = i[(k[_a >> 2] | 0) + 6 + (a + 3708) >> 0] | 0;
                    i[e + -10 + (a + 3708) >> 0] = i[(k[_a >> 2] | 0) + 5 + (a + 3708) >> 0] | 0;
                    i[e + -11 + (a + 3708) >> 0] = i[(k[_a >> 2] | 0) + 4 + (a + 3708) >> 0] | 0;
                    i[e + -12 + (a + 3708) >> 0] = i[(k[_a >> 2] | 0) + 3 + (a + 3708) >> 0] | 0;
                    i[e + -13 + (a + 3708) >> 0] = i[(k[_a >> 2] | 0) + 2 + (a + 3708) >> 0] | 0;
                    i[e + -14 + (a + 3708) >> 0] = i[(k[_a >> 2] | 0) + 1 + (a + 3708) >> 0] | 0;
                    i[e + -15 + (a + 3708) >> 0] = i[(k[_a >> 2] | 0) + (a + 3708) >> 0] | 0;
                    k[_a >> 2] = f;
                    if ((g | 0) > 0) {
                      g = g + -1 | 0;
                      f = f + -16 | 0;
                      e = e + -16 | 0;
                    } else
                      break;
                  }
                }
              } else {
                v = k[a + 7804 >> 2] | 0;
                h = i[v + g + (a + 3708) >> 0] | 0;
                if (g >>> 0 > 3) {
                  f = ba + 3 | 0;
                  do {
                    Ya = g + v | 0;
                    Za = Ya + -1 + (a + 3708) | 0;
                    i[a + 3708 + Ya >> 0] = i[Za >> 0] | 0;
                    Xa = Ya + -2 + (a + 3708) | 0;
                    i[Za >> 0] = i[Xa >> 0] | 0;
                    Za = Ya + -3 + (a + 3708) | 0;
                    i[Xa >> 0] = i[Za >> 0] | 0;
                    i[Za >> 0] = i[Ya + -4 + (a + 3708) >> 0] | 0;
                    g = g + -4 | 0;
                  } while (g >>> 0 > 3);
                  g = f & 3;
                  if (g)
                    _a = 358;
                } else
                  _a = 358;
                if ((_a | 0) == 358)
                  while (1) {
                    _a = g + v | 0;
                    i[a + 3708 + _a >> 0] = i[_a + -1 + (a + 3708) >> 0] | 0;
                    g = g + -1 | 0;
                    if (!g)
                      break;
                    else
                      _a = 358;
                  }
                i[a + 3708 + v >> 0] = h;
              }
              h = (h & 255) + (a + 3452) | 0;
              _a = a + 64 + (l[h >> 0] << 2) | 0;
              k[_a >> 2] = (k[_a >> 2] | 0) + 1;
              h = i[h >> 0] | 0;
              if (!(i[a + 40 >> 0] | 0))
                k[(k[a + 3148 >> 2] | 0) + (Ma << 2) >> 2] = h & 255;
              else
                j[(k[a + 3152 >> 2] | 0) + (Ma << 1) >> 1] = h & 255;
              O = Ma + 1 | 0;
              if (!_) {
                E = Ka + 1 | 0;
                if ((E | 0) >= (da | 0)) {
                  v = Fa;
                  A = ga;
                  y = ha;
                  c = la;
                  f = X;
                  g = 0;
                  e = La;
                  d = Ja;
                  ga = fa;
                  b = -4;
                  h = Ia;
                  _a = 511;
                  continue s;
                }
                f = l[a + 7868 + E >> 0] | 0;
                y = a + 51612 + (f * 1032 | 0) | 0;
                h = a + 45420 + (f * 1032 | 0) | 0;
                Q = k[a + 63996 + (f << 2) >> 2] | 0;
                g = a + 57804 + (f * 1032 | 0) | 0;
                A = 50;
              } else {
                y = X;
                h = P;
                Q = R;
                g = L;
                f = M;
                E = Ka;
                A = _;
              }
              v = Fa;
              ma = C;
              ka = B;
              ia = x;
              na = y;
              P = h;
              R = Q;
              L = g;
              M = f;
              _ = A + -1 | 0;
              e = La;
              d = Ja;
              qa = Q;
              h = Ia;
              _a = 375;
              continue s;
            }
            y = a + 52 | 0;
            bb = k[y >> 2] | 0;
            if ((bb | 0) > -1 & (bb | 0) < (Ma | 0))
              e = 0;
            else {
              v = Fa;
              A = ga;
              y = ha;
              Y = ba;
              c = la;
              f = X;
              E = Ka;
              g = _;
              e = La;
              d = Ja;
              ga = fa;
              O = Ma;
              b = -4;
              h = Ia;
              _a = 511;
              continue s;
            }
            while (1) {
              bb = k[a + 64 + (e << 2) >> 2] | 0;
              if ((bb | 0) < 0 | (bb | 0) > (Ma | 0)) {
                v = Fa;
                A = ga;
                y = ha;
                Y = ba;
                c = la;
                f = X;
                E = Ka;
                g = _;
                d = Ja;
                ga = fa;
                O = Ma;
                b = -4;
                h = Ia;
                _a = 511;
                continue s;
              }
              e = e + 1 | 0;
              if ((e | 0) >= 256)
                break;
            }
            b = a + 1092 | 0;
            k[b >> 2] = 0;
            h = 1;
            do {
              k[a + 1092 + (h << 2) >> 2] = k[a + 64 + (h + -1 << 2) >> 2];
              h = h + 1 | 0;
            } while ((h | 0) != 257);
            h = k[b >> 2] | 0;
            g = 1;
            do {
              bb = a + 1092 + (g << 2) | 0;
              h = (k[bb >> 2] | 0) + h | 0;
              k[bb >> 2] = h;
              g = g + 1 | 0;
            } while ((g | 0) != 257);
            e = 0;
            while (1) {
              bb = k[a + 1092 + (e << 2) >> 2] | 0;
              if ((bb | 0) < 0 | (bb | 0) > (Ma | 0)) {
                v = Fa;
                A = ga;
                y = ha;
                Y = ba;
                c = la;
                f = X;
                E = Ka;
                g = _;
                d = Ja;
                ga = fa;
                O = Ma;
                b = -4;
                h = Ia;
                _a = 511;
                continue s;
              }
              e = e + 1 | 0;
              if ((e | 0) >= 257)
                break;
            }
            h = k[b >> 2] | 0;
            e = 1;
            while (1) {
              bb = h;
              h = k[a + 1092 + (e << 2) >> 2] | 0;
              if ((bb | 0) > (h | 0)) {
                v = Fa;
                A = ga;
                y = ha;
                Y = ba;
                c = la;
                f = X;
                E = Ka;
                g = _;
                d = Ja;
                ga = fa;
                O = Ma;
                b = -4;
                h = Ia;
                _a = 511;
                continue s;
              }
              e = e + 1 | 0;
              if ((e | 0) >= 257)
                break;
            }
            k[a + 12 >> 2] = 0;
            i[a + 8 >> 0] = 0;
            k[a + 3168 >> 2] = -1;
            k[cb >> 2] = 2;
            if ((k[a + 48 >> 2] | 0) > 1)
              Ec(1003173, 6, 1, k[w >> 2] | 0) | 0;
            if (!(i[a + 40 >> 0] | 0)) {
              g = a + 3148 | 0;
              if ((Ma | 0) > 0) {
                h = 0;
                do {
                  bb = k[g >> 2] | 0;
                  cb = a + 1092 + ((k[bb + (h << 2) >> 2] & 255) << 2) | 0;
                  bb = bb + (k[cb >> 2] << 2) | 0;
                  k[bb >> 2] = k[bb >> 2] | h << 8;
                  k[cb >> 2] = (k[cb >> 2] | 0) + 1;
                  h = h + 1 | 0;
                } while ((h | 0) != (Ma | 0));
                O = Ma;
              } else
                O = 0;
              c = k[g >> 2] | 0;
              h = (k[c + (k[y >> 2] << 2) >> 2] | 0) >>> 8;
              g = a + 56 | 0;
              k[g >> 2] = h;
              f = a + 1088 | 0;
              k[f >> 2] = 0;
              if (!(i[a + 16 >> 0] | 0)) {
                if (h >>> 0 >= ((k[a + 36 >> 2] | 0) * 1e5 | 0) >>> 0) {
                  b = 1;
                  _a = 512;
                  break s;
                }
                v = k[c + (h << 2) >> 2] | 0;
                k[a + 60 >> 2] = v & 255;
                k[g >> 2] = v >>> 8;
                k[f >> 2] = 1;
                v = Fa;
                A = ga;
                y = ha;
                Y = ba;
                c = la;
                f = X;
                E = Ka;
                g = _;
                e = O;
                d = Ja;
                ga = fa;
                O = Ma;
                b = 0;
                h = Ia;
                _a = 511;
                continue s;
              } else {
                e = a + 20 | 0;
                k[e >> 2] = 0;
                d = a + 24 | 0;
                k[d >> 2] = 0;
                if (h >>> 0 >= ((k[a + 36 >> 2] | 0) * 1e5 | 0) >>> 0) {
                  b = 1;
                  _a = 512;
                  break s;
                }
                y = k[c + (h << 2) >> 2] | 0;
                A = y & 255;
                v = a + 60 | 0;
                k[v >> 2] = A;
                k[g >> 2] = y >>> 8;
                k[f >> 2] = 1;
                y = k[442] | 0;
                k[d >> 2] = 1;
                y = y + -1 | 0;
                k[e >> 2] = y;
                k[v >> 2] = (y | 0) == 1 ^ A;
                v = Fa;
                A = ga;
                y = ha;
                Y = ba;
                c = la;
                f = X;
                E = Ka;
                g = _;
                e = O;
                d = Ja;
                ga = fa;
                O = Ma;
                b = 0;
                h = Ia;
                _a = 511;
                continue s;
              }
            } else
              h = 0;
            do {
              k[a + 2120 + (h << 2) >> 2] = k[a + 1092 + (h << 2) >> 2];
              h = h + 1 | 0;
            } while ((h | 0) != 257);
            E = a + 3152 | 0;
            A = a + 3156 | 0;
            if ((Ma | 0) > 0) {
              d = 0;
              do {
                e = (k[E >> 2] | 0) + (d << 1) | 0;
                f = a + 2120 + ((m[e >> 1] & 255) << 2) | 0;
                h = k[f >> 2] | 0;
                j[e >> 1] = h;
                e = (k[A >> 2] | 0) + (d >> 1) | 0;
                g = l[e >> 0] | 0;
                if (!(d & 1))
                  h = h >> 16 | g & 240;
                else
                  h = h >> 16 << 4 | g & 15;
                i[e >> 0] = h;
                k[f >> 2] = (k[f >> 2] | 0) + 1;
                d = d + 1 | 0;
              } while ((d | 0) != (Ma | 0));
            }
            f = k[y >> 2] | 0;
            e = k[E >> 2] | 0;
            h = k[A >> 2] | 0;
            g = e;
            e = (l[h + (f >> 1) >> 0] | 0) >>> (f << 2 & 4) << 16 & 983040 | m[e + (f << 1) >> 1];
            while (1) {
              cb = g + (e << 1) | 0;
              g = h + (e >> 1) | 0;
              d = (l[g >> 0] | 0) >>> (e << 2 & 4) << 16 & 983040 | m[cb >> 1];
              j[cb >> 1] = f;
              h = l[g >> 0] | 0;
              if (!(e & 1))
                h = h & 240 | f >> 16;
              else
                h = h & 15 | f >> 16 << 4;
              i[g >> 0] = h;
              if ((e | 0) == (k[y >> 2] | 0))
                break;
              f = e;
              g = k[E >> 2] | 0;
              e = d;
              h = k[A >> 2] | 0;
            }
            h = a + 56 | 0;
            k[h >> 2] = e;
            g = a + 1088 | 0;
            k[g >> 2] = 0;
            if (!(i[a + 16 >> 0] | 0)) {
              if (e >>> 0 >= ((k[a + 36 >> 2] | 0) * 1e5 | 0) >>> 0) {
                b = 1;
                _a = 512;
                break s;
              }
              v = mk(e, b) | 0;
              k[a + 60 >> 2] = v;
              v = k[h >> 2] | 0;
              k[h >> 2] = (l[(k[A >> 2] | 0) + (v >>> 1) >> 0] | 0) >>> (v << 2 & 4) << 16 & 983040 | m[(k[E >> 2] | 0) + (v << 1) >> 1];
              k[g >> 2] = (k[g >> 2] | 0) + 1;
              v = Fa;
              A = ga;
              y = ha;
              Y = ba;
              c = la;
              f = X;
              E = Ka;
              g = _;
              ga = fa;
              O = Ma;
              b = 0;
              h = Ia;
              _a = 511;
              continue s;
            }
            v = a + 20 | 0;
            k[v >> 2] = 0;
            c = a + 24 | 0;
            k[c >> 2] = 0;
            if (e >>> 0 >= ((k[a + 36 >> 2] | 0) * 1e5 | 0) >>> 0) {
              b = 1;
              _a = 512;
              break s;
            }
            b = mk(e, b) | 0;
            f = a + 60 | 0;
            k[f >> 2] = b;
            a = k[h >> 2] | 0;
            k[h >> 2] = (l[(k[A >> 2] | 0) + (a >>> 1) >> 0] | 0) >>> (a << 2 & 4) << 16 & 983040 | m[(k[E >> 2] | 0) + (a << 1) >> 1];
            k[g >> 2] = (k[g >> 2] | 0) + 1;
            h = k[v >> 2] | 0;
            if (!h) {
              a = k[c >> 2] | 0;
              h = k[1768 + (a << 2) >> 2] | 0;
              k[v >> 2] = h;
              a = a + 1 | 0;
              k[c >> 2] = (a | 0) == 512 ? 0 : a;
            }
            A = h + -1 | 0;
            k[v >> 2] = A;
            k[f >> 2] = (A | 0) == 1 ^ b;
            v = Fa;
            A = ga;
            y = ha;
            Y = ba;
            c = la;
            f = X;
            E = Ka;
            g = _;
            ga = fa;
            O = Ma;
            b = 0;
            h = Ia;
            _a = 511;
            continue s;
          }
 while (0);
        if ((_a | 0) == 314) {
          if ((U | 0) > 2097151) {
            P = b;
            ga = fa;
            b = -4;
            _a = 511;
            continue;
          }
          switch (ba | 0) {
            case 0:
              {
                c = c + U | 0;
                break;
              }
            case 1:
              {
                c = c + (U << 1) | 0;
                break;
              }
            default:
              {}
          }
          U = U << 1;
          if (!g) {
            E = E + 1 | 0;
            if ((E | 0) >= (da | 0)) {
              P = b;
              g = 0;
              ga = fa;
              b = -4;
              _a = 511;
              continue;
            }
            M = l[a + 7868 + E >> 0] | 0;
            f = a + 51612 + (M * 1032 | 0) | 0;
            b = a + 45420 + (M * 1032 | 0) | 0;
            R = k[a + 63996 + (M << 2) >> 2] | 0;
            L = a + 57804 + (M * 1032 | 0) | 0;
            g = 50;
          }
          ma = v;
          la = C;
          ka = B;
          ga = A;
          ha = y;
          ia = x;
          na = c;
          ja = f;
          oa = R;
          _ = g + -1 | 0;
          qa = R;
          _a = 322;
          continue;
        }
        while (1) {
          if ((_a | 0) == 195) {
            if ((e | 0) >= 16)
              break;
            if (!(i[a + 3436 + e >> 0] | 0)) {
              Ma = n;
              La = p;
              Ka = q;
              Ja = s;
              Ia = t;
              Ha = u;
              Ga = v;
              Fa = D;
              Ea = B;
              Da = F;
              Ca = G;
              Ba = I;
              Aa = K;
              za = ca;
              ya = N;
              xa = fa;
              wa = da;
              va = Y;
              ua = _;
              ta = ba;
              sa = Z;
              ra = X;
              qa = S;
              pa = T;
              oa = Q;
              na = h;
              ma = M;
              f = R;
              g = b;
              la = L;
              ja = e;
              ka = d;
            } else {
              d = 0;
              _a = 197;
              continue;
            }
          } else if ((_a | 0) == 197)
            if ((d | 0) < 16) {
              na = C;
              ma = B;
              ga = A;
              ha = y;
              ia = x;
              aa = E;
              la = X;
              P = b;
              _a = 198;
              continue s;
            } else {
              Ma = n;
              La = p;
              Ka = q;
              Ja = s;
              Ia = t;
              Ha = u;
              Ga = v;
              Fa = D;
              Ea = B;
              Da = F;
              Ca = G;
              Ba = I;
              Aa = K;
              za = ca;
              ya = N;
              xa = fa;
              wa = da;
              va = Y;
              ua = _;
              ta = ba;
              sa = Z;
              ra = X;
              qa = S;
              pa = T;
              oa = Q;
              na = h;
              ma = M;
              f = R;
              g = b;
              la = L;
              ja = e;
              ka = d;
            }
          n = Ma;
          p = La;
          q = Ka;
          s = Ja;
          t = Ia;
          u = Ha;
          v = Ga;
          D = Fa;
          B = Ea;
          F = Da;
          G = Ca;
          I = Ba;
          K = Aa;
          ca = za;
          N = ya;
          fa = xa;
          da = wa;
          Y = va;
          _ = ua;
          ba = ta;
          Z = sa;
          X = ra;
          S = qa;
          T = pa;
          Q = oa;
          h = na;
          M = ma;
          R = f;
          b = g;
          L = la;
          e = ja + 1 | 0;
          d = ka;
          _a = 195;
        }
        f = a + 3176 | 0;
        k[f >> 2] = 0;
        g = 0;
        c = 0;
        do {
          if (i[a + 3180 + c >> 0] | 0) {
            i[a + 3452 + g >> 0] = c;
            g = (k[f >> 2] | 0) + 1 | 0;
            k[f >> 2] = g;
          }
          c = c + 1 | 0;
        } while ((c | 0) != 256);
        if (!g) {
          c = X;
          f = O;
          P = b;
          g = _;
          ga = fa;
          O = Z;
          b = -4;
          _a = 511;
          continue;
        }
        pa = C;
        oa = B;
        ga = A;
        ha = y;
        ia = x;
        la = X;
        ka = O;
        $ = g + 2 | 0;
        _a = 215;
      }
      if ((_a | 0) == 512) {
        r = eb;
        return b | 0;
      }
      return 0;
    }
    function kk(a) {
      a = a | 0;
      var b = 0,
          c = 0;
      c = r;
      r = r + 16 | 0;
      b = k[w >> 2] | 0;
      k[c >> 2] = a;
      k[c + 4 >> 2] = 1003623;
      Ib(b | 0, 1003180, c | 0) | 0;
      if ((a | 0) != 1007)
        Kb(3);
      Ec(1003642, 1056, 1, b | 0) | 0;
      Kb(3);
    }
    function lk(a, b, c) {
      a = a | 0;
      b = b | 0;
      c = c | 0;
      var d = 0,
          e = 0;
      if (b >>> 0 > 4 | ((a | 0) == 0 | c >>> 0 > 1)) {
        b = -2;
        return b | 0;
      }
      e = a + 36 | 0;
      d = k[e >> 2] | 0;
      if (!d) {
        k[e >> 2] = 50;
        d = 50;
      }
      e = a + 40 | 0;
      if (!(k[e >> 2] | 0))
        k[e >> 2] = 50;
      d = id[d & 63](k[a + 44 >> 2] | 0, 64116, 1) | 0;
      if (!d) {
        b = -3;
        return b | 0;
      }
      k[d >> 2] = a;
      k[a + 32 >> 2] = d;
      k[d + 4 >> 2] = 10;
      k[d + 32 >> 2] = 0;
      k[d + 28 >> 2] = 0;
      k[d + 3172 >> 2] = 0;
      k[a + 8 >> 2] = 0;
      k[a + 12 >> 2] = 0;
      k[a + 24 >> 2] = 0;
      k[a + 28 >> 2] = 0;
      i[d + 40 >> 0] = c;
      k[d + 3156 >> 2] = 0;
      k[d + 3152 >> 2] = 0;
      k[d + 3148 >> 2] = 0;
      k[d + 44 >> 2] = 0;
      k[d + 48 >> 2] = b;
      b = 0;
      return b | 0;
    }
    function mk(a, b) {
      a = a | 0;
      b = b | 0;
      var c = 0,
          d = 0,
          e = 0,
          f = 0;
      d = 256;
      c = 0;
      do {
        e = c + d >> 1;
        f = (k[b + (e << 2) >> 2] | 0) > (a | 0);
        d = f ? e : d;
        c = f ? c : e;
      } while ((d - c | 0) != 1);
      return c | 0;
    }
    var id = [qw, qw, Jr, qw, Kr, qw, Lr, qw, Mr, qw, Nr, qw, Or, qw, Pr, qw, Qr, qw, Rr, qw, Sr, qw, Tr, qw, Ur, qw, Vr, qw, Wr, qw, Xr, qw, Yr, qw, Zr, qw, _r, qw, $r, qw, as, qw, fq, gq, hq, nq, hr, Xk, Yk, gl, ml, Bj, wj, _o, Xo, Wo, qw, qw, qw, qw, qw, qw, qw, qw];
    var jd = [rw, rw, cs, rw, ds, rw, es, rw, fs, rw, gs, rw, hs, rw, is, rw, js, rw, ks, rw, ls, rw, ms, rw, ns, rw, os, rw, ps, rw, qs, rw, rs, rw, ss, rw, ts, rw, us, rw, vs, rw, uq, tq, qq, rw, rw, rw, rw, rw, rw, rw, rw, rw, rw, rw, rw, rw, rw, rw, rw, rw, rw, rw];
    var kd = [sw, sw, xs, sw, ys, sw, zs, sw, As, sw, Bs, sw, Cs, sw, Ds, sw, Es, sw, Fs, sw, Gs, sw, Hs, sw, Is, sw, Js, sw, Ks, sw, Ls, sw, Ms, sw, Ns, sw, Os, sw, Ps, sw, Qs, sw, $i, vj, oj, sw, sw, sw, sw, sw, sw, sw, sw, sw, sw, sw, sw, sw, sw, sw, sw, sw, sw, sw];
    var ld = [tw, tw, Ss, tw, Ts, tw, Us, tw, Vs, tw, Ws, tw, Xs, tw, Ys, tw, Zs, tw, _s, tw, $s, tw, at, tw, bt, tw, ct, tw, dt, tw, et, tw, ft, tw, gt, tw, ht, tw, it, tw, jt, tw, Yp, $p, Zp, _p, aq, bq, cq, dq, eq, Fd, fl, tw, tw, tw, tw, tw, tw, tw, tw, tw, tw, tw];
    var md = [uw, uw, lt, uw, mt, uw, nt, uw, ot, uw, pt, uw, qt, uw, rt, uw, st, uw, tt, uw, ut, uw, vt, uw, wt, uw, xt, uw, yt, uw, zt, uw, At, uw, Bt, uw, Ct, uw, Dt, uw, Et, uw, mj, rk, sk, Bk, Ck, Dk, Pk, hl, nl, zp, xj, ro, uw, uw, uw, uw, uw, uw, uw, uw, uw, uw];
    var nd = [vw, vw, Gt, vw, Ht, vw, It, vw, Jt, vw, Kt, vw, Lt, vw, Mt, vw, Nt, vw, Ot, vw, Pt, vw, Qt, vw, Rt, vw, St, vw, Tt, vw, Ut, vw, Vt, vw, Wt, vw, Xt, vw, Yt, vw, Zt, vw, Bo, Co, Do, Eo, Fo, Go, Ho, Io, Jo, Ko, Lo, Mo, No, Oo, Po, Qo, Ro, So, To, Uo, Vo, so, to, uo, vo, wo, xo, yo, ao, bo, co, eo, fo, go, ho, io, jo, ko, lo, mo, no, oo, po, qo, Dn, Pn, Qn, Rn, Sn, Tn, Un, Vn, Wn, Xn, Yn, En, Fn, Gn, Hn, In, Jn, Kn, Ln, fn, gn, hn, jn, kn, ln, mn, nn, on, pn, qn, rn, sn, tn, un, vn, wn, xn, yn, zn, An, Bn, Cn, Wm, Xm, Ym, Zm, _m, $m, an, bn, cn, dn, en, wm, xm, ym, zm, Am, Bm, Cm, Dm, Em, Fm, Gm, Hm, Im, Jm, Km, Lm, Mm, mm, nm, om, pm, qm, rm, sm, gm, hm, im, jm, km, em, fm, am, Il, Jl, Kl, Ll, Ml, Nl, Ol, Pl, Ql, Rl, Sl, Tl, Ul, Vl, Wl, Al, vl, pl, ql, rl, sl, tl, wl, xl, yl, zl, Bl, Cl, Dl, El, Fl, Gl, Hl, Gd, cj, Zk, _k, $k, al, bl, cl, dl, Ji, Si, Ki, Qi, Mi, Oi, Pi, Ni, Ri, Li, jl, kl, ul, Xl, lm, Um, On, Zn, _n, zo, Yo, Zo, vw, vw, vw, vw, vw, vw, vw, vw, vw, vw, vw, vw, vw, vw, vw, vw, vw, vw, vw, vw, vw];
    var od = [ww, ww, $t, ww, au, ww, bu, ww, cu, ww, du, ww, eu, ww, fu, ww, gu, ww, hu, ww, iu, ww, ju, ww, ku, ww, lu, ww, mu, ww, nu, ww, ou, ww, pu, ww, qu, ww, ru, ww, su, ww, ol, Id, ww, ww, ww, ww, ww, ww, ww, ww, ww, ww, ww, ww, ww, ww, ww, ww, ww, ww, ww, ww];
    var pd = [xw, xw, uu, xw, vu, xw, wu, xw, xu, xw, yu, xw, zu, xw, Au, xw, Bu, xw, Cu, xw, Du, xw, Eu, xw, Fu, xw, Gu, xw, Hu, xw, Iu, xw, Ju, xw, Ku, xw, Lu, xw, Mu, xw, Nu, xw, yw, Dd, lj, nj, kj, uj, rj, xw, xw, xw, xw, xw, xw, xw, xw, xw, xw, xw, xw, xw, xw, xw];
    var qd = [zw, zw, Pu, zw, Qu, zw, Ru, zw, Su, zw, Tu, zw, Uu, zw, Vu, zw, Wu, zw, Xu, zw, Yu, zw, Zu, zw, _u, zw, $u, zw, av, zw, bv, zw, cv, zw, dv, zw, ev, zw, fv, zw, gv, zw, Zl, $l, Aw, il, we, ye, Vm, zw, zw, zw, zw, zw, zw, zw, zw, zw, zw, zw, zw, zw, zw, zw];
    var rd = [Bw, Bw, iv, Bw, jv, Bw, kv, Bw, lv, Bw, mv, Bw, nv, Bw, ov, Bw, pv, Bw, qv, Bw, rv, Bw, sv, Bw, tv, Bw, uv, Bw, vv, Bw, wv, Bw, xv, Bw, yv, Bw, zv, Bw, Av, Bw, Bv, Bw, xq, wq, vq, Bw, Bw, Bw, Bw, Bw, Bw, Bw, Bw, Bw, Bw, Bw, Bw, Bw, Bw, Bw, Bw, Bw, Bw, Bw];
    var sd = [Cw, Cw, Dv, Cw, Ev, Cw, Fv, Cw, Gv, Cw, Hv, Cw, Iv, Cw, Jv, Cw, Kv, Cw, Lv, Cw, Mv, Cw, Nv, Cw, Ov, Cw, Pv, Cw, Qv, Cw, Rv, Cw, Sv, Cw, Tv, Cw, Uv, Cw, Vv, Cw, Wv, Cw, Yl, _l, Dw, Ew, Hd, bh, ll, Cw, Cw, Cw, Cw, Cw, Cw, Cw, Cw, Cw, Cw, Cw, Cw, Cw, Cw, Cw];
    var td = [Fw, Fw, Yv, Fw, Zv, Fw, _v, Fw, $v, Fw, aw, Fw, bw, Fw, cw, Fw, dw, Fw, ew, Fw, fw, Fw, gw, Fw, hw, Fw, iw, Fw, jw, Fw, kw, Fw, lw, Fw, mw, Fw, nw, Fw, ow, Fw, pw, Fw, jq, kq, mq, Gw, Fe, He, Fw, Fw, Fw, Fw, Fw, Fw, Fw, Fw, Fw, Fw, Fw, Fw, Fw, Fw, Fw, Fw];
    return {
      _strlen: yr,
      _retro_get_memory_data: dj,
      _bitshift64Lshr: tr,
      _retro_get_system_info: Zi,
      _retro_get_system_av_info: jj,
      _retro_load_game_special: tj,
      _bitshift64Shl: xr,
      _retro_cheat_set: sj,
      _strncpy: qr,
      _memset: wr,
      _memcpy: rr,
      _retro_serialize: pj,
      _i64Subtract: or,
      _i64Add: pr,
      ___getTypeName: Cp,
      _llvm_bswap_i32: vr,
      _testSetjmp: ur,
      _saveSetjmp: sr,
      _free: jr,
      _retro_load_game: bj,
      _retro_unserialize: qj,
      _malloc: ir,
      __GLOBAL__sub_I_libretro_emscripten_cpp: Jd,
      __GLOBAL__sub_I_bind_cpp: Ep,
      runPostSets: nr,
      _emscripten_replace_memory: _emscripten_replace_memory,
      stackAlloc: ud,
      stackSave: vd,
      stackRestore: wd,
      establishStackSpace: xd,
      setThrew: yd,
      setTempRet0: Bd,
      getTempRet0: Cd,
      dynCall_iiii: Ir,
      dynCall_viiiii: bs,
      dynCall_i: ws,
      dynCall_vi: Rs,
      dynCall_vii: kt,
      dynCall_ii: Ft,
      dynCall_viii: _t,
      dynCall_v: tu,
      dynCall_iiiii: Ou,
      dynCall_viiiiii: hv,
      dynCall_iii: Cv,
      dynCall_viiii: Xv
    };
  })(Module.asmGlobalArg, Module.asmLibraryArg, buffer);
  var _strlen = Module["_strlen"] = asm["_strlen"];
  var __GLOBAL__sub_I_libretro_emscripten_cpp = Module["__GLOBAL__sub_I_libretro_emscripten_cpp"] = asm["__GLOBAL__sub_I_libretro_emscripten_cpp"];
  var _retro_get_memory_data = Module["_retro_get_memory_data"] = asm["_retro_get_memory_data"];
  var _bitshift64Lshr = Module["_bitshift64Lshr"] = asm["_bitshift64Lshr"];
  var _retro_get_system_info = Module["_retro_get_system_info"] = asm["_retro_get_system_info"];
  var _retro_get_system_av_info = Module["_retro_get_system_av_info"] = asm["_retro_get_system_av_info"];
  var _retro_load_game_special = Module["_retro_load_game_special"] = asm["_retro_load_game_special"];
  var _bitshift64Shl = Module["_bitshift64Shl"] = asm["_bitshift64Shl"];
  var _retro_cheat_set = Module["_retro_cheat_set"] = asm["_retro_cheat_set"];
  var _strncpy = Module["_strncpy"] = asm["_strncpy"];
  var _memset = Module["_memset"] = asm["_memset"];
  var _memcpy = Module["_memcpy"] = asm["_memcpy"];
  var _retro_serialize = Module["_retro_serialize"] = asm["_retro_serialize"];
  var _i64Subtract = Module["_i64Subtract"] = asm["_i64Subtract"];
  var __GLOBAL__sub_I_bind_cpp = Module["__GLOBAL__sub_I_bind_cpp"] = asm["__GLOBAL__sub_I_bind_cpp"];
  var _i64Add = Module["_i64Add"] = asm["_i64Add"];
  var ___getTypeName = Module["___getTypeName"] = asm["___getTypeName"];
  var _llvm_bswap_i32 = Module["_llvm_bswap_i32"] = asm["_llvm_bswap_i32"];
  var _testSetjmp = Module["_testSetjmp"] = asm["_testSetjmp"];
  var _saveSetjmp = Module["_saveSetjmp"] = asm["_saveSetjmp"];
  var _free = Module["_free"] = asm["_free"];
  var runPostSets = Module["runPostSets"] = asm["runPostSets"];
  var _retro_load_game = Module["_retro_load_game"] = asm["_retro_load_game"];
  var _retro_unserialize = Module["_retro_unserialize"] = asm["_retro_unserialize"];
  var _malloc = Module["_malloc"] = asm["_malloc"];
  var _emscripten_replace_memory = Module["_emscripten_replace_memory"] = asm["_emscripten_replace_memory"];
  var dynCall_iiii = Module["dynCall_iiii"] = asm["dynCall_iiii"];
  var dynCall_viiiii = Module["dynCall_viiiii"] = asm["dynCall_viiiii"];
  var dynCall_i = Module["dynCall_i"] = asm["dynCall_i"];
  var dynCall_vi = Module["dynCall_vi"] = asm["dynCall_vi"];
  var dynCall_vii = Module["dynCall_vii"] = asm["dynCall_vii"];
  var dynCall_ii = Module["dynCall_ii"] = asm["dynCall_ii"];
  var dynCall_viii = Module["dynCall_viii"] = asm["dynCall_viii"];
  var dynCall_v = Module["dynCall_v"] = asm["dynCall_v"];
  var dynCall_iiiii = Module["dynCall_iiiii"] = asm["dynCall_iiiii"];
  var dynCall_viiiiii = Module["dynCall_viiiiii"] = asm["dynCall_viiiiii"];
  var dynCall_iii = Module["dynCall_iii"] = asm["dynCall_iii"];
  var dynCall_viiii = Module["dynCall_viiii"] = asm["dynCall_viiii"];
  Runtime.stackAlloc = asm["stackAlloc"];
  Runtime.stackSave = asm["stackSave"];
  Runtime.stackRestore = asm["stackRestore"];
  Runtime.establishStackSpace = asm["establishStackSpace"];
  Runtime.setTempRet0 = asm["setTempRet0"];
  Runtime.getTempRet0 = asm["getTempRet0"];
  var i64Math = (function() {
    var goog = {math: {}};
    goog.math.Long = (function(low, high) {
      this.low_ = low | 0;
      this.high_ = high | 0;
    });
    goog.math.Long.IntCache_ = {};
    goog.math.Long.fromInt = (function(value) {
      if (-128 <= value && value < 128) {
        var cachedObj = goog.math.Long.IntCache_[value];
        if (cachedObj) {
          return cachedObj;
        }
      }
      var obj = new goog.math.Long(value | 0, value < 0 ? -1 : 0);
      if (-128 <= value && value < 128) {
        goog.math.Long.IntCache_[value] = obj;
      }
      return obj;
    });
    goog.math.Long.fromNumber = (function(value) {
      if (isNaN(value) || !isFinite(value)) {
        return goog.math.Long.ZERO;
      } else if (value <= -goog.math.Long.TWO_PWR_63_DBL_) {
        return goog.math.Long.MIN_VALUE;
      } else if (value + 1 >= goog.math.Long.TWO_PWR_63_DBL_) {
        return goog.math.Long.MAX_VALUE;
      } else if (value < 0) {
        return goog.math.Long.fromNumber(-value).negate();
      } else {
        return new goog.math.Long(value % goog.math.Long.TWO_PWR_32_DBL_ | 0, value / goog.math.Long.TWO_PWR_32_DBL_ | 0);
      }
    });
    goog.math.Long.fromBits = (function(lowBits, highBits) {
      return new goog.math.Long(lowBits, highBits);
    });
    goog.math.Long.fromString = (function(str, opt_radix) {
      if (str.length == 0) {
        throw Error("number format error: empty string");
      }
      var radix = opt_radix || 10;
      if (radix < 2 || 36 < radix) {
        throw Error("radix out of range: " + radix);
      }
      if (str.charAt(0) == "-") {
        return goog.math.Long.fromString(str.substring(1), radix).negate();
      } else if (str.indexOf("-") >= 0) {
        throw Error('number format error: interior "-" character: ' + str);
      }
      var radixToPower = goog.math.Long.fromNumber(Math.pow(radix, 8));
      var result = goog.math.Long.ZERO;
      for (var i = 0; i < str.length; i += 8) {
        var size = Math.min(8, str.length - i);
        var value = parseInt(str.substring(i, i + size), radix);
        if (size < 8) {
          var power = goog.math.Long.fromNumber(Math.pow(radix, size));
          result = result.multiply(power).add(goog.math.Long.fromNumber(value));
        } else {
          result = result.multiply(radixToPower);
          result = result.add(goog.math.Long.fromNumber(value));
        }
      }
      return result;
    });
    goog.math.Long.TWO_PWR_16_DBL_ = 1 << 16;
    goog.math.Long.TWO_PWR_24_DBL_ = 1 << 24;
    goog.math.Long.TWO_PWR_32_DBL_ = goog.math.Long.TWO_PWR_16_DBL_ * goog.math.Long.TWO_PWR_16_DBL_;
    goog.math.Long.TWO_PWR_31_DBL_ = goog.math.Long.TWO_PWR_32_DBL_ / 2;
    goog.math.Long.TWO_PWR_48_DBL_ = goog.math.Long.TWO_PWR_32_DBL_ * goog.math.Long.TWO_PWR_16_DBL_;
    goog.math.Long.TWO_PWR_64_DBL_ = goog.math.Long.TWO_PWR_32_DBL_ * goog.math.Long.TWO_PWR_32_DBL_;
    goog.math.Long.TWO_PWR_63_DBL_ = goog.math.Long.TWO_PWR_64_DBL_ / 2;
    goog.math.Long.ZERO = goog.math.Long.fromInt(0);
    goog.math.Long.ONE = goog.math.Long.fromInt(1);
    goog.math.Long.NEG_ONE = goog.math.Long.fromInt(-1);
    goog.math.Long.MAX_VALUE = goog.math.Long.fromBits(4294967295 | 0, 2147483647 | 0);
    goog.math.Long.MIN_VALUE = goog.math.Long.fromBits(0, 2147483648 | 0);
    goog.math.Long.TWO_PWR_24_ = goog.math.Long.fromInt(1 << 24);
    goog.math.Long.prototype.toInt = (function() {
      return this.low_;
    });
    goog.math.Long.prototype.toNumber = (function() {
      return this.high_ * goog.math.Long.TWO_PWR_32_DBL_ + this.getLowBitsUnsigned();
    });
    goog.math.Long.prototype.toString = (function(opt_radix) {
      var radix = opt_radix || 10;
      if (radix < 2 || 36 < radix) {
        throw Error("radix out of range: " + radix);
      }
      if (this.isZero()) {
        return "0";
      }
      if (this.isNegative()) {
        if (this.equals(goog.math.Long.MIN_VALUE)) {
          var radixLong = goog.math.Long.fromNumber(radix);
          var div = this.div(radixLong);
          var rem = div.multiply(radixLong).subtract(this);
          return div.toString(radix) + rem.toInt().toString(radix);
        } else {
          return "-" + this.negate().toString(radix);
        }
      }
      var radixToPower = goog.math.Long.fromNumber(Math.pow(radix, 6));
      var rem = this;
      var result = "";
      while (true) {
        var remDiv = rem.div(radixToPower);
        var intval = rem.subtract(remDiv.multiply(radixToPower)).toInt();
        var digits = intval.toString(radix);
        rem = remDiv;
        if (rem.isZero()) {
          return digits + result;
        } else {
          while (digits.length < 6) {
            digits = "0" + digits;
          }
          result = "" + digits + result;
        }
      }
    });
    goog.math.Long.prototype.getHighBits = (function() {
      return this.high_;
    });
    goog.math.Long.prototype.getLowBits = (function() {
      return this.low_;
    });
    goog.math.Long.prototype.getLowBitsUnsigned = (function() {
      return this.low_ >= 0 ? this.low_ : goog.math.Long.TWO_PWR_32_DBL_ + this.low_;
    });
    goog.math.Long.prototype.getNumBitsAbs = (function() {
      if (this.isNegative()) {
        if (this.equals(goog.math.Long.MIN_VALUE)) {
          return 64;
        } else {
          return this.negate().getNumBitsAbs();
        }
      } else {
        var val = this.high_ != 0 ? this.high_ : this.low_;
        for (var bit = 31; bit > 0; bit--) {
          if ((val & 1 << bit) != 0) {
            break;
          }
        }
        return this.high_ != 0 ? bit + 33 : bit + 1;
      }
    });
    goog.math.Long.prototype.isZero = (function() {
      return this.high_ == 0 && this.low_ == 0;
    });
    goog.math.Long.prototype.isNegative = (function() {
      return this.high_ < 0;
    });
    goog.math.Long.prototype.isOdd = (function() {
      return (this.low_ & 1) == 1;
    });
    goog.math.Long.prototype.equals = (function(other) {
      return this.high_ == other.high_ && this.low_ == other.low_;
    });
    goog.math.Long.prototype.notEquals = (function(other) {
      return this.high_ != other.high_ || this.low_ != other.low_;
    });
    goog.math.Long.prototype.lessThan = (function(other) {
      return this.compare(other) < 0;
    });
    goog.math.Long.prototype.lessThanOrEqual = (function(other) {
      return this.compare(other) <= 0;
    });
    goog.math.Long.prototype.greaterThan = (function(other) {
      return this.compare(other) > 0;
    });
    goog.math.Long.prototype.greaterThanOrEqual = (function(other) {
      return this.compare(other) >= 0;
    });
    goog.math.Long.prototype.compare = (function(other) {
      if (this.equals(other)) {
        return 0;
      }
      var thisNeg = this.isNegative();
      var otherNeg = other.isNegative();
      if (thisNeg && !otherNeg) {
        return -1;
      }
      if (!thisNeg && otherNeg) {
        return 1;
      }
      if (this.subtract(other).isNegative()) {
        return -1;
      } else {
        return 1;
      }
    });
    goog.math.Long.prototype.negate = (function() {
      if (this.equals(goog.math.Long.MIN_VALUE)) {
        return goog.math.Long.MIN_VALUE;
      } else {
        return this.not().add(goog.math.Long.ONE);
      }
    });
    goog.math.Long.prototype.add = (function(other) {
      var a48 = this.high_ >>> 16;
      var a32 = this.high_ & 65535;
      var a16 = this.low_ >>> 16;
      var a00 = this.low_ & 65535;
      var b48 = other.high_ >>> 16;
      var b32 = other.high_ & 65535;
      var b16 = other.low_ >>> 16;
      var b00 = other.low_ & 65535;
      var c48 = 0,
          c32 = 0,
          c16 = 0,
          c00 = 0;
      c00 += a00 + b00;
      c16 += c00 >>> 16;
      c00 &= 65535;
      c16 += a16 + b16;
      c32 += c16 >>> 16;
      c16 &= 65535;
      c32 += a32 + b32;
      c48 += c32 >>> 16;
      c32 &= 65535;
      c48 += a48 + b48;
      c48 &= 65535;
      return goog.math.Long.fromBits(c16 << 16 | c00, c48 << 16 | c32);
    });
    goog.math.Long.prototype.subtract = (function(other) {
      return this.add(other.negate());
    });
    goog.math.Long.prototype.multiply = (function(other) {
      if (this.isZero()) {
        return goog.math.Long.ZERO;
      } else if (other.isZero()) {
        return goog.math.Long.ZERO;
      }
      if (this.equals(goog.math.Long.MIN_VALUE)) {
        return other.isOdd() ? goog.math.Long.MIN_VALUE : goog.math.Long.ZERO;
      } else if (other.equals(goog.math.Long.MIN_VALUE)) {
        return this.isOdd() ? goog.math.Long.MIN_VALUE : goog.math.Long.ZERO;
      }
      if (this.isNegative()) {
        if (other.isNegative()) {
          return this.negate().multiply(other.negate());
        } else {
          return this.negate().multiply(other).negate();
        }
      } else if (other.isNegative()) {
        return this.multiply(other.negate()).negate();
      }
      if (this.lessThan(goog.math.Long.TWO_PWR_24_) && other.lessThan(goog.math.Long.TWO_PWR_24_)) {
        return goog.math.Long.fromNumber(this.toNumber() * other.toNumber());
      }
      var a48 = this.high_ >>> 16;
      var a32 = this.high_ & 65535;
      var a16 = this.low_ >>> 16;
      var a00 = this.low_ & 65535;
      var b48 = other.high_ >>> 16;
      var b32 = other.high_ & 65535;
      var b16 = other.low_ >>> 16;
      var b00 = other.low_ & 65535;
      var c48 = 0,
          c32 = 0,
          c16 = 0,
          c00 = 0;
      c00 += a00 * b00;
      c16 += c00 >>> 16;
      c00 &= 65535;
      c16 += a16 * b00;
      c32 += c16 >>> 16;
      c16 &= 65535;
      c16 += a00 * b16;
      c32 += c16 >>> 16;
      c16 &= 65535;
      c32 += a32 * b00;
      c48 += c32 >>> 16;
      c32 &= 65535;
      c32 += a16 * b16;
      c48 += c32 >>> 16;
      c32 &= 65535;
      c32 += a00 * b32;
      c48 += c32 >>> 16;
      c32 &= 65535;
      c48 += a48 * b00 + a32 * b16 + a16 * b32 + a00 * b48;
      c48 &= 65535;
      return goog.math.Long.fromBits(c16 << 16 | c00, c48 << 16 | c32);
    });
    goog.math.Long.prototype.div = (function(other) {
      if (other.isZero()) {
        throw Error("division by zero");
      } else if (this.isZero()) {
        return goog.math.Long.ZERO;
      }
      if (this.equals(goog.math.Long.MIN_VALUE)) {
        if (other.equals(goog.math.Long.ONE) || other.equals(goog.math.Long.NEG_ONE)) {
          return goog.math.Long.MIN_VALUE;
        } else if (other.equals(goog.math.Long.MIN_VALUE)) {
          return goog.math.Long.ONE;
        } else {
          var halfThis = this.shiftRight(1);
          var approx = halfThis.div(other).shiftLeft(1);
          if (approx.equals(goog.math.Long.ZERO)) {
            return other.isNegative() ? goog.math.Long.ONE : goog.math.Long.NEG_ONE;
          } else {
            var rem = this.subtract(other.multiply(approx));
            var result = approx.add(rem.div(other));
            return result;
          }
        }
      } else if (other.equals(goog.math.Long.MIN_VALUE)) {
        return goog.math.Long.ZERO;
      }
      if (this.isNegative()) {
        if (other.isNegative()) {
          return this.negate().div(other.negate());
        } else {
          return this.negate().div(other).negate();
        }
      } else if (other.isNegative()) {
        return this.div(other.negate()).negate();
      }
      var res = goog.math.Long.ZERO;
      var rem = this;
      while (rem.greaterThanOrEqual(other)) {
        var approx = Math.max(1, Math.floor(rem.toNumber() / other.toNumber()));
        var log2 = Math.ceil(Math.log(approx) / Math.LN2);
        var delta = log2 <= 48 ? 1 : Math.pow(2, log2 - 48);
        var approxRes = goog.math.Long.fromNumber(approx);
        var approxRem = approxRes.multiply(other);
        while (approxRem.isNegative() || approxRem.greaterThan(rem)) {
          approx -= delta;
          approxRes = goog.math.Long.fromNumber(approx);
          approxRem = approxRes.multiply(other);
        }
        if (approxRes.isZero()) {
          approxRes = goog.math.Long.ONE;
        }
        res = res.add(approxRes);
        rem = rem.subtract(approxRem);
      }
      return res;
    });
    goog.math.Long.prototype.modulo = (function(other) {
      return this.subtract(this.div(other).multiply(other));
    });
    goog.math.Long.prototype.not = (function() {
      return goog.math.Long.fromBits(~this.low_, ~this.high_);
    });
    goog.math.Long.prototype.and = (function(other) {
      return goog.math.Long.fromBits(this.low_ & other.low_, this.high_ & other.high_);
    });
    goog.math.Long.prototype.or = (function(other) {
      return goog.math.Long.fromBits(this.low_ | other.low_, this.high_ | other.high_);
    });
    goog.math.Long.prototype.xor = (function(other) {
      return goog.math.Long.fromBits(this.low_ ^ other.low_, this.high_ ^ other.high_);
    });
    goog.math.Long.prototype.shiftLeft = (function(numBits) {
      numBits &= 63;
      if (numBits == 0) {
        return this;
      } else {
        var low = this.low_;
        if (numBits < 32) {
          var high = this.high_;
          return goog.math.Long.fromBits(low << numBits, high << numBits | low >>> 32 - numBits);
        } else {
          return goog.math.Long.fromBits(0, low << numBits - 32);
        }
      }
    });
    goog.math.Long.prototype.shiftRight = (function(numBits) {
      numBits &= 63;
      if (numBits == 0) {
        return this;
      } else {
        var high = this.high_;
        if (numBits < 32) {
          var low = this.low_;
          return goog.math.Long.fromBits(low >>> numBits | high << 32 - numBits, high >> numBits);
        } else {
          return goog.math.Long.fromBits(high >> numBits - 32, high >= 0 ? 0 : -1);
        }
      }
    });
    goog.math.Long.prototype.shiftRightUnsigned = (function(numBits) {
      numBits &= 63;
      if (numBits == 0) {
        return this;
      } else {
        var high = this.high_;
        if (numBits < 32) {
          var low = this.low_;
          return goog.math.Long.fromBits(low >>> numBits | high << 32 - numBits, high >>> numBits);
        } else if (numBits == 32) {
          return goog.math.Long.fromBits(high, 0);
        } else {
          return goog.math.Long.fromBits(high >>> numBits - 32, 0);
        }
      }
    });
    var navigator = {appName: "Modern Browser"};
    var dbits;
    var canary = 0xdeadbeefcafe;
    var j_lm = (canary & 16777215) == 15715070;
    function BigInteger(a, b, c) {
      if (a != null)
        if ("number" == typeof a)
          this.fromNumber(a, b, c);
        else if (b == null && "string" != typeof a)
          this.fromString(a, 256);
        else
          this.fromString(a, b);
    }
    function nbi() {
      return new BigInteger(null);
    }
    function am1(i, x, w, j, c, n) {
      while (--n >= 0) {
        var v = x * this[i++] + w[j] + c;
        c = Math.floor(v / 67108864);
        w[j++] = v & 67108863;
      }
      return c;
    }
    function am2(i, x, w, j, c, n) {
      var xl = x & 32767,
          xh = x >> 15;
      while (--n >= 0) {
        var l = this[i] & 32767;
        var h = this[i++] >> 15;
        var m = xh * l + h * xl;
        l = xl * l + ((m & 32767) << 15) + w[j] + (c & 1073741823);
        c = (l >>> 30) + (m >>> 15) + xh * h + (c >>> 30);
        w[j++] = l & 1073741823;
      }
      return c;
    }
    function am3(i, x, w, j, c, n) {
      var xl = x & 16383,
          xh = x >> 14;
      while (--n >= 0) {
        var l = this[i] & 16383;
        var h = this[i++] >> 14;
        var m = xh * l + h * xl;
        l = xl * l + ((m & 16383) << 14) + w[j] + c;
        c = (l >> 28) + (m >> 14) + xh * h;
        w[j++] = l & 268435455;
      }
      return c;
    }
    if (j_lm && navigator.appName == "Microsoft Internet Explorer") {
      BigInteger.prototype.am = am2;
      dbits = 30;
    } else if (j_lm && navigator.appName != "Netscape") {
      BigInteger.prototype.am = am1;
      dbits = 26;
    } else {
      BigInteger.prototype.am = am3;
      dbits = 28;
    }
    BigInteger.prototype.DB = dbits;
    BigInteger.prototype.DM = (1 << dbits) - 1;
    BigInteger.prototype.DV = 1 << dbits;
    var BI_FP = 52;
    BigInteger.prototype.FV = Math.pow(2, BI_FP);
    BigInteger.prototype.F1 = BI_FP - dbits;
    BigInteger.prototype.F2 = 2 * dbits - BI_FP;
    var BI_RM = "0123456789abcdefghijklmnopqrstuvwxyz";
    var BI_RC = new Array;
    var rr,
        vv;
    rr = "0".charCodeAt(0);
    for (vv = 0; vv <= 9; ++vv)
      BI_RC[rr++] = vv;
    rr = "a".charCodeAt(0);
    for (vv = 10; vv < 36; ++vv)
      BI_RC[rr++] = vv;
    rr = "A".charCodeAt(0);
    for (vv = 10; vv < 36; ++vv)
      BI_RC[rr++] = vv;
    function int2char(n) {
      return BI_RM.charAt(n);
    }
    function intAt(s, i) {
      var c = BI_RC[s.charCodeAt(i)];
      return c == null ? -1 : c;
    }
    function bnpCopyTo(r) {
      for (var i = this.t - 1; i >= 0; --i)
        r[i] = this[i];
      r.t = this.t;
      r.s = this.s;
    }
    function bnpFromInt(x) {
      this.t = 1;
      this.s = x < 0 ? -1 : 0;
      if (x > 0)
        this[0] = x;
      else if (x < -1)
        this[0] = x + DV;
      else
        this.t = 0;
    }
    function nbv(i) {
      var r = nbi();
      r.fromInt(i);
      return r;
    }
    function bnpFromString(s, b) {
      var k;
      if (b == 16)
        k = 4;
      else if (b == 8)
        k = 3;
      else if (b == 256)
        k = 8;
      else if (b == 2)
        k = 1;
      else if (b == 32)
        k = 5;
      else if (b == 4)
        k = 2;
      else {
        this.fromRadix(s, b);
        return ;
      }
      this.t = 0;
      this.s = 0;
      var i = s.length,
          mi = false,
          sh = 0;
      while (--i >= 0) {
        var x = k == 8 ? s[i] & 255 : intAt(s, i);
        if (x < 0) {
          if (s.charAt(i) == "-")
            mi = true;
          continue;
        }
        mi = false;
        if (sh == 0)
          this[this.t++] = x;
        else if (sh + k > this.DB) {
          this[this.t - 1] |= (x & (1 << this.DB - sh) - 1) << sh;
          this[this.t++] = x >> this.DB - sh;
        } else
          this[this.t - 1] |= x << sh;
        sh += k;
        if (sh >= this.DB)
          sh -= this.DB;
      }
      if (k == 8 && (s[0] & 128) != 0) {
        this.s = -1;
        if (sh > 0)
          this[this.t - 1] |= (1 << this.DB - sh) - 1 << sh;
      }
      this.clamp();
      if (mi)
        BigInteger.ZERO.subTo(this, this);
    }
    function bnpClamp() {
      var c = this.s & this.DM;
      while (this.t > 0 && this[this.t - 1] == c)
        --this.t;
    }
    function bnToString(b) {
      if (this.s < 0)
        return "-" + this.negate().toString(b);
      var k;
      if (b == 16)
        k = 4;
      else if (b == 8)
        k = 3;
      else if (b == 2)
        k = 1;
      else if (b == 32)
        k = 5;
      else if (b == 4)
        k = 2;
      else
        return this.toRadix(b);
      var km = (1 << k) - 1,
          d,
          m = false,
          r = "",
          i = this.t;
      var p = this.DB - i * this.DB % k;
      if (i-- > 0) {
        if (p < this.DB && (d = this[i] >> p) > 0) {
          m = true;
          r = int2char(d);
        }
        while (i >= 0) {
          if (p < k) {
            d = (this[i] & (1 << p) - 1) << k - p;
            d |= this[--i] >> (p += this.DB - k);
          } else {
            d = this[i] >> (p -= k) & km;
            if (p <= 0) {
              p += this.DB;
              --i;
            }
          }
          if (d > 0)
            m = true;
          if (m)
            r += int2char(d);
        }
      }
      return m ? r : "0";
    }
    function bnNegate() {
      var r = nbi();
      BigInteger.ZERO.subTo(this, r);
      return r;
    }
    function bnAbs() {
      return this.s < 0 ? this.negate() : this;
    }
    function bnCompareTo(a) {
      var r = this.s - a.s;
      if (r != 0)
        return r;
      var i = this.t;
      r = i - a.t;
      if (r != 0)
        return this.s < 0 ? -r : r;
      while (--i >= 0)
        if ((r = this[i] - a[i]) != 0)
          return r;
      return 0;
    }
    function nbits(x) {
      var r = 1,
          t;
      if ((t = x >>> 16) != 0) {
        x = t;
        r += 16;
      }
      if ((t = x >> 8) != 0) {
        x = t;
        r += 8;
      }
      if ((t = x >> 4) != 0) {
        x = t;
        r += 4;
      }
      if ((t = x >> 2) != 0) {
        x = t;
        r += 2;
      }
      if ((t = x >> 1) != 0) {
        x = t;
        r += 1;
      }
      return r;
    }
    function bnBitLength() {
      if (this.t <= 0)
        return 0;
      return this.DB * (this.t - 1) + nbits(this[this.t - 1] ^ this.s & this.DM);
    }
    function bnpDLShiftTo(n, r) {
      var i;
      for (i = this.t - 1; i >= 0; --i)
        r[i + n] = this[i];
      for (i = n - 1; i >= 0; --i)
        r[i] = 0;
      r.t = this.t + n;
      r.s = this.s;
    }
    function bnpDRShiftTo(n, r) {
      for (var i = n; i < this.t; ++i)
        r[i - n] = this[i];
      r.t = Math.max(this.t - n, 0);
      r.s = this.s;
    }
    function bnpLShiftTo(n, r) {
      var bs = n % this.DB;
      var cbs = this.DB - bs;
      var bm = (1 << cbs) - 1;
      var ds = Math.floor(n / this.DB),
          c = this.s << bs & this.DM,
          i;
      for (i = this.t - 1; i >= 0; --i) {
        r[i + ds + 1] = this[i] >> cbs | c;
        c = (this[i] & bm) << bs;
      }
      for (i = ds - 1; i >= 0; --i)
        r[i] = 0;
      r[ds] = c;
      r.t = this.t + ds + 1;
      r.s = this.s;
      r.clamp();
    }
    function bnpRShiftTo(n, r) {
      r.s = this.s;
      var ds = Math.floor(n / this.DB);
      if (ds >= this.t) {
        r.t = 0;
        return ;
      }
      var bs = n % this.DB;
      var cbs = this.DB - bs;
      var bm = (1 << bs) - 1;
      r[0] = this[ds] >> bs;
      for (var i = ds + 1; i < this.t; ++i) {
        r[i - ds - 1] |= (this[i] & bm) << cbs;
        r[i - ds] = this[i] >> bs;
      }
      if (bs > 0)
        r[this.t - ds - 1] |= (this.s & bm) << cbs;
      r.t = this.t - ds;
      r.clamp();
    }
    function bnpSubTo(a, r) {
      var i = 0,
          c = 0,
          m = Math.min(a.t, this.t);
      while (i < m) {
        c += this[i] - a[i];
        r[i++] = c & this.DM;
        c >>= this.DB;
      }
      if (a.t < this.t) {
        c -= a.s;
        while (i < this.t) {
          c += this[i];
          r[i++] = c & this.DM;
          c >>= this.DB;
        }
        c += this.s;
      } else {
        c += this.s;
        while (i < a.t) {
          c -= a[i];
          r[i++] = c & this.DM;
          c >>= this.DB;
        }
        c -= a.s;
      }
      r.s = c < 0 ? -1 : 0;
      if (c < -1)
        r[i++] = this.DV + c;
      else if (c > 0)
        r[i++] = c;
      r.t = i;
      r.clamp();
    }
    function bnpMultiplyTo(a, r) {
      var x = this.abs(),
          y = a.abs();
      var i = x.t;
      r.t = i + y.t;
      while (--i >= 0)
        r[i] = 0;
      for (i = 0; i < y.t; ++i)
        r[i + x.t] = x.am(0, y[i], r, i, 0, x.t);
      r.s = 0;
      r.clamp();
      if (this.s != a.s)
        BigInteger.ZERO.subTo(r, r);
    }
    function bnpSquareTo(r) {
      var x = this.abs();
      var i = r.t = 2 * x.t;
      while (--i >= 0)
        r[i] = 0;
      for (i = 0; i < x.t - 1; ++i) {
        var c = x.am(i, x[i], r, 2 * i, 0, 1);
        if ((r[i + x.t] += x.am(i + 1, 2 * x[i], r, 2 * i + 1, c, x.t - i - 1)) >= x.DV) {
          r[i + x.t] -= x.DV;
          r[i + x.t + 1] = 1;
        }
      }
      if (r.t > 0)
        r[r.t - 1] += x.am(i, x[i], r, 2 * i, 0, 1);
      r.s = 0;
      r.clamp();
    }
    function bnpDivRemTo(m, q, r) {
      var pm = m.abs();
      if (pm.t <= 0)
        return ;
      var pt = this.abs();
      if (pt.t < pm.t) {
        if (q != null)
          q.fromInt(0);
        if (r != null)
          this.copyTo(r);
        return ;
      }
      if (r == null)
        r = nbi();
      var y = nbi(),
          ts = this.s,
          ms = m.s;
      var nsh = this.DB - nbits(pm[pm.t - 1]);
      if (nsh > 0) {
        pm.lShiftTo(nsh, y);
        pt.lShiftTo(nsh, r);
      } else {
        pm.copyTo(y);
        pt.copyTo(r);
      }
      var ys = y.t;
      var y0 = y[ys - 1];
      if (y0 == 0)
        return ;
      var yt = y0 * (1 << this.F1) + (ys > 1 ? y[ys - 2] >> this.F2 : 0);
      var d1 = this.FV / yt,
          d2 = (1 << this.F1) / yt,
          e = 1 << this.F2;
      var i = r.t,
          j = i - ys,
          t = q == null ? nbi() : q;
      y.dlShiftTo(j, t);
      if (r.compareTo(t) >= 0) {
        r[r.t++] = 1;
        r.subTo(t, r);
      }
      BigInteger.ONE.dlShiftTo(ys, t);
      t.subTo(y, y);
      while (y.t < ys)
        y[y.t++] = 0;
      while (--j >= 0) {
        var qd = r[--i] == y0 ? this.DM : Math.floor(r[i] * d1 + (r[i - 1] + e) * d2);
        if ((r[i] += y.am(0, qd, r, j, 0, ys)) < qd) {
          y.dlShiftTo(j, t);
          r.subTo(t, r);
          while (r[i] < --qd)
            r.subTo(t, r);
        }
      }
      if (q != null) {
        r.drShiftTo(ys, q);
        if (ts != ms)
          BigInteger.ZERO.subTo(q, q);
      }
      r.t = ys;
      r.clamp();
      if (nsh > 0)
        r.rShiftTo(nsh, r);
      if (ts < 0)
        BigInteger.ZERO.subTo(r, r);
    }
    function bnMod(a) {
      var r = nbi();
      this.abs().divRemTo(a, null, r);
      if (this.s < 0 && r.compareTo(BigInteger.ZERO) > 0)
        a.subTo(r, r);
      return r;
    }
    function Classic(m) {
      this.m = m;
    }
    function cConvert(x) {
      if (x.s < 0 || x.compareTo(this.m) >= 0)
        return x.mod(this.m);
      else
        return x;
    }
    function cRevert(x) {
      return x;
    }
    function cReduce(x) {
      x.divRemTo(this.m, null, x);
    }
    function cMulTo(x, y, r) {
      x.multiplyTo(y, r);
      this.reduce(r);
    }
    function cSqrTo(x, r) {
      x.squareTo(r);
      this.reduce(r);
    }
    Classic.prototype.convert = cConvert;
    Classic.prototype.revert = cRevert;
    Classic.prototype.reduce = cReduce;
    Classic.prototype.mulTo = cMulTo;
    Classic.prototype.sqrTo = cSqrTo;
    function bnpInvDigit() {
      if (this.t < 1)
        return 0;
      var x = this[0];
      if ((x & 1) == 0)
        return 0;
      var y = x & 3;
      y = y * (2 - (x & 15) * y) & 15;
      y = y * (2 - (x & 255) * y) & 255;
      y = y * (2 - ((x & 65535) * y & 65535)) & 65535;
      y = y * (2 - x * y % this.DV) % this.DV;
      return y > 0 ? this.DV - y : -y;
    }
    function Montgomery(m) {
      this.m = m;
      this.mp = m.invDigit();
      this.mpl = this.mp & 32767;
      this.mph = this.mp >> 15;
      this.um = (1 << m.DB - 15) - 1;
      this.mt2 = 2 * m.t;
    }
    function montConvert(x) {
      var r = nbi();
      x.abs().dlShiftTo(this.m.t, r);
      r.divRemTo(this.m, null, r);
      if (x.s < 0 && r.compareTo(BigInteger.ZERO) > 0)
        this.m.subTo(r, r);
      return r;
    }
    function montRevert(x) {
      var r = nbi();
      x.copyTo(r);
      this.reduce(r);
      return r;
    }
    function montReduce(x) {
      while (x.t <= this.mt2)
        x[x.t++] = 0;
      for (var i = 0; i < this.m.t; ++i) {
        var j = x[i] & 32767;
        var u0 = j * this.mpl + ((j * this.mph + (x[i] >> 15) * this.mpl & this.um) << 15) & x.DM;
        j = i + this.m.t;
        x[j] += this.m.am(0, u0, x, i, 0, this.m.t);
        while (x[j] >= x.DV) {
          x[j] -= x.DV;
          x[++j]++;
        }
      }
      x.clamp();
      x.drShiftTo(this.m.t, x);
      if (x.compareTo(this.m) >= 0)
        x.subTo(this.m, x);
    }
    function montSqrTo(x, r) {
      x.squareTo(r);
      this.reduce(r);
    }
    function montMulTo(x, y, r) {
      x.multiplyTo(y, r);
      this.reduce(r);
    }
    Montgomery.prototype.convert = montConvert;
    Montgomery.prototype.revert = montRevert;
    Montgomery.prototype.reduce = montReduce;
    Montgomery.prototype.mulTo = montMulTo;
    Montgomery.prototype.sqrTo = montSqrTo;
    function bnpIsEven() {
      return (this.t > 0 ? this[0] & 1 : this.s) == 0;
    }
    function bnpExp(e, z) {
      if (e > 4294967295 || e < 1)
        return BigInteger.ONE;
      var r = nbi(),
          r2 = nbi(),
          g = z.convert(this),
          i = nbits(e) - 1;
      g.copyTo(r);
      while (--i >= 0) {
        z.sqrTo(r, r2);
        if ((e & 1 << i) > 0)
          z.mulTo(r2, g, r);
        else {
          var t = r;
          r = r2;
          r2 = t;
        }
      }
      return z.revert(r);
    }
    function bnModPowInt(e, m) {
      var z;
      if (e < 256 || m.isEven())
        z = new Classic(m);
      else
        z = new Montgomery(m);
      return this.exp(e, z);
    }
    BigInteger.prototype.copyTo = bnpCopyTo;
    BigInteger.prototype.fromInt = bnpFromInt;
    BigInteger.prototype.fromString = bnpFromString;
    BigInteger.prototype.clamp = bnpClamp;
    BigInteger.prototype.dlShiftTo = bnpDLShiftTo;
    BigInteger.prototype.drShiftTo = bnpDRShiftTo;
    BigInteger.prototype.lShiftTo = bnpLShiftTo;
    BigInteger.prototype.rShiftTo = bnpRShiftTo;
    BigInteger.prototype.subTo = bnpSubTo;
    BigInteger.prototype.multiplyTo = bnpMultiplyTo;
    BigInteger.prototype.squareTo = bnpSquareTo;
    BigInteger.prototype.divRemTo = bnpDivRemTo;
    BigInteger.prototype.invDigit = bnpInvDigit;
    BigInteger.prototype.isEven = bnpIsEven;
    BigInteger.prototype.exp = bnpExp;
    BigInteger.prototype.toString = bnToString;
    BigInteger.prototype.negate = bnNegate;
    BigInteger.prototype.abs = bnAbs;
    BigInteger.prototype.compareTo = bnCompareTo;
    BigInteger.prototype.bitLength = bnBitLength;
    BigInteger.prototype.mod = bnMod;
    BigInteger.prototype.modPowInt = bnModPowInt;
    BigInteger.ZERO = nbv(0);
    BigInteger.ONE = nbv(1);
    function bnpFromRadix(s, b) {
      this.fromInt(0);
      if (b == null)
        b = 10;
      var cs = this.chunkSize(b);
      var d = Math.pow(b, cs),
          mi = false,
          j = 0,
          w = 0;
      for (var i = 0; i < s.length; ++i) {
        var x = intAt(s, i);
        if (x < 0) {
          if (s.charAt(i) == "-" && this.signum() == 0)
            mi = true;
          continue;
        }
        w = b * w + x;
        if (++j >= cs) {
          this.dMultiply(d);
          this.dAddOffset(w, 0);
          j = 0;
          w = 0;
        }
      }
      if (j > 0) {
        this.dMultiply(Math.pow(b, j));
        this.dAddOffset(w, 0);
      }
      if (mi)
        BigInteger.ZERO.subTo(this, this);
    }
    function bnpChunkSize(r) {
      return Math.floor(Math.LN2 * this.DB / Math.log(r));
    }
    function bnSigNum() {
      if (this.s < 0)
        return -1;
      else if (this.t <= 0 || this.t == 1 && this[0] <= 0)
        return 0;
      else
        return 1;
    }
    function bnpDMultiply(n) {
      this[this.t] = this.am(0, n - 1, this, 0, 0, this.t);
      ++this.t;
      this.clamp();
    }
    function bnpDAddOffset(n, w) {
      if (n == 0)
        return ;
      while (this.t <= w)
        this[this.t++] = 0;
      this[w] += n;
      while (this[w] >= this.DV) {
        this[w] -= this.DV;
        if (++w >= this.t)
          this[this.t++] = 0;
        ++this[w];
      }
    }
    function bnpToRadix(b) {
      if (b == null)
        b = 10;
      if (this.signum() == 0 || b < 2 || b > 36)
        return "0";
      var cs = this.chunkSize(b);
      var a = Math.pow(b, cs);
      var d = nbv(a),
          y = nbi(),
          z = nbi(),
          r = "";
      this.divRemTo(d, y, z);
      while (y.signum() > 0) {
        r = (a + z.intValue()).toString(b).substr(1) + r;
        y.divRemTo(d, y, z);
      }
      return z.intValue().toString(b) + r;
    }
    function bnIntValue() {
      if (this.s < 0) {
        if (this.t == 1)
          return this[0] - this.DV;
        else if (this.t == 0)
          return -1;
      } else if (this.t == 1)
        return this[0];
      else if (this.t == 0)
        return 0;
      return (this[1] & (1 << 32 - this.DB) - 1) << this.DB | this[0];
    }
    function bnpAddTo(a, r) {
      var i = 0,
          c = 0,
          m = Math.min(a.t, this.t);
      while (i < m) {
        c += this[i] + a[i];
        r[i++] = c & this.DM;
        c >>= this.DB;
      }
      if (a.t < this.t) {
        c += a.s;
        while (i < this.t) {
          c += this[i];
          r[i++] = c & this.DM;
          c >>= this.DB;
        }
        c += this.s;
      } else {
        c += this.s;
        while (i < a.t) {
          c += a[i];
          r[i++] = c & this.DM;
          c >>= this.DB;
        }
        c += a.s;
      }
      r.s = c < 0 ? -1 : 0;
      if (c > 0)
        r[i++] = c;
      else if (c < -1)
        r[i++] = this.DV + c;
      r.t = i;
      r.clamp();
    }
    BigInteger.prototype.fromRadix = bnpFromRadix;
    BigInteger.prototype.chunkSize = bnpChunkSize;
    BigInteger.prototype.signum = bnSigNum;
    BigInteger.prototype.dMultiply = bnpDMultiply;
    BigInteger.prototype.dAddOffset = bnpDAddOffset;
    BigInteger.prototype.toRadix = bnpToRadix;
    BigInteger.prototype.intValue = bnIntValue;
    BigInteger.prototype.addTo = bnpAddTo;
    var Wrapper = {
      abs: (function(l, h) {
        var x = new goog.math.Long(l, h);
        var ret;
        if (x.isNegative()) {
          ret = x.negate();
        } else {
          ret = x;
        }
        HEAP32[tempDoublePtr >> 2] = ret.low_;
        HEAP32[tempDoublePtr + 4 >> 2] = ret.high_;
      }),
      ensureTemps: (function() {
        if (Wrapper.ensuredTemps)
          return ;
        Wrapper.ensuredTemps = true;
        Wrapper.two32 = new BigInteger;
        Wrapper.two32.fromString("4294967296", 10);
        Wrapper.two64 = new BigInteger;
        Wrapper.two64.fromString("18446744073709551616", 10);
        Wrapper.temp1 = new BigInteger;
        Wrapper.temp2 = new BigInteger;
      }),
      lh2bignum: (function(l, h) {
        var a = new BigInteger;
        a.fromString(h.toString(), 10);
        var b = new BigInteger;
        a.multiplyTo(Wrapper.two32, b);
        var c = new BigInteger;
        c.fromString(l.toString(), 10);
        var d = new BigInteger;
        c.addTo(b, d);
        return d;
      }),
      stringify: (function(l, h, unsigned) {
        var ret = (new goog.math.Long(l, h)).toString();
        if (unsigned && ret[0] == "-") {
          Wrapper.ensureTemps();
          var bignum = new BigInteger;
          bignum.fromString(ret, 10);
          ret = new BigInteger;
          Wrapper.two64.addTo(bignum, ret);
          ret = ret.toString(10);
        }
        return ret;
      }),
      fromString: (function(str, base, min, max, unsigned) {
        Wrapper.ensureTemps();
        var bignum = new BigInteger;
        bignum.fromString(str, base);
        var bigmin = new BigInteger;
        bigmin.fromString(min, 10);
        var bigmax = new BigInteger;
        bigmax.fromString(max, 10);
        if (unsigned && bignum.compareTo(BigInteger.ZERO) < 0) {
          var temp = new BigInteger;
          bignum.addTo(Wrapper.two64, temp);
          bignum = temp;
        }
        var error = false;
        if (bignum.compareTo(bigmin) < 0) {
          bignum = bigmin;
          error = true;
        } else if (bignum.compareTo(bigmax) > 0) {
          bignum = bigmax;
          error = true;
        }
        var ret = goog.math.Long.fromString(bignum.toString());
        HEAP32[tempDoublePtr >> 2] = ret.low_;
        HEAP32[tempDoublePtr + 4 >> 2] = ret.high_;
        if (error)
          throw "range error";
      })
    };
    return Wrapper;
  })();
  function ExitStatus(status) {
    this.name = "ExitStatus";
    this.message = "Program terminated with exit(" + status + ")";
    this.status = status;
  }
  ExitStatus.prototype = new Error;
  ExitStatus.prototype.constructor = ExitStatus;
  var initialStackTop;
  var preloadStartTime = null;
  var calledMain = false;
  dependenciesFulfilled = function runCaller() {
    if (!Module["calledRun"])
      run();
    if (!Module["calledRun"])
      dependenciesFulfilled = runCaller;
  };
  Module["callMain"] = Module.callMain = function callMain(args) {
    assert(runDependencies == 0, "cannot call main when async dependencies remain! (listen on __ATMAIN__)");
    assert(__ATPRERUN__.length == 0, "cannot call main when preRun functions remain to be called");
    args = args || [];
    ensureInitRuntime();
    var argc = args.length + 1;
    function pad() {
      for (var i = 0; i < 4 - 1; i++) {
        argv.push(0);
      }
    }
    var argv = [allocate(intArrayFromString(Module["thisProgram"]), "i8", ALLOC_NORMAL)];
    pad();
    for (var i = 0; i < argc - 1; i = i + 1) {
      argv.push(allocate(intArrayFromString(args[i]), "i8", ALLOC_NORMAL));
      pad();
    }
    argv.push(0);
    argv = allocate(argv, "i32", ALLOC_NORMAL);
    initialStackTop = STACKTOP;
    try {
      var ret = Module["_main"](argc, argv, 0);
      exit(ret, true);
    } catch (e) {
      if (e instanceof ExitStatus) {
        return ;
      } else if (e == "SimulateInfiniteLoop") {
        Module["noExitRuntime"] = true;
        return ;
      } else {
        if (e && typeof e === "object" && e.stack)
          Module.printErr("exception thrown: " + [e, e.stack]);
        throw e;
      }
    } finally {
      calledMain = true;
    }
  };
  function run(args) {
    args = args || Module["arguments"];
    if (preloadStartTime === null)
      preloadStartTime = Date.now();
    if (runDependencies > 0) {
      return ;
    }
    preRun();
    if (runDependencies > 0)
      return ;
    if (Module["calledRun"])
      return ;
    function doRun() {
      if (Module["calledRun"])
        return ;
      Module["calledRun"] = true;
      if (ABORT)
        return ;
      ensureInitRuntime();
      preMain();
      if (ENVIRONMENT_IS_WEB && preloadStartTime !== null) {
        Module.printErr("pre-main prep time: " + (Date.now() - preloadStartTime) + " ms");
      }
      if (Module["onRuntimeInitialized"])
        Module["onRuntimeInitialized"]();
      if (Module["_main"] && shouldRunNow)
        Module["callMain"](args);
      postRun();
    }
    if (Module["setStatus"]) {
      Module["setStatus"]("Running...");
      setTimeout((function() {
        setTimeout((function() {
          Module["setStatus"]("");
        }), 1);
        doRun();
      }), 1);
    } else {
      doRun();
    }
  }
  Module["run"] = Module.run = run;
  function exit(status, implicit) {
    if (implicit && Module["noExitRuntime"]) {
      return ;
    }
    if (Module["noExitRuntime"]) {} else {
      ABORT = true;
      EXITSTATUS = status;
      STACKTOP = initialStackTop;
      exitRuntime();
      if (Module["onExit"])
        Module["onExit"](status);
    }
    if (ENVIRONMENT_IS_NODE) {
      process["stdout"]["once"]("drain", (function() {
        process["exit"](status);
      }));
      console.log(" ");
      setTimeout((function() {
        process["exit"](status);
      }), 500);
    } else if (ENVIRONMENT_IS_SHELL && typeof quit === "function") {
      quit(status);
    }
    throw new ExitStatus(status);
  }
  Module["exit"] = Module.exit = exit;
  var abortDecorators = [];
  function abort(what) {
    if (what !== undefined) {
      Module.print(what);
      Module.printErr(what);
      what = JSON.stringify(what);
    } else {
      what = "";
    }
    ABORT = true;
    EXITSTATUS = 1;
    var extra = "\nIf this abort() is unexpected, build with -s ASSERTIONS=1 which can give more information.";
    var output = "abort(" + what + ") at " + stackTrace() + extra;
    if (abortDecorators) {
      abortDecorators.forEach((function(decorator) {
        output = decorator(output, what);
      }));
    }
    throw output;
  }
  Module["abort"] = Module.abort = abort;
  if (Module["preInit"]) {
    if (typeof Module["preInit"] == "function")
      Module["preInit"] = [Module["preInit"]];
    while (Module["preInit"].length > 0) {
      Module["preInit"].pop()();
    }
  }
  var shouldRunNow = true;
  if (Module["noInitialRun"]) {
    shouldRunNow = false;
  }
  run();
  module.exports = Module;
})(require("buffer").Buffer, require("process"));
